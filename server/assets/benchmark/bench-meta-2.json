[
    {
        "tables_used": [
            "department",
            "department)"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, and could you order Y-axis from high to low order?",
            "Find the name and budget of departments whose budgets are more than the average budget Visualize by bar chart, display from high to low by the Y.",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and order by the budget from high to low.",
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, order by the budget from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Physics",
                        "y_data": 942162.76
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 866831.75
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 848175.04
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 794541.46
                    },
                    {
                        "x_data": "Math",
                        "y_data": 777605.11
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 734550.7
                    },
                    {
                        "x_data": "History",
                        "y_data": 699140.86
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 647610.55
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 617253.94
                    },
                    {
                        "x_data": "English",
                        "y_data": 611042.66
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 601283.6
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 573745.09
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "budget"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "List the maximum weight and type for each type of pet, and display in asc by the x-axis please.",
            "Find the maximum weight for each type of pet List the maximum weight and pet type Visualize by bar chart, I want to rank from low to high by the bar.",
            "Bar graph to show maximal weight from different pettype, display in asc by the x-axis please.",
            "List the maximum weight and type for each type of pet with a bar chart, and show by the PetType in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 12
                    },
                    {
                        "x_data": "dog",
                        "y_data": 13.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Events",
            "Customer_Event_Notes"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            ""
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 70,
                        "y_data": 605
                    },
                    {
                        "x_data": 216,
                        "y_data": 669
                    },
                    {
                        "x_data": 428,
                        "y_data": 954
                    },
                    {
                        "x_data": 559,
                        "y_data": 107
                    },
                    {
                        "x_data": 591,
                        "y_data": 120
                    },
                    {
                        "x_data": 606,
                        "y_data": 445
                    },
                    {
                        "x_data": 627,
                        "y_data": 748
                    },
                    {
                        "x_data": 817,
                        "y_data": 107
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Customer_Event_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "property_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart, sort from low to high by the Y-axis.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart, and could you show by the Y-axis from low to high please?",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, could you sort by the the average of department id in asc?",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, could you list by the Y-axis from low to high?",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and could you sort by the the average of department id in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 46.12903225806452
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 50.333333333333336
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "June",
                        "y_data": 83.57142857142857
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "department)"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart, could you show by the bar in descending?",
            "Give the number of departments with greater than average budget in each building with a bar chart, I want to show X-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wrigley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 2
                    },
                    {
                        "x_data": "Palmer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linderman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Candlestick",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brodhead",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show me a line chart of how the number of open date change over the open date, list by the Open_Date in desc please.",
            "Give me the trend about the number of church opening in each year, could you show by the X-axis in desc?",
            "A line chart shows how many churches open each year?, and list x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1844",
                        "y_data": 1
                    },
                    {
                        "x_data": "1843",
                        "y_data": 0
                    },
                    {
                        "x_data": "1842",
                        "y_data": 1
                    },
                    {
                        "x_data": "1841",
                        "y_data": 0
                    },
                    {
                        "x_data": "1840",
                        "y_data": 1
                    },
                    {
                        "x_data": "1839",
                        "y_data": 1
                    },
                    {
                        "x_data": "1838",
                        "y_data": 0
                    },
                    {
                        "x_data": "1837",
                        "y_data": 1
                    },
                    {
                        "x_data": "1836",
                        "y_data": 1
                    },
                    {
                        "x_data": "1835",
                        "y_data": 0
                    },
                    {
                        "x_data": "1834",
                        "y_data": 0
                    },
                    {
                        "x_data": "1833",
                        "y_data": 0
                    },
                    {
                        "x_data": "1832",
                        "y_data": 1
                    },
                    {
                        "x_data": "1831",
                        "y_data": 1
                    },
                    {
                        "x_data": "1830",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the stars of each director by a bar chart.",
            "Please give me a bar chart to compare the stars by directors."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Show me a bar chart for how many matches were played in each year?, list by the the total number in descending.",
            "Return a histogram on how many matches were played in each year?, could you sort in desc by the y-axis?",
            "Bar chart of the total number from each year, I want to sort Y in descending order please.",
            "How many matches were played in each year, could you list total number in descending order please?",
            "Find the number of matches happened in each year Plot them as bar chart, and show the total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-01-01",
                        "y_data": 158
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 108
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show each state and the number of addresses in each state by a bar chart.",
            "Show each state and the number of addresses in each state. Show bar chart.",
            "Show the total number from each state province county"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Colorado",
                        "y_data": 1
                    },
                    {
                        "x_data": "District of Columbia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Idaho",
                        "y_data": 1
                    },
                    {
                        "x_data": "Illinois",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kentucky",
                        "y_data": 2
                    },
                    {
                        "x_data": "Louisiana",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maryland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nevada",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oklahoma",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oregon",
                        "y_data": 1
                    },
                    {
                        "x_data": "SouthDakota",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vermont",
                        "y_data": 1
                    },
                    {
                        "x_data": "Virginia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state_province_county",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, list by the bar in descending please.",
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, list by the bar in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 3
                    },
                    {
                        "x_data": "History",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 4
                    },
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 4
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 3.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show different citizenships and the maximum net worth of singers of each citizenship in a bar chart.",
            "Show different citizenships and the maximum net worth of singers of each citizenship.",
            "For each citizenship, what is the maximum net worth. Visualize by bar chart.",
            "Show me maximal net worth millions by citizenship in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 17
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 17.4
                    },
                    {
                        "x_data": "France",
                        "y_data": 30
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 14.3
                    },
                    {
                        "x_data": "United States",
                        "y_data": 28.8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Net_Worth_Millions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "playlists"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "List the name of all playlist, and count them by a bar chart, and sort in desc by the X.",
            "A bar chart for listing the number of the name of all playlist, and order by the X-axis in desc.",
            "Bar chart x axis name y axis how many name, list in desc by the names.",
            "A bar chart for what are the number of the names of all the playlists?, and sort in desc by the X.",
            "What are the number of the names of all the playlists?, display by the x-axis from high to low please.",
            "List the number of the name of all playlist, display by the x-axis from high to low please.",
            "What are the names of all the playlists, and count them by a bar chart, and could you show by the bar in descending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV Shows",
                        "y_data": 2
                    },
                    {
                        "x_data": "On-The-Go 1",
                        "y_data": 1
                    },
                    {
                        "x_data": "Music Videos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Movies",
                        "y_data": 2
                    },
                    {
                        "x_data": "Heavy Metal Classic",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grunge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - The Basics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Next Steps",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Deep Cuts",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brazilian Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Audiobooks",
                        "y_data": 2
                    },
                    {
                        "x_data": "90\u2019s Music",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "What is the number of documents for each document name? Return a bar chart, I want to order names in ascending order.",
            "Show the number of documents for each document name in a bar chart, and I want to order names in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A history of Arts",
                        "y_data": 2
                    },
                    {
                        "x_data": "About Korea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Customer reviews",
                        "y_data": 3
                    },
                    {
                        "x_data": "Do not panic",
                        "y_data": 1
                    },
                    {
                        "x_data": "How Google people work",
                        "y_data": 1
                    },
                    {
                        "x_data": "How to write a CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "Learning French",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palm reading",
                        "y_data": 1
                    },
                    {
                        "x_data": "Summer Show",
                        "y_data": 1
                    },
                    {
                        "x_data": "Welcome to NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 990
                    },
                    {
                        "x_data": "July",
                        "y_data": 1350
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 2480
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1400
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, display from high to low by the X.",
            "How many templates with version number later than 5 for each template type code? Show me a bar chart, I want to display in desc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PPT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PP",
                        "y_data": 2
                    },
                    {
                        "x_data": "CV",
                        "y_data": 1
                    },
                    {
                        "x_data": "BK",
                        "y_data": 2
                    },
                    {
                        "x_data": "AD",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students whose age is younger than the average age and group by students' first name in a bar chart, and I want to rank Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 1
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a pie chart about the proportion of All_Neutral and ACC_Percent.",
            "Return a pie chart about the proportion of All_Neutral and ACC_Percent.",
            "For the attribute All_Neutral and ACC_Percent, show their proportion by a pie chart.",
            "Visualize a pie chart about the proportion of All_Neutral and ACC_Percent.",
            "Give me a pie chart to reflect the proportion of All_Neutral and ACC_Percent.",
            "Give me a pie to show acc_percent from different all neutral."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring",
            "shop"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find the number of employees hired in each shop; show the shop name as well Plot them as bar chart, and display from low to high by the bar.",
            "For each shop, return the number of employees working there and the name of the shop Plot them as bar chart, sort by the Name in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FC Haka",
                        "y_data": 2
                    },
                    {
                        "x_data": "FC Inter",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC KooTeePee",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC Lahti",
                        "y_data": 1
                    },
                    {
                        "x_data": "FF Jaro",
                        "y_data": 1
                    },
                    {
                        "x_data": "HJK",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Student"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "how many students are advised by each rank of faculty? List the rank and the number of students, and rank by the Y in ascending.",
            "How many students are advised by each rank of faculty? List the rank and the number of students in a bar chart, and rank by the Y in ascending.",
            "Show all the faculty ranks and the number of students advised by each rank in a bar chart, list from low to high by the Y-axis.",
            "How many students are advised by each rank of faculty? List the rank and the number of students Plot them as bar chart, could you display total number from low to high order?",
            "Show all the faculty ranks and the number of students advised by each rank Visualize by bar chart, and list y-axis from low to high order.",
            "Show me a bar chart for how many students are advised by each rank of faculty? List the rank and the number of students, and order in ascending by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 2
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 14
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and order total number in desc order.",
            "How many courses for each subject? Plot a bar chart, and display by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    },
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "elimination"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "Bar graph to show the total number from different team, and list in ascending by the bar.",
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart, list x-axis in ascending order.",
            "How many eliminations did each team have Visualize by bar chart, list in asc by the names.",
            "Show different teams in eliminations and the number of eliminations from each team Visualize by bar chart, and order bars from low to high order.",
            "A bar chart about how many eliminations did each team have?, and sort by the bar in asc.",
            "Return a bar chart on how many eliminations did each team have?, list in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Team Batista",
                        "y_data": 4
                    },
                    {
                        "x_data": "Team Orton",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar about the number of faults for different fault description and fault status of all the faults recoreded in the logs, I want to sort how many fault status in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Return",
                        "y_data": 0,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 3,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 0,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 3,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Return",
                        "y_data": 2,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 0,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 2,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 5,
                        "classify": "system error"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_status",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_status)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "What are the names of technicians with the machine series that they repair? Show me how many machines for each technician's name, I want to display by the x-axis in ascending.",
            "Give me a bar chart that group and count names of technicians with a series of machines they are assigned to repair, display x axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and I want to display in descending by the X.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, display x axis in desc order.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, I want to sort by the names from high to low.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, I want to sort by the names from high to low.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and I want to sort by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4261
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart, and rank by the X-axis in ascending please.",
            "A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and order X from low to high order.",
            "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and could you sort by the X in asc?",
            "Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart, could you sort by the X in asc?",
            "Give me a bar chart for mean team id of each all home, sort from low to high by the bars please.",
            "Visualize a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and rank by the X-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of engineers for different skill description The x-axis is skill description and group by other deteails, I want to show by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 9,
                        "classify": ""
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 6,
                        "classify": ""
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 4,
                        "classify": ""
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 0,
                        "classify": "Skilled"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 0,
                        "classify": "Skilled"
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 1,
                        "classify": "Skilled"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Return a bar chart showing how many shops in each location, and I want to display in descending by the y-axis.",
            "Create a bar chart showing how many location across location, list Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Penygraig",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dinas",
                        "y_data": 2
                    },
                    {
                        "x_data": "Blaenllecha",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wattstown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Porth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pentre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maerdy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gelli",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cymmer",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Tell me the proportion of the total number of different ranks using a bar graph.",
            "Show me a pie chart comparing the total number of captains in each rank.",
            "Visualize the proportion of the total number of captains in each rank using a pie chart.",
            "Give me a pie to show the number of rank from different rank."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Rank)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total number of instructors for each department with a bar chart.",
            "How many instructors are in each department? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 4
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 4
                    },
                    {
                        "x_data": "English",
                        "y_data": 4
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 1
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T3.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airports"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "What is the altitude (or elevation) of the airports in the city of New York? Show me a bar chart, and I want to sort from low to high by the x axis.",
            "Find the altitude (or elevation) of the airports in the city of New York with a bar chart, could you display in asc by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Indianola Municipal Airport",
                        "y_data": 126
                    },
                    {
                        "x_data": "John F Kennedy International Airport",
                        "y_data": 13
                    },
                    {
                        "x_data": "La Guardia Airport",
                        "y_data": 21
                    },
                    {
                        "x_data": "One Police Plaza Heliport",
                        "y_data": 244
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "elevation"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN for visualizing a bar chart, and rank by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Give me a bar chart to show the names and revenue of the company that earns the highest revenue in each headquarter city.",
            "Please tell the names and revenues of the companies with the highest revenues in each headquarter city.",
            "Create a bar chart showing maximal revenue across name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "List the number of documents for each receipt date and bin by weekday in a bar chart, sort y axis from high to low order.",
            "Bar chart of the frequency from each receipt date, bin date by weekday, order y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "receipt_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(receipt_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the minimum room count of apartments in different type with a bar chart.",
            "Return a bar chart showing the minimum room count of apartments in different type.",
            "Bar graph to show minimal room count from different apt type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duplex",
                        "y_data": 3
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Studio",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(room_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Count the names of all the products in the store and return me a bar chart, display y-axis from high to low order.",
            "Give me a bar chart for how many name of each name, sort Y-axis in descending order.",
            "What is the number of names for each product in the store?, and order Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, I want to display Y-axis in ascending order.",
            "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and I want to display Y-axis in ascending order.",
            "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, order by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and list in ascending by the y axis.",
            "Find the names and average salaries of all departments whose average salary is greater than 42000, and show in ascending by the Y please.",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, list in ascending by the y axis.",
            "Bar chart of mean salary from each dept name, list in ascending by the y axis.",
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, list in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 48716.5925
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 57421.85666666668
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 61143.05
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 61287.25
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 67795.44166666668
                    },
                    {
                        "x_data": "English",
                        "y_data": 72089.04999999999
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 74162.73999999999
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 77098.198
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070.08
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 79813.02
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 84097.4375
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 96346.5675
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 98133.47
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382.59
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 100053.07333333332
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311.38
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 114576.9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the number of trains starting from each origin Plot them as bar chart, and sort bar in ascending order.",
            "Show me the total number by origin in a histogram, could you display x-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bangalore",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chennai",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kanniyakumari",
                        "y_data": 2
                    },
                    {
                        "x_data": "Madurai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mumbai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nagercoil",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trivandrum",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, display by the X in desc.",
            "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, could you show bar in desc order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Syrah"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor",
            "visit"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, and sort in ascending by the X.",
            "Show name and age for visitors who visited some museums more than once using a bar chart, could you rank in ascending by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arjen Robben",
                        "y_data": 27
                    },
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 36
                    },
                    {
                        "x_data": "Rafael van der Vaart",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses that have two prerequisites for each title in a bar chart, could you rank names in descending order?",
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and display X-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "World History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "List the number of each company whose office is in the building in a bar chart.",
            "Return a bar chart showing the number of each company whose office is located in the building."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BNP Paribas",
                        "y_data": 2
                    },
                    {
                        "x_data": "Citigroup",
                        "y_data": 1
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 2
                    },
                    {
                        "x_data": "General Electric",
                        "y_data": 2
                    },
                    {
                        "x_data": "HSBC",
                        "y_data": 2
                    },
                    {
                        "x_data": "Industrial and Commercial Bank of China",
                        "y_data": 1
                    },
                    {
                        "x_data": "JPMorgan Chase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 3
                    },
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Total",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just plot the manager id and the department id in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 102,
                        "y_data": 60
                    },
                    {
                        "x_data": 101,
                        "y_data": 100
                    },
                    {
                        "x_data": 100,
                        "y_data": 30
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 101,
                        "y_data": 10
                    },
                    {
                        "x_data": 100,
                        "y_data": 20
                    },
                    {
                        "x_data": 101,
                        "y_data": 40
                    },
                    {
                        "x_data": 101,
                        "y_data": 70
                    },
                    {
                        "x_data": 101,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, list by the y-axis in desc.",
            "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and show enr from high to low order.",
            "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, could you order total number in desc order please?",
            "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, and sort by the Y-axis in desc please.",
            "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and show enr from high to low order.",
            "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, show enr from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Visualize a bar chart to show editors' names and their ages, and I want to sort from low to high by the Name.",
            "Display a bar chart for the names and the ages of editors, list by the bar from low to high.",
            "Compare each editors' ages using a bar chart, sort by the x axis in ascending.",
            "Draw a bar chart of name versus age, and I want to rank by the x axis in asc.",
            "What are the names and ages of editors? Show me a bar chart, and I want to order by the x axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anna Powierza",
                        "y_data": 35
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 54
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 34
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 21
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 38
                    },
                    {
                        "x_data": "Mariusz Zalejski",
                        "y_data": 25
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 43
                    },
                    {
                        "x_data": "Szymon Wydra",
                        "y_data": 20
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 24
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Services"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "what are the event details of the services that have the type code 'Marriage', and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    },
                    {
                        "x_data": "Success",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each office? Show me a stacked bar chart The x-axis is office name and group by course description, order by the Y-axis from high to low.",
            "Show the number of courses for each office in a stacked bar chart The x-axis is office name and group by course description, list total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tyler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elinore",
                        "y_data": 0
                    },
                    {
                        "x_data": "Jailyn",
                        "y_data": 0
                    },
                    {
                        "x_data": "Ericka",
                        "y_data": 0
                    },
                    {
                        "x_data": "Geovany",
                        "y_data": 0
                    },
                    {
                        "x_data": "Rosalee",
                        "y_data": 0
                    },
                    {
                        "x_data": "Laury",
                        "y_data": 1
                    },
                    {
                        "x_data": "German",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 0
                    },
                    {
                        "x_data": "Vergie",
                        "y_data": 0
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the average amount of transactions for different investors with a scatter chart.",
            "Show the average amount of transactions for different investors. Plot them as scatter chart.",
            "Plot a scatter chart, investor id by mean amount of transaction."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 24403.6612
                    },
                    {
                        "x_data": 3,
                        "y_data": 61.06666666666666
                    },
                    {
                        "x_data": 6,
                        "y_data": 302507.6996
                    },
                    {
                        "x_data": 7,
                        "y_data": 822.803
                    },
                    {
                        "x_data": 8,
                        "y_data": 0
                    },
                    {
                        "x_data": 14,
                        "y_data": 4.5263
                    },
                    {
                        "x_data": 17,
                        "y_data": 78035671.4424
                    },
                    {
                        "x_data": 18,
                        "y_data": 14.1285
                    },
                    {
                        "x_data": 19,
                        "y_data": 103742065.5898
                    },
                    {
                        "x_data": 20,
                        "y_data": 82057.207
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "investor_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(amount_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "trained_in",
            "procedures"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Find the physicians who are trained in a procedure that costs more than 5000, and count them by a pie chart",
            "A pie chart for finding the number of the physicians who are trained in a procedure that costs more than 5000.",
            "Which physicians are trained in procedures that are more expensive than 5000, and count them by a pie chart",
            "Find the number of the physicians who are trained in a procedure that costs more than 5000."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Wen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Todd Quinlan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Show the relationship between the subject ID and the corresponding number of courses for each subject in a group scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 4,
                        "classify": "Arts"
                    },
                    {
                        "x_data": 1,
                        "y_data": 6,
                        "classify": "Computer Science"
                    },
                    {
                        "x_data": 3,
                        "y_data": 5,
                        "classify": "Language"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "subject_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each party and the corresponding number of delegates from that party, list by the X from low to high.",
            "Show the name of each party and the corresponding number of delegates from that party in a bar chart, rank by the bar in asc.",
            "For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, and could you rank in ascending by the bar?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(COUNT(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "hall_of_fame"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "I want to see trend of the number of yearid by yearid, show x axis in desc order.",
            "I want to see trend of the number of yearid by yearid, and I want to show in desc by the X.",
            "count yearid for visualizing a line chart, and sort X-axis in descending order.",
            "count yearid for visualizing a line chart, and could you show x-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008~2015",
                        "y_data": 8
                    },
                    {
                        "x_data": "2000~2007",
                        "y_data": 8
                    },
                    {
                        "x_data": "1992~1999",
                        "y_data": 8
                    },
                    {
                        "x_data": "1984~1991",
                        "y_data": 8
                    },
                    {
                        "x_data": "1976~1983",
                        "y_data": 8
                    },
                    {
                        "x_data": "1968~1975",
                        "y_data": 8
                    },
                    {
                        "x_data": "1960~1967",
                        "y_data": 8
                    },
                    {
                        "x_data": "1952~1959",
                        "y_data": 8
                    },
                    {
                        "x_data": "1944~1951",
                        "y_data": 8
                    },
                    {
                        "x_data": "1936~1943",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "yearid",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(yearid)"
                }
            }
        }
    },
    {
        "tables_used": [
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show the authors of their total submissions with a pie chart.",
            "Visualize a pie chart for how many authors submit to the workshop.",
            "Give me a pie to show the number of author from different author."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Author)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart, show from low to high by the Name.",
            "Give me the names and prices of furnitures which some companies are manufacturing with a bar chart, and I want to list x-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Billiard table",
                        "y_data": 443
                    },
                    {
                        "x_data": "Bookcase",
                        "y_data": 239
                    },
                    {
                        "x_data": "Chabudai",
                        "y_data": 450
                    },
                    {
                        "x_data": "Dining set",
                        "y_data": 2124
                    },
                    {
                        "x_data": "Hatstand",
                        "y_data": 1234
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price_in_Dollar"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Compare the total number of trains in each name by a bar graph, and order by the Name from high to low.",
            "How many trains in each name category, give me the result with a bar chart, and order by the Name from high to low.",
            "Give me a bar chart for how many name of each name, and could you show x-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wardha-Ballarshah Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sewagram Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nandigram Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nagpur-Kazipet Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucknow-Chennai Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kazipet-Nagpur Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ballarshah-Mumbai Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andaman Exp",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of bookings for different guests and group by guest first name in a bar chart.",
            "How many bookings for different guests? Show me a bar chart grouping by guest first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Else",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juvenal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Louvenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mozell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rebeca",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tamia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "guest_first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(guest_first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring",
            "shop"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find the number of employees hired in each shop; show the shop name as well Plot them as bar chart, show Y in descending order.",
            "For each shop, return the number of employees working there and the name of the shop Plot them as bar chart, list the total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FC Haka",
                        "y_data": 2
                    },
                    {
                        "x_data": "HJK",
                        "y_data": 1
                    },
                    {
                        "x_data": "FF Jaro",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC Lahti",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC KooTeePee",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC Inter",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many students are in each department? Show me a bar chart, and rank by the X-axis from high to low.",
            "Find the total number of students for each department with a bar chart, and sort in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T2.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For employees with first names that end with the letter m, give me a bar chart to show their average salary, display from high to low by the bar.",
            "For those employees whose first name is ending with the letter m, compute their average salary for visualizing a bar chart, and sort bars in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 7850
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 7900
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "A bar chart for how many competitions for each country, and rank by the the number of country in desc.",
            "Compare the total number of competitions for each country, show Y from high to low order.",
            "Show me the number of country by country in a histogram, rank by the the number of country in desc.",
            "How many competitions for each country?, and list by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Russia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents created in each day and bin document date by year interval with a line chart, and rank x-axis from high to low order.",
            "How many documents are created in each day? Bin the document date by year interval with a line chart, and show by the x axis in descending please.",
            "How many documents are created in each day? Bin the document date by year interval with a line chart, and rank x-axis from high to low order.",
            "Show the number of documents created in each day and bin document date by year interval with a line chart, display in desc by the Document_Date please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010~2013",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 3
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 4
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ALBUM",
            "TRACK"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart, could you rank by the bars from high to low please?",
            "Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and rank in desc by the x axis.",
            "Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, and I want to list X-axis in descending order.",
            "Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?, and could you show bars in descending order please?",
            "What are the titles and ids for albums containing tracks with unit price greater than 1, and could you show bars in descending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Office, Season 3",
                        "y_data": 251
                    },
                    {
                        "x_data": "The Office, Season 2",
                        "y_data": 250
                    },
                    {
                        "x_data": "The Office, Season 1",
                        "y_data": 249
                    },
                    {
                        "x_data": "Lost, Season 3",
                        "y_data": 229
                    },
                    {
                        "x_data": "Lost, Season 2",
                        "y_data": 231
                    },
                    {
                        "x_data": "Lost, Season 1",
                        "y_data": 230
                    },
                    {
                        "x_data": "LOST, Season 4",
                        "y_data": 261
                    },
                    {
                        "x_data": "Heroes, Season 1",
                        "y_data": 228
                    },
                    {
                        "x_data": "Battlestar Galactica: The Story So Far",
                        "y_data": 226
                    },
                    {
                        "x_data": "Battlestar Galactica, Season 3",
                        "y_data": 227
                    },
                    {
                        "x_data": "Battlestar Galactica (Classic), Season 1",
                        "y_data": 253
                    },
                    {
                        "x_data": "Aquaman",
                        "y_data": 254
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AlbumId"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and commission_pct , I want to list from high to low by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and commission_pct in a bar chart, and I want to rank by the bar in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and commission_pct , and I want to rank by the bar in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and commission_pct , and visualize them by a bar chart, and I want to list from high to low by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and commission_pct , and list in descending by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 0
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 0
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 0
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 0
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "payment",
            "payment",
            "staff"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, order Y in desc order.",
            "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, rank in desc by the y-axis please.",
            "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, and order Y in desc order.",
            "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, order Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 21
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 19
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 16
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 16
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 15
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Create a bar chart showing mean amount of transaction across transaction type code, rank Y-axis in asc order.",
            "Show the average transaction amount for different transaction types with a bar chart, sort from low to high by the y axis.",
            "Show the average transaction amount for different transaction types, I want to display by the total number in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SALE",
                        "y_data": 11198167.237771427
                    },
                    {
                        "x_data": "PUR",
                        "y_data": 25945880.3716125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(amount_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between Team_ID and School_ID , and group by attribute All_Neutral.",
            "Visualize the relationship between Team_ID and School_ID , and group by attribute All_Neutral.",
            "A scatter chart shows the correlation between Team_ID and School_ID , and group by attribute All_Neutral.",
            "Draw a scatter chart about the correlation between Team_ID and School_ID , and group by attribute All_Neutral.",
            "What is the relationship between Team_ID and School_ID , and group by attribute All_Neutral?",
            "Scatterplot of school_id vs team id by All_Neutral"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 5,
                        "classify": "3\u20133"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "4\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "5\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "9\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date.",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-04-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-05-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-06-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-01-02",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Give me the comparison about author_id over the password by a bar chart.",
            "Draw a bar chart about the distribution of password and author_id .",
            "Return a bar chart about the distribution of password and author_id .",
            "Visualize a bar chart about the distribution of password and author_id .",
            "Show me about the distribution of password and author_id in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "e96c0bcbbbb14747747a56ff4c17354f343a5b4f",
                        "y_data": 6
                    },
                    {
                        "x_data": "c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b",
                        "y_data": 1
                    },
                    {
                        "x_data": "4f149f75ecd84afcdf27343509cdd03d81edb119",
                        "y_data": 11
                    },
                    {
                        "x_data": "cdaf6c3483f19e2253659a40a3aab786a3390f78",
                        "y_data": 3
                    },
                    {
                        "x_data": "b517a107b5f08fafe9628e88e7263a6f3a4a55c0",
                        "y_data": 10
                    },
                    {
                        "x_data": "120ac8a5744f5b710ecaebbd8dd1633e3e33886e",
                        "y_data": 14
                    },
                    {
                        "x_data": "4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3",
                        "y_data": 9
                    },
                    {
                        "x_data": "d34378200c9b5f72d3039fa640e7920aaec0fdf2",
                        "y_data": 4
                    },
                    {
                        "x_data": "02d64f11de97436343a0beba41bfcf69af61be1e",
                        "y_data": 8
                    },
                    {
                        "x_data": "3e2f7bf1e6acf0d616a8703ee0050fba13bc007f",
                        "y_data": 7
                    },
                    {
                        "x_data": "6b9979a83b4a9e03ead034c8de47f1b013a3d3af",
                        "y_data": 13
                    },
                    {
                        "x_data": "24b0ee84063c3b017ab1839e01b7280f47f7c7c2",
                        "y_data": 2
                    },
                    {
                        "x_data": "6d587cec8006e3a40565e1dad2c5b5b12b475b8f",
                        "y_data": 15
                    },
                    {
                        "x_data": "a48e25a58b3088e9cfdaca61130555ed2c772452",
                        "y_data": 12
                    },
                    {
                        "x_data": "2c196efe8aee23a1b9a7e752fe63029c5879af6f",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "password",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all investor details, and count them by a bar chart, I want to rank from high to low by the how many investor details please.",
            "Plot the number of investor details by grouped by investor details as a bar graph, display Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 2
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "l",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "b",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of department_id over hire_date, and could you display by the X-axis in ascending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about department_id over hire_date , and could you display by the X-axis in ascending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about department_id over hire_date with a line chart, and sort HIRE_DATE in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of department_id over hire_date , sort HIRE_DATE in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of department_id over hire_date , and order x axis in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of department_id over hire_date , and display by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "race"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Show me how many in each class of all races using a bar chart, and I want to order in descending by the Class.",
            "Create a bar chart showing how many class across class, and list from high to low by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GT",
                        "y_data": 2
                    },
                    {
                        "x_data": "DP/GT",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Parts",
            "Part_Faults"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Which parts have more than 2 faults? Show the part name and id in a bar chart, show by the y axis from low to high.",
            "Give me a histogram for which parts have more than 2 faults? Show the part name and id, and show by the y axis from low to high.",
            "which parts have more than 2 faults? Show the part name and id, list Y-axis in ascending order.",
            "Which parts have more than 2 faults? Show the part name and id Plot them as bar chart, and display from low to high by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "top",
                        "y_data": 1
                    },
                    {
                        "x_data": "package",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "part_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "part_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "teaches",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title, and rank by the y axis in desc.",
            "List the number of instructors for each course in year 2008 with a bar chart, order by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 2
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Transaction Processing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Surfing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Race Car Driving",
                        "y_data": 1
                    },
                    {
                        "x_data": "Networking",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marine Mammals",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Animal Behavior",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "HOST"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "How many hosts does each nationality have? List the nationality and the count Visualize by bar chart, and could you sort by the x axis in ascending?",
            "Return a histogram on how many hosts does each nationality have? List the nationality and the count, and could you rank by the names from low to high?",
            "How many hosts does each nationality have? List the nationality and the count with a bar chart, and could you order names in asc order please?",
            "Show different nationalities along with the number of hosts of each nationality Visualize by bar chart, I want to list in ascending by the x-axis.",
            "A bar chart about how many hosts does each nationality have? List the nationality and the count, and order in ascending by the names.",
            "Bar chart x axis nationality y axis the total number, show by the X-axis from low to high.",
            "Show different nationalities along with the number of hosts of each nationality in a bar chart, and could you sort by the X in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Argentina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hungary",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show all countries and the number of people from each country with a bar chart.",
            "Show all countries and the number of people from each country.",
            "Give me a bar chart for the total number of each country"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sweden",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a scatter chart about the correlation between commission_pct and manager_id .",
            "For those employees who did not have any job in the past, show me about the correlation between commission_pct and manager_id in a scatter chart.",
            "For those employees who did not have any job in the past, draw a scatter chart about the correlation between commission_pct and manager_id .",
            "For those employees who did not have any job in the past, visualize the relationship between commission_pct and manager_id .",
            "For those employees who did not have any job in the past, return a scatter chart about the correlation between commission_pct and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 102
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0.4,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 149
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 201
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Find the parties associated with the delegates from district 1. Who served as governors of the parties, and count them by a pie chart",
            "Who were the governors of the parties associated with delegates from district 1, and count them by a pie chart",
            "A pie chart for finding the number of the parties associated with the delegates from district 1. Who served as governors of the parties?",
            "Find the number of the parties associated with the delegates from district 1. Who served as governors of the parties?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Peter Vallone",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tom Golisano",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Governor)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Governor"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 80
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "patient"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "What are the number of names of patients who made an appointment?, could you display bars in ascending order please?",
            "List the number of the names of patients who have made appointments, list by the bars in asc.",
            "List the names of patients who have made appointments, and count them by a bar chart, display names from low to high order.",
            "What are names of patients who made an appointment, and count them by a bar chart, and could you sort in asc by the X-axis?",
            "A bar chart for listing the number of the names of patients who have made appointments, and could you order from low to high by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dennis Doe",
                        "y_data": 3
                    },
                    {
                        "x_data": "Grace Ritchie",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Smith",
                        "y_data": 3
                    },
                    {
                        "x_data": "Random J. Patient",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and score of the movie with a bar chart, show X-axis in descending order.",
            "Draw a bar chart to compare the stars of each movie by title, and show X-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the number of trains starting from each origin. Plot them as bar chart.",
            "Show me the total number by origin in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bangalore",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chennai",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kanniyakumari",
                        "y_data": 2
                    },
                    {
                        "x_data": "Madurai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mumbai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nagercoil",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trivandrum",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For the days with the 3 largest maximum gust speeds, calculate the total average temperature of each month (bin date into month level)."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 68
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 0
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 123
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(mean_temperature_f)"
                }
            }
        }
    },
    {
        "tables_used": [
            "camera_lens",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, sort by the total number in asc.",
            "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, and sort by the how many name from low to high please.",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, rank by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Olympus 15mm f/8.0 Body Cap",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigma 19mm f2.8 EX DN",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find Start_from and the amount of Start_from bin start_from by weekday, and visualize them by a bar chart.",
            "Give me the comparison about the amount of Start_from over the Start_from bin start_from by weekday.",
            "Visualize a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday.",
            "Show me about the distribution of Start_from and the amount of Start_from bin start_from by weekday in a bar chart.",
            "Return a bar chart about the distribution of Start_from and the amount of Start_from bin start_from by weekday.",
            "Bar chart x axis start from y axis the number of start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, sort by the how many hire date in ascending please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and display y axis in asc order.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday, order by the total number in ascending.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart, and display y axis in asc order.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday, show by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 13
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 14
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 14
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 14
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 15
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents for each location code in a bar chart, and I want to rank by the y axis in desc.",
            "How many documents for different location code? Plot a bar chart to show the proportion, and show Y in desc order.",
            "Bar chart x axis location code y axis how many location code, display by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "x",
                        "y_data": 5
                    },
                    {
                        "x_data": "e",
                        "y_data": 4
                    },
                    {
                        "x_data": "b",
                        "y_data": 3
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Master_Index",
            "CMI_Cross_References"
        ],
        "db_id": "local_govt_mdm",
        "nl_queries": [
            "what are the details of the cmi masters that have the cross reference code 'Tax', and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Reynolds-McClure",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt, Kertzmann and Lubowitz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmitt-Lang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Volkman, Mills and Ferry",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(cmi_details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cmi_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Bar chart x axis carrier y axis the number of carrier, display bar from high to low order.",
            "What is the number of carriers of phones? Give me a bar chart, could you order in desc by the Carrier?",
            "Can you show a bar chart to visualize the number of carriers?, and list x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TMobile",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sprint",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Please give me a bar chart showing institution types, along with the total enrollment for each type, order total number in desc order.",
            "Bar chart x axis type y axis total number of enrollment, and rank by the Y from high to low.",
            "Please compare the total enrollment for each type using a bar chart, and could you sort total number of enrollment in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private",
                        "y_data": 7868
                    },
                    {
                        "x_data": "Public",
                        "y_data": 5267
                    },
                    {
                        "x_data": "Tribal",
                        "y_data": 1000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marshall",
                        "y_data": 8
                    },
                    {
                        "x_data": "Alicia",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cary",
                        "y_data": 14
                    },
                    {
                        "x_data": "Eliza",
                        "y_data": 15
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "personal_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Give me a bar chart for how many name of each name, could you show x-axis from low to high order please?",
            "How many trains in each name category, give me the result with a bar chart, and list bars in ascending order.",
            "Compare the total number of trains in each name by a bar graph, and sort by the Name in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andaman Exp",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ballarshah-Mumbai Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kazipet-Nagpur Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucknow-Chennai Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nagpur-Kazipet Pass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nandigram Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sewagram Exp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wardha-Ballarshah Pass",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Plot how many date from by grouped by date from as a bar graph, and I want to list in descending by the total number.",
            "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart, and display from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart, list from low to high by the Y.",
            "Bar chart x axis year y axis total number of avg(price), and list from low to high by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 32
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 39
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 49
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 52
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 52
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Price))"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, and visualize them by a bar chart, I want to sort in ascending by the x-axis.",
            "Show me about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time in a bar chart, and rank bar from low to high order.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, and I want to sort in ascending by the x-axis.",
            "Return a bar chart about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, could you show names in ascending order?",
            "Plot the average of shop id by grouped by is full time as a bar graph, and sort X-axis from low to high order.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time, could you sort by the Is_full_time in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 5
                    },
                    {
                        "x_data": "T",
                        "y_data": 3.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and I want to order in descending by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, list total number in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart, and I want to order in descending by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart, I want to show y axis in desc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and rank by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 16
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 16
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 15
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 15
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Give me a scatter chart to show the least rating star of the movie and the star rating of the movie, group the title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 5,
                        "y_data": 5,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "E.T."
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "E.T."
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4,
                        "classify": "Snow White"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "The Sound of Music"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "stars",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a bar chart grouping by instructor's first name, order Y in descending order.",
            "Show the number of courses each instructor taught in a bar chart, and rank y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart, I want to list by the total number from high to low.",
            "Bar chart x axis year y axis total number of avg(price), order in desc by the sum avg(price)."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 90
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 52
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 52
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 49
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 39
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 32
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Price))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, rank in asc by the X please.",
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, and sort in ascending by the organisation_details.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order in asc by the organisation_details.",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and sort bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 9
                    },
                    {
                        "x_data": "eius",
                        "y_data": 2
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 9.5
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "quo",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Facilities",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "A pie chart for showing the number of the facility codes of apartments with more than 4 bedrooms.",
            "What are the facility codes of the apartments with more than four bedrooms, and count them by a pie chart",
            "Show the number of the facility codes of apartments with more than 4 bedrooms.",
            "Show the facility codes of apartments with more than 4 bedrooms, and count them by a pie chart",
            "A pie chart for what are the number of the facility codes of the apartments with more than four bedrooms?",
            "What are the number of the facility codes of the apartments with more than four bedrooms?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cable TV",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gym",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(facility_code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "facility_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between Team_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Visualize a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Return a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Draw a scatter chart about the correlation between Team_ID and All_Games_Percent , and group by attribute Team_Name.",
            "A scatter chart shows the correlation between Team_ID and All_Games_Percent , and group by attribute Team_Name.",
            "Scatterplot of all_games_percent vs team id by Team_Name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 0.706,
                        "classify": "Clemson"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "Duke"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "North Carolina"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.6,
                        "classify": "Virginia Tech"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute All_Home.",
            "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart.",
            "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home.",
            "Draw a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home.",
            "Stack bar chart of school_id vs All_Home based on acc road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 5,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 0,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "A bar chart showing the number of members in each country.",
            "Plot how many country by grouped by country as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faluts for different fault description recorded in the logs, and could you list from high to low by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "system error",
                        "y_data": 9
                    },
                    {
                        "x_data": "failed parts",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a line chart about the change of salary over hire_date .",
            "For all employees who have the letters D or S in their first name, a line chart shows the trend of salary over hire_date .",
            "For all employees who have the letters D or S in their first name, for salary, hire_date, visualize the trend.",
            "For all employees who have the letters D or S in their first name, a line chart shows the change of salary over hire_date",
            "For all employees who have the letters D or S in their first name, show me the trend about salary over hire_date with a line chart.",
            "For all employees who have the letters D or S in their first name, give me the trend about salary over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 7800
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 7700
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, order from high to low by the total number.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and order by the Y-axis in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, I want to list by the Y from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the hire_date bin hire_date by weekday, list by the mean salary in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart, and show y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 7775
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6762.5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6493.333333333333
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6320
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6286.666666666667
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5746.666666666667
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5685.714285714285
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and list from high to low by the Y.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, rank in desc by the y-axis.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, sort by the y-axis in desc.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, order by the Y-axis in desc.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and I want to list Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "users"
        ],
        "db_id": "document_management",
        "nl_queries": [
            "Return a histogram on what are the different role codes for users, and how many users have each?, rank by the total number in ascending please.",
            "Bar graph to show the total number from different role code, order by the the total number in ascending please.",
            "What are the different role codes for users, and how many users have each Show bar chart, and rank by the total number in ascending please.",
            "Find the number of users in each role Plot them as bar chart, display total number from low to high order please.",
            "what are the different role codes for users, and how many users have each?, list in ascending by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PROJ-MGR",
                        "y_data": 7
                    },
                    {
                        "x_data": "DBA",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the hire_date bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 1170
                    },
                    {
                        "x_data": "July",
                        "y_data": 1430
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 2480
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1470
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and I want to display from low to high by the total number.",
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and display by the y-axis in asc.",
            "Give me a bar chart for the average of team id of each acc road, and display by the y-axis in asc.",
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, I want to display from low to high by the total number.",
            "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, order in asc by the the average of team id.",
            "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and I want to list by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 3.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show sum of price for each day in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "11 July",
                        "y_data": 9
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 15
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 12
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 9
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 8
                    },
                    {
                        "x_data": "21 May",
                        "y_data": 24
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me a bar chart, that simply displays the last name of the employee and the corresponding department's location id, and show by the Y-axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hunold",
                        "y_data": 1400
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 1500
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 1700
                    },
                    {
                        "x_data": "King",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 1800
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 2400
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 2500
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 2700
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "LOCATION_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "What is the average weight for each type of pet Show bar chart, and could you display in ascending by the bars?",
            "Give me a bar chart for the average of weight of each pettype, and sort by the X in asc.",
            "Find the average weight for each pet type, and display by the PetType from low to high.",
            "what is the average weight for each type of pet?, and display by the PetType from low to high.",
            "Visualize a bar chart for what is the average weight for each type of pet?, and display by the PetType from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 12
                    },
                    {
                        "x_data": "dog",
                        "y_data": 11.35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_700 , could you show bars in desc order?",
            "A bar chart shows the distribution of meter_700 and meter_100 , and rank from high to low by the bars.",
            "Show me about the distribution of meter_700 and meter_100 in a bar chart, and could you list names from high to low order?",
            "Bar graph to show meter_100 from different meter 700, and display x axis in desc order.",
            "Find meter_700 and meter_100 , and visualize them by a bar chart, and display bar in descending order.",
            "Visualize a bar chart about the distribution of meter_700 and meter_100 , display x axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:57.69",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:55.07",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:53.34",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "6:50.91",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "6:50.80",
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_category",
            "category"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "How many films are there in each category? List the genre name and the count with a bar chart.",
            "What are the names of the different categories, and how many films are in each? Show me the bar graph."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Action",
                        "y_data": 64
                    },
                    {
                        "x_data": "Animation",
                        "y_data": 66
                    },
                    {
                        "x_data": "Children",
                        "y_data": 60
                    },
                    {
                        "x_data": "Classics",
                        "y_data": 57
                    },
                    {
                        "x_data": "Comedy",
                        "y_data": 58
                    },
                    {
                        "x_data": "Documentary",
                        "y_data": 68
                    },
                    {
                        "x_data": "Drama",
                        "y_data": 62
                    },
                    {
                        "x_data": "Family",
                        "y_data": 69
                    },
                    {
                        "x_data": "Foreign",
                        "y_data": 73
                    },
                    {
                        "x_data": "Games",
                        "y_data": 61
                    },
                    {
                        "x_data": "Horror",
                        "y_data": 56
                    },
                    {
                        "x_data": "Music",
                        "y_data": 51
                    },
                    {
                        "x_data": "New",
                        "y_data": 63
                    },
                    {
                        "x_data": "Sci-Fi",
                        "y_data": 61
                    },
                    {
                        "x_data": "Sports",
                        "y_data": 74
                    },
                    {
                        "x_data": "Travel",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of department_id , and group by attribute job_id in a bar chart.",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the job_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.24137931034483
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Draw a bar chart of county versus the total number, order in descending by the bars.",
            "Show each county along with the number of schools, I want to display in desc by the x axis please.",
            "Return a bar chart showing the number of schools in each county, and display in desc by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "75 Starke",
                        "y_data": 1
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 2
                    },
                    {
                        "x_data": "50 Marshall",
                        "y_data": 3
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 1
                    },
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart showing the number of last name for all female students. Their sex is F.",
            "A bar chart about the number of last name for all female students whose sex is F."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the price of each product supplied by supplier id 3 in a pie chart.",
            "What is the price of each product supplied by supplier id 3? Return a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "black jeans",
                        "y_data": 695.16
                    },
                    {
                        "x_data": "blue jeans",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "mouse",
                        "y_data": 803.74
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "product_price"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_market_estimation",
            "market"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "What are the number of the years of film market estimation for the market of Japan, ordered by year descending?",
            "What are the years of film market estimation for the market of Japan, ordered by year descending, and count them by a line chart",
            "Please list the years of film market estimations when the market is in country \"Japan\" in descending order, and count them by a line chart",
            "A line chart for what are the number of the years of film market estimation for the market of Japan, ordered by year descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1945~1950",
                        "y_data": 1
                    },
                    {
                        "x_data": "1951~1956",
                        "y_data": 0
                    },
                    {
                        "x_data": "1957~1962",
                        "y_data": 0
                    },
                    {
                        "x_data": "1963~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1969~1974",
                        "y_data": 0
                    },
                    {
                        "x_data": "1975~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1981~1986",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987~1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1993~1998",
                        "y_data": 1
                    },
                    {
                        "x_data": "1999~2000",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show the number of date arrived from each date arrived, I want to sort Y in desc order.",
            "How many dogs arrived in each year? Visualize with a bar chart, list y axis in descending order.",
            "List the number of dogs arrived in each year with a bar chart, rank Y-axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 13
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of professors who is in office DRE 102 hired in each month with a bar chart, list by the how many emp hiredate in asc.",
            "How many professors whose office is located in DRE 102 are hired in each month? Return a bar chart, list by the how many emp hiredate in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 0
                    },
                    {
                        "x_data": "June",
                        "y_data": 0
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "May",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of dorms for each gender in a bar chart, order in asc by the Y please.",
            "Bar chart x axis gender y axis the total number, and rank the total number in ascending order.",
            "How many dorms are there for each gender? Show me a bar chart, display y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 1
                    },
                    {
                        "x_data": "M",
                        "y_data": 1
                    },
                    {
                        "x_data": "X",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "status"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, show in desc by the x axis.",
            "What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart, list in descending by the bars.",
            "What are the different ids and names of the stations that have had more than 12 bikes available Plot them as bar chart, and I want to order x axis in desc order.",
            "Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, I want to order x axis in desc order.",
            "Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available, order name from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Yerba Buena Center of the Arts (3rd @ Howard)",
                        "y_data": 68
                    },
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    },
                    {
                        "x_data": "Mechanics Plaza (Market at Battery)",
                        "y_data": 75
                    },
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    },
                    {
                        "x_data": "Embarcadero at Vallejo",
                        "y_data": 48
                    },
                    {
                        "x_data": "Commercial at Montgomery",
                        "y_data": 45
                    },
                    {
                        "x_data": "Civic Center BART (7th at Market)",
                        "y_data": 72
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "5th at Howard",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday, I want to display in desc by the total number.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, I want to display by the Y-axis in desc.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of salary bin hire_date by weekday, and visualize them by a bar chart, sort in desc by the y-axis please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday by a bar chart, show total number in desc order please.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, I want to display in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 124400
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 108200
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 97400
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 94800
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 94300
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86200
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 86100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Display a bar chart for how many students are from each city, and which cities have more than one cities?, and list y-axis from high to low order.",
            "Create a bar chart showing the total number across city code, and sort by the total number from high to low.",
            "How many students are from each city, and which cities have more than one cities Plot them as bar chart, and display by the the total number in desc.",
            "Find the number of students for the cities where have more than one student, and display total number in descending order.",
            "Return a histogram on how many students are from each city, and which cities have more than one cities?, could you rank y axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many bookings for different guests? Show me a bar chart grouping by guest first name, sort in descending by the X please.",
            "Show the number of bookings for different guests and group by guest first name in a bar chart, and rank by the names in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tamia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rebeca",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mozell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louvenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Keon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Keith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juvenal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Else",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "guest_first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(guest_first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a pie chart for what is the average age for each gender?",
            "Display a pie chart for what is the average age for each gender?",
            "What is the average age for each gender. Show a pie chart.",
            "Visualize a pie chart with how old is each gender, on average?",
            "Pie. how old is each gender, on average?",
            "How old is each gender, on average. Show a pie chart.",
            "Give me a pie to show the average of age from different gender."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 25.5
                    },
                    {
                        "x_data": "male",
                        "y_data": 40
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me the comparison about the average of Height over the Sex , and group by attribute Sex, and sort y-axis in desc order please.",
            "Draw a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, and sort in desc by the total number.",
            "Return a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, order by the y-axis in desc please.",
            "Visualize a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, I want to order mean height from high to low order.",
            "Show me about the distribution of Sex and the average of Height , and group by attribute Sex in a bar chart, and show by the y-axis from high to low.",
            "Draw a bar chart of sex versus mean height, order by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 197.5
                    },
                    {
                        "x_data": "M",
                        "y_data": 195.14285714285714
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Height)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Professionals",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments, order by the x axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "00230569697",
                        "y_data": 4
                    },
                    {
                        "x_data": "1-185-137-1945x409",
                        "y_data": 14
                    },
                    {
                        "x_data": "139-321-7313",
                        "y_data": 6
                    },
                    {
                        "x_data": "328.842.3792",
                        "y_data": 8
                    },
                    {
                        "x_data": "461-801-2600",
                        "y_data": 10
                    },
                    {
                        "x_data": "962-983-8109x3509",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cell_number",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "professional_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "What are card ids, customer ids, card types, and card numbers for each customer card?, and order in descending by the names.",
            "Bar graph to show sum card number from different card type code, order in descending by the x-axis.",
            "\u5361\u53f7\u6c42\u548c\u65e0\u610f\u4e49, and sort in desc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Debit",
                        "y_data": 10744938002896200
                    },
                    {
                        "x_data": "Credit",
                        "y_data": 21491532119475148
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(card_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Order_items",
            "Products"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show all product names and the total quantity ordered for each product name in a bar chart.",
            "Show all product names and the total quantity ordered for each product name.",
            "Draw a bar chart for what are the different product names, and what is the sum of quantity ordered for each product?",
            "A bar chart about what are the different product names, and what is the sum of quantity ordered for each product?",
            "What are the different product names, and what is the sum of quantity ordered for each product. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arts",
                        "y_data": 5
                    },
                    {
                        "x_data": "Beer Menus",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chocolate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fans",
                        "y_data": 9
                    },
                    {
                        "x_data": "Hard Drive",
                        "y_data": 10
                    },
                    {
                        "x_data": "Harry Potter 2",
                        "y_data": 8
                    },
                    {
                        "x_data": "Harry Potter 3",
                        "y_data": 15
                    },
                    {
                        "x_data": "Harry Potter 4",
                        "y_data": 3
                    },
                    {
                        "x_data": "Learning English",
                        "y_data": 5
                    },
                    {
                        "x_data": "TV",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.product_quantity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "how many products are there for each manufacturer?, could you list bar from low to high order?",
            "Find the number of products for each manufacturer, showing the name of each company Show bar chart, and could you display bars from low to high order?",
            "Display a bar chart for how many products are there for each manufacturer?, and order in asc by the names.",
            "How many products are there for each manufacturer Visualize by bar chart, list by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mill"
        ],
        "db_id": "architecture",
        "nl_queries": [
            "How many mills of 'Grondzeiler' type are built in each year? Give me the trend."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1819~1825",
                        "y_data": 1
                    },
                    {
                        "x_data": "1826~1832",
                        "y_data": 0
                    },
                    {
                        "x_data": "1833~1839",
                        "y_data": 0
                    },
                    {
                        "x_data": "1840~1846",
                        "y_data": 2
                    },
                    {
                        "x_data": "1847~1853",
                        "y_data": 0
                    },
                    {
                        "x_data": "1854~1860",
                        "y_data": 1
                    },
                    {
                        "x_data": "1861~1867",
                        "y_data": 0
                    },
                    {
                        "x_data": "1868~1874",
                        "y_data": 0
                    },
                    {
                        "x_data": "1875~1881",
                        "y_data": 0
                    },
                    {
                        "x_data": "1882~1888",
                        "y_data": 0
                    },
                    {
                        "x_data": "1889~1890",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "built_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(built_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS",
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart, sort y-axis from high to low order please.",
            "A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, I want to sort by the Y in descending please.",
            "What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?, sort y-axis from high to low order please.",
            "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart, and order in desc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rosellas Vineyard",
                        "y_data": 4
                    },
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 4
                    },
                    {
                        "x_data": "Garys Vineyard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chardonnay",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sleepy Hollow Vineyard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarmento Vineyard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metallico Un-Oaked",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kali Hart",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, compute the total number of states, and show the proportion with a pie chart.",
            "Compute the total the number of state across state as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state"
                }
            }
        }
    },
    {
        "tables_used": [
            "representative"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "Bar chart of the total number from each party, and could you order by the bars in asc?",
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party, could you order by the bars in asc?",
            "What are the different parties of representative? Show the party name and the number of representatives in each party, list by the x axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Return a bar chart on how many classes are held in each department?, list bars in descending order.",
            "A bar chart about how many classes are held in each department?, I want to list from high to low by the X-axis.",
            "How many classes are held in each department Visualize by bar chart, I want to list from high to low by the X-axis.",
            "Find the number of classes in each department Visualize by bar chart, and list bars in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS",
                        "y_data": 8
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "A bar chart about what are the memories and carriers of phones?, rank total number in ascending order.",
            "What are the memories and carriers of phones Show bar chart, rank total number in ascending order.",
            "Give me a histogram for what are the memories and carriers of phones?, and could you rank by the total number from low to high?",
            "Bar graph to show mean memory in g from different carrier, rank Y-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TMobile",
                        "y_data": 69.33333333333333
                    },
                    {
                        "x_data": "Sprint",
                        "y_data": 80
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "What is the number of courses each teacher teaches? Visualze with a bar chart, and order by the bar in desc.",
            "Show the number of courses each teacher teaches in a bar chart, rank in desc by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please return me a bar chart show what are the total smallest rating of different movie title?, show in descending by the Y-axis please.",
            "Visualize the title and their total smallest ratings of the movie using a bar chart, and rank from high to low by the y-axis please.",
            "Visualize the total smallest rating of different movie title using a bar chart, and could you order from high to low by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 8
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 5
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Find the name and credit score of the customers who have some loans.",
            "Return a histogram on what are the different names and credit scores of customers who have taken a loan?",
            "Give me a histogram for what are the different names and credit scores of customers who have taken a loan?",
            "Show a bar chart to show different names and credit scores of customers who have taken a loan.",
            "Please compare the credit score of the customers who have some loans by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mary",
                        "y_data": 30
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 210
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cust_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "credit_score"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and show from high to low by the x-axis.",
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, list by the x axis in desc.",
            "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and list names in desc order please.",
            "Find the name and level of catalog structure with level between 5 and 10, could you sort by the catalog_level_name from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sub-Category",
                        "y_data": 8
                    },
                    {
                        "x_data": "Product",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_level_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "catalog_level_number"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "What are the types of competition and number of competitions for that type Show bar chart, and rank Y in ascending order.",
            "List the types of competition and the number of competitions of each type Visualize by bar chart, and order in asc by the the total number please.",
            "Return a histogram on what are the types of competition and number of competitions for that type?, order by the Y in asc.",
            "List the types of competition and the number of competitions of each type in a bar chart, show Y in asc order.",
            "Plot the total number by grouped by competition type as a bar graph, and I want to show from low to high by the the total number .",
            "Give me a histogram for what are the types of competition and number of competitions for that type?, and order in asc by the the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    },
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and sort y-axis in desc order.",
            "Find the number of courses that have two prerequisites for each title in a bar chart, and show by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Find the average age of journalists working on different role type, show the result with a bar chart, and list by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Host",
                        "y_data": 43
                    },
                    {
                        "x_data": "Music",
                        "y_data": 35.5
                    },
                    {
                        "x_data": "Screening",
                        "y_data": 30.33333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Work_Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(t1.age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Plot the total number by grouped by directed by as a bar graph, list from high to low by the X.",
            "List all directors along with the number of films directed by each director in a bar chart, and display Directed_by from high to low order.",
            "List all directors along with the number of films directed by each director Plot them as bar chart, list X-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jesus Salvador Trevi\u00f1o",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bill Schreiner",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Directed_by",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "race",
            "track"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, sort Name in asc order please.",
            "Show the name of track and the number of races in each track Visualize by bar chart, and rank from low to high by the bar.",
            "Show the name of track and the number of races in each track by a bar chart, rank from low to high by the bar.",
            "What are the names of different tracks, and how many races has each had Plot them as bar chart, and could you sort in asc by the x axis?",
            "Return a histogram on what are the names of different tracks, and how many races has each had?, and sort from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Auto Club Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicagoland Speedway",
                        "y_data": 2
                    },
                    {
                        "x_data": "Daytona International Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Homestead-Miami Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kansas Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Martinsville Speedway",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the correlation between salary and commission_pct in a scatter chart.",
            "For all employees who have the letters D or S in their first name, draw a scatter chart about the correlation between salary and commission_pct .",
            "For all employees who have the letters D or S in their first name, what is the relationship between salary and commission_pct ?",
            "For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between salary and commission_pct .",
            "For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between salary and commission_pct ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 0
                    },
                    {
                        "x_data": 12000,
                        "y_data": 0
                    },
                    {
                        "x_data": 11500,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 11000,
                        "y_data": 0
                    },
                    {
                        "x_data": 11000,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 10000,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 9500,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 9500,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 9000,
                        "y_data": 0
                    },
                    {
                        "x_data": 9000,
                        "y_data": 0
                    },
                    {
                        "x_data": 8800,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 8200,
                        "y_data": 0
                    },
                    {
                        "x_data": 8000,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 8000,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 7800,
                        "y_data": 0
                    },
                    {
                        "x_data": 7700,
                        "y_data": 0
                    },
                    {
                        "x_data": 7500,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 7000,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 6900,
                        "y_data": 0
                    },
                    {
                        "x_data": 6800,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 6500,
                        "y_data": 0
                    },
                    {
                        "x_data": 6500,
                        "y_data": 0
                    },
                    {
                        "x_data": 6400,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 6200,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 6100,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 4800,
                        "y_data": 0
                    },
                    {
                        "x_data": 4200,
                        "y_data": 0
                    },
                    {
                        "x_data": 4200,
                        "y_data": 0
                    },
                    {
                        "x_data": 4100,
                        "y_data": 0
                    },
                    {
                        "x_data": 4000,
                        "y_data": 0
                    },
                    {
                        "x_data": 3600,
                        "y_data": 0
                    },
                    {
                        "x_data": 3300,
                        "y_data": 0
                    },
                    {
                        "x_data": 3200,
                        "y_data": 0
                    },
                    {
                        "x_data": 3200,
                        "y_data": 0
                    },
                    {
                        "x_data": 3200,
                        "y_data": 0
                    },
                    {
                        "x_data": 3100,
                        "y_data": 0
                    },
                    {
                        "x_data": 3100,
                        "y_data": 0
                    },
                    {
                        "x_data": 2900,
                        "y_data": 0
                    },
                    {
                        "x_data": 2800,
                        "y_data": 0
                    },
                    {
                        "x_data": 2800,
                        "y_data": 0
                    },
                    {
                        "x_data": 2600,
                        "y_data": 0
                    },
                    {
                        "x_data": 2600,
                        "y_data": 0
                    },
                    {
                        "x_data": 2600,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 2400,
                        "y_data": 0
                    },
                    {
                        "x_data": 2200,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Show all countries and the number of singers in each country Show bar chart, and I want to sort by the X in asc.",
            "Give me a histogram for how many singers are from each country?, and I want to sort in ascending by the names.",
            "Draw a bar chart of country versus the total number, and rank from low to high by the X-axis.",
            "Return a bar chart on how many singers are from each country?, and rank from low to high by the X-axis.",
            "How many singers are from each country, I want to show by the bar from low to high.",
            "Show all countries and the number of singers in each country in a bar chart, and I want to sort by the X in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 4
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "What are the countries of mountains with height bigger than 5000, and count them by a bar chart, and could you show in ascending by the bars?",
            "A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, could you show in ascending by the bars?",
            "What are the number of the countries of mountains with height bigger than 5000?, I want to display X-axis in ascending order.",
            "Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, and list in ascending by the x axis please.",
            "A bar chart for what are the number of the countries of mountains with height bigger than 5000?, and I want to show by the X in ascending.",
            "Return the number of the countries of the mountains that have a height larger than 5000, could you order in ascending by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DR Congo Uganda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tanzania",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the transaction types and the total amount of transactions with a bar chart, rank by the y-axis in descending.",
            "What are total transaction amounts for each transaction type, show Y-axis in desc order.",
            "Show the transaction types and the total amount of transactions, I want to rank from high to low by the total number please.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, rank by the y-axis in descending.",
            "what are total transaction amounts for each transaction type?, and I want to rank by the Y-axis from high to low.",
            "Show sum transaction amount from each transaction type, could you order total number of transaction amount in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Refund",
                        "y_data": 11192.69
                    },
                    {
                        "x_data": "Payment",
                        "y_data": 8743.15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(transaction_amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Plot the number of investor details by grouped by investor details as a bar graph, sort in desc by the x-axis.",
            "Show all investor details, and count them by a bar chart, sort bars from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 2
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "l",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "b",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Sum the average prices of wines for different years, and bin year attribute into weekday interval for a bar chart.",
            "Bar chart x axis year y axis total number of avg(price)"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 49
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 39
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 90
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 32
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 52
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 52
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Price))"
                }
            }
        }
    },
    {
        "tables_used": [
            "projects",
            "assignedto"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the number of scientists involved for each project name, and display by the y-axis in ascending.",
            "Visualize a bar chart for what are the naems of all the projects, and how many scientists were assigned to each of them?, and display by the y-axis in ascending.",
            "Give me a histogram for what are the naems of all the projects, and how many scientists were assigned to each of them?, and sort by the Y from low to high.",
            "What are the naems of all the projects, and how many scientists were assigned to each of them, list total number from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A Matter of Time",
                        "y_data": 1
                    },
                    {
                        "x_data": "A Puzzling Parallax",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aerodynamics and Ice Hockey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juicy: Extracting Apple Juice with Pectinase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winds: Studying Bernoullis Principle",
                        "y_data": 1
                    },
                    {
                        "x_data": "A Silver-Cleaning Battery",
                        "y_data": 2
                    },
                    {
                        "x_data": "Aerodynamics and Gas Mileage",
                        "y_data": 2
                    },
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "All_documents",
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show how many documents are stored and bin by year in a line chart, and rank by the x-axis in desc.",
            "Show how many documents are stored and bin by year in a line chart, and sort by the Date_Stored from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2012",
                        "y_data": 2
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 4
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 3
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 2
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0
                    },
                    {
                        "x_data": "1976~1979",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Stored",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Stored)"
                }
            }
        }
    },
    {
        "tables_used": [
            "bank",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "What are the names of the different bank branches, and what are their total loan amounts Show bar chart, and I want to sort by the Y-axis from low to high.",
            "Find the total amount of loans offered by each bank branch, order from low to high by the sum amount please.",
            "Return a bar chart on what are the names of the different bank branches, and what are their total loan amounts?, display y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "morningside",
                        "y_data": 2050
                    },
                    {
                        "x_data": "downtown",
                        "y_data": 3000
                    },
                    {
                        "x_data": "broadway",
                        "y_data": 5000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, and sort y axis in asc order please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and could you list by the y axis from low to high?",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, could you list by the y axis from low to high?",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, could you list by the y axis from low to high?",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and display Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    },
                    {
                        "x_data": "June",
                        "y_data": 1491
                    },
                    {
                        "x_data": "July",
                        "y_data": 3999
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 5715
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Facilities",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of the facility codes of apartments with more than 4 bedrooms, and rank in descending by the X-axis please.",
            "A bar chart for what are the number of the facility codes of the apartments with more than four bedrooms?, and show by the x-axis in descending.",
            "What are the number of the facility codes of the apartments with more than four bedrooms?, and rank in descending by the X-axis please.",
            "What are the facility codes of the apartments with more than four bedrooms, and count them by a bar chart, show by the facility_code from high to low.",
            "A bar chart for showing the number of the facility codes of apartments with more than 4 bedrooms, list by the facility_code in desc.",
            "Show the facility codes of apartments with more than 4 bedrooms, and count them by a bar chart, list facility_code from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gym",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cable TV",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "facility_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(facility_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the price of each product supplied by supplier id 3 in a bar chart, sort by the X-axis in descending please.",
            "What is the price of each product supplied by supplier id 3? Return a bar chart, sort by the X-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "mouse",
                        "y_data": 803.74
                    },
                    {
                        "x_data": "blue jeans",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "black jeans",
                        "y_data": 695.16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "product_price"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Give me a bar chart about the number of customer addresses in each premises type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Office",
                        "y_data": 6
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 3
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type description? Visualize by a bar chart, and could you show Y-axis from high to low order?",
            "Return a bar chart showing the number of documents for each document type description, and list by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "excellent",
                        "y_data": 9
                    },
                    {
                        "x_data": "good",
                        "y_data": 5
                    },
                    {
                        "x_data": "fun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player",
            "Player_Attributes"
        ],
        "db_id": "soccer_1",
        "nl_queries": [
            "Find the top five players in terms of potential, bin the birthday into YEAR interval, and count the birthday grouping by player's name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1985",
                        "y_data": 2,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1986",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1987",
                        "y_data": 1,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1988",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1991",
                        "y_data": 1,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1992",
                        "y_data": 1,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1993",
                        "y_data": 1,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "1985",
                        "y_data": 2,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1986",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1987",
                        "y_data": 1,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1988",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1991",
                        "y_data": 2,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1992",
                        "y_data": 1,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1993",
                        "y_data": 1,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "1985",
                        "y_data": 2,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1986",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1987",
                        "y_data": 2,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1988",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1991",
                        "y_data": 2,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1992",
                        "y_data": 1,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1993",
                        "y_data": 1,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "1985",
                        "y_data": 2,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1986",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1987",
                        "y_data": 2,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1988",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1991",
                        "y_data": 2,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1992",
                        "y_data": 2,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1993",
                        "y_data": 1,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "1985",
                        "y_data": 2,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1986",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1987",
                        "y_data": 2,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1988",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1991",
                        "y_data": 2,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1992",
                        "y_data": 2,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "1993",
                        "y_data": 2,
                        "classify": "Paul Pogba"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "birthday",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(birthday)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Compare the prices of each manufacturer's most expensive product with a bar chart, and list in descending by the price.",
            "Select the name of each manufacturer along with the price of its most expensive product using a bar chart, could you list y-axis in descending order please?",
            "For each manufacturer's name, what are the prices of their most expensive product?, and list by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 270
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 180
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of price , and group by attribute headquarter, and list in descending by the total number of price please.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of price , and group by attribute headquarter, show by the y-axis in descending please.",
            "For those records from the products and each product's manufacturer, find headquarter and the sum of price , and group by attribute headquarter, and visualize them by a bar chart, and list in descending by the total number of price please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the headquarter , and group by attribute headquarter by a bar chart, display by the total number in desc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of price , and group by attribute headquarter, I want to sort y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Los Angeles",
                        "y_data": 486
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 450
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 240
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 240
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 150
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Show me trends of the total of the average weight change over year, list Year in descending order please.",
            "Show me trends of the total of the average weight change over year, and sort Year from high to low order.",
            "Show me a line chart of how sum avg(weight) change over the year, and order by the X in descending.",
            "Show me a line chart of how sum avg(weight) change over the year, and sort by the X in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1982",
                        "y_data": 2453
                    },
                    {
                        "x_data": "1981",
                        "y_data": 2532
                    },
                    {
                        "x_data": "1980",
                        "y_data": 2436
                    },
                    {
                        "x_data": "1979",
                        "y_data": 3055
                    },
                    {
                        "x_data": "1978",
                        "y_data": 2861
                    },
                    {
                        "x_data": "1977",
                        "y_data": 2997
                    },
                    {
                        "x_data": "1976",
                        "y_data": 3078
                    },
                    {
                        "x_data": "1975",
                        "y_data": 3176
                    },
                    {
                        "x_data": "1974",
                        "y_data": 2877
                    },
                    {
                        "x_data": "1973",
                        "y_data": 3419
                    },
                    {
                        "x_data": "1972",
                        "y_data": 3237
                    },
                    {
                        "x_data": "1971",
                        "y_data": 2960
                    },
                    {
                        "x_data": "1970",
                        "y_data": 3441
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Weight))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result.",
            "Return the number of the completion date for all the tests that have \"Fail\" result.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, return the number of cinemas showing the fim in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the number of debates for each person on the affirmative side in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "region",
            "affected_region"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "How many storms occured in each region Visualize by bar chart, sort from high to low by the X-axis.",
            "Show the name for regions and the number of storms for each region by a bar chart, and sort from high to low by the X-axis.",
            "Draw a bar chart for how many storms occured in each region?, could you rank in desc by the bars?",
            "Show the name for regions and the number of storms for each region, rank in descending by the bars.",
            "Show me a bar chart for how many storms occured in each region?, rank X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Denmark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Algeria",
                        "y_data": 1
                    },
                    {
                        "x_data": "Albania",
                        "y_data": 2
                    },
                    {
                        "x_data": "Afghanistan",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Region_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the correlation between price and code , and group by attribute headquarter in a scatter chart.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between price and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, what is the relationship between price and code , and group by attribute headquarter?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 90,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 150,
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": 270,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 66,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 150,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 120,
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 5,
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 240,
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": 240,
                        "y_data": 1,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "For those appellations whose score is higher than 93, return a stacked to group them by appellation, count appellation, and ordered by Name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Amador County",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Anderson Valley",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Bennett Valley",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Carneros",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chalk Hill",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Dry Creek Valley",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Napa Valley",
                        "y_data": 13,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Paso Robles",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Russian River Valley",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Rutherford",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Santa Lucia Highlands",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Santa Maria Valley",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sonoma Coast",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sonoma County",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sonoma Valley",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "St. Helena",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sta. Rita Hills",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Amador County",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Anderson Valley",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Bennett Valley",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Carneros",
                        "y_data": 1,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Chalk Hill",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Dry Creek Valley",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Napa Valley",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Paso Robles",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Russian River Valley",
                        "y_data": 2,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Rutherford",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Santa Lucia Highlands",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Santa Maria Valley",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Sonoma Coast",
                        "y_data": 2,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Sonoma County",
                        "y_data": 6,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Sonoma Valley",
                        "y_data": 2,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "St. Helena",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Sta. Rita Hills",
                        "y_data": 0,
                        "classify": "Chardonnay"
                    },
                    {
                        "x_data": "Amador County",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Anderson Valley",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Bennett Valley",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Carneros",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chalk Hill",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Dry Creek Valley",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Napa Valley",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Paso Robles",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Russian River Valley",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Rutherford",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Santa Lucia Highlands",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Santa Maria Valley",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sonoma Coast",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sonoma County",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sonoma Valley",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "St. Helena",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sta. Rita Hills",
                        "y_data": 1,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Amador County",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Anderson Valley",
                        "y_data": 1,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Bennett Valley",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Carneros",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Chalk Hill",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Dry Creek Valley",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Napa Valley",
                        "y_data": 1,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Paso Robles",
                        "y_data": 1,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Russian River Valley",
                        "y_data": 8,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Rutherford",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Santa Lucia Highlands",
                        "y_data": 4,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Santa Maria Valley",
                        "y_data": 1,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Sonoma Coast",
                        "y_data": 3,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Sonoma County",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Sonoma Valley",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "St. Helena",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Sta. Rita Hills",
                        "y_data": 0,
                        "classify": "Pinot Noir"
                    },
                    {
                        "x_data": "Amador County",
                        "y_data": 1,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Anderson Valley",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Bennett Valley",
                        "y_data": 1,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Carneros",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chalk Hill",
                        "y_data": 1,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Dry Creek Valley",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Napa Valley",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Paso Robles",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Russian River Valley",
                        "y_data": 1,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Rutherford",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Santa Lucia Highlands",
                        "y_data": 2,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Santa Maria Valley",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Sonoma Coast",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Sonoma County",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Sonoma Valley",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "St. Helena",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Sta. Rita Hills",
                        "y_data": 1,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Amador County",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Anderson Valley",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Bennett Valley",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Carneros",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Chalk Hill",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Dry Creek Valley",
                        "y_data": 1,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Napa Valley",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Paso Robles",
                        "y_data": 1,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Russian River Valley",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Rutherford",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Santa Lucia Highlands",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Santa Maria Valley",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Sonoma Coast",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Sonoma County",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Sonoma Valley",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "St. Helena",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    },
                    {
                        "x_data": "Sta. Rita Hills",
                        "y_data": 0,
                        "classify": "Zinfandel"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Appelation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Appelation)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 1491
                    },
                    {
                        "x_data": "July",
                        "y_data": 3999
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 5715
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, display total number of salary in ascending order.",
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of salary bin hire_date by weekday, and visualize them by a bar chart, list total number of salary from low to high order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday, and list total number of salary from low to high order.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday, list total number of salary from low to high order.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, sort in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 16400
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 23200
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 33100
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 44400
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 44500
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 52200
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 83500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Neutral and Team_ID in a bar chart, and show bars in descending order please.",
            "Give me the comparison about Team_ID over the All_Neutral , I want to show All_Neutral in desc order.",
            "Visualize a bar chart about the distribution of All_Neutral and Team_ID , and I want to list by the x axis from high to low please.",
            "Find All_Neutral and Team_ID , and visualize them by a bar chart, and show in descending by the names.",
            "Give me a bar chart for team_id of each all neutral, show in descending by the names.",
            "Give me the comparison about Team_ID over the All_Neutral by a bar chart, show from high to low by the All_Neutral please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 1
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 3
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist",
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, could you order by the Y from high to low?",
            "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart, and display Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bangladesh",
                        "y_data": 2
                    },
                    {
                        "x_data": "India",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Find the name and membership level of the visitors whose membership level is higher than 4. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 6
                    },
                    {
                        "x_data": "Gonzalo Higua\u00edn ",
                        "y_data": 8
                    },
                    {
                        "x_data": "Guti Midfielder",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Level_of_membership"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Which ministers are not a part of the Progress Party, and count them by a bar chart, I want to show Y-axis from high to low order.",
            "Show all ministers who do not belong to Progress Party, and count them by a bar chart, and could you show total number from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs arrived in each day? Visualize with a bar chart that bins arrived date by weekday.",
            "List the number of dogs arrived in each day with a bar chart that bins arrived date by weekday.",
            "Bar graph to show the number of date arrived from different date arrived"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Give me a bar chart for mean tonnage of each type, show by the Y in asc.",
            "For each type, what is the average tonnage, I want to sort Y-axis in asc order.",
            "Show different types of ships and the average tonnage of ships of each type in a bar chart, could you list y axis in asc order?",
            "Show different types of ships and the average tonnage of ships of each type Show bar chart, sort Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3932.2
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 4845
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Tonnage)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each party and the corresponding number of delegates from that party, and sort in asc by the Y-axis.",
            "For each party, return the name of the party and the number of delegates from that party Plot them as bar chart, sort in asc by the Y-axis.",
            "Show the name of each party and the corresponding number of delegates from that party in a bar chart, order by the the average of count(*) from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(COUNT(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Show me the proportion of each payment method code using a pie chart.",
            "I want to know the proportion of the total number for each payment method code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 3
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 7
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Payment_Method_Code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the dog name and weight of the dogs who have been abandoned in a bar chart, and list bars in asc order.",
            "What is the weight of each dog that was abandoned? Show in a bar chart, and I want to sort by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Evangeline",
                        "y_data": 4.01
                    },
                    {
                        "x_data": "Kacey",
                        "y_data": 7.57
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4.36
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes', and could you rank in ascending by the Y-axis?",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' with a bar chart, and order sum num employees from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 231794
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, sort Y from low to high order please.",
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, list by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 3
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 3
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 3
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 3
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 4
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 4
                    },
                    {
                        "x_data": "World History",
                        "y_data": 4
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 7
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, and sort by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Elinore",
                        "y_data": 0
                    },
                    {
                        "x_data": "Ericka",
                        "y_data": 0
                    },
                    {
                        "x_data": "Geovany",
                        "y_data": 0
                    },
                    {
                        "x_data": "German",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jailyn",
                        "y_data": 0
                    },
                    {
                        "x_data": "Laury",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 0
                    },
                    {
                        "x_data": "Rosalee",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tyler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vergie",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Show the different headquarters and number of companies at each headquarter, and could you list in ascending by the X please?",
            "Show the different headquarters and number of companies at each headquarter with a bar chart, list bars from low to high order.",
            "Bar chart x axis headquarters y axis the total number, and sort by the bars in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 4
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            ", rank from high to low by the bars.",
            "Plot the total number by grouped by industry as a bar graph, and rank from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Telecommunications",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 7
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me a bar chart for what are the department names and how many employees work in each of them?",
            "Draw a bar chart for what are the department names and how many employees work in each of them?",
            "What are the department names and how many employees work in each of them. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 2
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 1
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 6
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 5
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 34
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "files",
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart.",
            "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:23",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:12",
                        "y_data": 7
                    },
                    {
                        "x_data": "4:30",
                        "y_data": 10
                    },
                    {
                        "x_data": "2:56",
                        "y_data": 5
                    },
                    {
                        "x_data": "4:34",
                        "y_data": 8
                    },
                    {
                        "x_data": "3:45",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "min(T1.duration)",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses",
            "Ref_budget_codes"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different budget type description in a bar chart, sort by the total number in descending please.",
            "Return a bar chart to show how many documents for different budget type description, rank in descending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Government",
                        "y_data": 6
                    },
                    {
                        "x_data": "Self founded",
                        "y_data": 2
                    },
                    {
                        "x_data": "Organisation",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Budget_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please tell me the total star ratings of each movie title using a bar chart, I want to show in descending by the X.",
            "Visualize the title and and the total star rating of the movie using a bar chart, could you display bars in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 5
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Bar chart of the average of pet age from each pettype, and display in desc by the y axis please.",
            "What is the average age for each pet type? Show me a histogram, and could you sort by the Y-axis in desc?",
            "Please give me a bar chart to show the average age for each type of pet, rank the average of pet age from high to low order.",
            "Return a bar graph to visualize the average age for each pet type, rank in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 3
                    },
                    {
                        "x_data": "dog",
                        "y_data": 1.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(pet_age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses have two prerequisites? Show me a bar chart grouping by title, and could you sort by the bar in asc?",
            "Find the number of courses that have two prerequisites for each title in a bar chart, and show names in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, order bars in asc order.",
            "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, and could you display by the X in asc?",
            "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and sort names in asc order.",
            "Create a bar chart showing the number of meter 200 across meter 200, and could you display by the X in asc?",
            "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, show in ascending by the bar.",
            "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order from low to high by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(meter_200)"
                }
            }
        }
    },
    {
        "tables_used": [
            "orchestra"
        ],
        "db_id": "orchestra",
        "nl_queries": [
            "Display a bar chart for how many orchestras does each record company manage?, display by the Y in ascending.",
            "How many orchestras does each record company manage Show bar chart, I want to rank in ascending by the the total number .",
            "Visualize a bar chart for how many orchestras does each record company manage?, could you list by the the total number in asc?",
            "Draw a bar chart of record company versus the total number, and I want to rank in ascending by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Columbia Masterworks",
                        "y_data": 1
                    },
                    {
                        "x_data": "Delos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Deutsche Grammophon",
                        "y_data": 1
                    },
                    {
                        "x_data": "EMI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Koch Records / Naxos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kultur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercury Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips Classics Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "RCA",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decca Records",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Record_Company",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show me how many type by type in a histogram, and I want to sort by the Y-axis in asc.",
            "Show me the comparison of the total number of every ship type with a bar graph, and sort by the Y in asc.",
            "Return a bar chart showing the total number of each ship type, list Y in ascending order.",
            "What is the total number of each ship type? Give me a bar chart, I want to show from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart.",
            "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alice",
                        "y_data": 35
                    },
                    {
                        "x_data": "Bob",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between Team_ID and ACC_Percent , and group by attribute All_Home.",
            "A scatter chart shows the correlation between Team_ID and ACC_Percent , and group by attribute All_Home.",
            "Draw a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Home.",
            "Return a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Home.",
            "What is the relationship between Team_ID and ACC_Percent , and group by attribute All_Home?",
            "Show the relation between team id and acc_percent for each All_Home using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 0.625,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.563,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Show the name of the product that is cheapest in each product category with their minimum price with a bar graph.",
            "What are the names of the cheapest products in each category along with the cheapest price in a bar chart?",
            "Bar chart of minimal price from each name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "How many flights with price higher than 300 for each destination city? Return a bar chart, and order in ascending by the total number.",
            "A bar chart showing the number of flights with price higher than 300 for each destination city, order in asc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart, rank by the x axis in ascending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name, and sort by the bars from low to high please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, order by the x-axis from low to high.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart, and list X-axis in ascending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of price , and group by attribute name, and rank Name in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the number of the names of catalog entries with level number 8, and rank in descending by the y axis.",
            "A bar chart for what are the number of the names of catalog entries with level number 8?, I want to order in descending by the Y-axis.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart, and rank in descending by the y axis.",
            "A bar chart for finding the number of the names of catalog entries with level number 8, and I want to rank y axis in desc order.",
            "What are the number of the names of catalog entries with level number 8?, and list by the Y in desc.",
            "What are the names of catalog entries with level number 8, and count them by a bar chart, and display from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cola",
                        "y_data": 2
                    },
                    {
                        "x_data": "Root beer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ginger Beer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carbonated Water",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(catalog_entry_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "What is the average salary for each job title Show bar chart, and show y-axis in desc order please.",
            "Visualize a bar chart for what is the average salary for each job title?, and sort by the Y from high to low.",
            "Display a bar chart for what is the average salary for each job title?, and show in descending by the the average of salary."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "President",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Administration Vice President",
                        "y_data": 17000
                    },
                    {
                        "x_data": "Marketing Manager",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Sales Manager",
                        "y_data": 12200
                    },
                    {
                        "x_data": "Finance Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Accounting Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Purchasing Manager",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Public Relations Representative",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 8350
                    },
                    {
                        "x_data": "Public Accountant",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Accountant",
                        "y_data": 7920
                    },
                    {
                        "x_data": "Stock Manager",
                        "y_data": 7280
                    },
                    {
                        "x_data": "Human Resources Representative",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Marketing Representative",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Programmer",
                        "y_data": 5760
                    },
                    {
                        "x_data": "Administration Assistant",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Shipping Clerk",
                        "y_data": 3215
                    },
                    {
                        "x_data": "Stock Clerk",
                        "y_data": 2785
                    },
                    {
                        "x_data": "Purchasing Clerk",
                        "y_data": 2780
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart, could you sort total number from high to low order please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart, order from high to low by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and order by the mean manager id in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the hire_date bin hire_date by time, I want to order from high to low by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time, list total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 139.16129032258064
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 125.51724137931035
                    },
                    {
                        "x_data": "July",
                        "y_data": 116.45161290322581
                    },
                    {
                        "x_data": "June",
                        "y_data": 96.78571428571429
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute headquarter in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, find name and revenue , and group by attribute headquarter, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "For each headquarter, what are the headquarter and how many companies are centered there Visualize by bar chart, and I want to list in desc by the total number.",
            "List all headquarters and the number of companies in each headquarter, and order the total number in desc order.",
            "List all headquarters and the number of companies in each headquarter with a bar chart, could you display by the the total number from high to low?",
            "Bar chart of the total number from each headquarters, rank by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 4
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, sort by the y axis in desc.",
            "In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, sort by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 275
                    },
                    {
                        "x_data": "2015",
                        "y_data": 206
                    },
                    {
                        "x_data": "2013",
                        "y_data": 106
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Show the number of climbers for each mountain in a bar chart, and I want to display y-axis in ascending order.",
            "What is the number of climbers for each mountain? Show me a bar chart, I want to display y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mawenzi (Hans Meyer Pk)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duwoni / Mt Speke (Vittorio Emanuele Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kibo (Uhuru Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mount Kenya (Lenana)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mount Kenya (Batian)",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, and could you rank y-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apple",
                        "y_data": 5
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 3
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time, and rank x axis in desc order please.",
            "Draw a line chart about the change of the sum of Shop_ID over Start_from bin start_from by time, I want to show in desc by the x-axis.",
            "Give me the trend about the sum of Shop_ID over Start_from bin start_from by time, rank x axis in desc order.",
            "Show me the trend about the sum of Shop_ID over Start_from bin start_from by time with a line chart, and show X from high to low order please.",
            "Plot total number of shop id over start from in a line chart, and could you order in descending by the X?",
            "A line chart shows the change of the sum of Shop_ID over Start_from bin start_from by time, and could you order in descending by the X?",
            "For the sum of Shop_ID, Start_from, visualize the trend, I want to show in desc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 5
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011",
                        "y_data": 8
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, return the name and the average rating of reviews given by them Plot them as bar chart, and I want to display X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mark",
                        "y_data": 7
                    },
                    {
                        "x_data": "Helen",
                        "y_data": 7.333333333333332
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and commission_pct , and visualize them by a bar chart, and list from low to high by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number by a bar chart, list from low to high by the names.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and commission_pct , I want to show by the x axis from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and commission_pct , and list from low to high by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number , display by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 0
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and manufacturer , and group by attribute founder, and visualize them by a bar chart, and rank from low to high by the X.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and manufacturer , and group by attribute founder, sort from low to high by the x-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute founder, list bar from low to high order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute founder in a bar chart, and show by the bar from low to high.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute founder, and could you sort by the bar in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show all countries and the number of people from each country, and display bar in descending order.",
            "Show all countries and the number of people from each country with a bar chart, I want to sort Country from high to low order.",
            "Give me a bar chart for the total number of each country, rank by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sweden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "how many sections does each course has?",
            "Visualize a bar chart for how many sections does each course has?",
            "How many sections does each course has. Visualize by bar chart.",
            "Draw a bar chart for how many sections does each course have?",
            "Give me a histogram for how many sections does each course have?",
            "How many sections does each course have. Visualize by bar chart.",
            "Bar chart x axis crs code y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    },
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_700 .",
            "A bar chart shows the distribution of meter_700 and meter_100 .",
            "Show me about the distribution of meter_700 and meter_100 in a bar chart.",
            "Find meter_700 and meter_100 , and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of meter_700 and meter_100 .",
            "Bar graph to show meter_100 from different meter 700"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:50.91",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "6:53.34",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "6:55.07",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "6:57.69",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "6:50.80",
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the title and and the total star rating of the movie using a bar chart, and could you order in desc by the y axis please?",
            "Please tell me the total star ratings of each movie title using a bar chart, and list from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 8
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 5
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Find all the ids and dates of the logs for the problem whose id is 10. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1997-08-31",
                        "y_data": 12
                    },
                    {
                        "x_data": "2009-04-10",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "problem_log_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm",
            "affected_region"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "List the name for storms and the number of affected regions for each storm with a bar chart.",
            "List the name for storms and the number of affected regions for each storm.",
            "Return a bar chart on how many regions were affected by each storm?",
            "how many regions were affected by each storm?",
            "How many regions were affected by each storm. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "One",
                        "y_data": 2
                    },
                    {
                        "x_data": "Three",
                        "y_data": 1
                    },
                    {
                        "x_data": "Four",
                        "y_data": 1
                    },
                    {
                        "x_data": "Five",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show employee_id from each email, and display from high to low by the total number.",
            "Visualize a bar chart for simply displaying the email address of the employee and the corresponding employee id, and could you order by the Y in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 205
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 204
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 203
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 201
                    },
                    {
                        "x_data": "JWHALEN",
                        "y_data": 200
                    },
                    {
                        "x_data": "JRUSSEL",
                        "y_data": 145
                    },
                    {
                        "x_data": "AFRIPP",
                        "y_data": 121
                    },
                    {
                        "x_data": "DRAPHEAL",
                        "y_data": 114
                    },
                    {
                        "x_data": "NGREENBE",
                        "y_data": 108
                    },
                    {
                        "x_data": "AHUNOLD",
                        "y_data": 103
                    },
                    {
                        "x_data": "SKING",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart, and order by the x axis in ascending.",
            "How many courses for each subject? Plot a bar chart, and order by the x axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    },
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "A bar chart about how many captains are in each rank?, and I want to list in ascending by the Y-axis.",
            "Count the number of captains that have each rank by a bar chart, and sort in asc by the total number.",
            "Show the total number from each rank, and I want to list in ascending by the Y-axis.",
            "How many captains are in each rank, and I want to show from low to high by the y axis.",
            "Count the number of captains that have each rank Visualize by bar chart, and order by the y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "How many home games by each weekday (bin the year attr into weekdays interval)? Give me a bar chart, could you sort by the Y-axis in descending please?",
            "Bar chart x axis year y axis the number of year, sort y-axis in descending order.",
            "Return me a bar chart to show the frequency of the year attribute by binning into a weekday interval, order by the the number of year in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 21
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 21
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 21
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 21
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the proportion of Team_ID and Team_ID in a pie chart.",
            "Visualize a pie chart about the proportion of Team_Name and Team_ID.",
            "Return a pie chart about the proportion of Team_Name and Team_ID.",
            "A pie chart shows the proportion of Team_Name and Team_ID.",
            "Give me a pie chart to reflect the proportion of Team_Name and Team_ID.",
            "Create a pie chart showing team_id across team name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "Show a bar chart about the number of results of the battles when the bulgarian commander is not 'Boril', I want to sort from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Two Year Truce",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bulgarian victory",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "result",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart, display in desc by the Name.",
            "Give me the names and prices of furnitures which some companies are manufacturing with a bar chart, and I want to display by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hatstand",
                        "y_data": 1234
                    },
                    {
                        "x_data": "Dining set",
                        "y_data": 2124
                    },
                    {
                        "x_data": "Chabudai",
                        "y_data": 450
                    },
                    {
                        "x_data": "Bookcase",
                        "y_data": 239
                    },
                    {
                        "x_data": "Billiard table",
                        "y_data": 443
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price_in_Dollar"
                }
            }
        }
    },
    {
        "tables_used": [
            "operate_company",
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "Return a histogram on what are the ids and names of the companies that operated more than one flight?, could you order from low to high by the Y?",
            "What are the ids and names of the companies that operated more than one flight, order by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dragonair",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cathay Pacific Cargo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Vogue Laundry Service Limited",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "locations"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the city attribute of the location table to visualize a bar chart, rank by the how many city in desc.",
            "Give me a bar chart to compare the number of departments located in different cities, and list y-axis from high to low order.",
            "Create a bar chart showing the number of city across city, and rank from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Seattle",
                        "y_data": 21
                    },
                    {
                        "x_data": "Toronto",
                        "y_data": 1
                    },
                    {
                        "x_data": "Southlake",
                        "y_data": 1
                    },
                    {
                        "x_data": "South San Francisco",
                        "y_data": 1
                    },
                    {
                        "x_data": "OX9 9ZB",
                        "y_data": 1
                    },
                    {
                        "x_data": "Munich",
                        "y_data": 1
                    },
                    {
                        "x_data": "London",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CITY",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CITY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of rooms with king bed for each decor type.",
            "Return a bar chart on how many rooms have king beds? Report the number for each decor type.",
            "how many rooms have king beds? Report the number for each decor type.",
            "How many rooms have king beds? Report the number for each decor type. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 1
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Plot the total number by grouped by nationality as a bar graph, and I want to order x-axis from low to high order.",
            "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, and I want to order x-axis from low to high order.",
            "Show the different nationalities and the number of journalists of each nationality in a bar chart, and I want to sort in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 9
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For each station, bin its longitude divided by zero as buckets, and count the frequency in each bucket.",
            "Show me how many long by long in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": ">0",
                        "y_data": 0
                    },
                    {
                        "x_data": "<=0",
                        "y_data": 69
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "long",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(long)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the stars of each director by a bar chart, and display from low to high by the X.",
            "Please give me a bar chart to compare the stars by directors, sort by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Please use a bar chart to show the total amount of payment by each payment method code, rank total number in ascending order.",
            "How many total amounts of payments by each method code? You can give me a bar chart, and I want to sort total number in asc order.",
            "Bar chart of sum amount payment from each payment method code, and could you sort in asc by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 177130
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 232825
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 794713
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 2531865
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Draw a bar chart for how many captains with younger than 50 are in each rank?, and show Y-axis in descending order.",
            "Show me a bar chart for how many captains with younger than 50 are in each rank?, and rank Y-axis in descending order.",
            "Count the number of captains younger than 50 of each rank, show in descending by the y-axis.",
            "How many captains with younger than 50 are in each rank, display by the the total number from high to low.",
            "Count the number of captains younger than 50 of each rank by a bar chart, show in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Midshipman",
                        "y_data": 3
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph, show y axis in descending order.",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute, and list in descending by the Y-axis.",
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart, and rank by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "May19 \u2013October26",
                        "y_data": 71
                    },
                    {
                        "x_data": "August5\u2013August14",
                        "y_data": 52
                    },
                    {
                        "x_data": "August3\u2013August10",
                        "y_data": 7
                    },
                    {
                        "x_data": "August26\u2013September2",
                        "y_data": 7
                    },
                    {
                        "x_data": "September7\u2013September17",
                        "y_data": 3
                    },
                    {
                        "x_data": "September18\u2013September25",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Dates_active",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Group and count the move in date in a bar chart, and bin the X-axis into week day interval.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Day of Week interval.",
            "Bar chart x axis date moved in y axis how many date moved in"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 9
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way in a bar chart.",
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way. Plot them as bar chart.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods in a bar chart.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods. Visualize by bar chart.",
            "Plot the total number by grouped by how to get there as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "bus",
                        "y_data": 6
                    },
                    {
                        "x_data": "shuttle",
                        "y_data": 4
                    },
                    {
                        "x_data": "walk",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "How_to_Get_There",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, what is the relationship between code and price , and group by attribute headquarter?",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and price , and group by attribute headquarter in a scatter chart.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and price , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 6,
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 7,
                        "y_data": 90,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 10,
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 3,
                        "y_data": 150,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": 8,
                        "y_data": 270,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 9,
                        "y_data": 66,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 11,
                        "y_data": 150,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 2,
                        "y_data": 120,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 4,
                        "y_data": 5,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 1,
                        "y_data": 240,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": 5,
                        "y_data": 240,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Compute the total number in each competition type, and then split by country, show in desc by the x-axis.",
            "Stacked bar chart of the number of country for with each Competition_type in each country, order bar in desc order.",
            "How many competitions in each competition type? And split them by country, show in desc by the x-axis.",
            "A stacked bar chart about the total number in each competition type, and then split by country, and order in descending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Spain",
                        "y_data": 1,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 0,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 1,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 2,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 0,
                        "classify": "Tournament"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "A bar chart about the average of maximum score of wines each year, bin the year into the weekday interval.",
            "Compare the average of maximum score of wines each year, bin the year into the weekday interval.",
            "Compare the average of maximum score of wines each year, bin the year into the weekday interval and draw a bar chart.",
            "Give me a bar chart for mean max(score) of each year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 98
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 95
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 93.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 88
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 95
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 98
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(max(Score))"
                }
            }
        }
    },
    {
        "tables_used": [
            "building",
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, and could you order by the total number from low to high please?",
            "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and list by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Citizens Bank Building",
                        "y_data": 145
                    },
                    {
                        "x_data": "Tampa City Hall",
                        "y_data": 160
                    },
                    {
                        "x_data": "One Tampa City Center",
                        "y_data": 537
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height_feet"
                }
            }
        }
    },
    {
        "tables_used": [
            "camera_lens",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
            "A pie chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Olympus 15mm f/8.0 Body Cap",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigma 19mm f2.8 EX DN",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, display from low to high by the X.",
            "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, I want to display x axis from low to high order.",
            "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, show names from low to high order.",
            "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, and display in ascending by the x-axis.",
            "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, order by the names in ascending please.",
            "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, order X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Count the section_description, and group by section_description with a bar chart.",
            "Show how many section description from each section description"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ad",
                        "y_data": 1
                    },
                    {
                        "x_data": "doloremque",
                        "y_data": 1
                    },
                    {
                        "x_data": "et",
                        "y_data": 2
                    },
                    {
                        "x_data": "ex",
                        "y_data": 1
                    },
                    {
                        "x_data": "facilis",
                        "y_data": 1
                    },
                    {
                        "x_data": "nesciunt",
                        "y_data": 1
                    },
                    {
                        "x_data": "non",
                        "y_data": 1
                    },
                    {
                        "x_data": "provident",
                        "y_data": 1
                    },
                    {
                        "x_data": "qui",
                        "y_data": 2
                    },
                    {
                        "x_data": "quis",
                        "y_data": 1
                    },
                    {
                        "x_data": "reprehenderit",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptas",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptatem",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "section_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(section_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "news_report",
            "event",
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the names of journalists and the number of events they reported in a bar chart.",
            "Show the names of journalists and the number of events they reported. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Herbert Swindells",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jackie Waring",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Meaney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ray Ferris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Briggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Waddington",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the number of counties of all appellations in a bar chart.",
            "What is the number of counties for all appellations?",
            "Return a bar chart about the number of counties for all appellations?",
            "Plot the number of county by grouped by county as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 3
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Contra Costa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 3
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 8
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 11
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 4
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 5
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 11
                    },
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Bar chart x axis meter 600 y axis id, show by the X from low to high.",
            "Visualize a bar chart about the distribution of meter_600 and ID , and order by the bars in asc.",
            "Find meter_600 and ID , and visualize them by a bar chart, show by the x axis in ascending.",
            "Return a bar chart about the distribution of meter_600 and ID , list in asc by the names please.",
            "A bar chart shows the distribution of meter_600 and ID , and show by the X from low to high.",
            "Show me about the distribution of meter_600 and ID in a bar chart, and sort in asc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:52.59",
                        "y_data": 7
                    },
                    {
                        "x_data": "5:52.92",
                        "y_data": 3
                    },
                    {
                        "x_data": "5:53.03",
                        "y_data": 8
                    },
                    {
                        "x_data": "5:53.53",
                        "y_data": 5
                    },
                    {
                        "x_data": "5:54.45",
                        "y_data": 4
                    },
                    {
                        "x_data": "5:56.31",
                        "y_data": 1
                    },
                    {
                        "x_data": "5:56.99",
                        "y_data": 6
                    },
                    {
                        "x_data": "5:57.10",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_600",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_player",
        "nl_queries": [
            ""
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anglican",
                        "y_data": 3
                    },
                    {
                        "x_data": "Catholic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Uniting Church",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Denomination",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Research_outcomes",
            "Project_outcomes"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "What are the number of the descriptions of all the project outcomes?, and I want to show by the bar in ascending.",
            "A bar chart for what are the number of the descriptions of all the project outcomes?, list from low to high by the X.",
            "What are the descriptions of all the project outcomes, and count them by a bar chart, and rank bars from low to high order.",
            "List the number of the description of the outcomes for all projects, and show by the X-axis in ascending.",
            "List the description of the outcomes for all projects, and count them by a bar chart, rank bars from low to high order.",
            "A bar chart for listing the number of the description of the outcomes for all projects, and could you list by the X in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Published Research Paper",
                        "y_data": 10
                    },
                    {
                        "x_data": "Research Patent",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "outcome_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(outcome_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show the names of singers and the total sales of their songs in a bar chart, and display by the names from high to low.",
            "For each singer name, what is the total sales for their songs Plot them as bar chart, and I want to display in desc by the names.",
            "Show the names of singers and the total sales of their songs Visualize by bar chart, list in descending by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 261000
                    },
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 1646407
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 275000
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 335000
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 292000
                    },
                    {
                        "x_data": "Christy Walton",
                        "y_data": 651421
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T2.Sales)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Give me a histogram for what is the number of players who have points less than 30 for each position?, list by the y axis in desc please.",
            "what is the number of players who have points less than 30 for each position?, and could you list from high to low by the y axis?",
            "What is the number of players who have points less than 30 for each position Plot them as bar chart, order the total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Second Row",
                        "y_data": 3
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 3
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "List the names of aircrafts and the number of times it won matches by a bar chart.",
            "List the names of aircrafts and the number of times it won matches. Plot them as bar chart.",
            "For each aircraft that has won an award, what is its name and how many time has it won. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "tv_channel"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, sort by the y axis in desc.",
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart, and I want to rank by the y-axis in descending.",
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, I want to rank by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:3",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:3 / 16:9",
                        "y_data": 3
                    },
                    {
                        "x_data": "16:9",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Pixel_aspect_ratio_PAR",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Pixel_aspect_ratio_PAR)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games in each season and group by away team in a group line chart.",
            "Give me line charts of worldwide gross the number of season over year season by major genres Away_team"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007-01-01",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 2,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 2,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 3,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 2,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs for each size code? Return a bar chart, display bar in asc order.",
            "List the number of dogs for each size code in a bar chart, I want to list bars in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "LGE",
                        "y_data": 4
                    },
                    {
                        "x_data": "MED",
                        "y_data": 9
                    },
                    {
                        "x_data": "SML",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "size_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(size_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring",
            "shop"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find the number of employees hired in each shop; show the shop name as well Plot them as bar chart, and I want to rank by the bar in descending.",
            "For each shop, return the number of employees working there and the name of the shop Plot them as bar chart, and list names in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HJK",
                        "y_data": 1
                    },
                    {
                        "x_data": "FF Jaro",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC Lahti",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC KooTeePee",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC Inter",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC Haka",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "List the dates and vote percents of elections in a bar chart.",
            "List the dates and vote percents of elections. Show bar chart.",
            "Show vote_percent from each date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July 1942",
                        "y_data": 16.2
                    },
                    {
                        "x_data": "October 1942",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "1946",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "1949",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "1953",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Vote_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Show the number of climbers for each mountain in a bar chart, could you display in desc by the the number of name?",
            "What is the number of climbers for each mountain? Show me a bar chart, rank in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mount Kenya (Batian)",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mount Kenya (Lenana)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kibo (Uhuru Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Duwoni / Mt Speke (Vittorio Emanuele Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mawenzi (Hans Meyer Pk)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show the number of male and female assistant professors with a bar chart, and sort from high to low by the y-axis.",
            "Show the number of male and female assistant professors Plot them as bar chart, and I want to display y axis in descending order.",
            "Visualize a bar chart for how many male and female assistant professors do we have?, and sort from high to low by the y-axis.",
            "Display a bar chart for how many male and female assistant professors do we have?, I want to display y axis in descending order.",
            "How many male and female assistant professors do we have, order by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 12
                    },
                    {
                        "x_data": "F",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manager"
        ],
        "db_id": "railway",
        "nl_queries": [
            "A bar chart for showing the number of the countries that have managers of age above 50 or below 46, and list in descending by the Y.",
            "Show the number of the countries that have managers of age above 50 or below 46, and could you show from high to low by the total number?",
            "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, could you rank the number of country from high to low order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 2
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Visualize a bar chart for what are the nationalities and their average ages of journalists?",
            "A bar chart about what are the nationalities and their average ages of journalists?",
            "What are the nationalities and their average ages of journalists. Show me a bar chart.",
            "Draw a bar chart of nationality versus the average of age"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 34.22222222222222
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, I want to order in descending by the X-axis please.",
            "Give me a group line chart showing the number of documents in different ending date The x-axis is ending date and group by location code, show by the x axis in desc.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, could you sort in descending by the Date_in_Locaton_To please?",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code, order by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 2,
                        "classify": "x"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "MATCH"
        ],
        "db_id": "city_record",
        "nl_queries": [
            "Find the number of matches in different competitions. Visualize by bar chart.",
            "For each competition, count the number of matches.",
            "Bar chart x axis competition y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1994 FIFA World Cup qualification",
                        "y_data": 4
                    },
                    {
                        "x_data": "2002 FIFA World Cup qualification",
                        "y_data": 1
                    },
                    {
                        "x_data": "Friendly match",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the maximum capacity among rooms in each building with a bar chart.",
            "What is the greatest capacity for rooms in each building? Draw a bar chart.",
            "Bar chart x axis building y axis maximal capacity"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alumni",
                        "y_data": 47
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 11
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 65
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    },
                    {
                        "x_data": "Main",
                        "y_data": 30
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Power",
                        "y_data": 12
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 109
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 115
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each office? Show me a bar chart, could you show by the x-axis in desc please?",
            "Show the number of courses for each office in a bar chart, and could you display X-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KLR 300",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 3
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Group and count details for the events using a bar chart, show by the Y-axis in desc.",
            "Compare how many events by different event details using a bar chart, and list by the Y-axis in desc.",
            "Bar chart x axis event details y axis how many event details, sort Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 9
                    },
                    {
                        "x_data": "Success",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, order in desc by the y-axis.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and display in desc by the Y.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id, could you sort in desc by the y-axis please?",
            "For those employees who was hired before 2002-06-21, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, rank by the Y in descending.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, display in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.33333333333333
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer",
            "concert"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "List all singer names in concerts in year 2014, and count them by a bar chart, could you display by the names from low to high?",
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, display X-axis in ascending order.",
            "What are the number of the names of the singers who performed in a concert in 2014?, display X-axis in ascending order.",
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, and display bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John Nizinik",
                        "y_data": 1
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a bar chart for simply displaying the email address of the employee and the corresponding employee id.",
            "Show employee_id from each email"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SKING",
                        "y_data": 100
                    },
                    {
                        "x_data": "AHUNOLD",
                        "y_data": 103
                    },
                    {
                        "x_data": "NGREENBE",
                        "y_data": 108
                    },
                    {
                        "x_data": "DRAPHEAL",
                        "y_data": 114
                    },
                    {
                        "x_data": "AFRIPP",
                        "y_data": 121
                    },
                    {
                        "x_data": "JRUSSEL",
                        "y_data": 145
                    },
                    {
                        "x_data": "JWHALEN",
                        "y_data": 200
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 201
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 203
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 204
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show all ministers who do not belong to Progress Party, and count them by a bar chart, sort by the x-axis from high to low.",
            "Which ministers are not a part of the Progress Party, and count them by a bar chart, and I want to order by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the trend about Employee_ID over Start_from , sort in descending by the X please.",
            "Plot start from by employee_id as a line chart, and show x-axis in descending order.",
            "Show me the trend about Employee_ID over Start_from with a line chart, and show X-axis in desc order.",
            "Show me about the change of Employee_ID over Start_from in a line chart, order x axis in descending order please.",
            "A line chart shows the trend of Employee_ID over Start_from , and show X-axis in desc order.",
            "Visualize a line chart about the change of Employee_ID over Start_from , and show from high to low by the x axis.",
            "Draw a line chart about the change of Employee_ID over Start_from , show X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 7
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Employee_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of Team_Name and School_ID in a bar chart.",
            "Visualize a bar chart about the distribution of Team_Name and School_ID .",
            "A bar chart shows the distribution of Team_Name and School_ID .",
            "Give me the comparison about School_ID over the Team_Name .",
            "Return a bar chart about the distribution of Team_Name and School_ID .",
            "Bar chart x axis team name y axis school_id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 4
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the party and the number of drivers in each party with a bar chart, and order from low to high by the bars.",
            "Show the party and the number of drivers in each party Plot them as bar chart, and order in asc by the X-axis please.",
            "Create a bar chart showing the total number across party, and show in asc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dem",
                        "y_data": 10
                    },
                    {
                        "x_data": "Rep",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and manager_id , sort FIRST_NAME in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and manager_id , and order by the FIRST_NAME in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the first_name , could you display by the names from high to low?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and manager_id , and order by the FIRST_NAME in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and manager_id in a bar chart, and show by the x-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 205
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 149
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and salary in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and salary ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kimberely",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "William",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a scatter chart about the correlation between School_ID and All_Games_Percent .",
            "Show me about the correlation between School_ID and All_Games_Percent in a scatter chart.",
            "A scatter chart shows the correlation between School_ID and All_Games_Percent .",
            "Draw a scatter chart about the correlation between School_ID and All_Games_Percent .",
            "What is the relationship between School_ID and All_Games_Percent ?",
            "Show me a scatter plot of school id and all_games_percent for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.946
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.706
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and could you list by the X in descending please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and could you list by the X in descending please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id, and rank from high to low by the names.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, rank from high to low by the names.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, could you rank bars in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "locations"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a bar chart to compare the number of state provinces located in different cities, show from low to high by the bar.",
            "Group and count the state province attribute of the location table to visualize a bar chart, and could you show bar from low to high order?",
            "Create a bar chart showing the number of state province across state province, show from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bavaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "California",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oxford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Texas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Washington",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STATE_PROVINCE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STATE_PROVINCE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Count the last year of parties with theme \"Spring\" or \"Teqnology\" with a bar grpah.",
            "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Count the last year for a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Last_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Last_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Return a bar chart showing the total number of ships' nationalities.",
            "Show me the comparison of the total number of all ships' nationalities with a bar graph.",
            "What is the total number of different nationalities of all ships? Give me a bar graph.",
            "Bar graph to show how many nationality from different nationality"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United Kingdom",
                        "y_data": 5
                    },
                    {
                        "x_data": "United States",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Give me a pie chart showing the number of engineers for different skill description, display by the total number in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV, Video",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 6
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the average price of each film in a bar chart, sort in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the relationship between minimum product price and maximum product price in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 939.57,
                        "y_data": 408.82
                    },
                    {
                        "x_data": 971.44,
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "race",
            "track"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Show the name of track and the number of races in each track by a bar chart, and I want to rank by the bars in descending.",
            "Show the name of track and the number of races in each track Visualize by bar chart, order in desc by the Name.",
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and could you rank by the x-axis in descending?",
            "Return a histogram on what are the names of different tracks, and how many races has each had?, and sort by the Name from high to low.",
            "What are the names of different tracks, and how many races has each had Plot them as bar chart, display by the bar from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Martinsville Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kansas Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Homestead-Miami Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Daytona International Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicagoland Speedway",
                        "y_data": 2
                    },
                    {
                        "x_data": "Auto Club Speedway",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "List each language and the number of TV Channels using it in a bar chart.",
            "List each language and the number of TV Channels using it. Visualize by bar chart.",
            "For each language, list the number of TV Channels that use it. Plot them as bar chart.",
            "Bar chart of the total number from each language"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italian",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents are created in each day? Bin the document date by year interval and group by document type with a group line chart.",
            "Show the number of documents created in each day and bin document date by year interval and group by document type with a group line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 6,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 5,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 2,
                        "classify": "Book"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 3,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 6,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 6,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 2,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 3,
                        "classify": "CV"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 1,
                        "classify": "CV"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 3,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 6,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 6,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 2,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 3,
                        "classify": "Film"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 2,
                        "classify": "Film"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 3,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 8,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 6,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 4,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 4,
                        "classify": "Paper"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes",
            "Students"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart for finding the number of the dates of assessment notes for students with first name \"Fanny\", and sort Y-axis in descending order.",
            "Find the dates of assessment notes for students with first name \"Fanny\", and count them by a bar chart, and I want to sort from high to low by the Y please.",
            "Find the number of the dates of assessment notes for students with first name \"Fanny\", I want to sort from high to low by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_notes",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_notes)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, show Y in ascending order.",
            "Create a bar chart showing the total number across builder, and I want to show Y from low to high order.",
            "Show different builders of railways, along with the corresponding number of railways using each builder Show bar chart, and order in asc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avonside",
                        "y_data": 1
                    },
                    {
                        "x_data": "GER Hartford",
                        "y_data": 1
                    },
                    {
                        "x_data": "GER Stratford",
                        "y_data": 1
                    },
                    {
                        "x_data": "GNR Doncaster",
                        "y_data": 1
                    },
                    {
                        "x_data": "MR Derby",
                        "y_data": 1
                    },
                    {
                        "x_data": "SECR Ashford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stephenson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Swindon Works",
                        "y_data": 1
                    },
                    {
                        "x_data": "GWR Swindon",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Builder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each semester with a pie chart.",
            "How many courses are in the Psychology department for each semester? Return a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fall",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spring",
                        "y_data": 9
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(semester)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "semester"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Return a histogram on what are the names and prices of all products in the store?, show bars in desc order please.",
            "Return a bar chart on what are the names and prices of all products in the store?, and order names in desc order.",
            "Bar chart of mean price from each name, order names in desc order.",
            "What are the names and prices of all products in the store Plot them as bar chart, I want to order X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 165
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member_attendance",
            "member",
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "A pie chart for showing the number of the dates of performances with attending members whose roles are \"Violin\".",
            "Show the number of the dates of performances with attending members whose roles are \"Violin\".",
            "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "February 11",
                        "y_data": 1
                    },
                    {
                        "x_data": "February 2",
                        "y_data": 2
                    },
                    {
                        "x_data": "February 5",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and display from low to high by the y axis.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of salary bin hire_date by weekday in a bar chart, display from low to high by the y axis.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by weekday, and rank mean salary from low to high order please.",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart, list in ascending by the total number please.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, display mean salary in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 3280
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4933.333333333333
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6357.142857142857
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6525
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6620
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7590.909090909091
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 7733.333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of customers that use email as the contact channel for each weekday. Visualize with a bar chart.",
            "Return a bar chart showing how many customers whose contact channel code is email for each weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, display from low to high by the y axis please.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, order by the y-axis from low to high.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, could you order by the total number of manager id from low to high?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, could you rank total number of manager id in ascending order please?",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, and order by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 200
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 308
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 342
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 432
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1098
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1911
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player",
            "team"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "A pie chart groups and counts the years played for players from team \"Columbus Crew\"."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played"
                }
            }
        }
    },
    {
        "tables_used": [
            "company",
            "station_company)"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "How many companies without a gas station in each main industry? Draw a bar chart, order y axis in descending order.",
            "Show the number of companies without a gas station in each main industry with a bar chart, display by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 3
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart, rank by the Y in desc.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday, rank in descending by the y axis.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, show by the the average of manager id in descending.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart, and could you show Y in descending order?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, display Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 133
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 127.11111111111111
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 126.57142857142857
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 125
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 121.2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 119.2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 105.63636363636364
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, could you order x axis in asc order?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and I want to rank from low to high by the x axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and I want to rank from low to high by the x axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name, could you show by the Name in ascending please?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of code , and group by attribute name, and could you show by the Name in ascending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 8.5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show me mean age by born state in a histogram, and list names in desc order.",
            "Show the average age of heads of departments born in each state with a bar chart, list by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Florida",
                        "y_data": 50
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 53
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 55
                    },
                    {
                        "x_data": "California",
                        "y_data": 61.25
                    },
                    {
                        "x_data": "Alabama",
                        "y_data": 68
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SALES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, and sort names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "y",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 2
                    },
                    {
                        "x_data": "p",
                        "y_data": 2
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "f",
                        "y_data": 1
                    },
                    {
                        "x_data": "e",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "sales_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(sales_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Transaction_Types",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, and order by the x axis in descending.",
            "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval Show the result with a grouping line chart, and could you sort from high to low by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001~2002",
                        "y_data": 1,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "1977~1979",
                        "y_data": 2,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 2,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "1977~1979",
                        "y_data": 2,
                        "classify": "Sale"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of rooms with price higher than 120 for different decor. Show bar chart.",
            "Give me a histogram for how many rooms cost more than 120, for each different decor?",
            "Visualize a bar chart for how many rooms cost more than 120, for each different decor?",
            "How many rooms cost more than 120, for each different decor. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 2
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 2
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each cinema, show the price and group them by film title in a stacked bar chart, could you display by the Price in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 9,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 15,
                        "classify": "Oriel"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "count services by services, and split by local authorities with a stacked bar chart, and could you sort bars from high to low order?",
            "Stack bar chart of the number of local authority vs services based on local authority, and show by the x-axis in desc please.",
            "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, display from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 1,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 1,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 2,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "c2c"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Plot meter_100 by grouped by meter 300 as a bar graph, I want to show Y from low to high order.",
            "Find meter_300 and meter_100 , and visualize them by a bar chart, and list meter_100 in asc order.",
            "Visualize a bar chart about the distribution of meter_300 and meter_100 , list total number in ascending order.",
            "Give me the comparison about meter_100 over the meter_300 by a bar chart, and show from low to high by the Y please.",
            "Give me the comparison about meter_100 over the meter_300 , and list meter_100 in asc order.",
            "Show me about the distribution of meter_300 and meter_100 in a bar chart, and I want to show Y from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:53.46",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "2:55.94",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "2:56.02",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "2:56.95",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:57.10",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:55.90",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "2:56.04",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "2:56.64",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_300",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "what is the number of wins the team Boston Red Stockings got in the postseasons each year in history?, and display X from low to high order.",
            "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history Show the tendency, and list from low to high by the X.",
            "Show me the trend about what is the number of wins the team Boston Red Stockings got in the postseasons each year in history?, and list from low to high by the X.",
            "For each year, return the year and the number of times the team Boston Red Stockings won in the postseasons Visualize by line chart, and sort by the year from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1912-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1915-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1916-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1918-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1986-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1999-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 15
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 15
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 15
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester, could you list x axis in desc order?",
            "I want to see trend the total number over year by semester, and show from high to low by the X-axis.",
            "Find the number of courses provided in each year with a group line chart that groups by semester, and order from high to low by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010-01-01",
                        "y_data": 5,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 7,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 8,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 4,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 3,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 9,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 9,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 5,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 3,
                        "classify": "Spring"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "wedding)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show the name and age for all male people who don't have a wedding with a bar chart.",
            "A bar chart about the name and age for all male people who don't have a wedding."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Graeme McDowell",
                        "y_data": 34
                    },
                    {
                        "x_data": "Adam Scott",
                        "y_data": 26
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Find the name and training hours of players whose hours are below 1500 Show bar chart, show pName in asc order.",
            "What are the names and number of hours spent training for each player who trains for less than 1500 hours Visualize by bar chart, and list in ascending by the names.",
            "A bar chart about what are the names and number of hours spent training for each player who trains for less than 1500 hours?, show pName in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andrew",
                        "y_data": 1200
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 300
                    },
                    {
                        "x_data": "Eddie",
                        "y_data": 600
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "HS"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and display bars in asc order please.",
            "Show me about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road in a bar chart, and list x-axis in ascending order.",
            "Return a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, and show in ascending by the x axis.",
            "Give me the comparison about the amount of ACC_Road over the ACC_Road , and group by attribute ACC_Road, list in asc by the X-axis.",
            "Bar chart x axis acc road y axis how many acc road, and list x-axis in asc order please.",
            "Visualize a bar chart about the distribution of ACC_Road and the amount of ACC_Road , and group by attribute ACC_Road, display bars in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 2
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(ACC_Road)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Bar chart of the number of position from each position, list by the names in desc.",
            "Can you draw a bar chart to show the number of positions of the pilots?, list in desc by the X please.",
            "Please compare the frequency of the position of the pilots using a bar chart, and could you order by the bars from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Forward-Center Team",
                        "y_data": 1
                    },
                    {
                        "x_data": "Forward Team",
                        "y_data": 1
                    },
                    {
                        "x_data": "Center Team",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, and I want to list in ascending by the Y-axis.",
            "Show the director and their lowest rating among all movies in a bar chart, display by the stars in asc.",
            "Compare the lowest rating among all movies by each director using a bar chart, and could you list Y-axis in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time, and could you list by the y-axis in asc?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart, could you list by the y-axis in asc?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and could you display in ascending by the y-axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart, I want to rank by the Y-axis in asc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and rank in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 46.12903225806452
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 50.689655172413794
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "June",
                        "y_data": 83.57142857142857
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "constructors",
            "constructorstandings"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "A pie chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?",
            "A pie chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a pie chart",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honda",
                        "y_data": 45
                    },
                    {
                        "x_data": "Toyota",
                        "y_data": 95
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Give me a histogram for what are the names and total prices of all products in the store?",
            "Visualize a bar chart for what are the names and the total prices of all products in the store?",
            "What are the names and the accumulated prices of all products in the store. Plot them as a bar chart.",
            "Give me a bar chart for sum price of each name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "A scatter chart shows the correlation between School_ID and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "What is the relationship between School_ID and All_Games_Percent , and group by attribute ACC_Regular_Season?",
            "Draw a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Show me about the correlation between School_ID and All_Games_Percent , and group by attribute ACC_Regular_Season in a scatter chart.",
            "Show school id vs all_games_percent as scatter plot use a different color for each ACC_Regular_Season"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.706,
                        "classify": "10\u20136"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "13\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.6,
                        "classify": "9\u20137"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, rank JOB_ID in descending order.",
            "For those employees who did not have any job in the past, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and rank x-axis in descending order.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to sort by the bar in desc.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and rank JOB_ID in descending order.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of salary , and group by attribute job_id, and rank x-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7125
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8341.379310344828
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize the relationship between commission_pct and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a scatter chart about the correlation between commission_pct and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, what is the relationship between commission_pct and department_id ?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between commission_pct and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between commission_pct and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0.4,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 0
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 10
                    },
                    {
                        "x_data": 0,
                        "y_data": 20
                    },
                    {
                        "x_data": 0,
                        "y_data": 20
                    },
                    {
                        "x_data": 0,
                        "y_data": 70
                    },
                    {
                        "x_data": 0,
                        "y_data": 110
                    },
                    {
                        "x_data": 0,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of department_id , and group by attribute job_id in a bar chart, display in ascending by the X.",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, could you order in ascending by the X-axis please?",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, and could you sort in ascending by the bars?",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and display in ascending by the X.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and show by the bar in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.24137931034483
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "elimination"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "Visualize a bar chart for what is the number of their teams in elimination?, and display y-axis in descending order.",
            "Show the number of teams in elimination in a bar chart, and order in desc by the total number.",
            "What is the number of their teams in elimination? Draw a bar chart, and I want to list by the y-axis from high to low.",
            "Create a bar chart showing how many team across team, could you sort in desc by the the number of team please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Team Batista",
                        "y_data": 4
                    },
                    {
                        "x_data": "Team Orton",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "How many different products are produced in each headquarter city Visualize by bar chart, I want to list by the y axis in descending.",
            "Draw a bar chart for how many different products are produced in each headquarter city?, and display from high to low by the name).",
            "Find the number of different products that are produced by companies at different headquarter cities Plot them as bar chart, and could you order by the Y-axis in desc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T1.name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1979~1981",
                        "y_data": 2
                    },
                    {
                        "x_data": "1982~1984",
                        "y_data": 1
                    },
                    {
                        "x_data": "1985~1987",
                        "y_data": 0
                    },
                    {
                        "x_data": "1988~1990",
                        "y_data": 1
                    },
                    {
                        "x_data": "1991~1993",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994~1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1997~1999",
                        "y_data": 0
                    },
                    {
                        "x_data": "2000~2002",
                        "y_data": 2
                    },
                    {
                        "x_data": "2003~2004",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the number of heads of departments born in each state with a bar chart, and rank in ascending by the names.",
            "Show me the number of born state by born state in a histogram, order by the born_state from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alabama",
                        "y_data": 2
                    },
                    {
                        "x_data": "California",
                        "y_data": 4
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 2
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 1
                    },
                    {
                        "x_data": "Florida",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(born_state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, could you order by the total number from low to high?",
            "Bar chart x axis nationality y axis how many nationality, could you list by the y axis in ascending?",
            "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list Y-axis in asc order.",
            "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and show by the how many nationality from low to high.",
            "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, could you list by the y axis in ascending?",
            "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and list Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the relationship between minimum and maximum gpa of all students in each department with a scatter chart grouping by department code.",
            "What is the relationship between lowest and highest student GPA for every department? Give me a scatter chart grouping by department code.",
            "Show max(stu gpa) vs minimal stu gpa as scatter plot use a different color for each DEPT_CODE"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3.15,
                        "y_data": 2.26,
                        "classify": "ACCT"
                    },
                    {
                        "x_data": 2.84,
                        "y_data": 2.84,
                        "classify": "BIOL"
                    },
                    {
                        "x_data": 3.27,
                        "y_data": 3.09,
                        "classify": "CIS"
                    },
                    {
                        "x_data": 3.87,
                        "y_data": 3.87,
                        "classify": "EDU"
                    },
                    {
                        "x_data": 2.11,
                        "y_data": 2.11,
                        "classify": "ENGL"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute All_Neutral.",
            "Return a scatter chart about the correlation between School_ID and All_Games_Percent , and group by attribute All_Neutral.",
            "What is the relationship between School_ID and All_Games_Percent , and group by attribute All_Neutral?",
            "Visualize the relationship between School_ID and All_Games_Percent , and group by attribute All_Neutral.",
            "A scatter chart shows the correlation between School_ID and All_Games_Percent , and group by attribute All_Neutral.",
            "Draw a scatterplot of school id vs all_games_percent where school id is on the x-axis and points are colored by All_Neutral"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 0.6,
                        "classify": "3\u20133"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.706,
                        "classify": "4\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "5\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "9\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "What is the number of platforms for each location? Show the comparison with a bar chart, and show from low to high by the X.",
            "Give me a bar chart about the number of platforms in different locations, rank from low to high by the bars.",
            "Create a bar chart showing total number of number of platforms across location, rank from low to high by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "London",
                        "y_data": 140
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Number_of_Platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Return the number of the countries of the mountains that have a height larger than 5000, display from high to low by the bar.",
            "What are the countries of mountains with height bigger than 5000, and count them by a bar chart, and display from high to low by the x axis please.",
            "What are the number of the countries of mountains with height bigger than 5000?, and sort names from high to low order.",
            "A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, list in desc by the X.",
            "A bar chart for what are the number of the countries of mountains with height bigger than 5000?, could you show in descending by the Country?",
            "Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, display X in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tanzania",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 1
                    },
                    {
                        "x_data": "DR Congo Uganda",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game",
            "stadium",
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many players having an injury of 'Foot injury' or 'Knee problem' in each season? Draw a bar chart, and could you order from high to low by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, I want to display by the X-axis in desc.",
            "Please show the trend about the number of days with max temperature reaches 80 change over dates, and could you display x axis from high to low order please?",
            "Please show the trend about the number of days with max temperature reaches 80 change over dates, order x axis from high to low order.",
            "For those dates with a max temperature greater than or equal to 80, I would like a line chart to show the tendency, I want to list x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-08-31",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-08-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-28",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-26",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-08-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-17",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-16",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-13",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-12",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-08-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-07-30",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-07-29",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-07-28",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-20",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-07-19",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-17",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-16",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-07-15",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-07-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-03",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-07-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-06-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-25",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-06-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-13",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-06-12",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-06-11",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-09",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-06-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-04-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-04-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-04-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-04-16",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-03-26",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-02-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-08",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-10-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-03",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-02",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-09-24",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-09-18",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-09-17",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-09-16",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-09-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-09-12",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-09-11",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-09-10",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-09-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-09-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-08-31",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-08-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-08-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-08-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-27",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-08-22",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-08-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-17",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-06",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-08-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-31",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-30",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-07-29",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-07-26",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-07-25",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-07-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-07-16",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-15",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-14",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-07-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-07",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-07-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-05",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-07-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-29",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-20",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-18",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-17",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-09",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-05-29",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-26",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-25",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-05-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-05-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-04-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-04-29",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-04-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-04-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-04-08",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-04-07",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-03-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-03-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-10-17",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-10-16",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-15",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-10-07",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-10-04",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-09-28",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-23",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-19",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-18",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-16",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-10",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-09",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-08",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-09-07",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-05",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-03",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-08-31",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-08-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-08-29",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me a bar chart for what are the department names and how many employees work in each of them?, rank y axis from high to low order please.",
            "What are the department names and how many employees work in each of them Visualize by bar chart, rank y axis from high to low order please.",
            "Draw a bar chart for what are the department names and how many employees work in each of them?, and display Y in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shipping",
                        "y_data": 45
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 34
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 6
                    },
                    {
                        "x_data": "IT",
                        "y_data": 5
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 2
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 1
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Group by the theme and count the year with a stacked bar chart.",
            "Stacked bar of year and the number of year colored by Theme"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Summer"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average, could you show by the Y-axis in ascending?",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, and display the number of date claim made in ascending order please.",
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart, order by the Y-axis in asc.",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, and order by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Tell me the trend about the claim dates using a trend line, and sort by the Date_Claim_Settled in desc.",
            "Show the trend about the frequency of the claim dates, and I want to order in desc by the X.",
            "Plot date claim settled by the number of date claim settled as a line chart, and I want to order in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-02-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-06",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Settled",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Settled)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sportsinfo"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Bar chart x axis sportname y axis the total number, rank X-axis from high to low order please.",
            "How many students play each sport Show bar chart, sort bars in descending order.",
            "Show all sport name and the number of students Show bar chart, rank by the X from high to low.",
            "Give me a histogram for how many students play each sport?, and sort bars in descending order.",
            "Visualize a bar chart for how many students play each sport?, and sort bars in descending order.",
            "Show all sport name and the number of students in a bar chart, and sort bars in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tennis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Swimming",
                        "y_data": 1
                    },
                    {
                        "x_data": "Soccer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lacrosse",
                        "y_data": 3
                    },
                    {
                        "x_data": "Football",
                        "y_data": 2
                    },
                    {
                        "x_data": "Curling",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cricket",
                        "y_data": 1
                    },
                    {
                        "x_data": "Basketball",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baseball",
                        "y_data": 1
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SportName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "users"
        ],
        "db_id": "document_management",
        "nl_queries": [
            "Find the number of users in each role. Plot them as bar chart.",
            "what are the different role codes for users, and how many users have each?",
            "Return a histogram on what are the different role codes for users, and how many users have each?",
            "What are the different role codes for users, and how many users have each. Show bar chart.",
            "Bar graph to show the total number from different role code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DBA",
                        "y_data": 8
                    },
                    {
                        "x_data": "PROJ-MGR",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CAR_MAKERS",
            "MODEL_LIST"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Draw a bar chart for what are the names and ids of all makers with more than 3 models?, list y axis in asc order.",
            "What are the names and ids of all makers with more than 3 models, I want to list Y in ascending order.",
            "Show me a bar chart for what are the names and ids of all makers with more than 3 models?, and show by the Id from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "General Motors",
                        "y_data": 4
                    },
                    {
                        "x_data": "Chrysler",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FullName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy",
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergy type with number of students affected with a bar chart.",
            "Show all allergy type with number of students affected. Visualize by bar chart.",
            "A bar chart about how many students are affected by each allergy type?",
            "Draw a bar chart for how many students are affected by each allergy type?",
            "How many students are affected by each allergy type. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 8
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 23
                    },
                    {
                        "x_data": "food",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "List the number of items by the details of the organization that owns it using a bar chart.",
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 10
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 83.75
                    },
                    {
                        "x_data": "July",
                        "y_data": 44.666666666666664
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 56.666666666666664
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "book_club"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show the number of books for each year in descending order by year and visualize in a bar chart.",
            "What are the number of books for each year, ordered by year descending? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1989-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1990-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Give me line charts of worldwide gross the number of season over year season by major genres Away_team, I want to display X in descending order please.",
            "List the number of games in each season and group by away team in a group line chart, could you sort x-axis in desc order?",
            "List the number of games in each season and group by away team in a group line chart, and sort in descending by the Season.",
            "Give me line charts of worldwide gross the number of season over year season by major genres Away_team, and order Season from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 2,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 2,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 3,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 2,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition_record",
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the attendance by date with a bar chart, and could you show by the bars in desc?",
            "Find dates and attendance for exhibitions that happened in 2004, show me the comparison of attendance by date, list names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "December 7",
                        "y_data": 2983
                    },
                    {
                        "x_data": "December 5",
                        "y_data": 1098
                    },
                    {
                        "x_data": "December 2",
                        "y_data": 965
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Attendance"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "What is the proportion of the different types of codes of products?",
            "A pie chart shows the proportion of different product type codes.",
            "I want to know the proportion of the total number for each product type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Books",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Food",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Type_Code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Show the relationship between average age and minimum age in a scatter chart.",
            "Scatter plot to show avg(age) on x axis and minimal age on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 22,
                        "y_data": 18
                    },
                    {
                        "x_data": 17,
                        "y_data": 17
                    },
                    {
                        "x_data": 19.33333333333333,
                        "y_data": 18
                    },
                    {
                        "x_data": 17.5,
                        "y_data": 17
                    },
                    {
                        "x_data": 19.8,
                        "y_data": 18
                    },
                    {
                        "x_data": 19.666666666666668,
                        "y_data": 16
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Faculty_participates_in"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "A bar chart showing the first name of all the faculty members who participated in some activity, together with the number of activities they participated in, and could you sort in ascending by the x axis?",
            "What is the first name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in with a bar chart, list in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 2
                    },
                    {
                        "x_data": "Daniel",
                        "y_data": 3
                    },
                    {
                        "x_data": "David",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ellie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joanne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lawrence",
                        "y_data": 2
                    },
                    {
                        "x_data": "Leslie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Luigi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 3
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 2
                    },
                    {
                        "x_data": "Scott",
                        "y_data": 3
                    },
                    {
                        "x_data": "Stacey",
                        "y_data": 3
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 2
                    },
                    {
                        "x_data": "Yair",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway",
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show id and location of railways that are associated with more than one train with a pie chart.",
            "Show id and location of railways that are associated with more than one train. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bressingham",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Railway_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "Give me a bar graph for what is the total number of last names of all candidates?, I want to show from high to low by the how many last name.",
            "what is the total number of last names of all candidates?, and show Y-axis in desc order.",
            "Bar graph to show the number of last name from different last name, I want to order Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hartmann",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wintheiser",
                        "y_data": 1
                    },
                    {
                        "x_data": "Senger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feest",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bednar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bartoletti",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin. Visualize the result using a trend line.",
            "Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin. What is the trend?",
            "Plot date of transaction by mean share count as a trend line"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 3170
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 827382.5
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 1669
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 8718572
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1522
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 93191
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 212687
                    },
                    {
                        "x_data": "2004",
                        "y_data": 96178
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is falut short name and group by skill description, and I want to show from low to high by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 3,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 4,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_short_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_short_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name , could you order by the EMPLOYEE_ID in descending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and employee_id , and visualize them by a bar chart, show from high to low by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name by a bar chart, could you display from high to low by the Y-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and employee_id , and could you list in descending by the y-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and employee_id , could you display in desc by the EMPLOYEE_ID?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gietz",
                        "y_data": 206
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 202
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 178
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Please give me a bar chart that counts the number of grape of wine.",
            "What is the number of different grapes of each wine? Show me a bar chart.",
            "Give me a bar chart for how many grape of each grape"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Barbera",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cabernet Franc",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 68
                    },
                    {
                        "x_data": "Chardonnay",
                        "y_data": 104
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 10
                    },
                    {
                        "x_data": "Malbec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marsanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Merlot",
                        "y_data": 10
                    },
                    {
                        "x_data": "Petite Sirah",
                        "y_data": 6
                    },
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 109
                    },
                    {
                        "x_data": "Roussanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sangiovese",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sauvignon Blanc",
                        "y_data": 46
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 61
                    },
                    {
                        "x_data": "Tempranillo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Viognier",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zinfandel",
                        "y_data": 78
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Grape)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , and list Team_Name from low to high order.",
            "Return a bar chart about the distribution of Team_Name and All_Games_Percent , display from low to high by the x-axis.",
            "Find Team_Name and All_Games_Percent , and visualize them by a bar chart, display by the x axis in asc.",
            "Give me the comparison about All_Games_Percent over the Team_Name , and order from low to high by the Team_Name.",
            "Draw a bar chart about the distribution of Team_Name and All_Games_Percent , list Team_Name from low to high order.",
            "Give me a bar chart for all_games_percent of each team name, and list Team_Name from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clemson",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates with a maximum temperature higher than 85?",
            "A bar chart for giveing me the number of the dates when the max temperature was higher than 85.",
            "What are the dates with a maximum temperature higher than 85, and count them by a bar chart",
            "Give me the number of the dates when the max temperature was higher than 85.",
            "A bar chart for what are the number of the dates with a maximum temperature higher than 85?",
            "Give me the dates when the max temperature was higher than 85, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 32
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 20
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 21
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 31
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 24
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 23
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show the number of documents for each document name in a bar chart, order by the Y-axis from high to low.",
            "What is the number of documents for each document name? Return a bar chart, display by the the total number in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Customer reviews",
                        "y_data": 3
                    },
                    {
                        "x_data": "Welcome to NY",
                        "y_data": 2
                    },
                    {
                        "x_data": "How to write a CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "A history of Arts",
                        "y_data": 2
                    },
                    {
                        "x_data": "Summer Show",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palm reading",
                        "y_data": 1
                    },
                    {
                        "x_data": "Learning French",
                        "y_data": 1
                    },
                    {
                        "x_data": "How Google people work",
                        "y_data": 1
                    },
                    {
                        "x_data": "Do not panic",
                        "y_data": 1
                    },
                    {
                        "x_data": "About Korea",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professionals",
            "Treatments",
            "Treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of professionals in a bar chart that groups by professional's first name.",
            "Show how many professionals in a bar chart grouping by professional's first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monte",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vernice",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Return a scatter chart showing the relationship between major id and maximum age.",
            "Plot a scatter chart, major by maximal age."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 50,
                        "y_data": 26
                    },
                    {
                        "x_data": 100,
                        "y_data": 17
                    },
                    {
                        "x_data": 520,
                        "y_data": 22
                    },
                    {
                        "x_data": 540,
                        "y_data": 18
                    },
                    {
                        "x_data": 550,
                        "y_data": 21
                    },
                    {
                        "x_data": 600,
                        "y_data": 27
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Major"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "A bar chart for what are the number of the descriptions for the aircrafts?, and show by the Description in descending.",
            "A bar chart for listing the number of the description of all aircrafts, and I want to rank X in desc order.",
            "What are the descriptions for the aircrafts, and count them by a bar chart, I want to display in descending by the names.",
            "List the description of all aircrafts, and count them by a bar chart, and I want to display in descending by the names.",
            "What are the number of the descriptions for the aircrafts?, and could you list in descending by the Description?",
            "Draw a bar chart of description versus the number of description, show by the x-axis in descending.",
            "List the number of the description of all aircrafts, show by the Description in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Turboshaft utility helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tandem rotor helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Light utility helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Heavy-lift helicopter",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Show the smallest enrollment of each state, and show in asc by the X please.",
            "Show the smallest enrollment of each state using a bar chart, order in ascending by the X-axis.",
            "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, show by the X from low to high.",
            "Show minimal enr from each state, and could you show by the x-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LA",
                        "y_data": 18000
                    },
                    {
                        "x_data": "OK",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and manager_id in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of job_id and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the job_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 149
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give me a bar chart showing the number of products supplied by supplier id 3 for different product type code, and order bar from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 1
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "what is the average base price of different bed type? List bed type and average base price.",
            "Return a bar chart on what is the average base price of different bed type? List bed type and average base price.",
            "What is the average base price of different bed type? List bed type and average base price. Plot them as bar chart.",
            "For each bed type, find the average base price of different bed type. Show bar chart.",
            "For each bed type, find the average room price. Show bar chart.",
            "Return a bar chart on what is the average base price of rooms, for each bed type?",
            "Draw a bar chart for what is the average base price of rooms, for each bed type?",
            "What is the average base price of rooms, for each bed type. Plot them as bar chart.",
            "Show me the average of baseprice by bedtype in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 100
                    },
                    {
                        "x_data": "King",
                        "y_data": 181.25
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "A bar chart about what are the names of the high schoolers and how many friends does each have?, and display Y-axis in descending order please.",
            "Show the names of high school students and their corresponding number of friends in a bar chart, and show by the Y-axis in desc.",
            "Show the names of high school students and their corresponding number of friends Plot them as bar chart, display Y-axis in descending order please.",
            "What are the names of the high schoolers and how many friends does each have Show bar chart, and show by the y axis in desc.",
            "Display a bar chart for what are the names of the high schoolers and how many friends does each have?, and display Y-axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, show by the Y from low to high.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday, and order y-axis in ascending order.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and sort by the sum department id in ascending please.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart, sort by the sum department id in ascending please.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and could you display by the sum department id in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 230
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 260
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 360
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 470
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 530
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 540
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 670
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, give me the comparison about price over the name by a bar chart, order by the x axis in ascending.",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and price , sort in ascending by the X-axis please.",
            "For those products with a price between 60 and 120, find name and price , and visualize them by a bar chart, and sort in ascending by the X-axis please.",
            "For those products with a price between 60 and 120, give me the comparison about price over the name , and I want to display bars in asc order.",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and price , I want to display bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "teaches",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "List the number of instructors for each course in year 2008 with a bar chart.",
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Animal Behavior",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 2
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marine Mammals",
                        "y_data": 1
                    },
                    {
                        "x_data": "Networking",
                        "y_data": 1
                    },
                    {
                        "x_data": "Race Car Driving",
                        "y_data": 1
                    },
                    {
                        "x_data": "Surfing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Transaction Processing",
                        "y_data": 1
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate"
        ],
        "db_id": "debate",
        "nl_queries": [
            "How many debates are held for each venue? Show a pie chart.",
            "Create a pie chart showing the number of venue across venue."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doha , Qatar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all the actual delivery dates and bin by year in a line chart.",
            "Can you draw the trend of the number of actual delivery date over the actual delivery date?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1971~1975",
                        "y_data": 1
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 5
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 3
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 2
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 1
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2016",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Actual_Delivery_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Actual_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the average age of all students living in the each city Show bar chart, sort X from low to high order.",
            "Draw a bar chart for what is the average age for each city and what are those cities?, and sort by the X-axis from low to high.",
            "What is the average age for each city and what are those cities Show bar chart, could you show bars in asc order?",
            "Bar chart of mean age from each city code, could you show bars in asc order?",
            "A bar chart about what is the average age for each city and what are those cities?, rank in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, show total number in ascending order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, and sort by the total number in asc.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, display in ascending by the total number.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, I want to sort by the sum department id from low to high.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id, and I want to show by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 90
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 180
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 400
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1040
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "courses"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "For all course_name from courses table, group by the course name and count them with a bar chart, and list by the the number of course name from low to high.",
            "Bar chart of the number of course name from each course name, and I want to show y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "data structure",
                        "y_data": 1
                    },
                    {
                        "x_data": "English",
                        "y_data": 2
                    },
                    {
                        "x_data": "French",
                        "y_data": 2
                    },
                    {
                        "x_data": "statistics",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(course_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Return a pie chart showing sum of price for each film."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 36
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Show the country names and the corresponding number of players in a bar chart.",
            "Show the country names and the corresponding number of players. Show bar chart.",
            "Visualize a bar chart for how many players are from each country?",
            "Show me a bar chart for how many players are from each country?",
            "How many players are from each country. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Indonesia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 4
                    },
                    {
                        "x_data": "Isle of Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "United States",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the relationship between account id and name for all accounts in a scatter chart.",
            "What is the relationship between account id and name for all accounts? Return a scatter chart.",
            "Show me a scatter plot of account id and account_name for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 900
                    },
                    {
                        "x_data": 2,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 323
                    },
                    {
                        "x_data": 4,
                        "y_data": 390
                    },
                    {
                        "x_data": 5,
                        "y_data": 935
                    },
                    {
                        "x_data": 6,
                        "y_data": 371
                    },
                    {
                        "x_data": 7,
                        "y_data": 398
                    },
                    {
                        "x_data": 8,
                        "y_data": 710
                    },
                    {
                        "x_data": 9,
                        "y_data": 337
                    },
                    {
                        "x_data": 10,
                        "y_data": 429
                    },
                    {
                        "x_data": 11,
                        "y_data": 191
                    },
                    {
                        "x_data": 12,
                        "y_data": 601
                    },
                    {
                        "x_data": 13,
                        "y_data": 272
                    },
                    {
                        "x_data": 14,
                        "y_data": 861
                    },
                    {
                        "x_data": 15,
                        "y_data": 662
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "account_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "account_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, display by the bars in asc please.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and could you list x-axis from low to high order?",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, rank X from low to high order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, rank x axis in ascending order.",
            "For all employees who have the letters D or S in their first name, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, and I want to sort JOB_ID from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 31400
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 18000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 8800
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 105300
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 29200
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 25400
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 14700
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart, and could you show in asc by the Name?",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute founder by a bar chart, rank by the Name from low to high.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, order X-axis from low to high order.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart, order X-axis from low to high order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, rank from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, show in descending by the customer_id.",
            "Show first name and id for all customers with at least 2 accounts Show bar chart, and rank in descending by the y-axis.",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, and could you order y axis in desc order?",
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and could you order y axis in desc order?",
            "What are the first names and ids for customers who have two or more accounts, and display in desc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ruby",
                        "y_data": 15
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 13
                    },
                    {
                        "x_data": "Meaghan",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "how many sections does each course has?, and could you list x axis in descending order?",
            "Bar chart x axis crs code y axis the total number, order names from high to low order.",
            "Give me a histogram for how many sections does each course have?, and could you list x axis in descending order?",
            "How many sections does each course have Visualize by bar chart, and order names from high to low order.",
            "Visualize a bar chart for how many sections does each course has?, I want to order by the bars in desc please.",
            "How many sections does each course has Visualize by bar chart, and list in descending by the X-axis.",
            "Draw a bar chart for how many sections does each course have?, could you list bars in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Count the number of local authorities by the local authority, and rank in desc by the x axis.",
            "Compare the number of the local authority by the local authority, and rank in descending by the bar please.",
            "A bar graph listing the local authorities and how many local authorities provided by all stations, could you display X from high to low order?",
            "Bar chart of how many local authority from each local authority, and could you order names in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Watford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 3
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a bar chart, and could you order in asc by the x axis?",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' Visualize by bar chart, could you show in ascending by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 115897
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order in asc by the total number.",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, could you order by the y axis in asc?",
            "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, order by the sum id from low to high.",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, and order in asc by the total number.",
            "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order in asc by the y axis.",
            "Show total number of id from each nationality, and display total number in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 6
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "France",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name, and could you sort from low to high by the y axis?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart, I want to rank by the Y-axis in asc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of price , and group by attribute name, could you sort in ascending by the y axis?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, and I want to rank by the y-axis in asc.",
            "For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart, and list from low to high by the total number of price."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Bar chart x axis location code y axis how many location code, and show by the Y-axis in ascending.",
            "How many documents for different location code? Plot a bar chart to show the proportion, and order y-axis in ascending order please.",
            "Show the number of documents for each location code in a bar chart, and could you list from low to high by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "b",
                        "y_data": 3
                    },
                    {
                        "x_data": "e",
                        "y_data": 4
                    },
                    {
                        "x_data": "x",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games for each away team in a bar chart, could you show bars in desc order?",
            "Bar chart x axis away team y axis the number of away team, and show by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faults for different fault status of all the faults recoreded in the logs, sort by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Reported",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 3
                    },
                    {
                        "x_data": "Return",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_status",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_status)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Road and All_Games_Percent in a bar chart, and I want to show by the names in desc please.",
            "Draw a bar chart about the distribution of All_Road and All_Games_Percent , and I want to list from high to low by the x-axis.",
            "Bar chart of all_games_percent from each all road, and rank by the X from high to low.",
            "Visualize a bar chart about the distribution of All_Road and All_Games_Percent , and sort in desc by the All_Road.",
            "Return a bar chart about the distribution of All_Road and All_Games_Percent , sort in desc by the All_Road.",
            "Find All_Road and All_Games_Percent , and visualize them by a bar chart, sort X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.6
                    },
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.946
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance",
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show each author and the number of workshops they submitted to Show bar chart, and I want to order x-axis in descending order.",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, could you order names in desc order?",
            "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and display bar in desc order.",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, and could you order names in desc order?",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, and could you rank by the X-axis in desc?",
            "Show each author and the number of workshops they submitted to with a bar chart, and could you rank by the X-axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(DISTINCT T1.workshop_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Show me total number of vote id by state in a histogram, and I want to list in desc by the y-axis.",
            "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, and could you list by the Y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NJ\n",
                        "y_data": 5
                    },
                    {
                        "x_data": "NY",
                        "y_data": 3
                    },
                    {
                        "x_data": "CA",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(vote_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "What are the names and account balances of customers with the letter a in their names, and I want to display in descending by the acc_bal.",
            "Find the name and account balance of the customer whose name includes the letter \u2018a\u2019 Visualize them using a bar chart, show y-axis in descending order.",
            "Can you compare the account balances of customers with the letter 'a' in their names using a bar graph, and list in desc by the y axis.",
            "Visualize a bar chart for what are the names and account balances of customers with the letter 'a' in their names?, could you sort from high to low by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mary",
                        "y_data": 2000
                    },
                    {
                        "x_data": "Jack",
                        "y_data": 1000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cust_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "acc_bal"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and could you list in descending by the x axis please?",
            "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and could you sort in descending by the x-axis?",
            "Bar graph to show mean school id from different all home, and list by the bar in descending.",
            "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and list in descending by the bars.",
            "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, and could you list in descending by the x axis please?",
            "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, and could you show by the X in desc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 2.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they left office, binning the left office time into Year interval, and then split by the minister's name, I want to display in ascending by the Y.",
            "Stacked bar chart of the number of left office for with each Minister in each left office, could you display in asc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1959",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1962",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 2,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1962",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 1,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1962",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1962",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Left_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Left_office)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, and rank from low to high by the x-axis.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, and could you rank by the JOB_ID in ascending please?",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and I want to show names from low to high order please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, and could you list by the X-axis in asc?",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and order by the bars in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "What are the first names and ids for customers who have two or more accounts, and could you list from low to high by the names please?",
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and could you rank by the customer_first_name in asc?",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, could you rank by the customer_first_name in asc?",
            "Show first name and id for all customers with at least 2 accounts Show bar chart, and display X-axis from low to high order.",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, and show in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kieran",
                        "y_data": 13
                    },
                    {
                        "x_data": "Meaghan",
                        "y_data": 8
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, order bars from high to low order please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, sort by the X in desc.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and list X from high to low order.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id, display in descending by the bars please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and sort by the X in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "book_club"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show all book categories and the number of books in each category, list in asc by the bar.",
            "How many books fall into each category, and could you order by the bars in asc?",
            "Visualize a bar chart for how many books fall into each category?, and display by the X in asc.",
            "Give me a histogram for how many books fall into each category?, and rank in ascending by the X-axis.",
            "Show the total number from each category, could you order by the bars in asc?",
            "Show all book categories and the number of books in each category with a bar chart, and I want to sort by the X in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gay M/SF",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gay SF/F",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lesb. M/SF",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games for each home team and group by away team in a stacked bar chart The x-axis is home team, and could you rank in asc by the how many home team?",
            "Stack bar chart of how many home team vs Away_team based on home team, display how many home team from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 7,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 3,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-25",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Return a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "Give me the trend about the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "Draw a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "For the sum of Employee_ID, Start_from, visualize the trend.",
            "A line chart shows the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time",
            "Visualize a line chart about the change of the sum of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "Give me line charts of worldwide gross sum employee id over year start from by major genres Is_full_time"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 7,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "what are the student IDs and middle names of the students enrolled in at most two courses?, could you show names in desc order?",
            "What are the student IDs and middle names of the students enrolled in at most two courses, and I want to sort in desc by the x axis.",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and I want to sort by the bars in descending.",
            "Find the student ID and middle name for all the students with at most two enrollments, display in descending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vicente",
                        "y_data": 10
                    },
                    {
                        "x_data": "Ursula",
                        "y_data": 14
                    },
                    {
                        "x_data": "Luella",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kolby",
                        "y_data": 11
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kailey",
                        "y_data": 9
                    },
                    {
                        "x_data": "Casimir",
                        "y_data": 4
                    },
                    {
                        "x_data": "Camilla",
                        "y_data": 13
                    },
                    {
                        "x_data": "Brandt",
                        "y_data": 3
                    },
                    {
                        "x_data": "Asa",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "middle_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of classes offered for all class rooms that held at least 2 classes Show bar chart, and sort x-axis from high to low order.",
            "For each classroom with at least 2 classes, how many classes are offered, and show CLASS_ROOM in desc order.",
            "Bar chart of the total number from each class room, and list by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KLR209",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR200",
                        "y_data": 4
                    },
                    {
                        "x_data": "BUS311",
                        "y_data": 2
                    },
                    {
                        "x_data": "BUS252",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CLASS_ROOM",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, order names in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 3
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "book_club"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show the number of books for each year in descending order by year and visualize in a bar chart.",
            "What are the number of books for each year, ordered by year descending? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1989",
                        "y_data": 10
                    },
                    {
                        "x_data": "1990",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of accounts for different statement details in a bar chart.",
            "How many accounts for different statement details? Draw a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Open Project",
                        "y_data": 9
                    },
                    {
                        "x_data": "Private Project",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Statement_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show sum of budget in each year and bin creation time by year in a line chart, rank by the X from high to low.",
            "Show me a line chart of how sum budget in billions change over the creation, and sort by the x-axis in desc.",
            "Show me a line chart of how sum budget in billions change over the creation, order x-axis from high to low order.",
            "Show sum of budget in each year and bin creation time by year in a line chart, sort by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1999~2002",
                        "y_data": 44
                    },
                    {
                        "x_data": "1978~1998",
                        "y_data": 135
                    },
                    {
                        "x_data": "1957~1977",
                        "y_data": 125
                    },
                    {
                        "x_data": "1936~1956",
                        "y_data": 982
                    },
                    {
                        "x_data": "1915~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1894~1914",
                        "y_data": 65
                    },
                    {
                        "x_data": "1873~1893",
                        "y_data": 77
                    },
                    {
                        "x_data": "1852~1872",
                        "y_data": 23
                    },
                    {
                        "x_data": "1831~1851",
                        "y_data": 10
                    },
                    {
                        "x_data": "1810~1830",
                        "y_data": 0
                    },
                    {
                        "x_data": "1789~1809",
                        "y_data": 20
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a bar chart for simply displaying the email address of the employee and the corresponding salary.",
            "Plot salary by grouped by email as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SKING",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AHUNOLD",
                        "y_data": 9000
                    },
                    {
                        "x_data": "NGREENBE",
                        "y_data": 12000
                    },
                    {
                        "x_data": "DRAPHEAL",
                        "y_data": 11000
                    },
                    {
                        "x_data": "AFRIPP",
                        "y_data": 8200
                    },
                    {
                        "x_data": "JRUSSEL",
                        "y_data": 14000
                    },
                    {
                        "x_data": "JWHALEN",
                        "y_data": 4400
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 13000
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 6500
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 10000
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list by the y axis in descending.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, show from high to low by the total number of manager id.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, list by the y axis in descending.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, list y-axis in descending order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, and list y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 1911
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1100
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1098
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 432
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 342
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 308
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 200
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart, rank in asc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Buford",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cecelia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cheyenne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madaline",
                        "y_data": 4
                    },
                    {
                        "x_data": "Melissa",
                        "y_data": 3
                    },
                    {
                        "x_data": "Orion",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shany",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sterling",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Show the different headquarters and number of companies at each headquarter with a bar chart, sort X-axis in desc order.",
            "Show the different headquarters and number of companies at each headquarter, and list X-axis in descending order.",
            "Bar chart x axis headquarters y axis the total number, could you list x-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 8
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 4
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A bar chart shows the distribution of Sex and the sum of Height , and group by attribute Sex.",
            "Visualize a bar chart about the distribution of Sex and the sum of Height , and group by attribute Sex.",
            "Give me the comparison about the sum of Height over the Sex , and group by attribute Sex by a bar chart.",
            "Return a bar chart about the distribution of Sex and the sum of Height , and group by attribute Sex.",
            "Show me about the distribution of Sex and the sum of Height , and group by attribute Sex in a bar chart.",
            "Bar chart of total number of height from each sex"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 395
                    },
                    {
                        "x_data": "M",
                        "y_data": 1366
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Height)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years, and I want to display in ascending by the total number.",
            "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year, and order by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of departments in each school. Visualize by pie chart.",
            "Pie. how many departments are in each school?",
            "Return a pie on how many departments are in each school?",
            "How many departments are in each school. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A&SCI",
                        "y_data": 7
                    },
                    {
                        "x_data": "BUS",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT dept_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SCHOOL_CODE"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "For each phone, show its names and total number of stocks. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2914
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 4324
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 874
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2540
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.Num_of_stock)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Member",
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show all party names and the number of members in each party Show bar chart, and order the total number in ascending order.",
            "Return a bar chart on how many members are in each party?, rank in asc by the y axis.",
            "Show all party names and the number of members in each party with a bar chart, rank in asc by the y axis.",
            "How many members are in each party Show bar chart, and rank by the the total number in asc.",
            "Give me a histogram for how many members are in each party?, display by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convention Peoples Party",
                        "y_data": 2
                    },
                    {
                        "x_data": "Progress Party",
                        "y_data": 4
                    },
                    {
                        "x_data": "3",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the average smallest rating of different movie title using a bar chart, and order by the total number in desc.",
            "Visualize the title and their average smallest ratings of the movie using a bar chart, and sort in descending by the stars).",
            "Please return me a bar chart show what are the average smallest rating of different movie title?, sort in descending by the stars)."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, display from high to low by the id.",
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, and order by the Y from high to low.",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, and show in descending by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ziprasidone",
                        "y_data": 20
                    },
                    {
                        "x_data": "Iloperidone",
                        "y_data": 8
                    },
                    {
                        "x_data": "Asenapine",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aripiprazole",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the name and level of catalog structure with level between 5 and 10.",
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10",
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10",
            "What are the name and level of catalog structure with level number between 5 and 1. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sub-Category",
                        "y_data": 8
                    },
                    {
                        "x_data": "Product",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_level_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "catalog_level_number"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player",
            "Player_Attributes"
        ],
        "db_id": "soccer_1",
        "nl_queries": [
            "For the top five players in terms of potential, bin their birthday into weekday interval, and show me the distribution of their birthday.",
            "For the top five players in terms of potential, bin their birthday into weekday interval count them using a bar graph."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "birthday",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(birthday)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart, and display Y-axis in descending order please.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of employee_id bin hire_date by weekday, and visualize them by a bar chart, list the average of employee id in descending order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, I want to sort in descending by the total number.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, list the average of employee id in descending order.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and rank by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 155
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 154
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 153.5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 153
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 152.5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 152
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 151
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "MATCH"
        ],
        "db_id": "city_record",
        "nl_queries": [
            "For each competition, count the number of matches, and rank in desc by the X-axis.",
            "Find the number of matches in different competitions Visualize by bar chart, and show in descending by the bars.",
            "Bar chart x axis competition y axis the total number, could you display by the bar in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friendly match",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002 FIFA World Cup qualification",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994 FIFA World Cup qualification",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customers_policies"
        ],
        "db_id": "insurance_fnol",
        "nl_queries": [
            "Retrieve the open dates of all the policies associated with the customer whose name contains \"Diana\", bin the open dates into the day of week interval and count them for a bar chart, list in asc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Opened",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "genres",
            "tracks"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "List the top 5 genres by number of tracks. List genres name and total tracks by a pie chart.",
            "List the top 5 genres by number of tracks. List genres name and total tracks. Visualize by pie chart.",
            "how many tracks does each genre have and what are the names of the top 5?",
            "Return a pie chart on how many tracks does each genre have and what are the names of the top 5?",
            "How many tracks does each genre have and what are the names of the top 5. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rock",
                        "y_data": 1297
                    },
                    {
                        "x_data": "Latin",
                        "y_data": 579
                    },
                    {
                        "x_data": "Metal",
                        "y_data": 374
                    },
                    {
                        "x_data": "Alternative & Punk",
                        "y_data": 332
                    },
                    {
                        "x_data": "Jazz",
                        "y_data": 130
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Parts",
            "Part_Faults"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Which parts have more than 2 faults? Show the part name and id Plot them as bar chart, and sort in descending by the X.",
            "Give me a histogram for which parts have more than 2 faults? Show the part name and id, and I want to show X in descending order.",
            "which parts have more than 2 faults? Show the part name and id, order X in desc order.",
            "Which parts have more than 2 faults? Show the part name and id in a bar chart, could you display from high to low by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "top",
                        "y_data": 1
                    },
                    {
                        "x_data": "package",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "part_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "part_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, what is the relationship between manufacturer and revenue , and group by attribute name?",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between manufacturer and revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the correlation between manufacturer and revenue , and group by attribute name in a scatter chart.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between manufacturer and revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between manufacturer and revenue , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 5,
                        "y_data": 130,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 4,
                        "y_data": 200,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": 1,
                        "y_data": 120,
                        "classify": "Sony"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each course description? Show me a bar chart, list by the X in desc.",
            "Show the number of courses for each course description in a bar chart, and show in descending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "bookings"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "How many bookings did each customer make? List the customer id and the count in the scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 4
                    },
                    {
                        "x_data": 7,
                        "y_data": 3
                    },
                    {
                        "x_data": 8,
                        "y_data": 2
                    },
                    {
                        "x_data": 9,
                        "y_data": 2
                    },
                    {
                        "x_data": 10,
                        "y_data": 2
                    },
                    {
                        "x_data": 11,
                        "y_data": 1
                    },
                    {
                        "x_data": 15,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of teachers of each course in a bar chart.",
            "Return a bar chart showing the number of teachers of each course."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bible",
                        "y_data": 1
                    },
                    {
                        "x_data": "History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Math",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Science",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Course",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Course)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the phone_number by a bar chart, rank from low to high by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and employee_id , and list in ascending by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and employee_id in a bar chart, and could you list in asc by the X?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and employee_id , and visualize them by a bar chart, and show x-axis in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and employee_id , list bar in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 178
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 201
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 203
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 205
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 206
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 204
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 202
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, I want to show by the sum department id in asc please.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, sort in ascending by the y axis.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart, I want to rank in asc by the total number.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time, and sort by the sum department id in ascending.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and sort in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    },
                    {
                        "x_data": "June",
                        "y_data": 990
                    },
                    {
                        "x_data": "July",
                        "y_data": 1350
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1400
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 2480
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about employee_id over hire_date with a line chart, and rank by the X-axis in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the trend about employee_id over hire_date , and display by the HIRE_DATE in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of employee_id over hire_date , rank by the X-axis in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of employee_id over hire_date , and list in ascending by the X.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of employee_id over hire_date , and rank by the X-axis in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for employee_id, hire_date, visualize the trend, list in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 104
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 105
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 106
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 107
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 109
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 111
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 112
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 113
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 115
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 116
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 117
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 118
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 119
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 125
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 126
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 127
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 128
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 129
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 130
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 131
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 132
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 133
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 134
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 135
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 136
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 137
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 138
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 139
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 140
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 141
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 142
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 143
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 144
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 150
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 151
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 152
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 153
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 154
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 155
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 156
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 157
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 158
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 159
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 160
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 161
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 162
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 163
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 164
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 165
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 166
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 167
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 168
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 169
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 170
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 171
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 172
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 173
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 174
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 175
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 176
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 177
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 178
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 179
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 180
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 181
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 182
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 183
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 184
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 185
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 186
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 187
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 188
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 189
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 190
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 191
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 192
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 193
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 194
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 195
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 196
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 197
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 198
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 199
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 200
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 202
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 204
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 206
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Return a histogram on what are the nationalities and the total ages of journalists?, and I want to show by the total number of age in desc.",
            "Show me a bar chart for what are the nationalities and total ages of journalists?, and list Y-axis in descending order.",
            "Bar chart of sum age from each nationality, and I want to show by the total number of age in desc.",
            "What are the nationalities and the taotal ages of journalists Visualize by a bar chart, I want to show by the total number of age in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 308
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the weekday interval, and the total number of each bin, and then show me the trend.",
            "Give me a line chart, that bins all date of transactions into the weekday interval, and the count for each bin.",
            "Plot how many date of transaction over date of transaction in a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 3
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 2
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 3
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin What is the trend?, display by the x-axis in asc please.",
            "Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin Visualize the result using a trend line, order date_of_transaction from low to high order.",
            "Plot date of transaction by mean share count as a trend line, and sort by the date_of_transaction in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 3170
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 827382.5
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 1669
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 8718572
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1522
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 93191
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 212687
                    },
                    {
                        "x_data": "2004",
                        "y_data": 96178
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, for commission_pct, hire_date, visualize the trend, and I want to rank from high to low by the X-axis.",
            "For those employees who did not have any job in the past, return a line chart about the change of commission_pct over hire_date , and order x-axis from high to low order.",
            "For those employees who did not have any job in the past, show me the trend about commission_pct over hire_date with a line chart, I want to rank HIRE_DATE in descending order.",
            "For those employees who did not have any job in the past, visualize a line chart about the change of commission_pct over hire_date , order X from high to low order please.",
            "For those employees who did not have any job in the past, give me the trend about commission_pct over hire_date , display in desc by the X-axis.",
            "For those employees who did not have any job in the past, draw a line chart about the change of commission_pct over hire_date , and sort by the x axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 0.4
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the highest price of product, grouped by product type? Show a bar chart, list by the maximal product price in desc.",
            "Bar chart of maximal product price from each product type code, show in desc by the maximal product price please.",
            "Give the maximum product price for each product type in a bar chart, order in descending by the maximal product price please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 1355
                    },
                    {
                        "x_data": "July",
                        "y_data": 3610
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4314
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3640
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Give me a bar chart to show the number of event details of events that have more than one participant, list x axis in ascending order.",
            "For events that have more than one participant, count the event details for a bar chart, and list in ascending by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    },
                    {
                        "x_data": "Success",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, compute their average salary for visualizing a bar chart, and could you order mean salary in asc order please?",
            "For employees with first names that end with the letter m, give me a bar chart to show their average salary, could you sort by the y axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 7850
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 7900
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Visualize a bar chart about the distribution of name and meter_100 .",
            "Return a bar chart about the distribution of name and meter_100 .",
            "Show me about the distribution of name and meter_100 in a bar chart.",
            "Draw a bar chart about the distribution of name and meter_100 .",
            "Give me the comparison about meter_100 over the name by a bar chart.",
            "Draw a bar chart of name versus meter_100"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the amount of name , and group by attribute name, display by the y-axis in descending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, I want to order from high to low by the Y.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the amount of name , and group by attribute name, show total number in descending order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the amount of name , and group by attribute name, and display by the y-axis in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, could you display by the Y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by first name in a bar chart, display by the bar in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Weston",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 2
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 3
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the total amount payment as the Y-axis.",
            "Sum the amount for all the payments processed with Visa by each year using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 787370
                    },
                    {
                        "x_data": "2018",
                        "y_data": 7343
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, sort from low to high by the total number of code.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and sort from low to high by the total number of code.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, I want to display in ascending by the y axis.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of code , and group by attribute founder, display y-axis from low to high order please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, display y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 23
                    },
                    {
                        "x_data": "James",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name by a bar chart, list from high to low by the y axis please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and commission_pct , and could you sort by the COMMISSION_PCT in descending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name , and could you sort by the COMMISSION_PCT in descending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and commission_pct , and show from high to low by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and commission_pct , and visualize them by a bar chart, and sort y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grant",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 0
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 0
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 0
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 0
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, I want to order in descending by the Code.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, I want to order in descending by the Code.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter, rank in descending by the Y.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute headquarter, sort Code in desc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute headquarter in a bar chart, could you sort total number in descending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Give me a pie chart showing the number of engineers for different skill description, and order in descending by the how many skill description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 9
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 6
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show sum transaction amount from each transaction type, and sort from high to low by the X-axis.",
            "Show the transaction types and the total amount of transactions with a bar chart, and sort from high to low by the X-axis.",
            "Show the transaction types and the total amount of transactions, rank transaction_type from high to low order please.",
            "What are total transaction amounts for each transaction type, rank transaction_type from high to low order please.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?, and show in desc by the bars please.",
            "what are total transaction amounts for each transaction type?, show by the x axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Refund",
                        "y_data": 11192.69
                    },
                    {
                        "x_data": "Payment",
                        "y_data": 8743.15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(transaction_amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the proportion of each party in a pie chart.",
            "Can you tell me the proportion of each party for the election?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show the total salary by each hire date of employees, and please bin the hire date into the Month interval for showing a bar chart.",
            "Compare the total salary by each hire date (bin it into month interval) of employees using a bar chart.",
            "Show sum salary from each hire date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 45000
                    },
                    {
                        "x_data": "July",
                        "y_data": 19200
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 45900
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find headquarter and the average of manufacturer , and group by attribute headquarter, and visualize them by a bar chart, and order X-axis in ascending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the headquarter , and group by attribute headquarter, and could you list in ascending by the X?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, could you list in ascending by the X?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, and could you order from low to high by the x-axis?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, and sort in ascending by the Headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of each ship type? Give me a bar chart, sort by the y axis in desc.",
            "Return a bar chart showing the total number of each ship type, and I want to list total number from high to low order.",
            "Show me the comparison of the total number of every ship type with a bar graph, and display in desc by the Y-axis.",
            "Show me how many type by type in a histogram, and sort by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "List all the participant ids and their details using a bar chart, and I want to order in asc by the bar.",
            "Give me a bar chart, that just lists the participant ids as Y and their details as X-axis, and display bars from low to high order.",
            "Bar chart x axis participant details y axis participant_id, and rank in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Berniece Weimann",
                        "y_data": 75
                    },
                    {
                        "x_data": "Dedrick Ebert",
                        "y_data": 90
                    },
                    {
                        "x_data": "Dewitt Walter",
                        "y_data": 60
                    },
                    {
                        "x_data": "Dr. Jaydon Renner",
                        "y_data": 64
                    },
                    {
                        "x_data": "Dr. Kris Deckow",
                        "y_data": 98
                    },
                    {
                        "x_data": "Justyn Lebsack",
                        "y_data": 66
                    },
                    {
                        "x_data": "Karlee Batz",
                        "y_data": 9
                    },
                    {
                        "x_data": "Kenyatta Kuhn",
                        "y_data": 36
                    },
                    {
                        "x_data": "Lupe Deckow",
                        "y_data": 28
                    },
                    {
                        "x_data": "Macy Mayer DDS",
                        "y_data": 38
                    },
                    {
                        "x_data": "Miss Joyce Cremin",
                        "y_data": 96
                    },
                    {
                        "x_data": "Miss Kaci Lebsack",
                        "y_data": 37
                    },
                    {
                        "x_data": "Neil Blick",
                        "y_data": 86
                    },
                    {
                        "x_data": "Prof. Michelle Maggio Jr.",
                        "y_data": 63
                    },
                    {
                        "x_data": "Vilma Schinner",
                        "y_data": 26
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Participant_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "store",
            "store_district",
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Find the number of stores in each city. Plot them as bar chart.",
            "Draw a bar chart for how many stores are headquarted in each city?",
            "Return a bar chart on how many stores are headquarted in each city?",
            "How many stores are headquarted in each city. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bahawalpur City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bhakkar City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hafizabad City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Khanewal City",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquartered_City",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, list by the x axis in descending.",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, and sort by the names from high to low.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, list from high to low by the x axis.",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and sort by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "quo",
                        "y_data": 14
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 9.5
                    },
                    {
                        "x_data": "eius",
                        "y_data": 2
                    },
                    {
                        "x_data": "a",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "physician"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the name of physicians who took some appointment, and count them by a bar chart, and I want to list from high to low by the bars.",
            "What are the names of all the physicians who took appointments, and count them by a bar chart, and could you order by the names in desc please?",
            "List the number of the name of physicians who took some appointment, could you display X-axis in desc order please?",
            "A bar chart for listing the number of the name of physicians who took some appointment, and I want to display by the bar in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Percival Cox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Molly Clock",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Dorian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 3
                    },
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "I want to see trend of the number of date in locaton to by date in locaton to, and list by the x axis in asc.",
            "Show the number of documents in different ending date and bin ending date by year interval with a line chart, and list by the x axis in asc.",
            "How many documents in different ending date? Return a line chart binning ending date by year interval, could you rank by the X-axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1976~1979",
                        "y_data": 2
                    },
                    {
                        "x_data": "1980~1983",
                        "y_data": 0
                    },
                    {
                        "x_data": "1984~1987",
                        "y_data": 4
                    },
                    {
                        "x_data": "1988~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~1999",
                        "y_data": 1
                    },
                    {
                        "x_data": "2000~2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004~2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008~2011",
                        "y_data": 5
                    },
                    {
                        "x_data": "2012~2015",
                        "y_data": 1
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a scatter chart about the correlation between manager_id and department_id .",
            "For those employees who was hired before 2002-06-21, return a scatter chart about the correlation between manager_id and department_id .",
            "For those employees who was hired before 2002-06-21, what is the relationship between manager_id and department_id ?",
            "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between manager_id and department_id .",
            "For those employees who was hired before 2002-06-21, a scatter chart shows the correlation between manager_id and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 100,
                        "y_data": 90
                    },
                    {
                        "x_data": 100,
                        "y_data": 90
                    },
                    {
                        "x_data": 102,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 101,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 100,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 0
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 101,
                        "y_data": 10
                    },
                    {
                        "x_data": 100,
                        "y_data": 20
                    },
                    {
                        "x_data": 201,
                        "y_data": 20
                    },
                    {
                        "x_data": 101,
                        "y_data": 40
                    },
                    {
                        "x_data": 101,
                        "y_data": 70
                    },
                    {
                        "x_data": 101,
                        "y_data": 110
                    },
                    {
                        "x_data": 205,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show me the frequency of the weekdays (binning year into weekdays interval) that the team Boston Red Stockings won in the postseasons with a bar chart, I want to order by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sportsinfo"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Show all sport name and the number of students in a bar chart, display from low to high by the bar.",
            "Bar chart x axis sportname y axis the total number, and display from low to high by the bar.",
            "Visualize a bar chart for how many students play each sport?, and sort bar in ascending order.",
            "How many students play each sport Show bar chart, and sort bar in ascending order.",
            "Show all sport name and the number of students Show bar chart, and sort in asc by the bar.",
            "Give me a histogram for how many students play each sport?, and show X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Athletics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baseball",
                        "y_data": 1
                    },
                    {
                        "x_data": "Basketball",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cricket",
                        "y_data": 1
                    },
                    {
                        "x_data": "Curling",
                        "y_data": 1
                    },
                    {
                        "x_data": "Football",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lacrosse",
                        "y_data": 3
                    },
                    {
                        "x_data": "Soccer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Swimming",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tennis",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SportName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a line chart to show the trend of the amount of each payment of different payment methods, ordered by the payment date in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-05-03",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-05-04",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-06-24",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-07-31",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-08-06",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2018-01-10",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2018-01-19",
                        "y_data": 177130,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2018-01-28",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2018-02-16",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2018-02-18",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "2017-05-03",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-05-04",
                        "y_data": 123255,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-06-24",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-07-31",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-08-06",
                        "y_data": 38324,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 71246,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2018-01-10",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2018-01-19",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2018-01-28",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2018-02-16",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2018-02-18",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "2017-05-03",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-05-04",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 448613,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-06-24",
                        "y_data": 456098,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-07-31",
                        "y_data": 423154,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-08-06",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2018-01-10",
                        "y_data": 407235,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2018-01-19",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2018-01-28",
                        "y_data": 319142,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2018-02-16",
                        "y_data": 241730,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2018-02-18",
                        "y_data": 235893,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "2017-05-03",
                        "y_data": 172309,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2017-05-04",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 155654,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2017-06-24",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2017-07-31",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2017-08-06",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 459407,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2018-01-10",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2018-01-19",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2018-01-28",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2018-02-16",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2018-02-18",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 7343,
                        "classify": "Visa"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Amount_Payment"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between card number and card id with a scatter chart.",
            "What is the relationship between card number and card id? Return a scatter chart.",
            "Show me a scatter plot of card id and card_number for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 4560596484842
                    },
                    {
                        "x_data": 2,
                        "y_data": 4859448397570735
                    },
                    {
                        "x_data": 3,
                        "y_data": 348237249146948
                    },
                    {
                        "x_data": 4,
                        "y_data": 4485460762694
                    },
                    {
                        "x_data": 5,
                        "y_data": 5122249720639438
                    },
                    {
                        "x_data": 6,
                        "y_data": 5102229294602335
                    },
                    {
                        "x_data": 7,
                        "y_data": 4716674779726
                    },
                    {
                        "x_data": 8,
                        "y_data": 6011225247353230
                    },
                    {
                        "x_data": 9,
                        "y_data": 4929590358481
                    },
                    {
                        "x_data": 10,
                        "y_data": 4532488235104
                    },
                    {
                        "x_data": 11,
                        "y_data": 4707949584519
                    },
                    {
                        "x_data": 12,
                        "y_data": 4929896676202959
                    },
                    {
                        "x_data": 13,
                        "y_data": 5484846021884483
                    },
                    {
                        "x_data": 14,
                        "y_data": 4929384762825
                    },
                    {
                        "x_data": 15,
                        "y_data": 345475370003028
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "card_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "card_number"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "For players whose occupation is not \"Researcher\", tell me the proportion of their residences with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birtle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brandon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oakbank",
                        "y_data": 1
                    },
                    {
                        "x_data": "Selkirk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winnipeg",
                        "y_data": 9
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Residence)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Residence"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Show sum enrollment from each county, and sort by the x axis in ascending.",
            "Please give me a bar chart for the total enrollment in each county, display by the x-axis from low to high.",
            "Compare the total enrollment in each county with a bar chart, and list by the names from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 601
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 852
                    },
                    {
                        "x_data": "50 Marshall",
                        "y_data": 1098
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 984
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 620
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between Team_ID and School_ID , and group by attribute All_Road.",
            "Visualize a scatter chart about the correlation between Team_ID and School_ID , and group by attribute All_Road.",
            "What is the relationship between Team_ID and School_ID , and group by attribute All_Road?",
            "A scatter chart shows the correlation between Team_ID and School_ID , and group by attribute All_Road.",
            "Draw a scatter chart about the correlation between Team_ID and School_ID , and group by attribute All_Road.",
            "Show the relation between team id and school_id for each All_Road using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "13\u20130"
                    },
                    {
                        "x_data": 4,
                        "y_data": 5,
                        "classify": "4\u20138"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "6\u20135"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "8\u20132"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of employee_id over hire_date , rank by the X-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about employee_id over hire_date , rank by the x axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of employee_id over hire_date, display by the x axis from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of employee_id over hire_date , and rank by the x axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of employee_id over hire_date , display by the x axis from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about employee_id over hire_date with a line chart, I want to display in ascending by the HIRE_DATE."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-03",
                        "y_data": 178
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 202
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 203
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 204
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 206
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many hours do the students spend studying in each department Plot them as bar chart, and sort from low to high by the Y-axis.",
            "Visualize a bar chart for how many hours do the students spend studying in each department?, and I want to list by the Y-axis in asc.",
            "Create a bar chart showing total number of stu hrs across dept code, I want to list by the Y-axis in asc.",
            "Find the total number of hours have done for all students in each department Visualize by bar chart, and display Y in asc order.",
            "Return a bar chart on how many hours do the students spend studying in each department?, and I want to sort by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BIOL",
                        "y_data": 42
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 102
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 120
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 147
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 165
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(stu_hrs)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions",
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "What are the different card types, and how many transactions have been made with each Visualize by bar chart, sort Y-axis in asc order please.",
            "Show the card type codes and the number of transactions with a bar chart, could you order Y in ascending order?",
            "what are the different card types, and how many transactions have been made with each?, and sort Y-axis in asc order please.",
            "Show the card type codes and the number of transactions Visualize by bar chart, and could you order Y in ascending order?",
            "Return a bar chart on what are the different card types, and how many transactions have been made with each?, sort Y-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and show from high to low by the y axis please.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and could you list by the Y-axis from high to low?",
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, I want to order in desc by the Y please.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and show from high to low by the y axis please.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, list in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 13
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 9
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 9
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 4
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 3
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 3
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 2
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of professors who is in office DRE 102 hired in each weekday with a bar chart, I want to rank from high to low by the Y-axis.",
            "How many professors whose office is located in DRE 102 are hired in each weekday? Return a bar chart, and I want to rank from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Yukon"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compare the total salary by each hire date (bin it into month interval) of employees using a bar chart, I want to show by the y-axis in descending.",
            "Show sum salary from each hire date, I want to show by the y-axis in descending.",
            "Show the total salary by each hire date of employees, and please bin the hire date into the Month interval for showing a bar chart, show in descending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 45900
                    },
                    {
                        "x_data": "June",
                        "y_data": 45000
                    },
                    {
                        "x_data": "July",
                        "y_data": 19200
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 14000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the correlation between manufacturer and code , and group by attribute headquarter in a scatter chart.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between manufacturer and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize the relationship between manufacturer and code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, what is the relationship between manufacturer and code , and group by attribute headquarter?",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between manufacturer and code , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 6,
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 6,
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 5,
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, show in desc by the total number of employee id.",
            "Return a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, list by the total number in descending please.",
            "Draw a bar chart of is full time versus sum employee id, list by the total number in descending please.",
            "Draw a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, show in desc by the total number of employee id.",
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, order Y in descending order.",
            "A bar chart shows the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, list by the total number in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 19
                    },
                    {
                        "x_data": "F",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "How many templates for each template type code? Show a bar chart, rank in asc by the names.",
            "Show the number of template type code from each template type code, and rank by the bars from low to high.",
            "Return a bar chart showing the number of templates for each template type code, and sort by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What are the last names and ages of the students who are allergic to milk and cat? Plot them as bar chart, show from high to low by the x axis.",
            "Find the last name and age of the student who has allergy to both milk and cat Show a bar chart, I want to order in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lee",
                        "y_data": 17
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by first name in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 1
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "On what dates were employees without the letter M in their first names hired, and count them by a bar chart, and list in asc by the y axis please.",
            "when is the hire date for those employees whose first name does not containing the letter M, and count them by a bar chart, I want to display in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 12
                    },
                    {
                        "x_data": "July",
                        "y_data": 24
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 24
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each instructor in a bar chart.",
            "How many courses for each teacher? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "For all train stations not in London with a pie chart, show me the proportion of total_passengers of different names.",
            "Show the names and total passengers for all train stations not in London. Plot them as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham New Street",
                        "y_data": 36.330999999999996
                    },
                    {
                        "x_data": "Glasgow Central",
                        "y_data": 29.658
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Total_Passengers"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Group and count the name attribute for visualizing a bar chart, and display in descending by the names.",
            "Bar chart x axis name y axis how many name, sort by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "physician"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the number of the name of physicians who took some appointment, and display by the X-axis from low to high please.",
            "List the name of physicians who took some appointment, and count them by a bar chart, could you sort from low to high by the names?",
            "What are the names of all the physicians who took appointments, and count them by a bar chart, and show X-axis in ascending order.",
            "A bar chart for listing the number of the name of physicians who took some appointment, list from low to high by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 3
                    },
                    {
                        "x_data": "John Dorian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Molly Clock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Percival Cox",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For the top 3 days with the largest max gust speeds, please bin the date into the of the week and then compute the average of mean humidity to visualize a bar chart.",
            "For those days with the 3 largest maximum gust speeds, can you plot a bar chart to compare the average of mean humidity of each day of the weeks?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 49
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 54
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 72
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(mean_humidity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show all the ranks and the number of male and female faculty for each rank in a bar chart, list by the bar in desc.",
            "Stacked bar chart of the total number for with each Sex in each rank, order by the x axis in descending.",
            "How many faculty members do we have for each rank and gender? Plot them as bar chart, and list by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Professor",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27,
                        "classify": "M"
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 5,
                        "classify": "M"
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 12,
                        "classify": "M"
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 7,
                        "classify": "M"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time in a bar chart, could you rank y-axis from low to high order?",
            "Draw a bar chart about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, and could you display y-axis from low to high order?",
            "Find Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, and could you display y-axis from low to high order?",
            "Bar chart x axis is full time y axis mean employee id, and show in ascending by the mean employee id please.",
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, I want to order in asc by the mean employee id.",
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time, show in ascending by the mean employee id please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 3.8
                    },
                    {
                        "x_data": "F",
                        "y_data": 4.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of name and ID , I want to display from high to low by the Y-axis.",
            "Visualize a bar chart about the distribution of name and ID , and sort from high to low by the Y-axis.",
            "Give me the comparison about ID over the name , could you show by the ID in descending please?",
            "A bar chart shows the distribution of name and ID , and sort from high to low by the ID.",
            "Return a bar chart about the distribution of name and ID , sort from high to low by the ID.",
            "Plot id by grouped by name as a bar graph, and I want to display from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 8
                    },
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 7
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 6
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 4
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 3
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Return a pie chart about the number of customer addresses in each address type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Billing",
                        "y_data": 8
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(address_type_code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "address_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A bar chart showing how many debates are held for each venue, and show by the X in desc.",
            "Bar chart x axis venue y axis how many venue, show by the X in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doha , Qatar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "List the number of the first name of all employees with job code PROF ordered by their date of birth.",
            "What are the first names of all employees that are professors ordered by date of birth, and count them by a bar chart",
            "A bar chart for what are the number of the first names of all employees that are professors ordered by date of birth?",
            "A bar chart for listing the number of the first name of all employees with job code PROF ordered by their date of birth.",
            "What are the number of the first names of all employees that are professors ordered by date of birth?",
            "List the first name of all employees with job code PROF ordered by their date of birth, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Annelise",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doreen",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1
                    },
                    {
                        "x_data": "Herman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hermine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melanie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Preston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ralph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ronald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ross",
                        "y_data": 1
                    },
                    {
                        "x_data": "Van",
                        "y_data": 1
                    },
                    {
                        "x_data": "Willa",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and manager_id , I want to sort bars from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and manager_id in a bar chart, and could you order x-axis from low to high order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and manager_id , and visualize them by a bar chart, and I want to list from low to high by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the email by a bar chart, and list x-axis in ascending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of email and manager_id , and list x-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HBAER",
                        "y_data": 101
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 149
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 100
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 201
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 101
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 101
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "wrestler"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "A bar chart for what is the number of locations of the wrestlers, and sort by the x-axis in descending.",
            "Draw a bar chart of location versus how many location, sort by the x-axis from high to low.",
            "What is the number of locations of the wrestlers? Visualize by a bar chart, and sort by the x-axis from high to low.",
            "Give the number of locations of all wrestlers with a bar chart, sort by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo , Japan",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tijuana , Mexico",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sapporo , Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Osaka , Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nagoya , Japan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me the minimal weight by sex in a histogram, sort the bars in desc order.",
            "A bar chart showing the minimum weight for each gender, and show by the total number in descending.",
            "What is the minimum weights for people of each sex? Show a bar chart, and I want to show minimal weight from high to low order.",
            "Show me minimal weight by sex in a histogram, order total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 90
                    },
                    {
                        "x_data": "M",
                        "y_data": 82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "For the average of monthly_rental, date_address_to, visualize the trend.",
            "Show me about the change of the average of monthly_rental over date_address_to , and group by attribute date_address_to in a line chart.",
            "Return a line chart about the change of the average of monthly_rental over date_address_to , and group by attribute date_address_to.",
            "Give me the trend about the average of monthly_rental over date_address_to , and group by attribute date_address_to.",
            "A line chart shows the change of the average of monthly_rental over date_address_to , and group by attribute date_address_to",
            "Show me the trend about the average of monthly_rental over date_address_to , and group by attribute date_address_to with a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1297
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 747
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1113
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 803.75
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 1032
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 800
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 865
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 988
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1021.5
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 929
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 620
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1287
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1067
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 894
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Give me a bar chart for mean tonnage of each type, show by the bar in desc.",
            "Show different types of ships and the average tonnage of ships of each type in a bar chart, and rank Type in descending order.",
            "Show different types of ships and the average tonnage of ships of each type Show bar chart, and could you show x axis from high to low order please?",
            "For each type, what is the average tonnage, and show X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3932.2
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 4845
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Tonnage)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time.",
            "Return a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time.",
            "Find Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time.",
            "A bar chart shows the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time.",
            "Draw a bar chart of is full time versus sum employee id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 9
                    },
                    {
                        "x_data": "T",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Show the number of competitions held in each city with a bar chart, and rank in descending by the y axis.",
            "How many competitions are held in each city? Draw a bar chart, sort Y in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aroostook",
                        "y_data": 2
                    },
                    {
                        "x_data": "Plaster Rock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Perth-Andover",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grand Falls/Grand-Sault",
                        "y_data": 1
                    },
                    {
                        "x_data": "Drummond",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Official_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Official_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal",
            "journal",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Green Bay Packers",
                        "y_data": 2804
                    },
                    {
                        "x_data": "at Oakland Raiders",
                        "y_data": 1934
                    },
                    {
                        "x_data": "Cleveland Browns",
                        "y_data": 3798
                    },
                    {
                        "x_data": "Baltimore Ravens",
                        "y_data": 6532
                    },
                    {
                        "x_data": "at Cincinnati Bengals",
                        "y_data": 3421
                    },
                    {
                        "x_data": "Jacksonville Jaguars",
                        "y_data": 1232
                    },
                    {
                        "x_data": "Tampa Bay Buccaneers",
                        "y_data": 4798
                    },
                    {
                        "x_data": "at Pittsburgh Steelers",
                        "y_data": 1763
                    },
                    {
                        "x_data": "Miami Dolphins",
                        "y_data": 798
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Theme",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Sales"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Count the job title of all people using a pie chart.",
            "What are the job titles of every person? Please plot the result with a pie chart.",
            "Compute the total the number of job across job as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 1
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "student",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(job)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the number of films each cinema has, order Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "rankings"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Find the total number of tours for each ranking date.",
            "Scatter chart. how many total tours were there for each ranking date?",
            "how many total tours were there for each ranking date?",
            "How many total tours were there for each ranking date.",
            "Scatter plot to show sum(tours) on x axis and ranking_date on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 19870119
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870126
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870202
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870209
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870302
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870330
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870406
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870413
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870420
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870427
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870504
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870511
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870518
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870525
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870601
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870608
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870615
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870622
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870629
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870706
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870713
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870720
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870727
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870803
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870810
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870817
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870824
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870831
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870907
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870914
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870921
                    },
                    {
                        "x_data": 0,
                        "y_data": 19870928
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871005
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871012
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871019
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871026
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871102
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871109
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871116
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871123
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871130
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871207
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871214
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871221
                    },
                    {
                        "x_data": 0,
                        "y_data": 19871228
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880101
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880104
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880111
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880118
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880125
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880201
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880208
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880215
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880222
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880229
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880307
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880314
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880321
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880328
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880404
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880411
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880418
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880425
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880502
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880509
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880516
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880523
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880530
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880606
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880613
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880620
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880627
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880704
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880711
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880718
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880725
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880801
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880808
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880815
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880822
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880829
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880905
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880912
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880919
                    },
                    {
                        "x_data": 0,
                        "y_data": 19880926
                    },
                    {
                        "x_data": 0,
                        "y_data": 19881003
                    },
                    {
                        "x_data": 0,
                        "y_data": 19881010
                    },
                    {
                        "x_data": 0,
                        "y_data": 19881017
                    },
                    {
                        "x_data": 0,
                        "y_data": 19881024
                    },
                    {
                        "x_data": 0,
                        "y_data": 19881031
                    },
                    {
                        "x_data": 0,
                        "y_data": 19881107
                    },
                    {
                        "x_data": 0,
                        "y_data": 19881114
                    },
                    {
                        "x_data": 29,
                        "y_data": 19881121
                    },
                    {
                        "x_data": 29,
                        "y_data": 19881128
                    },
                    {
                        "x_data": 29,
                        "y_data": 19881205
                    },
                    {
                        "x_data": 29,
                        "y_data": 19881212
                    },
                    {
                        "x_data": 29,
                        "y_data": 19881219
                    },
                    {
                        "x_data": 29,
                        "y_data": 19881226
                    },
                    {
                        "x_data": 28,
                        "y_data": 19890101
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890102
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890109
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890116
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890123
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890130
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890206
                    },
                    {
                        "x_data": 0,
                        "y_data": 19890213
                    },
                    {
                        "x_data": 0,
                        "y_data": 19890220
                    },
                    {
                        "x_data": 0,
                        "y_data": 19890227
                    },
                    {
                        "x_data": 0,
                        "y_data": 19890306
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890313
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890320
                    },
                    {
                        "x_data": 0,
                        "y_data": 19890327
                    },
                    {
                        "x_data": 0,
                        "y_data": 19890403
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890410
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890417
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890424
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890501
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890508
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890515
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890522
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890529
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890605
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890612
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890619
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890626
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890703
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890710
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890717
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890724
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890731
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890807
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890814
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890821
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890828
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890904
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890911
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890918
                    },
                    {
                        "x_data": 29,
                        "y_data": 19890925
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891002
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891009
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891016
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891023
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891030
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891106
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891113
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891120
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891127
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891204
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891211
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891218
                    },
                    {
                        "x_data": 29,
                        "y_data": 19891225
                    },
                    {
                        "x_data": 28,
                        "y_data": 19900101
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900108
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900115
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900122
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900129
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900205
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900212
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900219
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900226
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900305
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900312
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900319
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900326
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900402
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900409
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900416
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900423
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900430
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900507
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900514
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900521
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900528
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900604
                    },
                    {
                        "x_data": 29,
                        "y_data": 19900611
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900618
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900625
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900702
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900709
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900716
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900723
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900730
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900806
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900813
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900820
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900827
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900903
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900910
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900917
                    },
                    {
                        "x_data": 30,
                        "y_data": 19900924
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901001
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901008
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901015
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901022
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901029
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901105
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901112
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901119
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901126
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901203
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901210
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901217
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901224
                    },
                    {
                        "x_data": 30,
                        "y_data": 19901231
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910101
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910107
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910114
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910121
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910128
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910204
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910211
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910218
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910225
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910304
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910311
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910318
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910325
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910401
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910408
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910415
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910422
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910429
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910506
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910513
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910520
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910527
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910603
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910610
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910617
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910624
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910701
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910708
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910715
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910722
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910729
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910805
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910812
                    },
                    {
                        "x_data": 29,
                        "y_data": 19910819
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910826
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910902
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910909
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910916
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910923
                    },
                    {
                        "x_data": 30,
                        "y_data": 19910930
                    },
                    {
                        "x_data": 31,
                        "y_data": 19911007
                    },
                    {
                        "x_data": 31,
                        "y_data": 19911014
                    },
                    {
                        "x_data": 31,
                        "y_data": 19911021
                    },
                    {
                        "x_data": 31,
                        "y_data": 19911028
                    },
                    {
                        "x_data": 44,
                        "y_data": 19911104
                    },
                    {
                        "x_data": 44,
                        "y_data": 19911111
                    },
                    {
                        "x_data": 44,
                        "y_data": 19911118
                    },
                    {
                        "x_data": 44,
                        "y_data": 19911125
                    },
                    {
                        "x_data": 31,
                        "y_data": 19911202
                    },
                    {
                        "x_data": 44,
                        "y_data": 19911209
                    },
                    {
                        "x_data": 45,
                        "y_data": 19911216
                    },
                    {
                        "x_data": 45,
                        "y_data": 19911223
                    },
                    {
                        "x_data": 45,
                        "y_data": 19911230
                    },
                    {
                        "x_data": 44,
                        "y_data": 19920101
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920106
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920113
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920120
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920127
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920203
                    },
                    {
                        "x_data": 29,
                        "y_data": 19920210
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920217
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920224
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920302
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920309
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920316
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920323
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920330
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920406
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920413
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920420
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920427
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920504
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920511
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920518
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920525
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920601
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920608
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920615
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920622
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920629
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920706
                    },
                    {
                        "x_data": 46,
                        "y_data": 19920713
                    },
                    {
                        "x_data": 46,
                        "y_data": 19920720
                    },
                    {
                        "x_data": 45,
                        "y_data": 19920727
                    },
                    {
                        "x_data": 73,
                        "y_data": 19920803
                    },
                    {
                        "x_data": 73,
                        "y_data": 19920810
                    },
                    {
                        "x_data": 73,
                        "y_data": 19920817
                    },
                    {
                        "x_data": 119,
                        "y_data": 19920824
                    },
                    {
                        "x_data": 90,
                        "y_data": 19920831
                    },
                    {
                        "x_data": 90,
                        "y_data": 19920907
                    },
                    {
                        "x_data": 90,
                        "y_data": 19920914
                    },
                    {
                        "x_data": 90,
                        "y_data": 19920921
                    },
                    {
                        "x_data": 90,
                        "y_data": 19920928
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921005
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921012
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921019
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921026
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921102
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921109
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921116
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921123
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921130
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921207
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921214
                    },
                    {
                        "x_data": 62,
                        "y_data": 19921221
                    },
                    {
                        "x_data": 45,
                        "y_data": 19921228
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930101
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930104
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930111
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930118
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930125
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930201
                    },
                    {
                        "x_data": 32,
                        "y_data": 19930208
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930215
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930222
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930301
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930308
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930315
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930322
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930329
                    },
                    {
                        "x_data": 45,
                        "y_data": 19930405
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930412
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930419
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930426
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930503
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930510
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930517
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930524
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930531
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930607
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930614
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930621
                    },
                    {
                        "x_data": 44,
                        "y_data": 19930628
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930705
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930712
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930719
                    },
                    {
                        "x_data": 62,
                        "y_data": 19930726
                    },
                    {
                        "x_data": 43,
                        "y_data": 19930802
                    },
                    {
                        "x_data": 43,
                        "y_data": 19930809
                    },
                    {
                        "x_data": 43,
                        "y_data": 19930816
                    },
                    {
                        "x_data": 43,
                        "y_data": 19930823
                    },
                    {
                        "x_data": 43,
                        "y_data": 19930830
                    },
                    {
                        "x_data": 43,
                        "y_data": 19930906
                    },
                    {
                        "x_data": 43,
                        "y_data": 19930913
                    },
                    {
                        "x_data": 76,
                        "y_data": 19930920
                    },
                    {
                        "x_data": 75,
                        "y_data": 19930927
                    },
                    {
                        "x_data": 58,
                        "y_data": 19931004
                    },
                    {
                        "x_data": 58,
                        "y_data": 19931011
                    },
                    {
                        "x_data": 58,
                        "y_data": 19931018
                    },
                    {
                        "x_data": 58,
                        "y_data": 19931025
                    },
                    {
                        "x_data": 58,
                        "y_data": 19931101
                    },
                    {
                        "x_data": 58,
                        "y_data": 19931108
                    },
                    {
                        "x_data": 75,
                        "y_data": 19931115
                    },
                    {
                        "x_data": 75,
                        "y_data": 19931122
                    },
                    {
                        "x_data": 75,
                        "y_data": 19931129
                    },
                    {
                        "x_data": 75,
                        "y_data": 19931206
                    },
                    {
                        "x_data": 75,
                        "y_data": 19931213
                    },
                    {
                        "x_data": 75,
                        "y_data": 19931220
                    },
                    {
                        "x_data": 75,
                        "y_data": 19931227
                    },
                    {
                        "x_data": 73,
                        "y_data": 19940101
                    },
                    {
                        "x_data": 75,
                        "y_data": 19940103
                    },
                    {
                        "x_data": 75,
                        "y_data": 19940110
                    },
                    {
                        "x_data": 75,
                        "y_data": 19940117
                    },
                    {
                        "x_data": 75,
                        "y_data": 19940124
                    },
                    {
                        "x_data": 62,
                        "y_data": 19940131
                    },
                    {
                        "x_data": 63,
                        "y_data": 19940207
                    },
                    {
                        "x_data": 63,
                        "y_data": 19940214
                    },
                    {
                        "x_data": 63,
                        "y_data": 19940221
                    },
                    {
                        "x_data": 62,
                        "y_data": 19940228
                    },
                    {
                        "x_data": 62,
                        "y_data": 19940307
                    },
                    {
                        "x_data": 62,
                        "y_data": 19940314
                    },
                    {
                        "x_data": 62,
                        "y_data": 19940321
                    },
                    {
                        "x_data": 61,
                        "y_data": 19940328
                    },
                    {
                        "x_data": 62,
                        "y_data": 19940404
                    },
                    {
                        "x_data": 61,
                        "y_data": 19940411
                    },
                    {
                        "x_data": 44,
                        "y_data": 19940418
                    },
                    {
                        "x_data": 57,
                        "y_data": 19940425
                    },
                    {
                        "x_data": 57,
                        "y_data": 19940502
                    },
                    {
                        "x_data": 57,
                        "y_data": 19940509
                    },
                    {
                        "x_data": 57,
                        "y_data": 19940516
                    },
                    {
                        "x_data": 57,
                        "y_data": 19940523
                    },
                    {
                        "x_data": 57,
                        "y_data": 19940530
                    },
                    {
                        "x_data": 65,
                        "y_data": 19940606
                    },
                    {
                        "x_data": 65,
                        "y_data": 19940613
                    },
                    {
                        "x_data": 65,
                        "y_data": 19940620
                    },
                    {
                        "x_data": 65,
                        "y_data": 19940627
                    },
                    {
                        "x_data": 67,
                        "y_data": 19940704
                    },
                    {
                        "x_data": 67,
                        "y_data": 19940711
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940718
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940725
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940801
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940808
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940815
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940822
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940829
                    },
                    {
                        "x_data": 60,
                        "y_data": 19940905
                    },
                    {
                        "x_data": 68,
                        "y_data": 19940912
                    },
                    {
                        "x_data": 68,
                        "y_data": 19940919
                    },
                    {
                        "x_data": 69,
                        "y_data": 19940926
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941003
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941010
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941017
                    },
                    {
                        "x_data": 59,
                        "y_data": 19941024
                    },
                    {
                        "x_data": 59,
                        "y_data": 19941031
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941107
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941114
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941121
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941128
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941205
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941212
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941219
                    },
                    {
                        "x_data": 69,
                        "y_data": 19941226
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950101
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950102
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950109
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950116
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950123
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950130
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950206
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950213
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950220
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950227
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950306
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950313
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950320
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950327
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950403
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950410
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950417
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950424
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950501
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950508
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950515
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950522
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950529
                    },
                    {
                        "x_data": 69,
                        "y_data": 19950605
                    },
                    {
                        "x_data": 96,
                        "y_data": 19950612
                    },
                    {
                        "x_data": 96,
                        "y_data": 19950619
                    },
                    {
                        "x_data": 96,
                        "y_data": 19950626
                    },
                    {
                        "x_data": 96,
                        "y_data": 19950703
                    },
                    {
                        "x_data": 97,
                        "y_data": 19950710
                    },
                    {
                        "x_data": 118,
                        "y_data": 19950717
                    },
                    {
                        "x_data": 118,
                        "y_data": 19950724
                    },
                    {
                        "x_data": 118,
                        "y_data": 19950731
                    },
                    {
                        "x_data": 118,
                        "y_data": 19950807
                    },
                    {
                        "x_data": 118,
                        "y_data": 19950814
                    },
                    {
                        "x_data": 131,
                        "y_data": 19950821
                    },
                    {
                        "x_data": 131,
                        "y_data": 19950828
                    },
                    {
                        "x_data": 131,
                        "y_data": 19950904
                    },
                    {
                        "x_data": 131,
                        "y_data": 19950911
                    },
                    {
                        "x_data": 131,
                        "y_data": 19950918
                    },
                    {
                        "x_data": 131,
                        "y_data": 19950925
                    },
                    {
                        "x_data": 131,
                        "y_data": 19951002
                    },
                    {
                        "x_data": 131,
                        "y_data": 19951009
                    },
                    {
                        "x_data": 131,
                        "y_data": 19951016
                    },
                    {
                        "x_data": 131,
                        "y_data": 19951023
                    },
                    {
                        "x_data": 131,
                        "y_data": 19951030
                    },
                    {
                        "x_data": 131,
                        "y_data": 19951106
                    },
                    {
                        "x_data": 138,
                        "y_data": 19951113
                    },
                    {
                        "x_data": 138,
                        "y_data": 19951120
                    },
                    {
                        "x_data": 138,
                        "y_data": 19951127
                    },
                    {
                        "x_data": 138,
                        "y_data": 19951204
                    },
                    {
                        "x_data": 138,
                        "y_data": 19951211
                    },
                    {
                        "x_data": 138,
                        "y_data": 19951218
                    },
                    {
                        "x_data": 138,
                        "y_data": 19951225
                    },
                    {
                        "x_data": 138,
                        "y_data": 19960101
                    },
                    {
                        "x_data": 125,
                        "y_data": 19960108
                    },
                    {
                        "x_data": 125,
                        "y_data": 19960115
                    },
                    {
                        "x_data": 125,
                        "y_data": 19960122
                    },
                    {
                        "x_data": 125,
                        "y_data": 19960129
                    },
                    {
                        "x_data": 125,
                        "y_data": 19960205
                    },
                    {
                        "x_data": 125,
                        "y_data": 19960212
                    },
                    {
                        "x_data": 125,
                        "y_data": 19960219
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960226
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960304
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960311
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960318
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960325
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960401
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960408
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960415
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960422
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960429
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960506
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960513
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960520
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960527
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960603
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960610
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960617
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960624
                    },
                    {
                        "x_data": 147,
                        "y_data": 19960701
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960708
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960715
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960722
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960729
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960805
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960812
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960819
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960826
                    },
                    {
                        "x_data": 171,
                        "y_data": 19960902
                    },
                    {
                        "x_data": 194,
                        "y_data": 19960909
                    },
                    {
                        "x_data": 172,
                        "y_data": 19960916
                    },
                    {
                        "x_data": 172,
                        "y_data": 19960923
                    },
                    {
                        "x_data": 172,
                        "y_data": 19960930
                    },
                    {
                        "x_data": 172,
                        "y_data": 19961007
                    },
                    {
                        "x_data": 175,
                        "y_data": 19961014
                    },
                    {
                        "x_data": 175,
                        "y_data": 19961021
                    },
                    {
                        "x_data": 191,
                        "y_data": 19961028
                    },
                    {
                        "x_data": 191,
                        "y_data": 19961104
                    },
                    {
                        "x_data": 213,
                        "y_data": 19961111
                    },
                    {
                        "x_data": 213,
                        "y_data": 19961118
                    },
                    {
                        "x_data": 213,
                        "y_data": 19961125
                    },
                    {
                        "x_data": 213,
                        "y_data": 19961202
                    },
                    {
                        "x_data": 213,
                        "y_data": 19961209
                    },
                    {
                        "x_data": 213,
                        "y_data": 19961216
                    },
                    {
                        "x_data": 185,
                        "y_data": 19961223
                    },
                    {
                        "x_data": 185,
                        "y_data": 19961230
                    },
                    {
                        "x_data": 185,
                        "y_data": 19970101
                    },
                    {
                        "x_data": 185,
                        "y_data": 19970106
                    },
                    {
                        "x_data": 185,
                        "y_data": 19970113
                    },
                    {
                        "x_data": 185,
                        "y_data": 19970120
                    },
                    {
                        "x_data": 209,
                        "y_data": 19970127
                    },
                    {
                        "x_data": 209,
                        "y_data": 19970203
                    },
                    {
                        "x_data": 209,
                        "y_data": 19970210
                    },
                    {
                        "x_data": 209,
                        "y_data": 19970217
                    },
                    {
                        "x_data": 223,
                        "y_data": 19970224
                    },
                    {
                        "x_data": 223,
                        "y_data": 19970303
                    },
                    {
                        "x_data": 223,
                        "y_data": 19970310
                    },
                    {
                        "x_data": 223,
                        "y_data": 19970317
                    },
                    {
                        "x_data": 223,
                        "y_data": 19970324
                    },
                    {
                        "x_data": 223,
                        "y_data": 19970331
                    },
                    {
                        "x_data": 223,
                        "y_data": 19970407
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970414
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970421
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970428
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970505
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970512
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970519
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970526
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970602
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970609
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970616
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970623
                    },
                    {
                        "x_data": 225,
                        "y_data": 19970630
                    },
                    {
                        "x_data": 164,
                        "y_data": 19970707
                    },
                    {
                        "x_data": 257,
                        "y_data": 19970714
                    },
                    {
                        "x_data": 257,
                        "y_data": 19970721
                    },
                    {
                        "x_data": 257,
                        "y_data": 19970728
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970804
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970811
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970818
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970825
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970901
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970908
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970915
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970922
                    },
                    {
                        "x_data": 273,
                        "y_data": 19970929
                    },
                    {
                        "x_data": 273,
                        "y_data": 19971006
                    },
                    {
                        "x_data": 299,
                        "y_data": 19971013
                    },
                    {
                        "x_data": 314,
                        "y_data": 19971020
                    },
                    {
                        "x_data": 314,
                        "y_data": 19971027
                    },
                    {
                        "x_data": 337,
                        "y_data": 19971103
                    },
                    {
                        "x_data": 337,
                        "y_data": 19971110
                    },
                    {
                        "x_data": 363,
                        "y_data": 19971117
                    },
                    {
                        "x_data": 363,
                        "y_data": 19971124
                    },
                    {
                        "x_data": 363,
                        "y_data": 19971201
                    },
                    {
                        "x_data": 394,
                        "y_data": 19971208
                    },
                    {
                        "x_data": 394,
                        "y_data": 19971215
                    },
                    {
                        "x_data": 394,
                        "y_data": 19971222
                    },
                    {
                        "x_data": 394,
                        "y_data": 19971229
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980101
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980105
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980112
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980119
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980126
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980202
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980209
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980216
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980223
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980302
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980309
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980316
                    },
                    {
                        "x_data": 394,
                        "y_data": 19980323
                    },
                    {
                        "x_data": 426,
                        "y_data": 19980330
                    },
                    {
                        "x_data": 426,
                        "y_data": 19980406
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980413
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980420
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980427
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980504
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980511
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980518
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980525
                    },
                    {
                        "x_data": 459,
                        "y_data": 19980601
                    },
                    {
                        "x_data": 543,
                        "y_data": 19980608
                    },
                    {
                        "x_data": 569,
                        "y_data": 19980615
                    },
                    {
                        "x_data": 590,
                        "y_data": 19980622
                    },
                    {
                        "x_data": 590,
                        "y_data": 19980629
                    },
                    {
                        "x_data": 633,
                        "y_data": 19980706
                    },
                    {
                        "x_data": 633,
                        "y_data": 19980713
                    },
                    {
                        "x_data": 633,
                        "y_data": 19980720
                    },
                    {
                        "x_data": 634,
                        "y_data": 19980727
                    },
                    {
                        "x_data": 634,
                        "y_data": 19980803
                    },
                    {
                        "x_data": 634,
                        "y_data": 19980810
                    },
                    {
                        "x_data": 631,
                        "y_data": 19980817
                    },
                    {
                        "x_data": 631,
                        "y_data": 19980824
                    },
                    {
                        "x_data": 660,
                        "y_data": 19980831
                    },
                    {
                        "x_data": 660,
                        "y_data": 19980907
                    },
                    {
                        "x_data": 663,
                        "y_data": 19980914
                    },
                    {
                        "x_data": 663,
                        "y_data": 19980921
                    },
                    {
                        "x_data": 683,
                        "y_data": 19980928
                    },
                    {
                        "x_data": 688,
                        "y_data": 19981005
                    },
                    {
                        "x_data": 688,
                        "y_data": 19981012
                    },
                    {
                        "x_data": 696,
                        "y_data": 19981019
                    },
                    {
                        "x_data": 693,
                        "y_data": 19981026
                    },
                    {
                        "x_data": 693,
                        "y_data": 19981102
                    },
                    {
                        "x_data": 692,
                        "y_data": 19981109
                    },
                    {
                        "x_data": 692,
                        "y_data": 19981116
                    },
                    {
                        "x_data": 692,
                        "y_data": 19981123
                    },
                    {
                        "x_data": 709,
                        "y_data": 19981130
                    },
                    {
                        "x_data": 703,
                        "y_data": 19981207
                    },
                    {
                        "x_data": 703,
                        "y_data": 19981214
                    },
                    {
                        "x_data": 703,
                        "y_data": 19981221
                    },
                    {
                        "x_data": 703,
                        "y_data": 19981228
                    },
                    {
                        "x_data": 703,
                        "y_data": 19990101
                    },
                    {
                        "x_data": 722,
                        "y_data": 19990104
                    },
                    {
                        "x_data": 722,
                        "y_data": 19990111
                    },
                    {
                        "x_data": 722,
                        "y_data": 19990118
                    },
                    {
                        "x_data": 722,
                        "y_data": 19990125
                    },
                    {
                        "x_data": 728,
                        "y_data": 19990201
                    },
                    {
                        "x_data": 723,
                        "y_data": 19990208
                    },
                    {
                        "x_data": 723,
                        "y_data": 19990215
                    },
                    {
                        "x_data": 723,
                        "y_data": 19990222
                    },
                    {
                        "x_data": 723,
                        "y_data": 19990301
                    },
                    {
                        "x_data": 723,
                        "y_data": 19990308
                    },
                    {
                        "x_data": 728,
                        "y_data": 19990315
                    },
                    {
                        "x_data": 728,
                        "y_data": 19990322
                    },
                    {
                        "x_data": 728,
                        "y_data": 19990329
                    },
                    {
                        "x_data": 728,
                        "y_data": 19990405
                    },
                    {
                        "x_data": 728,
                        "y_data": 19990412
                    },
                    {
                        "x_data": 728,
                        "y_data": 19990419
                    },
                    {
                        "x_data": 752,
                        "y_data": 19990426
                    },
                    {
                        "x_data": 761,
                        "y_data": 19990503
                    },
                    {
                        "x_data": 761,
                        "y_data": 19990510
                    },
                    {
                        "x_data": 777,
                        "y_data": 19990517
                    },
                    {
                        "x_data": 777,
                        "y_data": 19990524
                    },
                    {
                        "x_data": 777,
                        "y_data": 19990531
                    },
                    {
                        "x_data": 804,
                        "y_data": 19990607
                    },
                    {
                        "x_data": 804,
                        "y_data": 19990614
                    },
                    {
                        "x_data": 804,
                        "y_data": 19990621
                    },
                    {
                        "x_data": 804,
                        "y_data": 19990628
                    },
                    {
                        "x_data": 804,
                        "y_data": 19990705
                    },
                    {
                        "x_data": 829,
                        "y_data": 19990712
                    },
                    {
                        "x_data": 829,
                        "y_data": 19990719
                    },
                    {
                        "x_data": 829,
                        "y_data": 19990726
                    },
                    {
                        "x_data": 829,
                        "y_data": 19990802
                    },
                    {
                        "x_data": 870,
                        "y_data": 19990809
                    },
                    {
                        "x_data": 873,
                        "y_data": 19990816
                    },
                    {
                        "x_data": 853,
                        "y_data": 19990823
                    },
                    {
                        "x_data": 861,
                        "y_data": 19990830
                    },
                    {
                        "x_data": 861,
                        "y_data": 19990906
                    },
                    {
                        "x_data": 879,
                        "y_data": 19990913
                    },
                    {
                        "x_data": 879,
                        "y_data": 19990920
                    },
                    {
                        "x_data": 899,
                        "y_data": 19990927
                    },
                    {
                        "x_data": 927,
                        "y_data": 19991004
                    },
                    {
                        "x_data": 941,
                        "y_data": 19991011
                    },
                    {
                        "x_data": 964,
                        "y_data": 19991018
                    },
                    {
                        "x_data": 941,
                        "y_data": 19991025
                    },
                    {
                        "x_data": 941,
                        "y_data": 19991101
                    },
                    {
                        "x_data": 941,
                        "y_data": 19991108
                    },
                    {
                        "x_data": 941,
                        "y_data": 19991115
                    },
                    {
                        "x_data": 941,
                        "y_data": 19991122
                    },
                    {
                        "x_data": 966,
                        "y_data": 19991129
                    },
                    {
                        "x_data": 966,
                        "y_data": 19991206
                    },
                    {
                        "x_data": 989,
                        "y_data": 19991213
                    },
                    {
                        "x_data": 989,
                        "y_data": 19991220
                    },
                    {
                        "x_data": 989,
                        "y_data": 19991227
                    },
                    {
                        "x_data": 989,
                        "y_data": 20000101
                    },
                    {
                        "x_data": 989,
                        "y_data": 20000103
                    },
                    {
                        "x_data": 989,
                        "y_data": 20000110
                    },
                    {
                        "x_data": 989,
                        "y_data": 20000117
                    },
                    {
                        "x_data": 989,
                        "y_data": 20000124
                    },
                    {
                        "x_data": 1013,
                        "y_data": 20000131
                    },
                    {
                        "x_data": 1038,
                        "y_data": 20000207
                    },
                    {
                        "x_data": 1038,
                        "y_data": 20000214
                    },
                    {
                        "x_data": 1038,
                        "y_data": 20000221
                    },
                    {
                        "x_data": 1038,
                        "y_data": 20000228
                    },
                    {
                        "x_data": 1065,
                        "y_data": 20000306
                    },
                    {
                        "x_data": 1065,
                        "y_data": 20000313
                    },
                    {
                        "x_data": 1065,
                        "y_data": 20000320
                    },
                    {
                        "x_data": 1065,
                        "y_data": 20000327
                    },
                    {
                        "x_data": 1065,
                        "y_data": 20000403
                    },
                    {
                        "x_data": 1093,
                        "y_data": 20000410
                    },
                    {
                        "x_data": 1093,
                        "y_data": 20000417
                    },
                    {
                        "x_data": 1093,
                        "y_data": 20000424
                    },
                    {
                        "x_data": 1122,
                        "y_data": 20000501
                    },
                    {
                        "x_data": 1122,
                        "y_data": 20000508
                    },
                    {
                        "x_data": 1106,
                        "y_data": 20000515
                    },
                    {
                        "x_data": 1106,
                        "y_data": 20000522
                    },
                    {
                        "x_data": 1106,
                        "y_data": 20000529
                    },
                    {
                        "x_data": 1106,
                        "y_data": 20000605
                    },
                    {
                        "x_data": 1160,
                        "y_data": 20000612
                    },
                    {
                        "x_data": 1160,
                        "y_data": 20000619
                    },
                    {
                        "x_data": 1188,
                        "y_data": 20000626
                    },
                    {
                        "x_data": 1188,
                        "y_data": 20000703
                    },
                    {
                        "x_data": 1204,
                        "y_data": 20000710
                    },
                    {
                        "x_data": 1205,
                        "y_data": 20000717
                    },
                    {
                        "x_data": 1212,
                        "y_data": 20000724
                    },
                    {
                        "x_data": 1276,
                        "y_data": 20000731
                    },
                    {
                        "x_data": 1276,
                        "y_data": 20000807
                    },
                    {
                        "x_data": 1224,
                        "y_data": 20000814
                    },
                    {
                        "x_data": 1224,
                        "y_data": 20000821
                    },
                    {
                        "x_data": 1224,
                        "y_data": 20000828
                    },
                    {
                        "x_data": 1224,
                        "y_data": 20000904
                    },
                    {
                        "x_data": 1241,
                        "y_data": 20000911
                    },
                    {
                        "x_data": 1265,
                        "y_data": 20000918
                    },
                    {
                        "x_data": 1231,
                        "y_data": 20000925
                    },
                    {
                        "x_data": 1223,
                        "y_data": 20001002
                    },
                    {
                        "x_data": 1232,
                        "y_data": 20001009
                    },
                    {
                        "x_data": 1253,
                        "y_data": 20001016
                    },
                    {
                        "x_data": 1245,
                        "y_data": 20001023
                    },
                    {
                        "x_data": 1247,
                        "y_data": 20001030
                    },
                    {
                        "x_data": 1173,
                        "y_data": 20001106
                    },
                    {
                        "x_data": 964,
                        "y_data": 20001113
                    },
                    {
                        "x_data": 961,
                        "y_data": 20001120
                    },
                    {
                        "x_data": 961,
                        "y_data": 20001127
                    },
                    {
                        "x_data": 961,
                        "y_data": 20001204
                    },
                    {
                        "x_data": 964,
                        "y_data": 20001211
                    },
                    {
                        "x_data": 964,
                        "y_data": 20001218
                    },
                    {
                        "x_data": 964,
                        "y_data": 20001225
                    },
                    {
                        "x_data": 964,
                        "y_data": 20010101
                    },
                    {
                        "x_data": 964,
                        "y_data": 20010108
                    },
                    {
                        "x_data": 964,
                        "y_data": 20010115
                    },
                    {
                        "x_data": 964,
                        "y_data": 20010122
                    },
                    {
                        "x_data": 977,
                        "y_data": 20010129
                    },
                    {
                        "x_data": 977,
                        "y_data": 20010205
                    },
                    {
                        "x_data": 1004,
                        "y_data": 20010212
                    },
                    {
                        "x_data": 1027,
                        "y_data": 20010219
                    },
                    {
                        "x_data": 1027,
                        "y_data": 20010226
                    },
                    {
                        "x_data": 1027,
                        "y_data": 20010305
                    },
                    {
                        "x_data": 1027,
                        "y_data": 20010312
                    },
                    {
                        "x_data": 1101,
                        "y_data": 20010319
                    },
                    {
                        "x_data": 1101,
                        "y_data": 20010326
                    },
                    {
                        "x_data": 914,
                        "y_data": 20010402
                    },
                    {
                        "x_data": 930,
                        "y_data": 20010409
                    },
                    {
                        "x_data": 952,
                        "y_data": 20010416
                    },
                    {
                        "x_data": 961,
                        "y_data": 20010423
                    },
                    {
                        "x_data": 988,
                        "y_data": 20010430
                    },
                    {
                        "x_data": 1011,
                        "y_data": 20010507
                    },
                    {
                        "x_data": 1011,
                        "y_data": 20010514
                    },
                    {
                        "x_data": 1029,
                        "y_data": 20010521
                    },
                    {
                        "x_data": 1067,
                        "y_data": 20010528
                    },
                    {
                        "x_data": 1067,
                        "y_data": 20010604
                    },
                    {
                        "x_data": 1094,
                        "y_data": 20010611
                    },
                    {
                        "x_data": 1094,
                        "y_data": 20010618
                    },
                    {
                        "x_data": 1073,
                        "y_data": 20010625
                    },
                    {
                        "x_data": 1073,
                        "y_data": 20010702
                    },
                    {
                        "x_data": 1113,
                        "y_data": 20010709
                    },
                    {
                        "x_data": 1135,
                        "y_data": 20010716
                    },
                    {
                        "x_data": 1149,
                        "y_data": 20010723
                    },
                    {
                        "x_data": 1149,
                        "y_data": 20010730
                    },
                    {
                        "x_data": 1175,
                        "y_data": 20010806
                    },
                    {
                        "x_data": 1175,
                        "y_data": 20010813
                    },
                    {
                        "x_data": 1175,
                        "y_data": 20010820
                    },
                    {
                        "x_data": 1201,
                        "y_data": 20010827
                    },
                    {
                        "x_data": 1201,
                        "y_data": 20010903
                    },
                    {
                        "x_data": 1228,
                        "y_data": 20010910
                    },
                    {
                        "x_data": 1231,
                        "y_data": 20010917
                    },
                    {
                        "x_data": 1263,
                        "y_data": 20010924
                    },
                    {
                        "x_data": 1287,
                        "y_data": 20011001
                    },
                    {
                        "x_data": 1267,
                        "y_data": 20011008
                    },
                    {
                        "x_data": 1288,
                        "y_data": 20011015
                    },
                    {
                        "x_data": 1291,
                        "y_data": 20011022
                    },
                    {
                        "x_data": 1312,
                        "y_data": 20011029
                    },
                    {
                        "x_data": 1312,
                        "y_data": 20011105
                    },
                    {
                        "x_data": 1412,
                        "y_data": 20011112
                    },
                    {
                        "x_data": 1412,
                        "y_data": 20011119
                    },
                    {
                        "x_data": 1437,
                        "y_data": 20011126
                    },
                    {
                        "x_data": 1437,
                        "y_data": 20011203
                    },
                    {
                        "x_data": 1437,
                        "y_data": 20011210
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20011217
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20011224
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20011231
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20020101
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20020107
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20020114
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20020121
                    },
                    {
                        "x_data": 1430,
                        "y_data": 20020128
                    },
                    {
                        "x_data": 1422,
                        "y_data": 20020204
                    },
                    {
                        "x_data": 1422,
                        "y_data": 20020211
                    },
                    {
                        "x_data": 1422,
                        "y_data": 20020218
                    },
                    {
                        "x_data": 1424,
                        "y_data": 20020225
                    },
                    {
                        "x_data": 1424,
                        "y_data": 20020304
                    },
                    {
                        "x_data": 1424,
                        "y_data": 20020311
                    },
                    {
                        "x_data": 1448,
                        "y_data": 20020318
                    },
                    {
                        "x_data": 1448,
                        "y_data": 20020325
                    },
                    {
                        "x_data": 1573,
                        "y_data": 20020401
                    },
                    {
                        "x_data": 1574,
                        "y_data": 20020408
                    },
                    {
                        "x_data": 1574,
                        "y_data": 20020415
                    },
                    {
                        "x_data": 1574,
                        "y_data": 20020422
                    },
                    {
                        "x_data": 1577,
                        "y_data": 20020429
                    },
                    {
                        "x_data": 1730,
                        "y_data": 20020506
                    },
                    {
                        "x_data": 1577,
                        "y_data": 20020513
                    },
                    {
                        "x_data": 1577,
                        "y_data": 20020520
                    },
                    {
                        "x_data": 1577,
                        "y_data": 20020527
                    },
                    {
                        "x_data": 1577,
                        "y_data": 20020603
                    },
                    {
                        "x_data": 1783,
                        "y_data": 20020610
                    },
                    {
                        "x_data": 1803,
                        "y_data": 20020617
                    },
                    {
                        "x_data": 1783,
                        "y_data": 20020624
                    },
                    {
                        "x_data": 1783,
                        "y_data": 20020701
                    },
                    {
                        "x_data": 1834,
                        "y_data": 20020708
                    },
                    {
                        "x_data": 1835,
                        "y_data": 20020715
                    },
                    {
                        "x_data": 1828,
                        "y_data": 20020722
                    },
                    {
                        "x_data": 1853,
                        "y_data": 20020729
                    },
                    {
                        "x_data": 1853,
                        "y_data": 20020805
                    },
                    {
                        "x_data": 1925,
                        "y_data": 20020812
                    },
                    {
                        "x_data": 1915,
                        "y_data": 20020819
                    },
                    {
                        "x_data": 2111,
                        "y_data": 20020826
                    },
                    {
                        "x_data": 2111,
                        "y_data": 20020902
                    },
                    {
                        "x_data": 2451,
                        "y_data": 20020909
                    },
                    {
                        "x_data": 2457,
                        "y_data": 20020916
                    },
                    {
                        "x_data": 2462,
                        "y_data": 20020923
                    },
                    {
                        "x_data": 2496,
                        "y_data": 20020930
                    },
                    {
                        "x_data": 2526,
                        "y_data": 20021007
                    },
                    {
                        "x_data": 2520,
                        "y_data": 20021014
                    },
                    {
                        "x_data": 2505,
                        "y_data": 20021021
                    },
                    {
                        "x_data": 2505,
                        "y_data": 20021028
                    },
                    {
                        "x_data": 2498,
                        "y_data": 20021104
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021111
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021118
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021125
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021202
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021209
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021216
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021223
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20021230
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20030101
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20030106
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20030113
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20030120
                    },
                    {
                        "x_data": 2497,
                        "y_data": 20030127
                    },
                    {
                        "x_data": 2517,
                        "y_data": 20030203
                    },
                    {
                        "x_data": 2507,
                        "y_data": 20030210
                    },
                    {
                        "x_data": 2490,
                        "y_data": 20030217
                    },
                    {
                        "x_data": 2528,
                        "y_data": 20030224
                    },
                    {
                        "x_data": 2549,
                        "y_data": 20030303
                    },
                    {
                        "x_data": 2549,
                        "y_data": 20030310
                    },
                    {
                        "x_data": 2571,
                        "y_data": 20030317
                    },
                    {
                        "x_data": 2571,
                        "y_data": 20030324
                    },
                    {
                        "x_data": 2614,
                        "y_data": 20030331
                    },
                    {
                        "x_data": 2587,
                        "y_data": 20030407
                    },
                    {
                        "x_data": 2587,
                        "y_data": 20030414
                    },
                    {
                        "x_data": 2608,
                        "y_data": 20030421
                    },
                    {
                        "x_data": 2719,
                        "y_data": 20030428
                    },
                    {
                        "x_data": 2652,
                        "y_data": 20030505
                    },
                    {
                        "x_data": 2671,
                        "y_data": 20030512
                    },
                    {
                        "x_data": 2728,
                        "y_data": 20030519
                    },
                    {
                        "x_data": 1860,
                        "y_data": 20030526
                    },
                    {
                        "x_data": 2728,
                        "y_data": 20030602
                    },
                    {
                        "x_data": 2753,
                        "y_data": 20030609
                    },
                    {
                        "x_data": 2753,
                        "y_data": 20030616
                    },
                    {
                        "x_data": 2731,
                        "y_data": 20030623
                    },
                    {
                        "x_data": 2731,
                        "y_data": 20030630
                    },
                    {
                        "x_data": 2730,
                        "y_data": 20030707
                    },
                    {
                        "x_data": 2755,
                        "y_data": 20030714
                    },
                    {
                        "x_data": 2759,
                        "y_data": 20030721
                    },
                    {
                        "x_data": 2777,
                        "y_data": 20030728
                    },
                    {
                        "x_data": 2732,
                        "y_data": 20030804
                    },
                    {
                        "x_data": 2734,
                        "y_data": 20030811
                    },
                    {
                        "x_data": 2755,
                        "y_data": 20030818
                    },
                    {
                        "x_data": 2801,
                        "y_data": 20030825
                    },
                    {
                        "x_data": 2801,
                        "y_data": 20030901
                    },
                    {
                        "x_data": 2798,
                        "y_data": 20030908
                    },
                    {
                        "x_data": 2847,
                        "y_data": 20030915
                    },
                    {
                        "x_data": 2862,
                        "y_data": 20030922
                    },
                    {
                        "x_data": 2930,
                        "y_data": 20030929
                    },
                    {
                        "x_data": 2961,
                        "y_data": 20031006
                    },
                    {
                        "x_data": 2966,
                        "y_data": 20031013
                    },
                    {
                        "x_data": 3035,
                        "y_data": 20031020
                    },
                    {
                        "x_data": 3020,
                        "y_data": 20031027
                    },
                    {
                        "x_data": 3038,
                        "y_data": 20031103
                    },
                    {
                        "x_data": 3052,
                        "y_data": 20031110
                    },
                    {
                        "x_data": 3065,
                        "y_data": 20031117
                    },
                    {
                        "x_data": 3092,
                        "y_data": 20031124
                    },
                    {
                        "x_data": 3120,
                        "y_data": 20031201
                    },
                    {
                        "x_data": 3190,
                        "y_data": 20031208
                    },
                    {
                        "x_data": 3211,
                        "y_data": 20031215
                    },
                    {
                        "x_data": 3211,
                        "y_data": 20031222
                    },
                    {
                        "x_data": 3214,
                        "y_data": 20031229
                    },
                    {
                        "x_data": 3214,
                        "y_data": 20040101
                    },
                    {
                        "x_data": 3206,
                        "y_data": 20040105
                    },
                    {
                        "x_data": 3206,
                        "y_data": 20040112
                    },
                    {
                        "x_data": 3206,
                        "y_data": 20040119
                    },
                    {
                        "x_data": 3206,
                        "y_data": 20040126
                    },
                    {
                        "x_data": 3257,
                        "y_data": 20040202
                    },
                    {
                        "x_data": 3265,
                        "y_data": 20040209
                    },
                    {
                        "x_data": 3282,
                        "y_data": 20040216
                    },
                    {
                        "x_data": 3282,
                        "y_data": 20040223
                    },
                    {
                        "x_data": 3279,
                        "y_data": 20040301
                    },
                    {
                        "x_data": 3286,
                        "y_data": 20040308
                    },
                    {
                        "x_data": 3286,
                        "y_data": 20040315
                    },
                    {
                        "x_data": 3286,
                        "y_data": 20040322
                    },
                    {
                        "x_data": 3286,
                        "y_data": 20040329
                    },
                    {
                        "x_data": 3277,
                        "y_data": 20040405
                    },
                    {
                        "x_data": 3286,
                        "y_data": 20040412
                    },
                    {
                        "x_data": 1489,
                        "y_data": 20040419
                    },
                    {
                        "x_data": 3379,
                        "y_data": 20040426
                    },
                    {
                        "x_data": 2613,
                        "y_data": 20040503
                    },
                    {
                        "x_data": 1187,
                        "y_data": 20040510
                    },
                    {
                        "x_data": 2361,
                        "y_data": 20040517
                    },
                    {
                        "x_data": 2955,
                        "y_data": 20040524
                    },
                    {
                        "x_data": 2535,
                        "y_data": 20040531
                    },
                    {
                        "x_data": 3433,
                        "y_data": 20040607
                    },
                    {
                        "x_data": 3456,
                        "y_data": 20040614
                    },
                    {
                        "x_data": 3492,
                        "y_data": 20040621
                    },
                    {
                        "x_data": 3492,
                        "y_data": 20040628
                    },
                    {
                        "x_data": 3498,
                        "y_data": 20040705
                    },
                    {
                        "x_data": 3516,
                        "y_data": 20040712
                    },
                    {
                        "x_data": 3587,
                        "y_data": 20040719
                    },
                    {
                        "x_data": 3592,
                        "y_data": 20040726
                    },
                    {
                        "x_data": 3592,
                        "y_data": 20040802
                    },
                    {
                        "x_data": 3645,
                        "y_data": 20040809
                    },
                    {
                        "x_data": 3647,
                        "y_data": 20040816
                    },
                    {
                        "x_data": 3661,
                        "y_data": 20040823
                    },
                    {
                        "x_data": 3705,
                        "y_data": 20040830
                    },
                    {
                        "x_data": 3705,
                        "y_data": 20040906
                    },
                    {
                        "x_data": 3785,
                        "y_data": 20040913
                    },
                    {
                        "x_data": 3831,
                        "y_data": 20040920
                    },
                    {
                        "x_data": 3913,
                        "y_data": 20040927
                    },
                    {
                        "x_data": 3957,
                        "y_data": 20041004
                    },
                    {
                        "x_data": 3986,
                        "y_data": 20041011
                    },
                    {
                        "x_data": 3987,
                        "y_data": 20041018
                    },
                    {
                        "x_data": 3968,
                        "y_data": 20041025
                    },
                    {
                        "x_data": 4011,
                        "y_data": 20041101
                    },
                    {
                        "x_data": 4071,
                        "y_data": 20041108
                    },
                    {
                        "x_data": 4124,
                        "y_data": 20041115
                    },
                    {
                        "x_data": 4145,
                        "y_data": 20041122
                    },
                    {
                        "x_data": 4147,
                        "y_data": 20041129
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20041206
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20041213
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20041220
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20041227
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20050101
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20050103
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20050110
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20050117
                    },
                    {
                        "x_data": 4160,
                        "y_data": 20050124
                    },
                    {
                        "x_data": 4198,
                        "y_data": 20050131
                    },
                    {
                        "x_data": 4198,
                        "y_data": 20050207
                    },
                    {
                        "x_data": 4211,
                        "y_data": 20050214
                    },
                    {
                        "x_data": 4286,
                        "y_data": 20050221
                    },
                    {
                        "x_data": 4286,
                        "y_data": 20050228
                    },
                    {
                        "x_data": 4313,
                        "y_data": 20050307
                    },
                    {
                        "x_data": 4313,
                        "y_data": 20050314
                    },
                    {
                        "x_data": 4333,
                        "y_data": 20050321
                    },
                    {
                        "x_data": 4333,
                        "y_data": 20050328
                    },
                    {
                        "x_data": 4362,
                        "y_data": 20050404
                    },
                    {
                        "x_data": 4371,
                        "y_data": 20050411
                    },
                    {
                        "x_data": 4379,
                        "y_data": 20050418
                    },
                    {
                        "x_data": 4379,
                        "y_data": 20050425
                    },
                    {
                        "x_data": 4379,
                        "y_data": 20050502
                    },
                    {
                        "x_data": 4470,
                        "y_data": 20050509
                    },
                    {
                        "x_data": 4489,
                        "y_data": 20050516
                    },
                    {
                        "x_data": 4522,
                        "y_data": 20050523
                    },
                    {
                        "x_data": 4522,
                        "y_data": 20050530
                    },
                    {
                        "x_data": 4682,
                        "y_data": 20050606
                    },
                    {
                        "x_data": 4705,
                        "y_data": 20050613
                    },
                    {
                        "x_data": 4727,
                        "y_data": 20050620
                    },
                    {
                        "x_data": 4727,
                        "y_data": 20050627
                    },
                    {
                        "x_data": 4792,
                        "y_data": 20050704
                    },
                    {
                        "x_data": 4816,
                        "y_data": 20050711
                    },
                    {
                        "x_data": 4847,
                        "y_data": 20050718
                    },
                    {
                        "x_data": 4859,
                        "y_data": 20050725
                    },
                    {
                        "x_data": 4926,
                        "y_data": 20050801
                    },
                    {
                        "x_data": 4982,
                        "y_data": 20050808
                    },
                    {
                        "x_data": 5020,
                        "y_data": 20050815
                    },
                    {
                        "x_data": 5090,
                        "y_data": 20050822
                    },
                    {
                        "x_data": 5100,
                        "y_data": 20050829
                    },
                    {
                        "x_data": 5100,
                        "y_data": 20050905
                    },
                    {
                        "x_data": 5187,
                        "y_data": 20050912
                    },
                    {
                        "x_data": 5173,
                        "y_data": 20050919
                    },
                    {
                        "x_data": 5175,
                        "y_data": 20050926
                    },
                    {
                        "x_data": 5215,
                        "y_data": 20051003
                    },
                    {
                        "x_data": 5249,
                        "y_data": 20051010
                    },
                    {
                        "x_data": 5237,
                        "y_data": 20051017
                    },
                    {
                        "x_data": 5257,
                        "y_data": 20051024
                    },
                    {
                        "x_data": 5331,
                        "y_data": 20051031
                    },
                    {
                        "x_data": 5362,
                        "y_data": 20051107
                    },
                    {
                        "x_data": 5357,
                        "y_data": 20051114
                    },
                    {
                        "x_data": 5391,
                        "y_data": 20051121
                    },
                    {
                        "x_data": 5401,
                        "y_data": 20051128
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20051205
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20051212
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20051219
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20051226
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20060101
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20060102
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20060109
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20060116
                    },
                    {
                        "x_data": 5452,
                        "y_data": 20060123
                    },
                    {
                        "x_data": 5441,
                        "y_data": 20060130
                    },
                    {
                        "x_data": 5425,
                        "y_data": 20060206
                    },
                    {
                        "x_data": 5441,
                        "y_data": 20060213
                    },
                    {
                        "x_data": 5478,
                        "y_data": 20060220
                    },
                    {
                        "x_data": 5528,
                        "y_data": 20060227
                    },
                    {
                        "x_data": 5548,
                        "y_data": 20060306
                    },
                    {
                        "x_data": 5548,
                        "y_data": 20060313
                    },
                    {
                        "x_data": 5559,
                        "y_data": 20060320
                    },
                    {
                        "x_data": 5559,
                        "y_data": 20060327
                    },
                    {
                        "x_data": 5626,
                        "y_data": 20060403
                    },
                    {
                        "x_data": 5626,
                        "y_data": 20060410
                    },
                    {
                        "x_data": 5644,
                        "y_data": 20060417
                    },
                    {
                        "x_data": 5658,
                        "y_data": 20060424
                    },
                    {
                        "x_data": 5656,
                        "y_data": 20060501
                    },
                    {
                        "x_data": 5654,
                        "y_data": 20060508
                    },
                    {
                        "x_data": 5683,
                        "y_data": 20060515
                    },
                    {
                        "x_data": 5721,
                        "y_data": 20060522
                    },
                    {
                        "x_data": 5798,
                        "y_data": 20060529
                    },
                    {
                        "x_data": 5798,
                        "y_data": 20060605
                    },
                    {
                        "x_data": 5862,
                        "y_data": 20060612
                    },
                    {
                        "x_data": 5897,
                        "y_data": 20060619
                    },
                    {
                        "x_data": 5944,
                        "y_data": 20060626
                    },
                    {
                        "x_data": 5944,
                        "y_data": 20060703
                    },
                    {
                        "x_data": 5983,
                        "y_data": 20060710
                    },
                    {
                        "x_data": 6026,
                        "y_data": 20060717
                    },
                    {
                        "x_data": 6065,
                        "y_data": 20060724
                    },
                    {
                        "x_data": 6133,
                        "y_data": 20060731
                    },
                    {
                        "x_data": 6151,
                        "y_data": 20060807
                    },
                    {
                        "x_data": 6226,
                        "y_data": 20060814
                    },
                    {
                        "x_data": 6289,
                        "y_data": 20060821
                    },
                    {
                        "x_data": 6284,
                        "y_data": 20060828
                    },
                    {
                        "x_data": 6284,
                        "y_data": 20060904
                    },
                    {
                        "x_data": 6304,
                        "y_data": 20060911
                    },
                    {
                        "x_data": 6347,
                        "y_data": 20060918
                    },
                    {
                        "x_data": 6376,
                        "y_data": 20060925
                    },
                    {
                        "x_data": 6436,
                        "y_data": 20061002
                    },
                    {
                        "x_data": 6520,
                        "y_data": 20061009
                    },
                    {
                        "x_data": 6629,
                        "y_data": 20061016
                    },
                    {
                        "x_data": 6730,
                        "y_data": 20061023
                    },
                    {
                        "x_data": 6808,
                        "y_data": 20061030
                    },
                    {
                        "x_data": 6816,
                        "y_data": 20061106
                    },
                    {
                        "x_data": 6807,
                        "y_data": 20061113
                    },
                    {
                        "x_data": 6893,
                        "y_data": 20061120
                    },
                    {
                        "x_data": 6896,
                        "y_data": 20061127
                    },
                    {
                        "x_data": 6931,
                        "y_data": 20061204
                    },
                    {
                        "x_data": 6953,
                        "y_data": 20061211
                    },
                    {
                        "x_data": 6953,
                        "y_data": 20061218
                    },
                    {
                        "x_data": 6953,
                        "y_data": 20061225
                    },
                    {
                        "x_data": 6953,
                        "y_data": 20070101
                    },
                    {
                        "x_data": 6926,
                        "y_data": 20070108
                    },
                    {
                        "x_data": 6926,
                        "y_data": 20070115
                    },
                    {
                        "x_data": 6926,
                        "y_data": 20070122
                    },
                    {
                        "x_data": 6925,
                        "y_data": 20070129
                    },
                    {
                        "x_data": 6925,
                        "y_data": 20070205
                    },
                    {
                        "x_data": 6930,
                        "y_data": 20070212
                    },
                    {
                        "x_data": 6942,
                        "y_data": 20070219
                    },
                    {
                        "x_data": 6988,
                        "y_data": 20070226
                    },
                    {
                        "x_data": 7017,
                        "y_data": 20070305
                    },
                    {
                        "x_data": 7017,
                        "y_data": 20070312
                    },
                    {
                        "x_data": 7058,
                        "y_data": 20070319
                    },
                    {
                        "x_data": 7058,
                        "y_data": 20070326
                    },
                    {
                        "x_data": 7139,
                        "y_data": 20070402
                    },
                    {
                        "x_data": 7175,
                        "y_data": 20070409
                    },
                    {
                        "x_data": 7197,
                        "y_data": 20070416
                    },
                    {
                        "x_data": 7197,
                        "y_data": 20070423
                    },
                    {
                        "x_data": 7197,
                        "y_data": 20070430
                    },
                    {
                        "x_data": 7233,
                        "y_data": 20070507
                    },
                    {
                        "x_data": 7317,
                        "y_data": 20070514
                    },
                    {
                        "x_data": 7341,
                        "y_data": 20070521
                    },
                    {
                        "x_data": 7365,
                        "y_data": 20070528
                    },
                    {
                        "x_data": 7365,
                        "y_data": 20070604
                    },
                    {
                        "x_data": 7448,
                        "y_data": 20070611
                    },
                    {
                        "x_data": 7448,
                        "y_data": 20070618
                    },
                    {
                        "x_data": 7473,
                        "y_data": 20070625
                    },
                    {
                        "x_data": 7473,
                        "y_data": 20070702
                    },
                    {
                        "x_data": 7495,
                        "y_data": 20070709
                    },
                    {
                        "x_data": 7478,
                        "y_data": 20070716
                    },
                    {
                        "x_data": 7470,
                        "y_data": 20070723
                    },
                    {
                        "x_data": 7528,
                        "y_data": 20070730
                    },
                    {
                        "x_data": 7522,
                        "y_data": 20070806
                    },
                    {
                        "x_data": 7527,
                        "y_data": 20070813
                    },
                    {
                        "x_data": 7503,
                        "y_data": 20070820
                    },
                    {
                        "x_data": 7504,
                        "y_data": 20070827
                    },
                    {
                        "x_data": 7504,
                        "y_data": 20070903
                    },
                    {
                        "x_data": 7602,
                        "y_data": 20070910
                    },
                    {
                        "x_data": 7643,
                        "y_data": 20070917
                    },
                    {
                        "x_data": 7686,
                        "y_data": 20070924
                    },
                    {
                        "x_data": 7697,
                        "y_data": 20071001
                    },
                    {
                        "x_data": 7707,
                        "y_data": 20071008
                    },
                    {
                        "x_data": 7687,
                        "y_data": 20071015
                    },
                    {
                        "x_data": 7638,
                        "y_data": 20071022
                    },
                    {
                        "x_data": 7711,
                        "y_data": 20071029
                    },
                    {
                        "x_data": 7677,
                        "y_data": 20071105
                    },
                    {
                        "x_data": 7664,
                        "y_data": 20071112
                    },
                    {
                        "x_data": 7666,
                        "y_data": 20071119
                    },
                    {
                        "x_data": 7674,
                        "y_data": 20071126
                    },
                    {
                        "x_data": 7650,
                        "y_data": 20071203
                    },
                    {
                        "x_data": 7659,
                        "y_data": 20071210
                    },
                    {
                        "x_data": 7659,
                        "y_data": 20071217
                    },
                    {
                        "x_data": 7682,
                        "y_data": 20071224
                    },
                    {
                        "x_data": 7682,
                        "y_data": 20071231
                    },
                    {
                        "x_data": 7682,
                        "y_data": 20080101
                    },
                    {
                        "x_data": 7682,
                        "y_data": 20080107
                    },
                    {
                        "x_data": 7711,
                        "y_data": 20080114
                    },
                    {
                        "x_data": 7711,
                        "y_data": 20080121
                    },
                    {
                        "x_data": 7691,
                        "y_data": 20080128
                    },
                    {
                        "x_data": 7716,
                        "y_data": 20080204
                    },
                    {
                        "x_data": 7743,
                        "y_data": 20080211
                    },
                    {
                        "x_data": 7742,
                        "y_data": 20080218
                    },
                    {
                        "x_data": 7731,
                        "y_data": 20080225
                    },
                    {
                        "x_data": 7761,
                        "y_data": 20080303
                    },
                    {
                        "x_data": 7790,
                        "y_data": 20080310
                    },
                    {
                        "x_data": 7790,
                        "y_data": 20080317
                    },
                    {
                        "x_data": 7832,
                        "y_data": 20080324
                    },
                    {
                        "x_data": 7832,
                        "y_data": 20080331
                    },
                    {
                        "x_data": 7873,
                        "y_data": 20080407
                    },
                    {
                        "x_data": 7889,
                        "y_data": 20080414
                    },
                    {
                        "x_data": 7917,
                        "y_data": 20080421
                    },
                    {
                        "x_data": 7917,
                        "y_data": 20080428
                    },
                    {
                        "x_data": 7929,
                        "y_data": 20080505
                    },
                    {
                        "x_data": 8002,
                        "y_data": 20080512
                    },
                    {
                        "x_data": 8022,
                        "y_data": 20080519
                    },
                    {
                        "x_data": 8090,
                        "y_data": 20080526
                    },
                    {
                        "x_data": 8090,
                        "y_data": 20080602
                    },
                    {
                        "x_data": 8030,
                        "y_data": 20080609
                    },
                    {
                        "x_data": 7970,
                        "y_data": 20080616
                    },
                    {
                        "x_data": 7966,
                        "y_data": 20080623
                    },
                    {
                        "x_data": 7966,
                        "y_data": 20080630
                    },
                    {
                        "x_data": 8089,
                        "y_data": 20080707
                    },
                    {
                        "x_data": 8113,
                        "y_data": 20080714
                    },
                    {
                        "x_data": 8235,
                        "y_data": 20080721
                    },
                    {
                        "x_data": 8280,
                        "y_data": 20080728
                    },
                    {
                        "x_data": 8325,
                        "y_data": 20080804
                    },
                    {
                        "x_data": 8372,
                        "y_data": 20080811
                    },
                    {
                        "x_data": 8387,
                        "y_data": 20080818
                    },
                    {
                        "x_data": 8417,
                        "y_data": 20080825
                    },
                    {
                        "x_data": 8417,
                        "y_data": 20080901
                    },
                    {
                        "x_data": 8527,
                        "y_data": 20080908
                    },
                    {
                        "x_data": 8639,
                        "y_data": 20080915
                    },
                    {
                        "x_data": 8690,
                        "y_data": 20080922
                    },
                    {
                        "x_data": 8731,
                        "y_data": 20080929
                    },
                    {
                        "x_data": 8762,
                        "y_data": 20081006
                    },
                    {
                        "x_data": 8794,
                        "y_data": 20081013
                    },
                    {
                        "x_data": 8836,
                        "y_data": 20081020
                    },
                    {
                        "x_data": 8898,
                        "y_data": 20081027
                    },
                    {
                        "x_data": 8956,
                        "y_data": 20081103
                    },
                    {
                        "x_data": 8996,
                        "y_data": 20081110
                    },
                    {
                        "x_data": 9003,
                        "y_data": 20081117
                    },
                    {
                        "x_data": 9019,
                        "y_data": 20081124
                    },
                    {
                        "x_data": 9050,
                        "y_data": 20081201
                    },
                    {
                        "x_data": 9076,
                        "y_data": 20081208
                    },
                    {
                        "x_data": 9077,
                        "y_data": 20081215
                    },
                    {
                        "x_data": 9070,
                        "y_data": 20081222
                    },
                    {
                        "x_data": 9070,
                        "y_data": 20081229
                    },
                    {
                        "x_data": 9070,
                        "y_data": 20090101
                    },
                    {
                        "x_data": 9064,
                        "y_data": 20090105
                    },
                    {
                        "x_data": 9064,
                        "y_data": 20090112
                    },
                    {
                        "x_data": 9064,
                        "y_data": 20090119
                    },
                    {
                        "x_data": 9064,
                        "y_data": 20090126
                    },
                    {
                        "x_data": 9087,
                        "y_data": 20090202
                    },
                    {
                        "x_data": 9087,
                        "y_data": 20090209
                    },
                    {
                        "x_data": 9059,
                        "y_data": 20090216
                    },
                    {
                        "x_data": 9063,
                        "y_data": 20090223
                    },
                    {
                        "x_data": 9063,
                        "y_data": 20090302
                    },
                    {
                        "x_data": 9053,
                        "y_data": 20090309
                    },
                    {
                        "x_data": 9053,
                        "y_data": 20090316
                    },
                    {
                        "x_data": 9057,
                        "y_data": 20090323
                    },
                    {
                        "x_data": 9057,
                        "y_data": 20090330
                    },
                    {
                        "x_data": 9066,
                        "y_data": 20090406
                    },
                    {
                        "x_data": 9121,
                        "y_data": 20090413
                    },
                    {
                        "x_data": 9110,
                        "y_data": 20090420
                    },
                    {
                        "x_data": 9111,
                        "y_data": 20090427
                    },
                    {
                        "x_data": 9094,
                        "y_data": 20090504
                    },
                    {
                        "x_data": 9143,
                        "y_data": 20090511
                    },
                    {
                        "x_data": 9140,
                        "y_data": 20090518
                    },
                    {
                        "x_data": 9153,
                        "y_data": 20090525
                    },
                    {
                        "x_data": 9153,
                        "y_data": 20090601
                    },
                    {
                        "x_data": 9203,
                        "y_data": 20090608
                    },
                    {
                        "x_data": 9239,
                        "y_data": 20090615
                    },
                    {
                        "x_data": 9255,
                        "y_data": 20090622
                    },
                    {
                        "x_data": 9255,
                        "y_data": 20090629
                    },
                    {
                        "x_data": 9310,
                        "y_data": 20090706
                    },
                    {
                        "x_data": 9376,
                        "y_data": 20090713
                    },
                    {
                        "x_data": 9474,
                        "y_data": 20090720
                    },
                    {
                        "x_data": 9589,
                        "y_data": 20090727
                    },
                    {
                        "x_data": 9611,
                        "y_data": 20090803
                    },
                    {
                        "x_data": 9598,
                        "y_data": 20090810
                    },
                    {
                        "x_data": 9642,
                        "y_data": 20090817
                    },
                    {
                        "x_data": 9682,
                        "y_data": 20090824
                    },
                    {
                        "x_data": 9682,
                        "y_data": 20090831
                    },
                    {
                        "x_data": 9682,
                        "y_data": 20090907
                    },
                    {
                        "x_data": 9808,
                        "y_data": 20090914
                    },
                    {
                        "x_data": 9856,
                        "y_data": 20090921
                    },
                    {
                        "x_data": 9918,
                        "y_data": 20090928
                    },
                    {
                        "x_data": 9929,
                        "y_data": 20091005
                    },
                    {
                        "x_data": 9925,
                        "y_data": 20091012
                    },
                    {
                        "x_data": 10003,
                        "y_data": 20091019
                    },
                    {
                        "x_data": 10025,
                        "y_data": 20091026
                    },
                    {
                        "x_data": 10061,
                        "y_data": 20091102
                    },
                    {
                        "x_data": 10116,
                        "y_data": 20091109
                    },
                    {
                        "x_data": 10137,
                        "y_data": 20091116
                    },
                    {
                        "x_data": 10204,
                        "y_data": 20091123
                    },
                    {
                        "x_data": 10238,
                        "y_data": 20091130
                    },
                    {
                        "x_data": 10221,
                        "y_data": 20091207
                    },
                    {
                        "x_data": 10272,
                        "y_data": 20091214
                    },
                    {
                        "x_data": 10272,
                        "y_data": 20091221
                    },
                    {
                        "x_data": 10318,
                        "y_data": 20091228
                    },
                    {
                        "x_data": 10318,
                        "y_data": 20100101
                    },
                    {
                        "x_data": 10318,
                        "y_data": 20100104
                    },
                    {
                        "x_data": 10320,
                        "y_data": 20100111
                    },
                    {
                        "x_data": 10329,
                        "y_data": 20100118
                    },
                    {
                        "x_data": 10329,
                        "y_data": 20100125
                    },
                    {
                        "x_data": 10373,
                        "y_data": 20100201
                    },
                    {
                        "x_data": 10372,
                        "y_data": 20100208
                    },
                    {
                        "x_data": 10389,
                        "y_data": 20100215
                    },
                    {
                        "x_data": 10404,
                        "y_data": 20100222
                    },
                    {
                        "x_data": 10430,
                        "y_data": 20100301
                    },
                    {
                        "x_data": 10442,
                        "y_data": 20100308
                    },
                    {
                        "x_data": 10442,
                        "y_data": 20100315
                    },
                    {
                        "x_data": 10412,
                        "y_data": 20100322
                    },
                    {
                        "x_data": 10412,
                        "y_data": 20100329
                    },
                    {
                        "x_data": 10481,
                        "y_data": 20100405
                    },
                    {
                        "x_data": 10515,
                        "y_data": 20100412
                    },
                    {
                        "x_data": 10543,
                        "y_data": 20100419
                    },
                    {
                        "x_data": 10580,
                        "y_data": 20100426
                    },
                    {
                        "x_data": 10590,
                        "y_data": 20100503
                    },
                    {
                        "x_data": 10576,
                        "y_data": 20100510
                    },
                    {
                        "x_data": 10593,
                        "y_data": 20100517
                    },
                    {
                        "x_data": 10634,
                        "y_data": 20100524
                    },
                    {
                        "x_data": 10634,
                        "y_data": 20100531
                    },
                    {
                        "x_data": 10613,
                        "y_data": 20100607
                    },
                    {
                        "x_data": 10630,
                        "y_data": 20100614
                    },
                    {
                        "x_data": 10634,
                        "y_data": 20100621
                    },
                    {
                        "x_data": 10634,
                        "y_data": 20100628
                    },
                    {
                        "x_data": 10685,
                        "y_data": 20100705
                    },
                    {
                        "x_data": 10726,
                        "y_data": 20100712
                    },
                    {
                        "x_data": 10756,
                        "y_data": 20100719
                    },
                    {
                        "x_data": 10817,
                        "y_data": 20100726
                    },
                    {
                        "x_data": 10835,
                        "y_data": 20100802
                    },
                    {
                        "x_data": 10937,
                        "y_data": 20100809
                    },
                    {
                        "x_data": 10999,
                        "y_data": 20100816
                    },
                    {
                        "x_data": 11026,
                        "y_data": 20100823
                    },
                    {
                        "x_data": 11125,
                        "y_data": 20100830
                    },
                    {
                        "x_data": 11125,
                        "y_data": 20100906
                    },
                    {
                        "x_data": 11256,
                        "y_data": 20100913
                    },
                    {
                        "x_data": 11290,
                        "y_data": 20100920
                    },
                    {
                        "x_data": 11339,
                        "y_data": 20100927
                    },
                    {
                        "x_data": 11460,
                        "y_data": 20101004
                    },
                    {
                        "x_data": 11566,
                        "y_data": 20101011
                    },
                    {
                        "x_data": 11594,
                        "y_data": 20101018
                    },
                    {
                        "x_data": 11617,
                        "y_data": 20101025
                    },
                    {
                        "x_data": 11687,
                        "y_data": 20101101
                    },
                    {
                        "x_data": 11735,
                        "y_data": 20101108
                    },
                    {
                        "x_data": 11814,
                        "y_data": 20101115
                    },
                    {
                        "x_data": 11845,
                        "y_data": 20101122
                    },
                    {
                        "x_data": 11877,
                        "y_data": 20101129
                    },
                    {
                        "x_data": 11888,
                        "y_data": 20101206
                    },
                    {
                        "x_data": 11907,
                        "y_data": 20101213
                    },
                    {
                        "x_data": 11913,
                        "y_data": 20101220
                    },
                    {
                        "x_data": 11904,
                        "y_data": 20101227
                    },
                    {
                        "x_data": 11904,
                        "y_data": 20110101
                    },
                    {
                        "x_data": 12060,
                        "y_data": 20110103
                    },
                    {
                        "x_data": 12067,
                        "y_data": 20110110
                    },
                    {
                        "x_data": 12094,
                        "y_data": 20110117
                    },
                    {
                        "x_data": 12094,
                        "y_data": 20110124
                    },
                    {
                        "x_data": 12143,
                        "y_data": 20110131
                    },
                    {
                        "x_data": 12181,
                        "y_data": 20110207
                    },
                    {
                        "x_data": 12204,
                        "y_data": 20110214
                    },
                    {
                        "x_data": 12201,
                        "y_data": 20110221
                    },
                    {
                        "x_data": 12254,
                        "y_data": 20110228
                    },
                    {
                        "x_data": 12267,
                        "y_data": 20110307
                    },
                    {
                        "x_data": 12267,
                        "y_data": 20110314
                    },
                    {
                        "x_data": 12303,
                        "y_data": 20110321
                    },
                    {
                        "x_data": 12303,
                        "y_data": 20110328
                    },
                    {
                        "x_data": 12343,
                        "y_data": 20110404
                    },
                    {
                        "x_data": 12398,
                        "y_data": 20110411
                    },
                    {
                        "x_data": 12434,
                        "y_data": 20110418
                    },
                    {
                        "x_data": 12422,
                        "y_data": 20110425
                    },
                    {
                        "x_data": 12438,
                        "y_data": 20110502
                    },
                    {
                        "x_data": 12482,
                        "y_data": 20110509
                    },
                    {
                        "x_data": 12467,
                        "y_data": 20110516
                    },
                    {
                        "x_data": 12522,
                        "y_data": 20110523
                    },
                    {
                        "x_data": 12522,
                        "y_data": 20110530
                    },
                    {
                        "x_data": 12659,
                        "y_data": 20110606
                    },
                    {
                        "x_data": 12682,
                        "y_data": 20110613
                    },
                    {
                        "x_data": 12686,
                        "y_data": 20110620
                    },
                    {
                        "x_data": 12686,
                        "y_data": 20110627
                    },
                    {
                        "x_data": 12867,
                        "y_data": 20110704
                    },
                    {
                        "x_data": 12895,
                        "y_data": 20110711
                    },
                    {
                        "x_data": 12927,
                        "y_data": 20110718
                    },
                    {
                        "x_data": 13006,
                        "y_data": 20110725
                    },
                    {
                        "x_data": 12999,
                        "y_data": 20110801
                    },
                    {
                        "x_data": 13081,
                        "y_data": 20110808
                    },
                    {
                        "x_data": 13129,
                        "y_data": 20110815
                    },
                    {
                        "x_data": 13140,
                        "y_data": 20110822
                    },
                    {
                        "x_data": 13174,
                        "y_data": 20110829
                    },
                    {
                        "x_data": 13174,
                        "y_data": 20110905
                    },
                    {
                        "x_data": 13299,
                        "y_data": 20110912
                    },
                    {
                        "x_data": 13342,
                        "y_data": 20110919
                    },
                    {
                        "x_data": 13382,
                        "y_data": 20110926
                    },
                    {
                        "x_data": 13372,
                        "y_data": 20111003
                    },
                    {
                        "x_data": 13382,
                        "y_data": 20111010
                    },
                    {
                        "x_data": 13411,
                        "y_data": 20111017
                    },
                    {
                        "x_data": 13443,
                        "y_data": 20111024
                    },
                    {
                        "x_data": 13465,
                        "y_data": 20111031
                    },
                    {
                        "x_data": 13443,
                        "y_data": 20111107
                    },
                    {
                        "x_data": 13482,
                        "y_data": 20111114
                    },
                    {
                        "x_data": 13518,
                        "y_data": 20111121
                    },
                    {
                        "x_data": 13517,
                        "y_data": 20111128
                    },
                    {
                        "x_data": 13542,
                        "y_data": 20111205
                    },
                    {
                        "x_data": 13536,
                        "y_data": 20111212
                    },
                    {
                        "x_data": 13565,
                        "y_data": 20111219
                    },
                    {
                        "x_data": 13603,
                        "y_data": 20111226
                    },
                    {
                        "x_data": 13603,
                        "y_data": 20120101
                    },
                    {
                        "x_data": 13610,
                        "y_data": 20120102
                    },
                    {
                        "x_data": 13628,
                        "y_data": 20120109
                    },
                    {
                        "x_data": 13618,
                        "y_data": 20120116
                    },
                    {
                        "x_data": 13618,
                        "y_data": 20120123
                    },
                    {
                        "x_data": 13667,
                        "y_data": 20120130
                    },
                    {
                        "x_data": 13666,
                        "y_data": 20120206
                    },
                    {
                        "x_data": 13674,
                        "y_data": 20120213
                    },
                    {
                        "x_data": 13719,
                        "y_data": 20120220
                    },
                    {
                        "x_data": 13788,
                        "y_data": 20120227
                    },
                    {
                        "x_data": 13791,
                        "y_data": 20120305
                    },
                    {
                        "x_data": 13791,
                        "y_data": 20120312
                    },
                    {
                        "x_data": 13818,
                        "y_data": 20120319
                    },
                    {
                        "x_data": 13818,
                        "y_data": 20120326
                    },
                    {
                        "x_data": 13881,
                        "y_data": 20120402
                    },
                    {
                        "x_data": 13902,
                        "y_data": 20120409
                    },
                    {
                        "x_data": 13938,
                        "y_data": 20120416
                    },
                    {
                        "x_data": 13964,
                        "y_data": 20120423
                    },
                    {
                        "x_data": 13983,
                        "y_data": 20120430
                    },
                    {
                        "x_data": 14016,
                        "y_data": 20120507
                    },
                    {
                        "x_data": 14015,
                        "y_data": 20120514
                    },
                    {
                        "x_data": 14034,
                        "y_data": 20120521
                    },
                    {
                        "x_data": 14087,
                        "y_data": 20120528
                    },
                    {
                        "x_data": 14087,
                        "y_data": 20120604
                    },
                    {
                        "x_data": 14072,
                        "y_data": 20120611
                    },
                    {
                        "x_data": 14138,
                        "y_data": 20120618
                    },
                    {
                        "x_data": 14172,
                        "y_data": 20120625
                    },
                    {
                        "x_data": 14172,
                        "y_data": 20120702
                    },
                    {
                        "x_data": 14180,
                        "y_data": 20120709
                    },
                    {
                        "x_data": 14223,
                        "y_data": 20120716
                    },
                    {
                        "x_data": 14250,
                        "y_data": 20120723
                    },
                    {
                        "x_data": 14264,
                        "y_data": 20120730
                    },
                    {
                        "x_data": 14286,
                        "y_data": 20120806
                    },
                    {
                        "x_data": 14331,
                        "y_data": 20120813
                    },
                    {
                        "x_data": 14361,
                        "y_data": 20120820
                    },
                    {
                        "x_data": 14389,
                        "y_data": 20120827
                    },
                    {
                        "x_data": 14389,
                        "y_data": 20120903
                    },
                    {
                        "x_data": 14389,
                        "y_data": 20120910
                    },
                    {
                        "x_data": 14402,
                        "y_data": 20120917
                    },
                    {
                        "x_data": 14438,
                        "y_data": 20120924
                    },
                    {
                        "x_data": 14472,
                        "y_data": 20121001
                    },
                    {
                        "x_data": 14480,
                        "y_data": 20121008
                    },
                    {
                        "x_data": 14513,
                        "y_data": 20121015
                    },
                    {
                        "x_data": 14525,
                        "y_data": 20121022
                    },
                    {
                        "x_data": 14547,
                        "y_data": 20121029
                    },
                    {
                        "x_data": 14585,
                        "y_data": 20121105
                    },
                    {
                        "x_data": 14621,
                        "y_data": 20121112
                    },
                    {
                        "x_data": 14624,
                        "y_data": 20121119
                    },
                    {
                        "x_data": 14612,
                        "y_data": 20121126
                    },
                    {
                        "x_data": 14610,
                        "y_data": 20121203
                    },
                    {
                        "x_data": 14639,
                        "y_data": 20121210
                    },
                    {
                        "x_data": 14633,
                        "y_data": 20121217
                    },
                    {
                        "x_data": 14649,
                        "y_data": 20121224
                    },
                    {
                        "x_data": 13949,
                        "y_data": 20121231
                    },
                    {
                        "x_data": 14648,
                        "y_data": 20130101
                    },
                    {
                        "x_data": 13966,
                        "y_data": 20130107
                    },
                    {
                        "x_data": 14667,
                        "y_data": 20130114
                    },
                    {
                        "x_data": 14667,
                        "y_data": 20130121
                    },
                    {
                        "x_data": 14667,
                        "y_data": 20130128
                    },
                    {
                        "x_data": 14652,
                        "y_data": 20130204
                    },
                    {
                        "x_data": 14651,
                        "y_data": 20130211
                    },
                    {
                        "x_data": 14649,
                        "y_data": 20130218
                    },
                    {
                        "x_data": 14554,
                        "y_data": 20130225
                    },
                    {
                        "x_data": 14695,
                        "y_data": 20130304
                    },
                    {
                        "x_data": 14727,
                        "y_data": 20130311
                    },
                    {
                        "x_data": 13048,
                        "y_data": 20130318
                    },
                    {
                        "x_data": 6790,
                        "y_data": 20130401
                    },
                    {
                        "x_data": 14591,
                        "y_data": 20130408
                    },
                    {
                        "x_data": 14449,
                        "y_data": 20130415
                    },
                    {
                        "x_data": 14451,
                        "y_data": 20130422
                    },
                    {
                        "x_data": 14462,
                        "y_data": 20130429
                    },
                    {
                        "x_data": 14487,
                        "y_data": 20130506
                    },
                    {
                        "x_data": 14516,
                        "y_data": 20130513
                    },
                    {
                        "x_data": 14531,
                        "y_data": 20130520
                    },
                    {
                        "x_data": 14545,
                        "y_data": 20130527
                    },
                    {
                        "x_data": 14545,
                        "y_data": 20130603
                    },
                    {
                        "x_data": 14553,
                        "y_data": 20130610
                    },
                    {
                        "x_data": 14569,
                        "y_data": 20130617
                    },
                    {
                        "x_data": 14650,
                        "y_data": 20130624
                    },
                    {
                        "x_data": 14651,
                        "y_data": 20130708
                    },
                    {
                        "x_data": 14689,
                        "y_data": 20130715
                    },
                    {
                        "x_data": 14751,
                        "y_data": 20130722
                    },
                    {
                        "x_data": 14766,
                        "y_data": 20130729
                    },
                    {
                        "x_data": 14679,
                        "y_data": 20130805
                    },
                    {
                        "x_data": 14599,
                        "y_data": 20130812
                    },
                    {
                        "x_data": 14740,
                        "y_data": 20130819
                    },
                    {
                        "x_data": 14714,
                        "y_data": 20130826
                    },
                    {
                        "x_data": 14796,
                        "y_data": 20130902
                    },
                    {
                        "x_data": 14820,
                        "y_data": 20130909
                    },
                    {
                        "x_data": 14866,
                        "y_data": 20130916
                    },
                    {
                        "x_data": 14878,
                        "y_data": 20130923
                    },
                    {
                        "x_data": 14885,
                        "y_data": 20130930
                    },
                    {
                        "x_data": 15028,
                        "y_data": 20131007
                    },
                    {
                        "x_data": 15072,
                        "y_data": 20131014
                    },
                    {
                        "x_data": 15025,
                        "y_data": 20131021
                    },
                    {
                        "x_data": 15071,
                        "y_data": 20131028
                    },
                    {
                        "x_data": 15098,
                        "y_data": 20131104
                    },
                    {
                        "x_data": 15101,
                        "y_data": 20131111
                    },
                    {
                        "x_data": 15151,
                        "y_data": 20131118
                    },
                    {
                        "x_data": 15337,
                        "y_data": 20131125
                    },
                    {
                        "x_data": 15334,
                        "y_data": 20131202
                    },
                    {
                        "x_data": 15512,
                        "y_data": 20131209
                    },
                    {
                        "x_data": 15540,
                        "y_data": 20131216
                    },
                    {
                        "x_data": 15701,
                        "y_data": 20131223
                    },
                    {
                        "x_data": 15708,
                        "y_data": 20131230
                    },
                    {
                        "x_data": 15703,
                        "y_data": 20140106
                    },
                    {
                        "x_data": 15637,
                        "y_data": 20140113
                    },
                    {
                        "x_data": 8585,
                        "y_data": 20140120
                    },
                    {
                        "x_data": 15646,
                        "y_data": 20140127
                    },
                    {
                        "x_data": 15632,
                        "y_data": 20140203
                    },
                    {
                        "x_data": 15637,
                        "y_data": 20140210
                    },
                    {
                        "x_data": 8565,
                        "y_data": 20140217
                    },
                    {
                        "x_data": 15659,
                        "y_data": 20140224
                    },
                    {
                        "x_data": 15557,
                        "y_data": 20150302
                    },
                    {
                        "x_data": 15578,
                        "y_data": 20150406
                    },
                    {
                        "x_data": 15545,
                        "y_data": 20150413
                    },
                    {
                        "x_data": 15568,
                        "y_data": 20150420
                    },
                    {
                        "x_data": 15475,
                        "y_data": 20150427
                    },
                    {
                        "x_data": 15710,
                        "y_data": 20150511
                    },
                    {
                        "x_data": 15623,
                        "y_data": 20150518
                    },
                    {
                        "x_data": 15741,
                        "y_data": 20150525
                    },
                    {
                        "x_data": 15741,
                        "y_data": 20150608
                    },
                    {
                        "x_data": 15810,
                        "y_data": 20150622
                    },
                    {
                        "x_data": 15761,
                        "y_data": 20150803
                    },
                    {
                        "x_data": 15776,
                        "y_data": 20150810
                    },
                    {
                        "x_data": 15908,
                        "y_data": 20150824
                    },
                    {
                        "x_data": 16184,
                        "y_data": 20150831
                    },
                    {
                        "x_data": 15832,
                        "y_data": 20150914
                    },
                    {
                        "x_data": 15800,
                        "y_data": 20150921
                    },
                    {
                        "x_data": 16178,
                        "y_data": 20151005
                    },
                    {
                        "x_data": 16191,
                        "y_data": 20151012
                    },
                    {
                        "x_data": 16138,
                        "y_data": 20151019
                    },
                    {
                        "x_data": 16293,
                        "y_data": 20151102
                    },
                    {
                        "x_data": 4812,
                        "y_data": 20160111
                    },
                    {
                        "x_data": 16518,
                        "y_data": 20160118
                    },
                    {
                        "x_data": 16629,
                        "y_data": 20160201
                    },
                    {
                        "x_data": 16586,
                        "y_data": 20160208
                    },
                    {
                        "x_data": 16529,
                        "y_data": 20160215
                    },
                    {
                        "x_data": 16454,
                        "y_data": 20160222
                    },
                    {
                        "x_data": 16515,
                        "y_data": 20160229
                    },
                    {
                        "x_data": 16517,
                        "y_data": 20160307
                    },
                    {
                        "x_data": 16446,
                        "y_data": 20160411
                    },
                    {
                        "x_data": 16454,
                        "y_data": 20160418
                    },
                    {
                        "x_data": 16489,
                        "y_data": 20160425
                    },
                    {
                        "x_data": 16388,
                        "y_data": 20160502
                    },
                    {
                        "x_data": 16374,
                        "y_data": 20160509
                    },
                    {
                        "x_data": 16351,
                        "y_data": 20160523
                    },
                    {
                        "x_data": 16361,
                        "y_data": 20160606
                    },
                    {
                        "x_data": 16314,
                        "y_data": 20160620
                    },
                    {
                        "x_data": 16293,
                        "y_data": 20160627
                    },
                    {
                        "x_data": 16325,
                        "y_data": 20160815
                    },
                    {
                        "x_data": 16316,
                        "y_data": 20160919
                    },
                    {
                        "x_data": 16305,
                        "y_data": 20160926
                    },
                    {
                        "x_data": 16233,
                        "y_data": 20161010
                    },
                    {
                        "x_data": 16349,
                        "y_data": 20161031
                    },
                    {
                        "x_data": 16364,
                        "y_data": 20161107
                    },
                    {
                        "x_data": 16249,
                        "y_data": 20161114
                    },
                    {
                        "x_data": 16345,
                        "y_data": 20161121
                    },
                    {
                        "x_data": 16294,
                        "y_data": 20161128
                    },
                    {
                        "x_data": 16336,
                        "y_data": 20161205
                    },
                    {
                        "x_data": 16387,
                        "y_data": 20161212
                    },
                    {
                        "x_data": 16372,
                        "y_data": 20170102
                    },
                    {
                        "x_data": 16406,
                        "y_data": 20170109
                    },
                    {
                        "x_data": 16379,
                        "y_data": 20170116
                    },
                    {
                        "x_data": 16305,
                        "y_data": 20170213
                    },
                    {
                        "x_data": 16207,
                        "y_data": 20170220
                    },
                    {
                        "x_data": 16111,
                        "y_data": 20170306
                    },
                    {
                        "x_data": 16230,
                        "y_data": 20170320
                    },
                    {
                        "x_data": 16270,
                        "y_data": 20170417
                    },
                    {
                        "x_data": 16226,
                        "y_data": 20170424
                    },
                    {
                        "x_data": 16303,
                        "y_data": 20170501
                    },
                    {
                        "x_data": 16124,
                        "y_data": 20170508
                    },
                    {
                        "x_data": 16204,
                        "y_data": 20170515
                    },
                    {
                        "x_data": 16290,
                        "y_data": 20170522
                    },
                    {
                        "x_data": 16649,
                        "y_data": 20170529
                    },
                    {
                        "x_data": 16157,
                        "y_data": 20170612
                    },
                    {
                        "x_data": 16189,
                        "y_data": 20170619
                    },
                    {
                        "x_data": 16184,
                        "y_data": 20170626
                    },
                    {
                        "x_data": 16597,
                        "y_data": 20170703
                    },
                    {
                        "x_data": 15983,
                        "y_data": 20170717
                    },
                    {
                        "x_data": 16138,
                        "y_data": 20170724
                    },
                    {
                        "x_data": 16145,
                        "y_data": 20170731
                    },
                    {
                        "x_data": 16147,
                        "y_data": 20170807
                    },
                    {
                        "x_data": 16268,
                        "y_data": 20170814
                    },
                    {
                        "x_data": 16279,
                        "y_data": 20170821
                    },
                    {
                        "x_data": 16301,
                        "y_data": 20170828
                    },
                    {
                        "x_data": 16161,
                        "y_data": 20170911
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "sum(tours)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ranking_date"
                }
            }
        }
    },
    {
        "tables_used": [
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Pie chart. how many counties correspond to each police force?",
            "Return a pie chart on how many counties correspond to each police force?",
            "How many counties correspond to each police force.",
            "I want to know the proportion of the number of counties for each police force."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abbotsford Police Department",
                        "y_data": 1
                    },
                    {
                        "x_data": "Central Saanich Police",
                        "y_data": 1
                    },
                    {
                        "x_data": "RCMP",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Police_force"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a pie chart about the proportion of All_Games and School_ID.",
            "A pie chart shows the proportion of All_Games and School_ID.",
            "For the attribute All_Games and School_ID, show their proportion by a pie chart.",
            "Return a pie chart about the proportion of All_Games and School_ID.",
            "Give me a pie chart to reflect the proportion of All_Games and School_ID.",
            "I want to know the proportion of school id for each all games."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 4
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, show the frequency of the first name using a bar chart, list by the y-axis in desc.",
            "For employees with first names that end with the letter m, groups and count the first name to visualize a bar graph, show from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 2
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(FIRST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Can you draw a bar chart to show the number of items in each customer details category?, I want to order in asc by the total number.",
            "Bar graph to show the number of customer details from different customer details, I want to order in asc by the total number.",
            "Please compare the frequency of the customer details using a bar chart, could you display in ascending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Esteban Senger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monty Sauer III",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mr. Raul Prosacco",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tyrique Durgan II",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vincenza Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mackenzie Hettinger V",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oma Smith",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sabryna Moore PhD",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the title and their average smallest ratings of the movie using a bar chart, sort by the title in descending please.",
            "Please return me a bar chart show what are the average smallest rating of different movie title?, and sort by the x axis in descending.",
            "Visualize the average smallest rating of different movie title using a bar chart, and could you rank by the x axis from high to low please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, I want to rank in descending by the Y-axis.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart, and rank by the y axis in descending.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of salary over the hire_date bin hire_date by time, and rank by the Y-axis in descending please.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the average of salary bin hire_date by time, and rank by the Y-axis in descending please.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, display Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 9885.714285714286
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 9074.193548387097
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4880
                    },
                    {
                        "x_data": "July",
                        "y_data": 3774.1935483870966
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Compare the average of maximum price of wines each year, bin the year into the weekday interval, list from high to low by the y-axis.",
            "Show mean max(price) from each year, rank from high to low by the total number.",
            "A bar chart about the average of maximum price of wines each year, bin the year into the weekday interval, order by the total number in desc.",
            "Compare the average of maximum price of wines each year, bin the year into the weekday interval and draw a bar chart, order by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 225
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 200
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 130
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 100
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 76.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 32
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(max(Price))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, sort from high to low by the y-axis.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart, and sort from high to low by the y-axis.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, display Y-axis in desc order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday, and display Y-axis in desc order.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, I want to display y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 86.66666666666667
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 72
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 67.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 67.14285714285714
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 60.90909090909091
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 58.888888888888886
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 46
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id, and show Y-axis in descending order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, show by the Y in desc please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and show Y-axis in descending order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, rank in descending by the the number of job id.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and show Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 2
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of ACC_Regular_Season and Team_ID , could you rank Y in descending order?",
            "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart, rank from high to low by the Team_ID.",
            "Show me team_id by acc regular season in a histogram, list by the Y-axis in desc.",
            "Give me the comparison about Team_ID over the ACC_Regular_Season , and show from high to low by the y axis.",
            "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID , show by the Y-axis in desc.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID , and show by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20137",
                        "y_data": 4
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 3
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components, sort from high to low by the total number please.",
            "Find the component amounts and names of all furnitures that have more than 10 components, order by the Num_of_Component in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Billiard table",
                        "y_data": 14
                    },
                    {
                        "x_data": "Dining set",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_Component"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show me a bar chart for what are the nationalities and total ages of journalists?, and display from low to high by the total number.",
            "Bar chart of sum age from each nationality, and list by the Y in asc.",
            "Return a histogram on what are the nationalities and the total ages of journalists?, and list by the Y in asc.",
            "What are the nationalities and the taotal ages of journalists Visualize by a bar chart, sort y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "England",
                        "y_data": 308
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "College"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Visualize a pie chart about the proportion of cName and enr.",
            "Return a pie chart about the proportion of cName and enr.",
            "A pie chart shows the proportion of cName and enr.",
            "For the attribute cName and enr, show their proportion by a pie chart.",
            "Draw a pie chart about the proportion of cName and enr."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ASU",
                        "y_data": 12000
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 18000
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 19000
                    },
                    {
                        "x_data": "OU",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName"
                }
            }
        }
    },
    {
        "tables_used": [
            "CUSTOMER",
            "EMPLOYEE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, and sort from low to high by the FirstName.",
            "What are the first names and support rep ids for employees serving 10 or more customers, and could you show by the X in ascending please?",
            "Draw a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?, and sort bars in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Diego",
                        "y_data": 4
                    },
                    {
                        "x_data": "Luis",
                        "y_data": 5
                    },
                    {
                        "x_data": "Puja",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FirstName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SupportRepId"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show all calendar dates and bin by weekday in a bar chart, I want to rank y axis in desc order.",
            "Bar chart x axis calendar date y axis the number of calendar date, I want to display by the Y in desc.",
            "What are all the calendar dates? Show a bar chart binning calendar date by weekday, could you display total number in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Calendar_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Calendar_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payments"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, show X from low to high order.",
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a line chart, order x-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-03",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-17",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "How many flights in each destination city? Return a bar chart, and list in descending by the y axis please.",
            "Can you give a histogram to compare the number of flights to each destination city?, order by the the number of destination in descending.",
            "Show the number of flights in each destination city with a bar chart, I want to order in desc by the Y.",
            "Show me how many destination by destination in a histogram, and order y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Washington D.C.",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sydney",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dallas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boston",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by year interval with a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 2
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 0
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Plot date to by the number of date to as a trend line, I want to show by the X in asc.",
            "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and rank X in asc order.",
            "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval, display by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1971~1975",
                        "y_data": 2
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 0
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 3
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2016",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Draw a bar chart of destination versus the total number, I want to display in desc by the names.",
            "Show all destinations and the number of flights to each destination Plot them as bar chart, I want to list bar in desc order please.",
            "Show all destinations and the number of flights to each destination by a bar chart, and I want to display in desc by the x axis.",
            "A bar chart about what are the destinations and number of flights to each one?, I want to display in desc by the names.",
            "Draw a bar chart for what are the destinations and number of flights to each one?, and I want to display in desc by the x axis.",
            "What are the destinations and number of flights to each one Visualize by bar chart, and I want to display in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Washington D.C.",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sydney",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 1
                    },
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dallas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boston",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mission"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show the number of fate from each fate, and rank by the y axis in desc please.",
            "Compare the total number of each fate with a bar chart, could you show by the the number of fate in desc?",
            "What is the total number of each fate? Give me the result in a bar graph, and display in desc by the the number of fate please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Decommissioned 1950",
                        "y_data": 2
                    },
                    {
                        "x_data": "Retired 1939",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned) 1931",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned and sunk) 1933",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decommissioned 1960",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decommissioned 1959",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fate",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each weekday? Draw a bar chart, and could you sort by the y-axis in descending?",
            "Find the number of booking start date for the apartments that have more than two bedrooms for each weekday in a bar chart, display total number from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, show in asc by the y axis.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, could you rank Y in ascending order?",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and I want to display y axis from low to high order please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and sort in asc by the y-axis.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, and could you list in asc by the y axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Bar chart of the number of years played from each years played, sort how many years played from low to high order please.",
            "Group and count the years played to draw a bar chart, sort how many years played from low to high order please.",
            "Please give me a bar chart to show the number of players in each years played, and display by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2 (1988, 1990)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2009\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 (2003\u20132004, 2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the position of players and the average number of points of players of each position Visualize by bar chart, and could you sort by the total number in ascending?",
            "For each position, what is the average number of points for players in that position Plot them as bar chart, could you show y axis from low to high order?",
            "List the position of players and the average number of points of players of each position by a bar chart, could you order in asc by the the average of points?",
            "Give me a bar chart for mean points of each position, and rank by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Prop",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 12
                    },
                    {
                        "x_data": "Full Back",
                        "y_data": 20
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 20
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 20
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 36
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 36
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 36
                    },
                    {
                        "x_data": "Stand Off",
                        "y_data": 110
                    },
                    {
                        "x_data": "Scrum Half",
                        "y_data": 188
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Points)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 753
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "addresses"
        ],
        "db_id": "customer_deliveries",
        "nl_queries": [
            "List the state names and the number of customers living in each state with a bar chart, order in descending by the Y.",
            "List the state names and the number of customers living in each state, I want to list Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tennessee",
                        "y_data": 4
                    },
                    {
                        "x_data": "Michigan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colorado",
                        "y_data": 2
                    },
                    {
                        "x_data": "California",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wyoming",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nebraska",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Illinois",
                        "y_data": 1
                    },
                    {
                        "x_data": "Idaho",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state_province_county",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the title and their average smallest ratings of the movie using a bar chart, rank by the X in ascending.",
            "Visualize the average smallest rating of different movie title using a bar chart, show names from low to high order.",
            "Please return me a bar chart show what are the average smallest rating of different movie title?, I want to list names in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the max gpa of all students in each department with a bar chart, and I want to order in asc by the y axis please.",
            "Show me maximal stu gpa by dept code in a histogram, and list in asc by the Y-axis please.",
            "What is the highest student GPA for every department? Return a bar chart, sort by the maximal stu gpa from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 3.15
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.27
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_600 .",
            "Visualize a bar chart about the distribution of meter_600 and meter_100 .",
            "Draw a bar chart about the distribution of meter_600 and meter_100 .",
            "Return a bar chart about the distribution of meter_600 and meter_100 .",
            "Give me the comparison about meter_100 over the meter_600 by a bar chart.",
            "Create a bar chart showing meter_100 across meter 600"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:52.59",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "5:54.45",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "5:53.53",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "5:53.03",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "5:56.31",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "5:57.10",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "5:56.99",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "5:52.92",
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_600",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "What is the average age of captains in different classes?",
            "Return the average age of captains in each class.",
            "Visualize a bar chart showing the average age of captains in each class.",
            "Plot the average of age by grouped by class as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Armed schooner",
                        "y_data": 45
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 43
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 38
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 38
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 51.33333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, rank by the how many organization details in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 2,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 5,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 0,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 4,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 0,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 1,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 1,
                        "classify": "Furniture"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD). Show bar chart.",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vimto",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sprite Lemo",
                        "y_data": 8
                    },
                    {
                        "x_data": "Dr Pepper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Diet Pepsi",
                        "y_data": 9
                    },
                    {
                        "x_data": "Diet Mountain Dew",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How old is each dog that was abandoned? Show in a bar chart, could you show X-axis from high to low order?",
            "List the dog name and age of the dogs who have been abandoned in a bar chart, order from high to low by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lyric",
                        "y_data": 4
                    },
                    {
                        "x_data": "Kacey",
                        "y_data": 6
                    },
                    {
                        "x_data": "Evangeline",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Create a bar chart showing the total number across builder, I want to list x-axis in desc order.",
            "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, show in desc by the Builder.",
            "Show different builders of railways, along with the corresponding number of railways using each builder Show bar chart, and show in desc by the Builder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Swindon Works",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stephenson",
                        "y_data": 1
                    },
                    {
                        "x_data": "SECR Ashford",
                        "y_data": 1
                    },
                    {
                        "x_data": "MR Derby",
                        "y_data": 1
                    },
                    {
                        "x_data": "GWR Swindon",
                        "y_data": 2
                    },
                    {
                        "x_data": "GNR Doncaster",
                        "y_data": 1
                    },
                    {
                        "x_data": "GER Stratford",
                        "y_data": 1
                    },
                    {
                        "x_data": "GER Hartford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Avonside",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Builder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Show the trend about the total amount of each payment about the payment day, line chart. Note that, you should order the payment day in ascending order.",
            "Return a trend line with sorting the payment day in ascending order to show the total amount of payment by each payment day."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-05-03",
                        "y_data": 172309
                    },
                    {
                        "x_data": "2017-05-04",
                        "y_data": 123255
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 604267
                    },
                    {
                        "x_data": "2017-06-24",
                        "y_data": 456098
                    },
                    {
                        "x_data": "2017-07-31",
                        "y_data": 423154
                    },
                    {
                        "x_data": "2017-08-06",
                        "y_data": 38324
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 71246
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 459407
                    },
                    {
                        "x_data": "2018-01-10",
                        "y_data": 407235
                    },
                    {
                        "x_data": "2018-01-19",
                        "y_data": 177130
                    },
                    {
                        "x_data": "2018-01-28",
                        "y_data": 319142
                    },
                    {
                        "x_data": "2018-02-16",
                        "y_data": 241730
                    },
                    {
                        "x_data": "2018-02-18",
                        "y_data": 235893
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 7343
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of revenue , and group by attribute name, and could you display from high to low by the names?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name, show x axis in descending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name, and could you display from high to low by the names?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name by a bar chart, and show x axis in descending order.",
            "For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, could you display from high to low by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Show me trends of the total of the average weight change over year, I want to order by the X in asc please.",
            "Show me a line chart of how sum avg(weight) change over the year, could you sort X in asc order?",
            "Show me trends of the total of the average weight change over year, and could you sort X in asc order?",
            "Show me a line chart of how sum avg(weight) change over the year, show by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970",
                        "y_data": 3441
                    },
                    {
                        "x_data": "1971",
                        "y_data": 2960
                    },
                    {
                        "x_data": "1972",
                        "y_data": 3237
                    },
                    {
                        "x_data": "1973",
                        "y_data": 3419
                    },
                    {
                        "x_data": "1974",
                        "y_data": 2877
                    },
                    {
                        "x_data": "1975",
                        "y_data": 3176
                    },
                    {
                        "x_data": "1976",
                        "y_data": 3078
                    },
                    {
                        "x_data": "1977",
                        "y_data": 2997
                    },
                    {
                        "x_data": "1978",
                        "y_data": 2861
                    },
                    {
                        "x_data": "1979",
                        "y_data": 3055
                    },
                    {
                        "x_data": "1980",
                        "y_data": 2436
                    },
                    {
                        "x_data": "1981",
                        "y_data": 2532
                    },
                    {
                        "x_data": "1982",
                        "y_data": 2453
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Weight))"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize the relationship between code and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and code , and group by attribute name in a scatter chart.",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, what is the relationship between code and code , and group by attribute name?",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and code , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 6,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 7,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 10,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 1,
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": 8,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 9,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 11,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": 5,
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": 4,
                        "y_data": 6,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show the names and ids of tourist attractions that are visited at most once in a pie chart.",
            "Show the names and ids of tourist attractions that are visited at most once. Plot them as pie chart.",
            "Show me a pie chart for what are the names and ids of the tourist attractions that are visited at most once?",
            "Display a pie chart for what are the names and ids of the tourist attractions that are visited at most once?",
            "What are the names and ids of the tourist attractions that are visited at most once. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "UK gallery",
                        "y_data": 2701
                    },
                    {
                        "x_data": "flying elephant",
                        "y_data": 5076
                    },
                    {
                        "x_data": "history gallery",
                        "y_data": 6653
                    },
                    {
                        "x_data": "presidents hall",
                        "y_data": 8429
                    },
                    {
                        "x_data": "fun shops",
                        "y_data": 9360
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the average of revenue , and group by attribute headquarter in a bar chart, and order by the total number from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the headquarter , and group by attribute headquarter, and sort Y from high to low order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of revenue , and group by attribute headquarter, sort from high to low by the mean revenue.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter, and I want to rank y-axis in descending order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of revenue , and group by attribute headquarter, sort from high to low by the mean revenue."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 100
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 50
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "how many students are in each department?, could you show bar from low to high order?",
            "Find the number of students for each department Plot them as bar chart, I want to list by the names in asc.",
            "Draw a bar chart of dept code versus the total number, display by the bars in ascending.",
            "Return a histogram on how many students are in each department?, and display by the X-axis in asc please.",
            "How many students are in each department Visualize by bar chart, and I want to order by the names in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 2
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 1
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "Count the hometown by hometown, could you display how many hometown in ascending order?",
            "Show the hometown of all members, rank in ascending by the y-axis.",
            "Count the hometown by hometown using a bar chart, show total number in asc order.",
            "Bar chart of the number of hometown from each hometown, order Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Collierville, Tennessee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Columbia, South Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fort Campbell, Kentucky",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hiram, Georgia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jacksonville, Florida",
                        "y_data": 1
                    },
                    {
                        "x_data": "LaGrange, Georgia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Red Jacket, West Virginia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simpsonville, South Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louisville, Kentucky",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Hometown)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, list by the names in desc.",
            "Give me the comparison about All_Games_Percent over the All_Neutral , I want to order by the x axis in desc.",
            "Create a bar chart showing all_games_percent across all neutral, and could you order in desc by the X-axis?",
            "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, I want to order by the x axis in desc.",
            "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , and could you sort by the x axis in descending?",
            "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, and rank by the All_Neutral from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "How many singers are from each country, could you display by the y axis in descending please?",
            "Draw a bar chart of country versus the total number, and sort the total number in desc order.",
            "Return a bar chart on how many singers are from each country?, sort the total number in desc order.",
            "Give me a histogram for how many singers are from each country?, and sort the total number in desc order.",
            "Show all countries and the number of singers in each country in a bar chart, show Y-axis from high to low order.",
            "Show all countries and the number of singers in each country Show bar chart, and could you sort from high to low by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses have more than one prerequisite for each department? Visualize with a bar chart, I want to rank by the dept_name in ascending.",
            "Find the number of courses that have more than one prerequisites for each department in a bar chart, and could you sort in ascending by the bars?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Athletics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 2
                    },
                    {
                        "x_data": "English",
                        "y_data": 1
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 1
                    },
                    {
                        "x_data": "History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(dept_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game",
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many players are injured in each day? Show a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "10 July 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "14 March 2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "14 October 2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "16 August 2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "18 May 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "22 September 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 October 2008",
                        "y_data": 3
                    },
                    {
                        "x_data": "31 October 2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "7 July 2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 August 2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "9 December 2007",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show all card type codes and the number of cards in each type in a pie chart.",
            "Show all card type codes and the number of cards in each type.",
            "Visualize a pie chart with what are the different card types, and how many cards are there of each?",
            "Pie. what are the different card types, and how many cards are there of each?",
            "What are the different card types, and how many cards are there of each. Show a pie chart.",
            "Give me a pie to show the total number from different card type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition",
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Return a histogram on how many exhibitions has each artist had?, list from high to low by the Name please.",
            "Show all artist names and the number of exhibitions for each artist in a bar chart, and list x axis in desc order.",
            "how many exhibitions has each artist had?, and display from high to low by the X-axis please.",
            "How many exhibitions has each artist had Plot them as bar chart, I want to order bar in desc order please.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, show X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 2
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Group by distinct states and them count them in a bar chart, I want to order x-axis from low to high order.",
            "Bar chart x axis state y axis the number of state, could you list in asc by the bars?",
            "What is the number of distinct states? Show me a bar chart, rank x axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "List the number of documents for each receipt date and bin by weekday in a bar chart, I want to list in ascending by the total number please.",
            "Bar chart of the frequency from each receipt date, and bin the date in weekday interval, and then show y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "receipt_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(receipt_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners in a stacked bar chart The x-axis is last name and group by skill description, display y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Price",
                        "y_data": 2,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find Team_Name and Team_ID , and visualize them by a bar chart, and show by the Y-axis in asc.",
            "A bar chart shows the distribution of Team_Name and Team_ID , and order from low to high by the Y please.",
            "Show me about the distribution of Team_Name and Team_ID in a bar chart, and order Y-axis in asc order.",
            "Show team_id from each team name, rank by the y axis from low to high.",
            "Give me the comparison about Team_ID over the Team_Name by a bar chart, and I want to sort from low to high by the y-axis please.",
            "Visualize a bar chart about the distribution of Team_Name and Team_ID , I want to order in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Return a bar chart showing how many shops in each location, could you rank how many location in ascending order please?",
            "Create a bar chart showing how many location across location, and I want to order by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cymmer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gelli",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maerdy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pentre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Porth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wattstown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Blaenllecha",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dinas",
                        "y_data": 2
                    },
                    {
                        "x_data": "Penygraig",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Show the relationship between the number of dorms and total capacity and group by gender with a group scatter chart.",
            "Draw a scatterplot of count(*) vs sum student capacity where count(*) is on the x-axis and points are colored by gender"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 128,
                        "classify": "F"
                    },
                    {
                        "x_data": 1,
                        "y_data": 116,
                        "classify": "M"
                    },
                    {
                        "x_data": 5,
                        "y_data": 1136,
                        "classify": "X"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(student_capacity)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show the department id and their salary using a scatter chart.",
            "Return a scatter to show the department id and the corresponding salary."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 90
                    },
                    {
                        "x_data": 9000,
                        "y_data": 60
                    },
                    {
                        "x_data": 12000,
                        "y_data": 100
                    },
                    {
                        "x_data": 11000,
                        "y_data": 30
                    },
                    {
                        "x_data": 8200,
                        "y_data": 50
                    },
                    {
                        "x_data": 14000,
                        "y_data": 80
                    },
                    {
                        "x_data": 4400,
                        "y_data": 10
                    },
                    {
                        "x_data": 13000,
                        "y_data": 20
                    },
                    {
                        "x_data": 6500,
                        "y_data": 40
                    },
                    {
                        "x_data": 10000,
                        "y_data": 70
                    },
                    {
                        "x_data": 12000,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "trust"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "Find each target user's name and average trust score Visualize by bar chart, list in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Roxi",
                        "y_data": 10
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 8
                    },
                    {
                        "x_data": "Terry",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 4.666666666666667
                    },
                    {
                        "x_data": "Rosie",
                        "y_data": 4.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(trust)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "For all artist names who are not from the United States, show the total number of each year.",
            "For all artist names who are not from the United States, show the total number of each year with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1994",
                        "y_data": 1
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year_Join",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year_Join)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Draw a bar chart about the distribution of Date_of_Birth and Height , I want to rank y axis from high to low order.",
            "Visualize a bar chart about the distribution of Date_of_Birth and Height , order y-axis in desc order please.",
            "A bar chart shows the distribution of Date_of_Birth and Height , list by the y-axis in desc.",
            "Return a bar chart about the distribution of Date_of_Birth and Height , and order Y-axis from high to low order.",
            "Show me about the distribution of Date_of_Birth and Height in a bar chart, could you list by the Y-axis in descending?",
            "Bar chart x axis date of birth y axis height, and could you list Y in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "05.05.1972",
                        "y_data": 202
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 200
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 197
                    },
                    {
                        "x_data": "28.09.1981",
                        "y_data": 196
                    },
                    {
                        "x_data": "01.09.1977",
                        "y_data": 196
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 195
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 194
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 193
                    },
                    {
                        "x_data": "06.10.1976",
                        "y_data": 188
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age, and list Y in asc order.",
            "Find the maximum age for each type of pet Return the result with a bar chart, and rank by the Y-axis from low to high.",
            "Show maximal pet age from each pettype, and show from low to high by the total number.",
            "What is the maximum age for each pet type? Please show me a bar chart, and show y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "dog",
                        "y_data": 2
                    },
                    {
                        "x_data": "cat",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(pet_age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "What are the id and name of the mountains that have at least 2 photos Show bar chart, order from low to high by the y axis.",
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?, I want to list by the y-axis from low to high.",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?, I want to sort by the id in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mount Cameroon",
                        "y_data": 12
                    },
                    {
                        "x_data": "Ighil Mgoun",
                        "y_data": 14
                    },
                    {
                        "x_data": "Taska n\u2019Zat",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A line chart shows the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, list in asc by the x-axis please.",
            "Show me about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart, and I want to order by the X-axis in ascending.",
            "Give me the trend about the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and rank x axis from low to high order.",
            "Give me line charts of worldwide gross total number of shop id over year start from by major genres Is_full_time, I want to list by the x-axis from low to high.",
            "Return a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, I want to order x axis in ascending order please.",
            "Draw a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and I want to list in ascending by the x-axis.",
            "Visualize a line chart about the change of the sum of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, display by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 8,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "what are the draft pick numbers and draft classes for players who play the Defender position?, rank by the X in ascending.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, I want to list by the x-axis from low to high.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, could you list by the x axis in ascending?",
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, show by the bar in ascending.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and show by the bar in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1996 MLS Inaugural Player Draft",
                        "y_data": 87
                    },
                    {
                        "x_data": "1999 MLS College Draft",
                        "y_data": 5
                    },
                    {
                        "x_data": "2000 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005 MLS SuperDraft",
                        "y_data": 9
                    },
                    {
                        "x_data": "2006 MLS SuperDraft",
                        "y_data": 37
                    },
                    {
                        "x_data": "2008 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2009 MLS SuperDraft",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Draft_Class",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Draft_Pick_Number"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of meter_300 and ID , and rank X-axis in descending order.",
            "Show id from each meter 300, order by the bars in descending.",
            "Find meter_300 and ID , and visualize them by a bar chart, and rank X-axis in descending order.",
            "Return a bar chart about the distribution of meter_300 and ID , could you display in descending by the X-axis?",
            "Give me the comparison about ID over the meter_300 , display in descending by the X-axis.",
            "Show me about the distribution of meter_300 and ID in a bar chart, and show in descending by the meter_300."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:57.10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2:56.95",
                        "y_data": 2
                    },
                    {
                        "x_data": "2:56.64",
                        "y_data": 6
                    },
                    {
                        "x_data": "2:56.04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2:56.02",
                        "y_data": 7
                    },
                    {
                        "x_data": "2:55.94",
                        "y_data": 3
                    },
                    {
                        "x_data": "2:55.90",
                        "y_data": 4
                    },
                    {
                        "x_data": "2:53.46",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_300",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Give me a bar chart for budget_in_billions of each name, show in ascending by the Name.",
            "List the budget of each department in a bar chart, and order bars in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Agriculture",
                        "y_data": 77.6
                    },
                    {
                        "x_data": "Commerce",
                        "y_data": 6.2
                    },
                    {
                        "x_data": "Defense",
                        "y_data": 439.3
                    },
                    {
                        "x_data": "Education",
                        "y_data": 62.8
                    },
                    {
                        "x_data": "Energy",
                        "y_data": 21.5
                    },
                    {
                        "x_data": "Health and Human Services",
                        "y_data": 543.2
                    },
                    {
                        "x_data": "Homeland Security",
                        "y_data": 44.6
                    },
                    {
                        "x_data": "Housing and Urban Development",
                        "y_data": 46.2
                    },
                    {
                        "x_data": "Interior",
                        "y_data": 10.7
                    },
                    {
                        "x_data": "Justice",
                        "y_data": 23.4
                    },
                    {
                        "x_data": "Labor",
                        "y_data": 59.7
                    },
                    {
                        "x_data": "State",
                        "y_data": 9.96
                    },
                    {
                        "x_data": "Transportation",
                        "y_data": 58
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 11.1
                    },
                    {
                        "x_data": "Veterans Affairs",
                        "y_data": 73.2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Budget_in_Billions"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Return a histogram on what are the types of competition and number of competitions for that type?, I want to display total number in desc order.",
            "Give me a histogram for what are the types of competition and number of competitions for that type?, rank in desc by the y axis.",
            "What are the types of competition and number of competitions for that type Show bar chart, and I want to order the total number from high to low order.",
            "List the types of competition and the number of competitions of each type Visualize by bar chart, and I want to order the total number from high to low order.",
            "Plot the total number by grouped by competition type as a bar graph, and sort by the y axis from high to low.",
            "List the types of competition and the number of competitions of each type in a bar chart, sort Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "List the company name and rank for all companies in the decreasing order of their sales in a bar chart.",
            "List the company name and rank for all companies in the decreasing order of their sales. Visualize by bar chart.",
            "Visualize a bar chart for what is the name and rank of every company ordered by descending number of sales?",
            "What is the name and rank of every company ordered by descending number of sales. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 4
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 1
                    },
                    {
                        "x_data": "BP",
                        "y_data": 11
                    },
                    {
                        "x_data": "PetroChina",
                        "y_data": 7
                    },
                    {
                        "x_data": "General Electric",
                        "y_data": 3
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 10
                    },
                    {
                        "x_data": "Berkshire Hathaway",
                        "y_data": 8
                    },
                    {
                        "x_data": "HSBC",
                        "y_data": 6
                    },
                    {
                        "x_data": "Wells Fargo",
                        "y_data": 9
                    },
                    {
                        "x_data": "Industrial and Commercial Bank of China",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, I want to display Y-axis from low to high order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and show y axis in asc order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, I want to display Y-axis from low to high order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, and I want to display Y-axis from low to high order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and could you show by the Y-axis in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 3
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 5
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 9.333333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a line chart that groups by departed date.",
            "List the number of dogs departed in each day with a line chart that groups by departed date.",
            "Plot date arrived by how many date arrived as a trend line"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-04-15",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-04-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-05-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-06-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-06-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-07-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-01-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-17",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "What is the number of courses each teacher teaches? Visualize with a bar chart, and list y-axis from low to high order.",
            "Show the number of courses each teacher teaches in a bar chart, and show by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Give me a bar chart to visualize the number of the districts of markets they are on, and I want to order from low to high by the X.",
            "I want to know the number of districts of markets they are on, and order by the x-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alberta",
                        "y_data": 2
                    },
                    {
                        "x_data": "British Columbia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quebec",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(District)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute name, and show y-axis from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute name by a bar chart, and order Price in descending order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute name in a bar chart, and I want to show by the y-axis in descending.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute name, and sort Y in descending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute name, and show by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and commission_pct , and visualize them by a bar chart, and show in asc by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and commission_pct , and sort in ascending by the EMAIL.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and commission_pct , sort X-axis in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email by a bar chart, show in asc by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the email , and sort in ascending by the EMAIL."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HBAER",
                        "y_data": 0
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 0
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 0
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 0
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 0
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm",
            "affected_region"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "List the name for storms and the number of affected regions for each storm with a bar chart, and could you sort Y from high to low order?",
            "how many regions were affected by each storm?, I want to order in desc by the y axis.",
            "Return a bar chart on how many regions were affected by each storm?, show in desc by the Y please.",
            "List the name for storms and the number of affected regions for each storm, order by the y-axis from high to low.",
            "How many regions were affected by each storm Visualize by bar chart, and rank from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "One",
                        "y_data": 2
                    },
                    {
                        "x_data": "Five",
                        "y_data": 2
                    },
                    {
                        "x_data": "Three",
                        "y_data": 1
                    },
                    {
                        "x_data": "Four",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Can you list the employee's last name and the corresponding department id using a bar chart?, rank from low to high by the bar.",
            "Draw a bar chart of last name versus department_id, and order from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 50
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 60
                    },
                    {
                        "x_data": "King",
                        "y_data": 90
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 30
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 80
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Bar chart of minimal price from each name, order from low to high by the x axis.",
            "Show the name of the product that is cheapest in each product category with their minimum price with a bar graph, sort in ascending by the bar.",
            "What are the names of the cheapest products in each category along with the cheapest price in a bar chart?, and list in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name, show bars in descending order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, I want to show by the x-axis in desc please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name, rank in descending by the Name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, order x axis from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name by a bar chart, show by the Name in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Buildings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Give me a bar chart showing the number of buildings managed by \"Kyle\" and group by apartment type codes.",
            "How many buildings are managed by \"Kyle\"? Return a bar chart grouping by apartment type codes."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duplex",
                        "y_data": 2
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Studio",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of name and meter_100 , and list in asc by the total number.",
            "Return a bar chart about the distribution of name and meter_100 , and list in asc by the total number.",
            "Show me about the distribution of name and meter_100 in a bar chart, and display y axis in asc order.",
            "Give me the comparison about meter_100 over the name by a bar chart, display in asc by the y-axis.",
            "Draw a bar chart of name versus meter_100, and rank by the total number in ascending.",
            "Visualize a bar chart about the distribution of name and meter_100 , and I want to sort Y from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many professors whose office is located in DRE 102 are hired in each weekday? Return a bar chart, sort in desc by the Y.",
            "Show the number of professors who is in office DRE 102 hired in each weekday with a bar chart, display how many emp hiredate from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and I want to show from low to high by the Y.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and list sum department id in ascending order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart, sort sum department id in ascending order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to show from low to high by the Y.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, and list in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 910
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 910
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 930
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 930
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 980
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1040
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show me how many home team by home team in a histogram, and I want to order how many home team in ascending order.",
            "Show the number of games for each home team in a bar chart, and display by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move-in date, note that you should bin move-in date into Day Of Week interval.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Weekday interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 9
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates with a maximum temperature higher than 85?",
            "A bar chart for giveing me the number of the dates when the max temperature was higher than 85.",
            "What are the dates with a maximum temperature higher than 85, and count them by a bar chart",
            "Give me the number of the dates when the max temperature was higher than 85.",
            "A bar chart for what are the number of the dates with a maximum temperature higher than 85?",
            "Give me the dates when the max temperature was higher than 85, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 18
                    },
                    {
                        "x_data": "2014",
                        "y_data": 99
                    },
                    {
                        "x_data": "2015",
                        "y_data": 62
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and sort by the x axis from high to low.",
            "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, could you order by the bars from high to low?",
            "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart, display by the X from high to low please.",
            "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, list by the All_Home in descending.",
            "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, sort by the x axis from high to low.",
            "Show me the number of all home by all home in a histogram, and could you order by the bars from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 1
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(All_Home)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, and I want to list from high to low by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 8
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Allergy_Type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "List the first name of the students who do not have any food type allergy and count them in a bar chart, and rank how many fname in asc order.",
            "What is the first name of each student who is not allergic to any type of food? Count them in a bar chart, and show by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different starting date. Bin starting date by year interval and group by location code with a group line chart.",
            "Give me line charts of worldwide gross the number of date in location from over year date in location from by major genres Location_Code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972~1976",
                        "y_data": 3,
                        "classify": "b"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "b"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 3,
                        "classify": "b"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6,
                        "classify": "b"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 4,
                        "classify": "c"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "c"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 3,
                        "classify": "c"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 7,
                        "classify": "c"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 5,
                        "classify": "e"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 8,
                        "classify": "e"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 5,
                        "classify": "n"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 9,
                        "classify": "n"
                    },
                    {
                        "x_data": "1972~1976",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 6,
                        "classify": "x"
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 10,
                        "classify": "x"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give the name of each department and the number of employees in each in a bar chart, and order x axis in asc order please.",
            "Give the name of each department and the number of employees in each Plot them as bar chart, show in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 2
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 1
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 6
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 5
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 34
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "bookings"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "How many bookings did each customer make? Show the customer id as the Y-axis and the first name as the X-axis in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rosalee",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 7
                    },
                    {
                        "x_data": "Elinore",
                        "y_data": 8
                    },
                    {
                        "x_data": "German",
                        "y_data": 9
                    },
                    {
                        "x_data": "Layne",
                        "y_data": 10
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 11
                    },
                    {
                        "x_data": "Jamir",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of commission_pct over hire_date .",
            "For those employees who was hired before 2002-06-21, return a line chart about the change of commission_pct over hire_date .",
            "For those employees who was hired before 2002-06-21, show me the trend about commission_pct over hire_date with a line chart.",
            "For those employees who was hired before 2002-06-21, for commission_pct, hire_date, visualize the trend.",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of commission_pct over hire_date",
            "For those employees who was hired before 2002-06-21, show me about the change of commission_pct over hire_date in a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 0.4
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and salary in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the job_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and salary , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and salary ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 7000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of manager_id over hire_date , could you list in ascending by the HIRE_DATE?",
            "For those employees who was hired before 2002-06-21, show me the trend about manager_id over hire_date with a line chart, and I want to order by the X-axis in asc.",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of manager_id over hire_date, I want to order by the X-axis in asc.",
            "For those employees who was hired before 2002-06-21, give me the trend about manager_id over hire_date , I want to rank x-axis in asc order.",
            "For those employees who was hired before 2002-06-21, for manager_id, hire_date, visualize the trend, and I want to rank x-axis in asc order.",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of manager_id over hire_date , display x axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components, order by the X in desc please.",
            "Find the component amounts and names of all furnitures that have more than 10 components, and sort X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dining set",
                        "y_data": 12
                    },
                    {
                        "x_data": "Billiard table",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_Component"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart, and I want to show by the x-axis from low to high.",
            "For each year, bin the year into day of the week interval, and return the average of the number of times the team Boston Red Stockings won in the postseasons using a line chart, show by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903~1913",
                        "y_data": 5
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 5
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 5
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 5
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 10
                    },
                    {
                        "x_data": "2013",
                        "y_data": 15
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart.",
            "Show the number of documents created in each day and bin document date by year interval and group by document type description with a group line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 10,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 9,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 3,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 3,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 5,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 2,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 5,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 10,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 9,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 3,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 3,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 5,
                        "classify": "fun"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 3,
                        "classify": "fun"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 5,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 12,
                        "classify": "good"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 9,
                        "classify": "good"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 6,
                        "classify": "good"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 6,
                        "classify": "good"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart, and could you rank in descending by the total number?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, show in desc by the Y please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and I want to rank from high to low by the y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, and display y axis in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time, I want to rank from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 6
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Draw a bar chart of first name versus manager_id, sort from low to high by the y-axis.",
            "You can return a bar chart to show the employees' first name and the corresponding manager's id, and rank total number in ascending order.",
            "Just show the first name of the employee and list their manager's id in the Y-axis of the bar chart, I want to order in ascending by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Steven",
                        "y_data": 0
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 100
                    },
                    {
                        "x_data": "Den",
                        "y_data": 100
                    },
                    {
                        "x_data": "John",
                        "y_data": 100
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 102
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show the number of opening years for three churches that opened most recently in a bar chart. Bin the year into the weekday interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "enroll"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many students taking a course who received an A or C? Group by students' first name with a bar chart, and display in desc by the total number.",
            "Find the number of students who took some course and got A or C and group by first name in a bar chart, rank by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 3
                    },
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Bar chart of the number of years played from each years played, sort x-axis from low to high order.",
            "Group and count the years played to draw a bar chart, I want to display from low to high by the bars.",
            "Please give me a bar chart to show the number of players in each years played, show in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "2 (1988, 1990)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2009\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 (2003\u20132004, 2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_400 and meter_100 , display in descending by the meter_100.",
            "A bar chart shows the distribution of meter_400 and meter_100 , and show in descending by the total number.",
            "Bar graph to show meter_100 from different meter 400, and show in descending by the total number.",
            "Give me the comparison about meter_100 over the meter_400 , show in descending by the total number.",
            "Find meter_400 and meter_100 , and visualize them by a bar chart, and I want to sort by the Y in desc.",
            "Visualize a bar chart about the distribution of meter_400 and meter_100 , rank from high to low by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3:56.34",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "3:55.37",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "3:55.72",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "3:57.12",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "3:57.00",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "3:55.49",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "3:55.36",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "3:52.93",
                        "y_data": 55.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_400",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Road and School_ID , sort y axis in descending order.",
            "Find All_Road and School_ID , and visualize them by a bar chart, could you show y-axis in desc order please?",
            "A bar chart shows the distribution of All_Road and School_ID , and show from high to low by the Y-axis.",
            "Show me school_id by all road in a histogram, show from high to low by the total number.",
            "Return a bar chart about the distribution of All_Road and School_ID , and could you sort total number from high to low order?",
            "Visualize a bar chart about the distribution of All_Road and School_ID , could you sort total number from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4\u20138",
                        "y_data": 5
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 4
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart, and could you order from low to high by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "East Rickey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Edgardoberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gibsonfurt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hertafurt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake Floyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake Katheryn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Port Montytown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Agustinstad",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gleasonland",
                        "y_data": 2
                    },
                    {
                        "x_data": "Estaland",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gilbertmouth",
                        "y_data": 3
                    },
                    {
                        "x_data": "North Lisandroport",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(city)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Road and ACC_Percent , I want to list total number in ascending order please.",
            "Return a bar chart about the distribution of All_Road and ACC_Percent , and display y-axis in ascending order please.",
            "Show me about the distribution of All_Road and ACC_Percent in a bar chart, display by the total number in ascending.",
            "A bar chart shows the distribution of All_Road and ACC_Percent , display in ascending by the y-axis.",
            "Give me the comparison about ACC_Percent over the All_Road by a bar chart, display y-axis in ascending order please.",
            "Show me acc_percent by all road in a histogram, and show by the Y in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "users"
        ],
        "db_id": "document_management",
        "nl_queries": [
            "what are the different role codes for users, and how many users have each?, and I want to sort in descending by the role_code.",
            "Return a histogram on what are the different role codes for users, and how many users have each?, could you rank by the role_code in desc?",
            "What are the different role codes for users, and how many users have each Show bar chart, and rank in desc by the bars.",
            "Find the number of users in each role Plot them as bar chart, and could you display bar from high to low order?",
            "Bar graph to show the total number from different role code, and sort from high to low by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PROJ-MGR",
                        "y_data": 7
                    },
                    {
                        "x_data": "DBA",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the frequency of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and count their frequency.",
            "I want a bar chart to show the frequency of the dates that have the 5 highest cloud cover rates each year.",
            "Draw a bar chart of date versus how many date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "when is the hire date for those employees whose first name does not containing the letter M, and count them by a bar chart, rank from high to low by the total number.",
            "On what dates were employees without the letter M in their first names hired, and count them by a bar chart, I want to list total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 14
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 13
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 13
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 12
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 11
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN for visualizing a bar chart, sort by the bar in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart about how many students live in each city?, and sort by the bar in desc.",
            "Return a histogram on how many students live in each city?, and could you order X-axis in descending order?",
            "How many students live in each city, display in desc by the X-axis.",
            "Plot the total number by grouped by city code as a bar graph, I want to rank x-axis from high to low order.",
            "Show all cities and corresponding number of students by a bar chart, and display in desc by the bars.",
            "Show all cities and corresponding number of students Plot them as bar chart, and could you order X-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "You can return a bar chart with employees' first names and their salaries, sort by the X in descending.",
            "Just show employees' salaries by their first name in a bar chart, sort in descending by the bar please.",
            "Bar chart x axis first name y axis salary, I want to rank names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "John",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Den",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "For artist names who are not from the United States, how many names in each year?, and I want to sort by the y axis in descending.",
            "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y, and order by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1994",
                        "y_data": 2,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1998",
                        "y_data": 1,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1997",
                        "y_data": 0,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1994",
                        "y_data": 2,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1998",
                        "y_data": 2,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1997",
                        "y_data": 0,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0,
                        "classify": "Vijay Singh"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year_Join",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year_Join)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Stacked bar of took office and how many took office colored by Minister, and display by the Y-axis in descending.",
            "How many parties of the time they took office, binning the took office into Weekday interval, and then split by the minister's name, and show y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Took_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Took_office)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Return a line chart about the change of Shop_ID over Start_from , sort by the Start_from in ascending.",
            "Can you draw the trend of shop_id over the start from?, sort in ascending by the x axis.",
            "Give me the trend about Shop_ID over Start_from , and rank Start_from from low to high order.",
            "Visualize a line chart about the change of Shop_ID over Start_from , sort in ascending by the x axis.",
            "A line chart shows the change of Shop_ID over Start_from, and I want to sort in ascending by the Start_from please.",
            "A line chart shows the trend of Shop_ID over Start_from , list Start_from in asc order.",
            "Show me about the change of Shop_ID over Start_from in a line chart, and order by the x-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 8
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Shop_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students in each department that has the top 3 highest number of students with a pie chart.",
            "Which departments have the top 3 highest number of students? Show the department name and number of students with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 3
                    },
                    {
                        "x_data": "Computer Info. Systems",
                        "y_data": 2
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_NAME"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, I want to sort by the Y in ascending.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and show in ascending by the Y-axis.",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart, and show y-axis from low to high order please.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and display y-axis in ascending order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, sort in asc by the mean department id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 44.666666666666664
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 56.666666666666664
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "June",
                        "y_data": 83.75
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Compare the prices of each manufacturer's most expensive product with a bar chart, and I want to display X in ascending order.",
            "For each manufacturer's name, what are the prices of their most expensive product?, order in asc by the bars.",
            "Select the name of each manufacturer along with the price of its most expensive product using a bar chart, rank Name in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 180
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 270
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and rank sum salary from high to low order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, show by the y-axis in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, display by the total number in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and show by the y-axis in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart, I want to rank by the sum salary in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "What are the maximum score of wines in each year?, and show in asc by the X.",
            "Give me a line chart about each year's maximum score , I want to order x axis from low to high order.",
            "Show me the trend aboutthe maximum score of wines for each year, and I want to order by the Year from low to high.",
            "Can you draw the trend of maximal score over the year?, sort X in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004-01-01",
                        "y_data": 92
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 95
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 98
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 98
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 95
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 95
                    },
                    {
                        "x_data": "2066-01-01",
                        "y_data": 88
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(Score)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and display by the y-axis in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of revenue , and group by attribute founder in a bar chart, and display y-axis in asc order please.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of revenue , and group by attribute founder, order Y in ascending order please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, and show Y-axis in asc order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder, could you display by the total number from low to high please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 60
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "James",
                        "y_data": 150
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "How many cards in different card type code? Plot a bar chart, and rank how many card type code in descending order.",
            "Show the number of cards in different card type code in a bar chart, show y axis in descending order.",
            "Show me the number of card type code by card type code in a histogram, and could you order by the total number in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    },
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(card_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Compare each editors' ages using a bar chart, and could you list bars in descending order?",
            "Draw a bar chart of name versus age, and I want to list in desc by the x axis.",
            "What are the names and ages of editors? Show me a bar chart, I want to list in desc by the x axis.",
            "Visualize a bar chart to show editors' names and their ages, I want to rank bars from high to low order.",
            "Display a bar chart for the names and the ages of editors, and I want to rank bars from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 24
                    },
                    {
                        "x_data": "Szymon Wydra",
                        "y_data": 20
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 43
                    },
                    {
                        "x_data": "Mariusz Zalejski",
                        "y_data": 25
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 38
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 21
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 34
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 54
                    },
                    {
                        "x_data": "Anna Powierza",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show names of technicians and the number of machines they are assigned to repair with a bar chart.",
            "Show names of technicians and the number of machines they are assigned to repair. Visualize by bar chart.",
            "Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?",
            "Give me a histogram for what are the names of the technicians and how many machines are they assigned to repair?",
            "What are the names of the technicians and how many machines are they assigned to repair."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, and I want to order by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "l",
                        "y_data": 3
                    },
                    {
                        "x_data": "w",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show different teams of technicians and the number of technicians in each team, list by the bar in desc.",
            "Create a bar chart showing the total number across team, show X-axis from high to low order please.",
            "Show different teams of technicians and the number of technicians in each team with a bar chart, and display from high to low by the X-axis.",
            "For each team, how many technicians are there, and list names in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PHA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NYY",
                        "y_data": 2
                    },
                    {
                        "x_data": "CWS",
                        "y_data": 2
                    },
                    {
                        "x_data": "CLE",
                        "y_data": 4
                    },
                    {
                        "x_data": "CHC",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time, list Y-axis in asc order.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, and rank by the Y in asc.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, sort by the y-axis in ascending please.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, I want to show from low to high by the y axis.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart, display in ascending by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    },
                    {
                        "x_data": "June",
                        "y_data": 1355
                    },
                    {
                        "x_data": "July",
                        "y_data": 3610
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3741
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4314
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Find the name and credit score of the customers who have some loans, I want to order X in asc order please.",
            "Show a bar chart to show different names and credit scores of customers who have taken a loan, and I want to list X in ascending order.",
            "Please compare the credit score of the customers who have some loans by a bar chart, and list from low to high by the x-axis.",
            "Give me a histogram for what are the different names and credit scores of customers who have taken a loan?, and I want to order X in asc order please.",
            "Return a histogram on what are the different names and credit scores of customers who have taken a loan?, and display bars in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mary",
                        "y_data": 30
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 210
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cust_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "credit_score"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "Return a pie chart on what is the average price of the products for each category?",
            "Visualize a pie chart with what is the average price of the products for each category?",
            "What is the average price of the products for each category, Show a pie chart.",
            "Return the average price of products that have each category code in a pie chart.",
            "A pie chart about the average price of products that have each category code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book",
                        "y_data": 35
                    },
                    {
                        "x_data": "Food",
                        "y_data": 2.88
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 66.67
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, order by the X in ascending.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id, and order by the X in ascending.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, could you rank bars in asc order?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, I want to list by the bars from low to high.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and I want to list by the bar from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 400
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 180
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 90
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1040
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, and show Y-axis in ascending order.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, list total number in ascending order.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, could you order capacity in asc order please?",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, order in asc by the y axis please.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, and display by the Y-axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr Pepper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vimto",
                        "y_data": 6
                    },
                    {
                        "x_data": "Diet Mountain Dew",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sprite Lemo",
                        "y_data": 8
                    },
                    {
                        "x_data": "Diet Pepsi",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, show by the y-axis from high to low.",
            "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, and could you show by the y axis in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Syrah"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me the average of weight by sex in a histogram, order by the X-axis from high to low please.",
            "A bar chart shows the distribution of Sex and the average of Weight , and group by attribute Sex, show by the bar in desc.",
            "Show me about the distribution of Sex and the average of Weight , and group by attribute Sex in a bar chart, I want to sort from high to low by the X please.",
            "Give me the comparison about the average of Weight over the Sex , and group by attribute Sex by a bar chart, sort from high to low by the x-axis.",
            "Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, could you sort by the x axis in descending?",
            "Draw a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, and order by the X-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 86.71428571428571
                    },
                    {
                        "x_data": "F",
                        "y_data": 92
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Give me a pie chart showing the number of films for each director.",
            "What is the number of films of each director? Return a pie chart.",
            "Give me a pie to show how many directed by from different directed by."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bill Schreiner",
                        "y_data": 4
                    },
                    {
                        "x_data": "Jesus Salvador Trevi\u00f1o",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Directed_by)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Directed_by"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "A bar chart about how many customers use each payment method?, order Y in asc order.",
            "Return a bar chart on how many customers use each payment method?, and could you sort in asc by the Y-axis?",
            "For each payment method, return how many customers use it, and order from low to high by the the total number please.",
            "How many customers use each payment method, show the total number from low to high order.",
            "Bar graph to show the total number from different payment method code, and order from low to high by the the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Direct Debit",
                        "y_data": 5
                    },
                    {
                        "x_data": "Credit Card",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "circuits"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?, could you sort names in descending order?",
            "Find the id and location of circuits that belong to France or Belgium Plot them as bar chart, show X from high to low order please.",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?, and show X from high to low order please.",
            "What are the ids and locations of all circuits in France or Belgium Show bar chart, could you sort X-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Spa",
                        "y_data": 13
                    },
                    {
                        "x_data": "Rouen",
                        "y_data": 53
                    },
                    {
                        "x_data": "Reims",
                        "y_data": 55
                    },
                    {
                        "x_data": "Magny Cours",
                        "y_data": 8
                    },
                    {
                        "x_data": "Le Mans",
                        "y_data": 54
                    },
                    {
                        "x_data": "Le Castellet",
                        "y_data": 34
                    },
                    {
                        "x_data": "Heusden-Zolder",
                        "y_data": 40
                    },
                    {
                        "x_data": "Dijon",
                        "y_data": 41
                    },
                    {
                        "x_data": "Clermont-Ferrand",
                        "y_data": 51
                    },
                    {
                        "x_data": "Brussels",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "circuitId"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "For each position, what is the average number of points for players in that position Plot them as bar chart, I want to order x axis in asc order.",
            "List the position of players and the average number of points of players of each position Visualize by bar chart, and order by the names in ascending.",
            "List the position of players and the average number of points of players of each position by a bar chart, and display from low to high by the X.",
            "Give me a bar chart for mean points of each position, show X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 20
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 36
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 12
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 20
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 36
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 36
                    },
                    {
                        "x_data": "Scrum Half",
                        "y_data": 188
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 20
                    },
                    {
                        "x_data": "Stand Off",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Points)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "What are the average prices of wines for different years Show the trend, list by the X-axis in descending.",
            "Display a line chart for what is the average prices of wines for each each?, list by the X-axis in descending.",
            "Give me a tendency forwhat are the average prices of wines for different years?, and could you show by the X from high to low?",
            "Plot year by mean price as a line chart, rank from high to low by the x axis.",
            "Draw a line chart for what is the average prices of wines for each each?, and show in desc by the x-axis.",
            "What is the average prices of wines for each each Visualize by line chart, and rank from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2066-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 30.953846153846154
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 39.70769230769231
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 49.41847826086956
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 52.941176470588225
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 52.82142857142857
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 60.714285714285715
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "How many singers are from each country, and could you rank by the x-axis in descending?",
            "Show all countries and the number of singers in each country Show bar chart, and sort bar in desc order please.",
            "Show all countries and the number of singers in each country in a bar chart, and I want to order by the bars from high to low.",
            "Give me a histogram for how many singers are from each country?, and sort in descending by the names.",
            "Return a bar chart on how many singers are from each country?, list by the bar from high to low.",
            "Draw a bar chart of country versus the total number, could you rank by the bar in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the party and the number of drivers in each party by a pie chart.",
            "Show the party and the number of drivers in each party. Visualize by pie chart.",
            "Give me a pie to show the total number from different party."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dem",
                        "y_data": 10
                    },
                    {
                        "x_data": "Rep",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?, sort x-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Editor",
                        "y_data": 2
                    },
                    {
                        "x_data": "Manager",
                        "y_data": 1
                    },
                    {
                        "x_data": "Photo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Proof Manager",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a line chart about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, display by the Start_from from low to high.",
            "For the average of Shop_ID, Start_from, visualize the trend, sort in asc by the x-axis.",
            "Show me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart, and list from low to high by the x-axis.",
            "A line chart shows the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and rank from low to high by the Start_from.",
            "Give me the trend about the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and list from low to high by the x-axis.",
            "Give me line charts of worldwide gross the average of shop id over year start from by major genres Is_full_time, I want to list by the Start_from in ascending.",
            "Show me about the change of the average of Shop_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart, and order by the Start_from from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 0.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 3,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2.5,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Bin the Year into weekday interval, then group and count by Year, display Y-axis in desc order.",
            "Give a bar chart that bins year into weekday interval, group by year and count them, display in descending by the how many year.",
            "Show me how many year by year in a histogram, and I want to list Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each teacher? Show me a bar chart, and rank y-axis from low to high order please.",
            "Show the number of courses for each instructor in a bar chart, could you sort total number from low to high order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "company_1",
        "nl_queries": [
            "Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart, could you rank Y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 3
                    },
                    {
                        "x_data": "M",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return a bar chart about the number bookings for each apartment number, I want to list y axis in ascending order.",
            "How many bookings for each apartment number? Plot a bar chart, display y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apt. 187",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 2
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 3
                    },
                    {
                        "x_data": "Suite 693",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average, and list by the y axis from low to high.",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, and list by the y-axis in ascending.",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, rank y axis from low to high order.",
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart, and rank y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Group by the theme and count the year with a stacked bar chart, and show from high to low by the the number of year please.",
            "Stacked bar of year and the number of year colored by Theme, display in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Christmas Tree"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Christmas stocking"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Summer"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station_company",
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the company name with the number of gas station by a bar chart.",
            "Show the company name with the number of gas station. Show bar chart.",
            "For each company id, what are the companies and how many gas stations does each one operate. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 2
                    },
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 1
                    },
                    {
                        "x_data": "PetroChina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 1
                    },
                    {
                        "x_data": "BP",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Stacked bar of class and the number of class colored by Rank, and display in asc by the x axis please.",
            "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart, rank by the X-axis in ascending.",
            "A stacked bar graph shows the total number of captains categorize by ranks of different classes, could you list in ascending by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 1,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 1,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 1,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 2,
                        "classify": "Midshipman"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "EMPLOYEE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "What are the phone numbers for each employee, and count them by a bar chart, I want to show in descending by the how many phone.",
            "Plot the number of phone by grouped by phone as a bar graph, and I want to show in descending by the y axis.",
            "A bar chart for listing the number of the phone numbers of all employees, list by the total number in desc.",
            "What are the number of the phone numbers for each employee?, rank by the Y from high to low.",
            "List the number of the phone numbers of all employees, I want to show in descending by the y axis.",
            "A bar chart for what are the number of the phone numbers for each employee?, I want to list by the y axis in descending please.",
            "List the phone numbers of all employees, and count them by a bar chart, I want to rank by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "+1 (403) 262-3443",
                        "y_data": 2
                    },
                    {
                        "x_data": "1 (780) 836-9987",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (780) 428-9482",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 467-3351",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 456-9986",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 263-4423",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 246-9887",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Phone",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Phone)"
                }
            }
        }
    },
    {
        "tables_used": [
            "book"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "List the writers of the books in ascending alphabetical order, and count them by a bar chart",
            "A bar chart for listing the number of the writers of the books in ascending alphabetical order.",
            "List the number of the writers of the books in ascending alphabetical order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Hinz",
                        "y_data": 2
                    },
                    {
                        "x_data": "Christopher Moeller",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dave Gibbons",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elaine Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Garth Ennis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Howard Chaykin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michael Moorcock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Timothy Truman",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Writer",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Writer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "book_club"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show all book categories and the number of books in each category with a bar chart.",
            "Show all book categories and the number of books in each category.",
            "Give me a histogram for how many books fall into each category?",
            "Visualize a bar chart for how many books fall into each category?",
            "How many books fall into each category.",
            "Show the total number from each category"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gay M/SF",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gay SF/F",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lesb. M/SF",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Movie",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For directors who had more than one movie, bin the year into Year interval and them compute the total number of movies in each year bucket, and group by title. The result can be drawn as a trend line.",
            "For each director who directed more than one movie, for each movie title, bin their dates of release into Year interval and count the total number in each bucket using a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1981~1983",
                        "y_data": 2,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 1,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": "1981~1983",
                        "y_data": 3,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 1,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "E.T."
                    },
                    {
                        "x_data": "1981~1983",
                        "y_data": 4,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 1,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": "1981~1983",
                        "y_data": 4,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1984~1986",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1987~1989",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1990~1992",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 2,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0,
                        "classify": "Titanic"
                    },
                    {
                        "x_data": "2008~2009",
                        "y_data": 2,
                        "classify": "Titanic"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for all female students and group them by first name in a bar chart, and could you rank the average of age in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susan",
                        "y_data": 16
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 18
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 18
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 19
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 20
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 21
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 23
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Show the name of each editor and the number of journal committees they are on using a bar chart.",
            "Just compare the number of journal committees of each editor using a histogram."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 1
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, show Y from high to low order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart, and show y axis in descending order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to sort by the Y-axis in descending please.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and could you order y-axis in desc order?",
            "For all employees who have the letters D or S in their first name, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and I want to order by the Y from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7850
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7350
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 6000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3244.4444444444443
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2933.3333333333335
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2822.222222222222
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year, show y-axis in descending order.",
            "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year, I want to show how many year in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Summer"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show how many delegates in each county with a bar chart, I want to display by the total number in desc.",
            "Use a bar chart to show the number of delegates in each county, and show by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, I want to display by the X in desc please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, and show X-axis in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, show X-axis in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart, and I want to rank JOB_ID from high to low order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and list by the names from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "Bar graph to show the number of last name from different last name, and I want to order in ascending by the bar.",
            "what is the total number of last names of all candidates?, and order x-axis in ascending order.",
            "Give me a bar graph for what is the total number of last names of all candidates?, sort in asc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bartoletti",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bednar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feest",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hartmann",
                        "y_data": 2
                    },
                    {
                        "x_data": "Senger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wintheiser",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and department_id , and list by the DEPARTMENT_ID in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and department_id , I want to rank from high to low by the Y please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and department_id in a bar chart, and I want to sort from high to low by the Y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and department_id , and visualize them by a bar chart, I want to rank from high to low by the Y please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and department_id , I want to show y-axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "515.123.8181",
                        "y_data": 110
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 110
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 70
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 40
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 20
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 20
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors for each first name with a bar chart, sort by the bars in asc.",
            "How many professors for each first name? Show me a bar chart, and show in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Annelise",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doreen",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1
                    },
                    {
                        "x_data": "Herman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hermine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melanie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Preston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ralph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ronald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ross",
                        "y_data": 1
                    },
                    {
                        "x_data": "Van",
                        "y_data": 1
                    },
                    {
                        "x_data": "Willa",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Allergy_Type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the first name of each student who is not allergic to any type of food? Count them in a bar chart, sort from high to low by the x axis.",
            "List the first name of the students who do not have any food type allergy and count them in a bar chart, I want to show X-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 5
                    },
                    {
                        "x_data": "David",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arthur",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names of high school students and their corresponding number of friends in a bar chart.",
            "Show the names of high school students and their corresponding number of friends. Plot them as bar chart.",
            "A bar chart about what are the names of the high schoolers and how many friends does each have?",
            "Display a bar chart for what are the names of the high schoolers and how many friends does each have?",
            "What are the names of the high schoolers and how many friends does each have. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "What is the date of birth of every customer whose status code is 'Good Customer', and count them by a bar chart",
            "When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates? You can show me a bar chart, could you show Y-axis in desc order?",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into weekdays interval and compute their total cloud cover, and show total number in descending order.",
            "Bar graph to show total number of cloud cover from different date, list in desc by the total number.",
            "I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day, and order total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 8
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the job_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For those employees who did not have any job in the past, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 241900
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 28500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1197
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 740
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1653
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 834
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 980
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1361
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 424
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Show the number of headquarters from each headquarters, and I want to show by the X from high to low.",
            "What is the number of companies for each headquarter? Visualize by bar chart, could you sort by the Headquarters in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 8
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 4
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes",
            "Students"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Find the dates of assessment notes for students with first name \"Fanny\", and count them by a bar chart, and order from low to high by the how many date of notes.",
            "A bar chart for finding the number of the dates of assessment notes for students with first name \"Fanny\", and sort by the total number from low to high.",
            "Find the number of the dates of assessment notes for students with first name \"Fanny\", display by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_notes",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_notes)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "For events that have more than one participant, count the event details for a bar chart, and list by the the number of event details in ascending.",
            "Give me a bar chart to show the number of event details of events that have more than one participant, I want to order Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Success",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of employee_id over hire_date , and could you order x-axis in descending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about employee_id over hire_date , show X in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of employee_id over hire_date, and could you order x-axis in descending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about employee_id over hire_date with a line chart, could you order x-axis in descending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of employee_id over hire_date , and rank from high to low by the HIRE_DATE.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of employee_id over hire_date , could you sort by the X-axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 206
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 204
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 203
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 202
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 178
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Compare the number of participants in each participant type code using a bar chart, order from low to high by the X-axis please.",
            "Please draw a histogram to show the total number of participants in each type code, list X-axis from low to high order.",
            "Bar chart x axis participant type code y axis the number of participant type code, and sort in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organizer",
                        "y_data": 7
                    },
                    {
                        "x_data": "Participant",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Participant_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Give me a bar chart for sum price of each name, I want to display by the x-axis in desc.",
            "Visualize a bar chart for what are the names and the total prices of all products in the store?, and could you list from high to low by the X-axis?",
            "Give me a histogram for what are the names and total prices of all products in the store?, display by the bar in desc.",
            "What are the names and the accumulated prices of all products in the store Plot them as a bar chart, and could you list from high to low by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the position of players and the average number of points of players of each position by a bar chart, and order from high to low by the Y.",
            "Give me a bar chart for mean points of each position, rank total number in descending order.",
            "For each position, what is the average number of points for players in that position Plot them as bar chart, sort the average of points in desc order.",
            "List the position of players and the average number of points of players of each position Visualize by bar chart, list by the the average of points in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Scrum Half",
                        "y_data": 188
                    },
                    {
                        "x_data": "Stand Off",
                        "y_data": 110
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 36
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 36
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 36
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 20
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 20
                    },
                    {
                        "x_data": "Full Back",
                        "y_data": 20
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 12
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 9.333333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Points)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show how many delegates in each party with a bar chart.",
            "For each party, use a bar chart to show the number of its delegates."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 4
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of start date of each apartment booking for each year? Return a bar chart, and order in asc by the how many booking start date.",
            "Show the number of start dates of all the apartment bookings for each year with a bar chart, sort by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6
                    },
                    {
                        "x_data": "2016",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manager"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show the countries that have managers of age above 50 or below 46, and count them by a bar chart, and show names in desc order please.",
            "A bar chart for showing the number of the countries that have managers of age above 50 or below 46, list in descending by the bars.",
            "Show the number of the countries that have managers of age above 50 or below 46, list in descending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 2
                    },
                    {
                        "x_data": "England",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, and could you list by the x-axis from low to high please?",
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, could you order by the date_from in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games for each home team in a bar chart, sort by the y-axis in desc please.",
            "Show me how many home team by home team in a histogram, I want to sort by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show all countries with a pie chart.",
            "What is the proportion of the number of countries in the artist table?",
            "Give me a pie chart about the proportion of the number of countries in the artist table",
            "Create a pie chart showing how many country across country."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fiji",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 5
                    },
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many accounts for different statement details? Draw a bar chart, sort Y-axis from high to low order.",
            "Show the number of accounts for different statement details in a bar chart, and rank by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Open Project",
                        "y_data": 9
                    },
                    {
                        "x_data": "Private Project",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Statement_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, rank by the bars in desc please.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, and rank x-axis from high to low order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, could you display X in descending order?",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart, and list x axis in descending order.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of department_id , and group by attribute job_id, and visualize them by a bar chart, rank by the bars in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many professors for each first name? Show me a bar chart, and rank the number of emp fname in desc order please.",
            "Find the number of professors for each first name with a bar chart, rank the number of emp fname in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ronald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 2
                    },
                    {
                        "x_data": "Willa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Van",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ross",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ralph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Preston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melanie",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hermine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Herman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doreen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Annelise",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Show the different countries and the number of members from each Visualize by bar chart, order by the y axis from low to high please.",
            "Plot the total number by grouped by country as a bar graph, and order by the y axis from low to high please.",
            "Show the different countries and the number of members from each with a bar chart, and could you order in asc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each building with a bar chart, and rank in asc by the X.",
            "How many courses are in the Psychology department in each building? Draw a bar chart, show by the x-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find Team_Name and Team_ID , and visualize them by a bar chart, could you show by the y-axis from high to low?",
            "A bar chart shows the distribution of Team_Name and Team_ID , I want to list y axis in desc order.",
            "Give me the comparison about Team_ID over the Team_Name by a bar chart, could you rank by the Y in descending?",
            "Show me about the distribution of Team_Name and Team_ID in a bar chart, could you show by the y-axis from high to low?",
            "Visualize a bar chart about the distribution of Team_Name and Team_ID , and show by the Y-axis from high to low.",
            "Show team_id from each team name, and display y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by weekday.",
            "List the number of dogs departed in each day with a bar chart that bins departed date by weekday.",
            "Create a bar chart showing the number of date departed across date departed"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents created in each day and bin document date by year interval and group by document type with a group line chart, and list x-axis in descending order.",
            "How many documents are created in each day? Bin the document date by year interval and group by document type with a group line chart, and order from high to low by the Document_Date please.",
            "How many documents are created in each day? Bin the document date by year interval and group by document type with a group line chart, display by the x axis in descending.",
            "Show the number of documents created in each day and bin document date by year interval and group by document type with a group line chart, and order from high to low by the Document_Date please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010~2013",
                        "y_data": 3,
                        "classify": "Book"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 2,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 5,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 6,
                        "classify": "Book"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 3,
                        "classify": "CV"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 1,
                        "classify": "CV"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 3,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 2,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 6,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1,
                        "classify": "CV"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 6,
                        "classify": "CV"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 3,
                        "classify": "Film"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 2,
                        "classify": "Film"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 3,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 2,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 6,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1,
                        "classify": "Film"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 6,
                        "classify": "Film"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 4,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 4,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 6,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 8,
                        "classify": "Paper"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "city"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Show the average of population from each status, and rank by the Y in descending.",
            "A bar chart about what are the statuses and average populations of each city?, could you sort Y from high to low order?",
            "What are the statuses and average populations of each city Plot them as bar chart, and show in descending by the Y-axis.",
            "Give me a histogram for what are the statuses and average populations of each city?, could you sort Y from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Town",
                        "y_data": 5706
                    },
                    {
                        "x_data": "Village",
                        "y_data": 1009.75
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Status",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE",
            "ENROLLED_IN"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "Give the number of each course name with at least five enrollments Return a bar chart, and list by the Y-axis in ascending.",
            "What is the number of each course name that have at least five enrollments? Show me a bar chart, and list by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ALGORITHMS I",
                        "y_data": 1
                    },
                    {
                        "x_data": "APPLIED STATISTICS AND DATA ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIRCUITS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMBINATORIAL ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER SYSTEM FUNDAMENTALS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER VISION",
                        "y_data": 1
                    },
                    {
                        "x_data": "DATA STRUCTURES in JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "EXPLORING THE INTERNET",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO NATURAL LANGUAGE PROCESSING",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO PROGRAMMING IN JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRODUCTION TO PROBABILITY",
                        "y_data": 1
                    },
                    {
                        "x_data": "MULTIMEDIA COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "QUANTITATIVE MEDICAL COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "SUPERCOMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "DATABASE SYSTEMS",
                        "y_data": 2
                    },
                    {
                        "x_data": "DISTRIBUTED SYSTEMS",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of male students (with sex M) from each city in a bar chart.",
            "How many male students are there in each city? Show a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 2
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 3
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 1
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For employees with first names that end with the letter m, give me a bar chart to show their total salary, and could you sort by the total number in ascending please?",
            "For those employees whose first name is ending with the letter m, sum their salary for visualizing a bar chart, could you sort by the total number in ascending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Payam",
                        "y_data": 7900
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "William",
                        "y_data": 15700
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show me the frequency of the weekdays (binning year into weekdays interval) that the team Boston Red Stockings won in the postseasons with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "A bar chart about what is average age for different job title?, and rank y axis in ascending order.",
            "What is average age for different job title Visualize by bar chart, and rank y axis in ascending order.",
            "Return a histogram on how old is the average person for each job?, and display y axis in asc order.",
            "Display a bar chart for how old is the average person for each job?, display y axis in asc order.",
            "Bar chart x axis job y axis the average of age, and sort Y-axis in ascending order please.",
            "How old is the average person for each job Show bar chart, and show by the Y from low to high.",
            "Visualize a bar chart for what is average age for different job title?, I want to show from low to high by the the average of age."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "student",
                        "y_data": 25.5
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "nomination",
            "artwork",
            "festival_detail"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            "Show the ids and names of festivals that have at least two nominations for artworks with a pie chart.",
            "Show the ids and names of festivals that have at least two nominations for artworks. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Panasonic Awards",
                        "y_data": 1
                    },
                    {
                        "x_data": "Flower Awards",
                        "y_data": 2
                    },
                    {
                        "x_data": "LA Awards",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Festival_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Festival_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For each station, just simply show its longitude and the average duration of trips that started from the station using a scatter chart.",
            "Please return a scatter chart to show each start station's longitude and the corresponding average duration of trips started there."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": -121.901782,
                        "y_data": 544.7611940298508
                    },
                    {
                        "x_data": -121.888979,
                        "y_data": 885
                    },
                    {
                        "x_data": -121.894902,
                        "y_data": 378.28
                    },
                    {
                        "x_data": -121.8932,
                        "y_data": 980.0714285714287
                    },
                    {
                        "x_data": -121.894074,
                        "y_data": 840.225
                    },
                    {
                        "x_data": -121.886943,
                        "y_data": 529.0909090909091
                    },
                    {
                        "x_data": -121.885831,
                        "y_data": 682.3333333333334
                    },
                    {
                        "x_data": -121.894715,
                        "y_data": 1230.655172413793
                    },
                    {
                        "x_data": -121.886995,
                        "y_data": 1123.4
                    },
                    {
                        "x_data": -121.88566000000002,
                        "y_data": 810.5416666666665
                    },
                    {
                        "x_data": -121.883891,
                        "y_data": 711.7777777777777
                    },
                    {
                        "x_data": -121.88993700000002,
                        "y_data": 616.4
                    },
                    {
                        "x_data": -121.900084,
                        "y_data": 608.8333333333334
                    },
                    {
                        "x_data": -121.877349,
                        "y_data": 3597.095238095238
                    },
                    {
                        "x_data": -122.226904,
                        "y_data": 3909
                    },
                    {
                        "x_data": -122.232089,
                        "y_data": 2643.871794871795
                    },
                    {
                        "x_data": -122.227424,
                        "y_data": 741
                    },
                    {
                        "x_data": -122.203288,
                        "y_data": 979.0666666666667
                    },
                    {
                        "x_data": -122.223492,
                        "y_data": 555.4
                    },
                    {
                        "x_data": -122.081896,
                        "y_data": 563.0333333333333
                    },
                    {
                        "x_data": -122.07671299999998,
                        "y_data": 714.8062015503875
                    },
                    {
                        "x_data": -122.106758,
                        "y_data": 380.4090909090909
                    },
                    {
                        "x_data": -122.066553,
                        "y_data": 918.1315789473683
                    },
                    {
                        "x_data": -122.108338,
                        "y_data": 667.5925925925926
                    },
                    {
                        "x_data": -122.083678,
                        "y_data": 1082.7142857142858
                    },
                    {
                        "x_data": -122.099076,
                        "y_data": 699.7
                    },
                    {
                        "x_data": -122.164759,
                        "y_data": 1653.3255813953488
                    },
                    {
                        "x_data": -122.163093,
                        "y_data": 2643.6
                    },
                    {
                        "x_data": -122.142805,
                        "y_data": 1423.842105263158
                    },
                    {
                        "x_data": -122.159504,
                        "y_data": 1164.1153846153845
                    },
                    {
                        "x_data": -122.13777749999998,
                        "y_data": 872.2222222222223
                    },
                    {
                        "x_data": -122.408433,
                        "y_data": 1245.5836909871246
                    },
                    {
                        "x_data": -122.39997,
                        "y_data": 906.0827586206897
                    },
                    {
                        "x_data": -122.398436,
                        "y_data": 1067.6629213483143
                    },
                    {
                        "x_data": -122.402923,
                        "y_data": 524.774834437086
                    },
                    {
                        "x_data": -122.404767,
                        "y_data": 1497.7671232876712
                    },
                    {
                        "x_data": -122.403452,
                        "y_data": 825.1928571428572
                    },
                    {
                        "x_data": -122.398525,
                        "y_data": 1817.221649484536
                    },
                    {
                        "x_data": -122.390637,
                        "y_data": 655.7166666666667
                    },
                    {
                        "x_data": -122.394203,
                        "y_data": 1802.6721991701245
                    },
                    {
                        "x_data": -122.391034,
                        "y_data": 938.7894736842104
                    },
                    {
                        "x_data": -122.388013,
                        "y_data": 766.0746268656717
                    },
                    {
                        "x_data": -122.394643,
                        "y_data": 535.0488372093023
                    },
                    {
                        "x_data": -122.39708600000002,
                        "y_data": 752.6637554585153
                    },
                    {
                        "x_data": -122.405127,
                        "y_data": 551.4051282051282
                    },
                    {
                        "x_data": -122.418235,
                        "y_data": 1774.6315789473686
                    },
                    {
                        "x_data": -122.418603,
                        "y_data": 734.3861386138614
                    },
                    {
                        "x_data": -122.403234,
                        "y_data": 1630.002267573696
                    },
                    {
                        "x_data": -122.39028799999998,
                        "y_data": 905.3340611353713
                    },
                    {
                        "x_data": -122.39623600000002,
                        "y_data": 399.6787330316742
                    },
                    {
                        "x_data": -122.398108,
                        "y_data": 414.5117370892018
                    },
                    {
                        "x_data": -122.392738,
                        "y_data": 512.8461538461538
                    },
                    {
                        "x_data": -122.402717,
                        "y_data": 568.9297752808989
                    },
                    {
                        "x_data": -122.418954,
                        "y_data": 912.8475609756098
                    },
                    {
                        "x_data": -122.417385,
                        "y_data": 1139.6389891696754
                    },
                    {
                        "x_data": -122.401014,
                        "y_data": 561.7394957983194
                    },
                    {
                        "x_data": -122.39547,
                        "y_data": 725.3219284603423
                    },
                    {
                        "x_data": -122.39526,
                        "y_data": 801.9405320813771
                    },
                    {
                        "x_data": -122.408499,
                        "y_data": 765.4458598726114
                    },
                    {
                        "x_data": -122.411748,
                        "y_data": 1276.7208121827412
                    },
                    {
                        "x_data": -122.407245,
                        "y_data": 1423.375
                    },
                    {
                        "x_data": -122.394434,
                        "y_data": 890.9441964285713
                    },
                    {
                        "x_data": -122.399051,
                        "y_data": 655.2933333333333
                    },
                    {
                        "x_data": -122.404966,
                        "y_data": 1664.8505338078294
                    },
                    {
                        "x_data": -122.400811,
                        "y_data": 786.4408284023668
                    },
                    {
                        "x_data": -121.905733,
                        "y_data": 862.4666666666667
                    },
                    {
                        "x_data": -122.40086200000002,
                        "y_data": 1044.7237569060774
                    },
                    {
                        "x_data": -122.236234,
                        "y_data": 253.33333333333331
                    },
                    {
                        "x_data": -121.895617,
                        "y_data": 556
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "long"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.duration)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customers_policies"
        ],
        "db_id": "insurance_fnol",
        "nl_queries": [
            "Retrieve the close dates of all the policies associated with the customer whose name contains \"Diana\", bin the close dates into the day of week interval and count them for a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Closed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Closed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of employee_id over hire_date",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about employee_id over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of employee_id over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of employee_id over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about employee_id over hire_date with a line chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of employee_id over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-03",
                        "y_data": 178
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 202
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 203
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 204
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 206
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "CUSTOMER",
            "INVOICE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart",
            "What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart",
            "What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?",
            "A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0
                    },
                    {
                        "x_data": "2012",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "InvoiceDate",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(InvoiceDate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, and list in descending by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-04-10",
                        "y_data": 13
                    },
                    {
                        "x_data": "1997-08-31",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "problem_log_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, display in descending by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Timed_Status_of_Things",
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the average cloud cover rates of the dates (bin into weekdays interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into day of the week interval and compute their average cloud cover.",
            "I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each day.",
            "Show the average of cloud cover from each date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 8
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show different builders of railways, along with the corresponding number of railways using each builder by a bar chart, and order x-axis in ascending order.",
            "Create a bar chart showing the total number across builder, and list by the x axis from low to high.",
            "Show different builders of railways, along with the corresponding number of railways using each builder Show bar chart, and display x-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avonside",
                        "y_data": 1
                    },
                    {
                        "x_data": "GER Hartford",
                        "y_data": 1
                    },
                    {
                        "x_data": "GER Stratford",
                        "y_data": 1
                    },
                    {
                        "x_data": "GNR Doncaster",
                        "y_data": 1
                    },
                    {
                        "x_data": "GWR Swindon",
                        "y_data": 2
                    },
                    {
                        "x_data": "MR Derby",
                        "y_data": 1
                    },
                    {
                        "x_data": "SECR Ashford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stephenson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Swindon Works",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Builder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS",
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, list X-axis in asc order.",
            "Give me a bar chart for those countries of all appellations who have at most three wines, sort x axis in asc order.",
            "What are the countries for applications with at most 3 wines? Return the result in a bar chart, and could you display County in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 2
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 2
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 7
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 6
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 3
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 1
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 3
                    },
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "What is the relationship between People_ID and Weight , and group by attribute Sex?",
            "Show me about the correlation between People_ID and Weight , and group by attribute Sex in a scatter chart.",
            "A scatter chart shows the correlation between People_ID and Weight , and group by attribute Sex.",
            "Visualize the relationship between People_ID and Weight , and group by attribute Sex.",
            "Visualize a scatter chart about the correlation between People_ID and Weight , and group by attribute Sex.",
            "Scatterplot of weight vs people id by Sex"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 94,
                        "classify": "F"
                    },
                    {
                        "x_data": 5,
                        "y_data": 90,
                        "classify": "F"
                    },
                    {
                        "x_data": 1,
                        "y_data": 83,
                        "classify": "M"
                    },
                    {
                        "x_data": 2,
                        "y_data": 85,
                        "classify": "M"
                    },
                    {
                        "x_data": 4,
                        "y_data": 92,
                        "classify": "M"
                    },
                    {
                        "x_data": 6,
                        "y_data": 88,
                        "classify": "M"
                    },
                    {
                        "x_data": 7,
                        "y_data": 89,
                        "classify": "M"
                    },
                    {
                        "x_data": 8,
                        "y_data": 88,
                        "classify": "M"
                    },
                    {
                        "x_data": 9,
                        "y_data": 82,
                        "classify": "M"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "People_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Bar chart of mean age from each city code, sort y-axis from high to low order.",
            "What is the average age for each city and what are those cities Show bar chart, show by the Y-axis in descending please.",
            "Draw a bar chart for what is the average age for each city and what are those cities?, and show in desc by the Y-axis.",
            "A bar chart about what is the average age for each city and what are those cities?, and show by the Y-axis in descending please.",
            "Find the average age of all students living in the each city Show bar chart, show in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the last_name by a bar chart, list bar in ascending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and salary , and sort from low to high by the bars please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of last_name and salary in a bar chart, and list bar in ascending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and salary , and could you sort x axis in asc order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and salary , and visualize them by a bar chart, sort by the x axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baer",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 6500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Create a bar chart showing mean amount of transaction across transaction type code, display by the transaction_type_code in asc.",
            "Show the average transaction amount for different transaction types, show in ascending by the X-axis.",
            "Show the average transaction amount for different transaction types with a bar chart, and I want to sort by the x-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PUR",
                        "y_data": 25945880.3716125
                    },
                    {
                        "x_data": "SALE",
                        "y_data": 11198167.237771427
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(amount_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 6
                    },
                    {
                        "x_data": "Gonzalo Higua\u00edn ",
                        "y_data": 8
                    },
                    {
                        "x_data": "Guti Midfielder",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Level_of_membership"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the correlation between employee_id and department_id in a scatter chart.",
            "For those employees who did not have any job in the past, visualize a scatter chart about the correlation between employee_id and department_id .",
            "For those employees who did not have any job in the past, visualize the relationship between employee_id and department_id .",
            "For those employees who did not have any job in the past, return a scatter chart about the correlation between employee_id and department_id .",
            "For those employees who did not have any job in the past, draw a scatter chart about the correlation between employee_id and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 90
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 104,
                        "y_data": 60
                    },
                    {
                        "x_data": 105,
                        "y_data": 60
                    },
                    {
                        "x_data": 106,
                        "y_data": 60
                    },
                    {
                        "x_data": 107,
                        "y_data": 60
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 109,
                        "y_data": 100
                    },
                    {
                        "x_data": 110,
                        "y_data": 100
                    },
                    {
                        "x_data": 111,
                        "y_data": 100
                    },
                    {
                        "x_data": 112,
                        "y_data": 100
                    },
                    {
                        "x_data": 113,
                        "y_data": 100
                    },
                    {
                        "x_data": 115,
                        "y_data": 30
                    },
                    {
                        "x_data": 116,
                        "y_data": 30
                    },
                    {
                        "x_data": 117,
                        "y_data": 30
                    },
                    {
                        "x_data": 118,
                        "y_data": 30
                    },
                    {
                        "x_data": 119,
                        "y_data": 30
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 125,
                        "y_data": 50
                    },
                    {
                        "x_data": 126,
                        "y_data": 50
                    },
                    {
                        "x_data": 127,
                        "y_data": 50
                    },
                    {
                        "x_data": 128,
                        "y_data": 50
                    },
                    {
                        "x_data": 129,
                        "y_data": 50
                    },
                    {
                        "x_data": 130,
                        "y_data": 50
                    },
                    {
                        "x_data": 131,
                        "y_data": 50
                    },
                    {
                        "x_data": 132,
                        "y_data": 50
                    },
                    {
                        "x_data": 133,
                        "y_data": 50
                    },
                    {
                        "x_data": 134,
                        "y_data": 50
                    },
                    {
                        "x_data": 135,
                        "y_data": 50
                    },
                    {
                        "x_data": 136,
                        "y_data": 50
                    },
                    {
                        "x_data": 137,
                        "y_data": 50
                    },
                    {
                        "x_data": 138,
                        "y_data": 50
                    },
                    {
                        "x_data": 139,
                        "y_data": 50
                    },
                    {
                        "x_data": 140,
                        "y_data": 50
                    },
                    {
                        "x_data": 141,
                        "y_data": 50
                    },
                    {
                        "x_data": 142,
                        "y_data": 50
                    },
                    {
                        "x_data": 143,
                        "y_data": 50
                    },
                    {
                        "x_data": 144,
                        "y_data": 50
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 150,
                        "y_data": 80
                    },
                    {
                        "x_data": 151,
                        "y_data": 80
                    },
                    {
                        "x_data": 152,
                        "y_data": 80
                    },
                    {
                        "x_data": 153,
                        "y_data": 80
                    },
                    {
                        "x_data": 154,
                        "y_data": 80
                    },
                    {
                        "x_data": 155,
                        "y_data": 80
                    },
                    {
                        "x_data": 156,
                        "y_data": 80
                    },
                    {
                        "x_data": 157,
                        "y_data": 80
                    },
                    {
                        "x_data": 158,
                        "y_data": 80
                    },
                    {
                        "x_data": 159,
                        "y_data": 80
                    },
                    {
                        "x_data": 160,
                        "y_data": 80
                    },
                    {
                        "x_data": 161,
                        "y_data": 80
                    },
                    {
                        "x_data": 162,
                        "y_data": 80
                    },
                    {
                        "x_data": 163,
                        "y_data": 80
                    },
                    {
                        "x_data": 164,
                        "y_data": 80
                    },
                    {
                        "x_data": 165,
                        "y_data": 80
                    },
                    {
                        "x_data": 166,
                        "y_data": 80
                    },
                    {
                        "x_data": 167,
                        "y_data": 80
                    },
                    {
                        "x_data": 168,
                        "y_data": 80
                    },
                    {
                        "x_data": 169,
                        "y_data": 80
                    },
                    {
                        "x_data": 170,
                        "y_data": 80
                    },
                    {
                        "x_data": 171,
                        "y_data": 80
                    },
                    {
                        "x_data": 172,
                        "y_data": 80
                    },
                    {
                        "x_data": 173,
                        "y_data": 80
                    },
                    {
                        "x_data": 174,
                        "y_data": 80
                    },
                    {
                        "x_data": 175,
                        "y_data": 80
                    },
                    {
                        "x_data": 177,
                        "y_data": 80
                    },
                    {
                        "x_data": 178,
                        "y_data": 0
                    },
                    {
                        "x_data": 179,
                        "y_data": 80
                    },
                    {
                        "x_data": 180,
                        "y_data": 50
                    },
                    {
                        "x_data": 181,
                        "y_data": 50
                    },
                    {
                        "x_data": 182,
                        "y_data": 50
                    },
                    {
                        "x_data": 183,
                        "y_data": 50
                    },
                    {
                        "x_data": 184,
                        "y_data": 50
                    },
                    {
                        "x_data": 185,
                        "y_data": 50
                    },
                    {
                        "x_data": 186,
                        "y_data": 50
                    },
                    {
                        "x_data": 187,
                        "y_data": 50
                    },
                    {
                        "x_data": 188,
                        "y_data": 50
                    },
                    {
                        "x_data": 189,
                        "y_data": 50
                    },
                    {
                        "x_data": 190,
                        "y_data": 50
                    },
                    {
                        "x_data": 191,
                        "y_data": 50
                    },
                    {
                        "x_data": 192,
                        "y_data": 50
                    },
                    {
                        "x_data": 193,
                        "y_data": 50
                    },
                    {
                        "x_data": 194,
                        "y_data": 50
                    },
                    {
                        "x_data": 195,
                        "y_data": 50
                    },
                    {
                        "x_data": 196,
                        "y_data": 50
                    },
                    {
                        "x_data": 197,
                        "y_data": 50
                    },
                    {
                        "x_data": 198,
                        "y_data": 50
                    },
                    {
                        "x_data": 199,
                        "y_data": 50
                    },
                    {
                        "x_data": 202,
                        "y_data": 20
                    },
                    {
                        "x_data": 203,
                        "y_data": 40
                    },
                    {
                        "x_data": 204,
                        "y_data": 70
                    },
                    {
                        "x_data": 205,
                        "y_data": 110
                    },
                    {
                        "x_data": 206,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Plot the average of budget in billions over creation in a line chart, and order by the x-axis from low to high.",
            "Show average of budget in different year and group by department creation time with a line chart, show in ascending by the X.",
            "Plot the average of budget in billions over creation in a line chart, and show Creation in asc order.",
            "Show average of budget in different year and group by department creation time with a line chart, order by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 23
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 77
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 59
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 439
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 543
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 58
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 21
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 62
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 73
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 44
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "PRODUCTS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "For each distinct product name, show its average product price, show X-axis from high to low order.",
            "A bar chart about what are the different product names? What is the average product price for each of them?, show in descending by the names.",
            "What are the different product names? What is the average product price for each of them Show bar chart, rank by the bar in desc.",
            "Show me a bar chart for what are the different product names? What is the average product price for each of them?, I want to display X in desc order.",
            "Give me a bar chart for mean product price of each product name, and show in descending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "photo",
                        "y_data": 5102691.666666667
                    },
                    {
                        "x_data": "film",
                        "y_data": 11385515.333333336
                    },
                    {
                        "x_data": "dinning",
                        "y_data": 238704.33333333328
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Product_Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the lowest price of product, grouped by product type? Show a bar chart, and could you rank x axis in ascending order please?",
            "Give the minimum product price for each product type in a bar chart, and could you rank x axis in ascending order please?",
            "Draw a bar chart of product type code versus minimal product price, and I want to rank in asc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Return a bar chart about the distribution of dept_name and the amount of dept_name , and group by attribute dept_name.",
            "Draw a bar chart about the distribution of dept_name and the amount of dept_name , and group by attribute dept_name.",
            "Find dept_name and the amount of dept_name , and group by attribute dept_name, and visualize them by a bar chart.",
            "Show me about the distribution of dept_name and the amount of dept_name , and group by attribute dept_name in a bar chart.",
            "A bar chart shows the distribution of dept_name and the amount of dept_name , and group by attribute dept_name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 4
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 4
                    },
                    {
                        "x_data": "English",
                        "y_data": 4
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 1
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(dept_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way Plot them as bar chart, and display from low to high by the X-axis.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods Visualize by bar chart, and order X in ascending order.",
            "Plot the total number by grouped by how to get there as a bar graph, and display bar in asc order.",
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way in a bar chart, and rank from low to high by the bars please.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods in a bar chart, and sort names in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "bus",
                        "y_data": 6
                    },
                    {
                        "x_data": "shuttle",
                        "y_data": 4
                    },
                    {
                        "x_data": "walk",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "How_to_Get_There",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart showing the number of first name for all female students Their sex is F, display in ascending by the bar.",
            "A bar chart about the number of first name for all female students whose sex is F, and list by the x-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show the number of films for each day in a bar chart, display by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "11 July",
                        "y_data": 1
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 1
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "21 May",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight",
            "Aircraft"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show aircraft names and number of flights for each aircraft, and rank from high to low by the y-axis.",
            "Display a bar chart for what is the name of each aircraft and how many flights does each one complete?, rank from high to low by the y-axis.",
            "Visualize a bar chart for what is the name of each aircraft and how many flights does each one complete?, and could you sort by the Y-axis from high to low?",
            "What is the name of each aircraft and how many flights does each one complete Show bar chart, and sort by the Y in descending please.",
            "Show aircraft names and number of flights for each aircraft with a bar chart, list by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lockheed L1011",
                        "y_data": 2
                    },
                    {
                        "x_data": "Airbus A340-300",
                        "y_data": 2
                    },
                    {
                        "x_data": "SAAB 340",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piper Archer III",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embraer ERJ-145",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boeing 757-300",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boeing 747-400",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boeing 737-800",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "Show the number of documents for each receipt date and bin by year with a line chart, sort by the x-axis in desc please.",
            "List the number of documents for each receipt date and bin by year with a line chart, and sort by the x-axis in desc please.",
            "I want to see trend of how many receipt date by receipt date, and order by the X in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013~2017",
                        "y_data": 3
                    },
                    {
                        "x_data": "2008~2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003~2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "1993~1997",
                        "y_data": 2
                    },
                    {
                        "x_data": "1988~1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1987",
                        "y_data": 3
                    },
                    {
                        "x_data": "1978~1982",
                        "y_data": 1
                    },
                    {
                        "x_data": "1973~1977",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "receipt_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(receipt_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs each owner has? Return a bar chart that groups by owner's last name, and order how many last name from low to high order please.",
            "List the number of dogs each owner has in a bar chart that groups by owner's last name, and I want to order how many last name in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DuBuque",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feil",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fisher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mertz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nicolas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prohaska",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rippin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmitt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stoltenberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Funk",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Return a pie chart about the proportion of Is_full_time and the amount of Is_full_time.",
            "Visualize a pie chart about the proportion of Is_full_time and the amount of Is_full_time.",
            "For the attribute Is_full_time and the amount of Is_full_time, show their proportion by a pie chart.",
            "Draw a pie chart about the proportion of Is_full_time and the amount of Is_full_time.",
            "A pie chart shows the proportion of Is_full_time and the amount of Is_full_time.",
            "Give me a pie to show how many is full time from different is full time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "T",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Is_full_time)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show the names of singers and the total sales of their songs in a bar chart, and order bar in asc order.",
            "Show the names of singers and the total sales of their songs Visualize by bar chart, and order in ascending by the Name.",
            "For each singer name, what is the total sales for their songs Plot them as bar chart, could you rank in asc by the bars?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christy Walton",
                        "y_data": 651421
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 292000
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 335000
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 275000
                    },
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 1646407
                    },
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 261000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T2.Sales)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the first name of students who are living in the Smith Hall, and count them by a bar chart, could you list in ascending by the total number please?",
            "A bar chart for finding the number of the first name of students who are living in the Smith Hall, could you sort by the how many fname from low to high?",
            "A bar chart for what are the number of the first names of all students in Smith Hall?, could you list in ascending by the total number please?",
            "Find the number of the first name of students who are living in the Smith Hall, I want to show Y in ascending order.",
            "What are the first names of all students in Smith Hall, and count them by a bar chart, and rank how many fname in asc order please.",
            "What are the number of the first names of all students in Smith Hall?, and sort by the how many fname in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day, and could you show from high to low by the Y?",
            "For those dates with a max temperature greater than or equal to 80, I want to know the number of days on the day of the week interval using a bar chart, could you show from high to low by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 92
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 89
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 81
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 66
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 63
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 60
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 51
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "For each account type, find the average account balance of customers with credit score lower than 50 Show bar chart, and list by the X in asc.",
            "Draw a bar chart for what is the average account balance of customers with credit score below 50 for the different account types?, could you list by the X-axis in ascending?",
            "What is the average account balance of customers with credit score below 50 for the different account types Visualize by bar chart, and order by the names in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "checking",
                        "y_data": 1000
                    },
                    {
                        "x_data": "saving",
                        "y_data": 2000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "acc_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(acc_bal)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Bin the claim date into the Year interval and count them for visualizing a bar chart, and show in desc by the y-axis.",
            "Create a bar chart showing the number of date claim made across date claim made, rank from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 8
                    },
                    {
                        "x_data": "2016",
                        "y_data": 4
                    },
                    {
                        "x_data": "2018",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time.",
            "Return a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time.",
            "Visualize a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time.",
            "A line chart shows the change of the sum of Employee_ID over Start_from bin start_from by time",
            "Show me about the change of the sum of Employee_ID over Start_from bin start_from by time in a line chart.",
            "A line chart shows the trend of the sum of Employee_ID over Start_from bin start_from by time.",
            "I want to see trend of sum employee id by start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 2
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 7
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday, order by the y-axis in descending.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart, and sort in desc by the the average of manager id.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday, and I want to order by the Y from high to low.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart, and order by the y-axis in descending.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, sort the average of manager id in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 130.625
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 129.46666666666667
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 124.66666666666667
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 123
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 122.2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 121.2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 114.1875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Return a bar chart on how many counties correspond to each police force?, and could you list by the y axis in descending?",
            "Create a bar chart showing the total number across police force, order by the Y in descending.",
            "Display a bar chart for how many counties correspond to each police force?, list Y-axis in desc order.",
            "How many counties correspond to each police force, display y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RCMP",
                        "y_data": 4
                    },
                    {
                        "x_data": "Central Saanich Police",
                        "y_data": 1
                    },
                    {
                        "x_data": "Abbotsford Police Department",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Police_force",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 150.5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 155
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 152.5
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 153.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 151
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 152
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 153
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A line chart shows the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and show by the x-axis from high to low please.",
            "Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart, and order by the X from high to low please.",
            "Show me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart, and sort in descending by the X-axis.",
            "Give me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and display by the x-axis from high to low.",
            "Draw a line chart about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, I want to sort Start_from in descending order.",
            "For the average of Employee_ID, Start_from, visualize the trend, and display by the x-axis from high to low.",
            "I want to see trend mean employee id over start from by Is_full_time, sort by the x axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1.5,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 3.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "tv_channel"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, I want to display in desc by the Pixel_aspect_ratio_PAR.",
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, I want to display in desc by the Pixel_aspect_ratio_PAR.",
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart, list X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:3 / 16:9",
                        "y_data": 3
                    },
                    {
                        "x_data": "4:3",
                        "y_data": 6
                    },
                    {
                        "x_data": "16:9",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Pixel_aspect_ratio_PAR",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Pixel_aspect_ratio_PAR)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and I want to order by the x axis from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, and show in desc by the x axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, show by the X from high to low please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder, list names from high to low order please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, rank by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize the relationship between commission_pct and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a scatter chart shows the correlation between commission_pct and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the correlation between commission_pct and department_id in a scatter chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a scatter chart about the correlation between commission_pct and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between commission_pct and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.15,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 20
                    },
                    {
                        "x_data": 0,
                        "y_data": 20
                    },
                    {
                        "x_data": 0,
                        "y_data": 40
                    },
                    {
                        "x_data": 0,
                        "y_data": 70
                    },
                    {
                        "x_data": 0,
                        "y_data": 110
                    },
                    {
                        "x_data": 0,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return the room and number of reservations made for each of the rooms to draw a bar chart.",
            "For each room, find its the number of times reservations were made for it. Visualize them using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AOB",
                        "y_data": 51
                    },
                    {
                        "x_data": "CAS",
                        "y_data": 69
                    },
                    {
                        "x_data": "FNA",
                        "y_data": 66
                    },
                    {
                        "x_data": "HBB",
                        "y_data": 60
                    },
                    {
                        "x_data": "IBD",
                        "y_data": 63
                    },
                    {
                        "x_data": "IBS",
                        "y_data": 59
                    },
                    {
                        "x_data": "MWC",
                        "y_data": 56
                    },
                    {
                        "x_data": "RND",
                        "y_data": 62
                    },
                    {
                        "x_data": "RTE",
                        "y_data": 55
                    },
                    {
                        "x_data": "TAA",
                        "y_data": 59
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Room",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show me mean cloud cover by date in a histogram, and list by the Y in desc.",
            "What is the average cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, and order by the the average of cloud cover in descending please.",
            "I want a bar chart to show the average cloud cover of the dates that have the 5 highest cloud cover rates each year, and rank by the y axis from high to low.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their average cloud cover, rank by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 8
                    },
                    {
                        "x_data": "2015",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_category",
            "category"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "What are the names and ids of the different categories? Show me the bar chart, sort from low to high by the X-axis.",
            "List the genre name and genre id using a bar chart, and show from low to high by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Action",
                        "y_data": 1
                    },
                    {
                        "x_data": "Animation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Children",
                        "y_data": 3
                    },
                    {
                        "x_data": "Classics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Comedy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Documentary",
                        "y_data": 6
                    },
                    {
                        "x_data": "Drama",
                        "y_data": 7
                    },
                    {
                        "x_data": "Family",
                        "y_data": 8
                    },
                    {
                        "x_data": "Foreign",
                        "y_data": 9
                    },
                    {
                        "x_data": "Games",
                        "y_data": 10
                    },
                    {
                        "x_data": "Horror",
                        "y_data": 11
                    },
                    {
                        "x_data": "Music",
                        "y_data": 12
                    },
                    {
                        "x_data": "New",
                        "y_data": 13
                    },
                    {
                        "x_data": "Sci-Fi",
                        "y_data": 14
                    },
                    {
                        "x_data": "Sports",
                        "y_data": 15
                    },
                    {
                        "x_data": "Travel",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "category_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator",
            "accelerator_compatible_browser"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and show in desc by the id.",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, rank by the id from high to low.",
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, I want to list total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fasterfox",
                        "y_data": 3
                    },
                    {
                        "x_data": "CProxy",
                        "y_data": 2
                    },
                    {
                        "x_data": "CACHEbox",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show me the correlation between the number of platforms and the number of total_passengers in a scatter chart.",
            "Draw a scatter plot about the correlation between the number of platforms and the number of total_passengers.",
            "Plot a scatter chart, sum(number of platforms) by sum total passengers."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 13,
                        "y_data": 36.330999999999996
                    },
                    {
                        "x_data": 17,
                        "y_data": 29.658
                    },
                    {
                        "x_data": 140,
                        "y_data": 498.50700000000006
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "sum(number_of_platforms)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(total_passengers)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Bar chart x axis building y axis maximal capacity, and order by the bars in asc.",
            "What is the greatest capacity for rooms in each building? Draw a bar chart, and list by the names in ascending please.",
            "Find the maximum capacity among rooms in each building with a bar chart, list by the names in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alumni",
                        "y_data": 47
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 11
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 65
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    },
                    {
                        "x_data": "Main",
                        "y_data": 30
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Power",
                        "y_data": 12
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 109
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 115
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 125
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 119.2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 105.63636363636364
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 121.2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 126.57142857142857
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 127.11111111111111
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 133
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, and could you display y axis in descending order?",
            "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, I want to sort Y-axis in desc order.",
            "Stacked bar chart of how many nationality for with each Type in each nationality, I want to list how many nationality from high to low order.",
            "What is the total number of ships with different nationalities and ship types?, sort in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United Kingdom",
                        "y_data": 2,
                        "classify": "Battle ship"
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1,
                        "classify": "Battle ship"
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 3,
                        "classify": "Cargo ship"
                    },
                    {
                        "x_data": "United States",
                        "y_data": 2,
                        "classify": "Cargo ship"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "Display a bar chart for what are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?",
            "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor.",
            "how many entrepreneurs correspond to each investor?",
            "Return a histogram on how many entrepreneurs correspond to each investor?",
            "How many entrepreneurs correspond to each investor.",
            "Draw a bar chart of investor versus the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Show different nominees and the number of musicals they have been nominated Plot them as bar chart, show in desc by the X.",
            "Give me a histogram for how many musicals has each nominee been nominated for?, show in desc by the X.",
            "How many musicals has each nominee been nominated for Plot them as bar chart, I want to order by the X in desc.",
            "Show different nominees and the number of musicals they have been nominated in a bar chart, I want to order by the X in desc.",
            "Return a bar chart on how many musicals has each nominee been nominated for?, and I want to show by the x-axis in descending.",
            "Bar chart x axis nominee y axis the total number, I want to show by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show different parties of people along with the number of people in each party with a bar chart, and could you show by the X in desc?",
            "Show different parties of people along with the number of people in each party Plot them as bar chart, display by the names in descending.",
            "Bar graph to show the total number from different party, rank by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    },
                    {
                        "x_data": "Independent Democrat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Anti-Lecompton Democrat",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "What is the average age for each gender Visualize by bar chart, and show X-axis in ascending order.",
            "Draw a bar chart for what is the average age for each gender?, and show X-axis in ascending order.",
            "Bar graph to show the average of age from different gender, and I want to display in asc by the X-axis.",
            "Give me a histogram for how old is each gender, on average?, rank in asc by the x-axis.",
            "How old is each gender, on average Plot them as bar chart, order by the X-axis in ascending.",
            "Return a histogram on how old is each gender, on average?, and could you show bars in asc order please?",
            "Return a bar chart on what is the average age for each gender?, and could you rank x-axis in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 25.5
                    },
                    {
                        "x_data": "male",
                        "y_data": 40
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time, show in desc by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, and order by the Y in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and I want to order total number in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, I want to order in desc by the y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, and display by the mean employee id from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 198.83333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, could you sort X from high to low order?",
            "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart, and I want to show by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001~2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 0
                    },
                    {
                        "x_data": "1977~1979",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Return a bar chart on how old is the youngest person for each job?, and order minimal age from low to high order.",
            "How old is the youngest person for each job Visualize by bar chart, I want to sort by the total number in ascending please.",
            "what is minimum age for different job title?, and list y axis in asc order.",
            "Show minimal age from each job, and order minimal age from low to high order.",
            "What is minimum age for different job title, and show in asc by the y-axis please.",
            "how old is the youngest person for each job?, display from low to high by the y axis.",
            "Draw a bar chart for what is minimum age for different job title?, I want to sort by the total number in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "student",
                        "y_data": 25
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Find the average age of journalists working on different role type, show the result with a bar chart, and sort by the y axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Host",
                        "y_data": 43
                    },
                    {
                        "x_data": "Music",
                        "y_data": 35.5
                    },
                    {
                        "x_data": "Screening",
                        "y_data": 30.33333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Work_Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(t1.age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "representative"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "A bar chart showing how many representatives in each party.",
            "Plot how many party by grouped by party as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "tryout",
            "player"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Pie. what is minimum hours of the students playing in different position?",
            "what is minimum hours of the students playing in different position?",
            "What is minimum hours of the students playing in different position. Show the proportion.",
            "For each position, what is the minimum time students spent practicing. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "goalie",
                        "y_data": 1200
                    },
                    {
                        "x_data": "mid",
                        "y_data": 300
                    },
                    {
                        "x_data": "striker",
                        "y_data": 1600
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T2.HS)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pPos"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and rank Y-axis in desc order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and list Y in desc order.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and order y-axis in descending order please.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, and list Y in desc order.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, and display from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template type codes and the number of documents using each type Visualize by bar chart, and could you display in asc by the y-axis?",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, and could you order y axis from low to high order please?",
            "Show all template type codes and the number of documents using each type with a bar chart, list from low to high by the Y please.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, and could you display in asc by the y-axis?",
            "what are the different template type codes, and how many documents use each type?, and could you display in asc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    },
                    {
                        "x_data": "PP",
                        "y_data": 4
                    },
                    {
                        "x_data": "BK",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees in the Finance department, compare the total number of different job id using a bar chart, list the number of job id in ascending order.",
            "Give me a bar chart that groups and count the job id for all employees in the Finance department, I want to order Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Create a bar chart showing how many location across location, and show names from low to high order.",
            "Return a bar chart showing how many shops in each location, and order in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Blaenllecha",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cymmer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinas",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gelli",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maerdy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pentre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Penygraig",
                        "y_data": 2
                    },
                    {
                        "x_data": "Porth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wattstown",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "Show different publishers together with the number of publications they have in a bar chart, and I want to rank y axis from high to low order.",
            "Show different publishers together with the number of publications they have Plot them as bar chart, and could you list by the total number from high to low?",
            "Draw a bar chart of publisher versus the total number, and list in descending by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wiley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Pearson",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thomson Reuters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Springer Nature",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bertelsmann",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publisher",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home.",
            "Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart.",
            "Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home.",
            "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home.",
            "Give me a bar chart for mean team id of each all home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "A bar chart showing the number of male and female faculty, order by the Y-axis in desc please.",
            "Create a bar chart showing sum count(*) across sex, and order by the Y-axis in desc please.",
            "How many faculty members do we have for each gender? Draw a bar chart, order by the Y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 51
                    },
                    {
                        "x_data": "F",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Member",
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show all party names and the number of members in each party with a bar chart.",
            "Show all party names and the number of members in each party. Show bar chart.",
            "Return a bar chart on how many members are in each party?",
            "Give me a histogram for how many members are in each party?",
            "How many members are in each party. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convention Peoples Party",
                        "y_data": 2
                    },
                    {
                        "x_data": "Progress Party",
                        "y_data": 4
                    },
                    {
                        "x_data": "3",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "List the number of enrolment students in each month and bin date of enrolment by month interval with a bar chart, list y axis in desc order.",
            "How many enrolment students in each month? Return a bar chart binning date of enrolment by month interval, order in desc by the Y-axis.",
            "Bar chart of how many date of enrolment from each date of enrolment, and could you rank by the y-axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 6
                    },
                    {
                        "x_data": "Dec",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 3
                    },
                    {
                        "x_data": "July",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Count the number of services by services, and display Y-axis from low to high order please.",
            "Give me a bar chart for the number of services of each services, could you display from low to high by the y axis?",
            "Compare the number of services by services with a bar graph, I want to show Y in ascending order.",
            "A bar graph listing the services and how many services provided by all stations, order in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London Overground",
                        "y_data": 1
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 2
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_category",
            "category"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "How many films are there in each category? List the genre name and the count with a bar chart, and list the total number in asc order please.",
            "What are the names of the different categories, and how many films are in each? Show me the bar graph, rank y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Music",
                        "y_data": 51
                    },
                    {
                        "x_data": "Horror",
                        "y_data": 56
                    },
                    {
                        "x_data": "Classics",
                        "y_data": 57
                    },
                    {
                        "x_data": "Travel",
                        "y_data": 57
                    },
                    {
                        "x_data": "Comedy",
                        "y_data": 58
                    },
                    {
                        "x_data": "Children",
                        "y_data": 60
                    },
                    {
                        "x_data": "Games",
                        "y_data": 61
                    },
                    {
                        "x_data": "Sci-Fi",
                        "y_data": 61
                    },
                    {
                        "x_data": "Drama",
                        "y_data": 62
                    },
                    {
                        "x_data": "New",
                        "y_data": 63
                    },
                    {
                        "x_data": "Action",
                        "y_data": 64
                    },
                    {
                        "x_data": "Animation",
                        "y_data": 66
                    },
                    {
                        "x_data": "Documentary",
                        "y_data": 68
                    },
                    {
                        "x_data": "Family",
                        "y_data": 69
                    },
                    {
                        "x_data": "Foreign",
                        "y_data": 73
                    },
                    {
                        "x_data": "Sports",
                        "y_data": 74
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the average of price , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the name , and group by attribute name by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and display by the y-axis from low to high please.",
            "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, rank by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alice",
                        "y_data": 35
                    },
                    {
                        "x_data": "Bob",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me salary by last name in a histogram, list from high to low by the bars please.",
            "Show each employee's salary using a bar chart, note that use the last name of each employee, list from high to low by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whalen",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 6500
                    },
                    {
                        "x_data": "King",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 10000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the total cloud cover rates of the dates (bin into day of the week interval) that had the top 5 cloud cover rates? You can show me a bar chart, list by the y-axis in ascending.",
            "I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each day, list by the y-axis in ascending.",
            "Bar graph to show total number of cloud cover from different date, and show by the Y from low to high.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into weekdays interval and compute their total cloud cover, and show y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 8
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Show the different countries and the number of members from each with a bar chart.",
            "Show the different countries and the number of members from each. Visualize by bar chart.",
            "Plot the total number by grouped by country as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart, sort in descending by the y-axis.",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result, and could you order by the Y-axis in desc?",
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?, I want to show by the the number of date of enrolment in descending.",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart, and sort by the total number in desc.",
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result, and list by the Y in desc.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?, and sort in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description by a bar chart, and show in ascending by the bar.",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and order from low to high by the bars.",
            "What are the cost and treatment type description of each treatment Show bar chart, and I want to order in ascending by the x axis please.",
            "Display a bar chart for what are the cost and treatment type description of each treatment?, and show in ascending by the bar.",
            "List the cost of each treatment and the corresponding treatment type description Show bar chart, show in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Physical examination",
                        "y_data": 485.8
                    },
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 478.4
                    },
                    {
                        "x_data": "Vaccination",
                        "y_data": 508
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cost_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Find the number of students who participate in the tryout for each college ordered by descending count. Visualize by bar chart.",
            "Display a bar chart for how many students participated in tryouts for each college by descennding count?",
            "Return a bar chart on how many students participated in tryouts for each college by descennding count?",
            "How many students participated in tryouts for each college by descennding count. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ASU",
                        "y_data": 2
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 2
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 1
                    },
                    {
                        "x_data": "OU",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Student"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show all the faculty ranks and the number of students advised by each rank in a bar chart.",
            "Show all the faculty ranks and the number of students advised by each rank. Visualize by bar chart.",
            "how many students are advised by each rank of faculty? List the rank and the number of students.",
            "Show me a bar chart for how many students are advised by each rank of faculty? List the rank and the number of students.",
            "How many students are advised by each rank of faculty? List the rank and the number of students in a bar chart.",
            "How many students are advised by each rank of faculty? List the rank and the number of students. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 2
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 18
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "How many total amounts of payments by each method code? You can give me a bar chart, show in desc by the Payment_Method_Code.",
            "Please use a bar chart to show the total amount of payment by each payment method code, could you sort by the names from high to low?",
            "Bar chart of sum amount payment from each payment method code, and sort X in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Visa",
                        "y_data": 794713
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 2531865
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 232825
                    },
                    {
                        "x_data": "American Express",
                        "y_data": 177130
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and salary , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and salary in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of email and salary .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the email ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KGRANT",
                        "y_data": 7000
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 13000
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 6000
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 6500
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 10000
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 12000
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and employee_id , and visualize them by a bar chart, and I want to display by the y axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and employee_id , I want to list from high to low by the Y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and employee_id in a bar chart, rank by the Y from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the job_id , order in desc by the y-axis please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and employee_id , I want to display by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 178
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts in a pie chart.",
            "Show first name and id for all customers with at least 2 accounts. Plot them as pie chart.",
            "Draw a pie chart for what are the first names and ids for customers who have two or more accounts?",
            "Display a pie chart for what are the first names and ids for customers who have two or more accounts?",
            "What are the first names and ids for customers who have two or more accounts. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Meaghan",
                        "y_data": 8
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 13
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 15
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the id and details for the investors who have the top 3 number of transactions by a bar chart.",
            "Show the id and details for the investors who have the top 3 number of transactions. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "d",
                        "y_data": 3
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "w",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "investor_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, order by the Y in descending.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, order by the Y in descending.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, I want to show by the total number of manager id from high to low.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time, and rank total number of manager id in descending order.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of manager_id bin hire_date by time, and visualize them by a bar chart, and I want to show by the total number of manager id from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 4314
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3741
                    },
                    {
                        "x_data": "July",
                        "y_data": 3610
                    },
                    {
                        "x_data": "June",
                        "y_data": 1355
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, I want to sort by the x-axis in descending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the headquarter , and group by attribute headquarter, I want to sort by the x-axis in descending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, display bar in desc order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of manufacturer , and group by attribute headquarter, order Headquarter in desc order.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of manufacturer , and group by attribute headquarter, and visualize them by a bar chart, and could you order in descending by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cars_data"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "What are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?, and show by the y axis from high to low please.",
            "A bar chart for what are the number of the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?, and order Y in desc order.",
            "In which years cars were produced weighing no less than 3000 and no more than 4000 , and count them by a bar chart, and order by the Y in desc.",
            "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 , and count them by a bar chart, order how many year in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students whose gpa is lower than the average gpa of all students for different first name in a pie chart.",
            "How many students that has a GPA lower than average? Show me a pie chart grouping by student's first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 2
                    },
                    {
                        "x_data": "Juliette",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_FNAME)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 5,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 2,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 4,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 0,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 1,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 0,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 1,
                        "classify": "Furniture"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, give me the comparison about price over the name by a bar chart, and sort by the Y from high to low please.",
            "For those products with a price between 60 and 120, find name and price , and visualize them by a bar chart, and list in desc by the Y-axis.",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and price , and display by the total number from high to low.",
            "For those products with a price between 60 and 120, give me the comparison about price over the name , and sort Price in descending order.",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and price , order in desc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Draw a pie chart for how many climbers are from each country?",
            "Display a pie chart for how many climbers are from each country?",
            "How many climbers are from each country. Visualize by pie chart.",
            "Give me a pie to show the total number from different country."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Switzerland",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 3
                    },
                    {
                        "x_data": "West Germany",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, what is the relationship between code and code , and group by attribute founder?",
            "For those records from the products and each product's manufacturer, visualize the relationship between code and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and code , and group by attribute founder in a scatter chart.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and code , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": 8,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 9,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 11,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 1,
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": 6,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 7,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 10,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": 4,
                        "y_data": 6,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "trust"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "Find each target user's name and average trust score Visualize by bar chart, I want to show by the x axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mark",
                        "y_data": 4.666666666666667
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 8
                    },
                    {
                        "x_data": "Rosie",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "Roxi",
                        "y_data": 10
                    },
                    {
                        "x_data": "Terry",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(trust)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Create a bar chart showing manager_id across last name, could you list in descending by the x-axis?",
            "Give me a histogram, that simply displays the last name of the employee and the corresponding manager id, rank by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whalen",
                        "y_data": 200
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 145
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 114
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "King",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 103
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 108
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 121
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, rank in ascending by the Y.",
            "For those employees who was hired before 2002-06-21, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, rank in ascending by the Y.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to show from low to high by the y axis.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, order by the Y-axis from low to high please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, rank in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7280
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8350
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 17000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Return a bar chart showing the number of templates with a version number greater than 5 for each template type code, and I want to rank by the y-axis from high to low.",
            "How many templates with version number later than 5 for each template type code? Show me a bar chart, and order by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "PP",
                        "y_data": 2
                    },
                    {
                        "x_data": "BK",
                        "y_data": 2
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 1
                    },
                    {
                        "x_data": "CV",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Template_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, and display y axis from low to high order.",
            "On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, and list by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 106
                    },
                    {
                        "x_data": "2015",
                        "y_data": 206
                    },
                    {
                        "x_data": "2014",
                        "y_data": 275
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Count those dates for each day of the week and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph.",
            "For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each weekday using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\".",
            "A line chart for finding the number of the dates of the tests taken with result \"Pass\".",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a line chart",
            "Find the dates of the tests taken with result \"Pass\", and count them by a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "19th",
                        "y_data": 2
                    },
                    {
                        "x_data": "20th",
                        "y_data": 0
                    },
                    {
                        "x_data": "21th",
                        "y_data": 1
                    },
                    {
                        "x_data": "22th",
                        "y_data": 0
                    },
                    {
                        "x_data": "23th",
                        "y_data": 1
                    },
                    {
                        "x_data": "24th",
                        "y_data": 1
                    },
                    {
                        "x_data": "25th",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_test_taken",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_test_taken)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Stack bar chart of the number of headquarters vs Industry based on headquarters, show by the names in desc.",
            "How many companies are there in each headquarters? Return a stacked bar chart to group by industry and headquearters, and count by headquarters, and rank X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "China",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Automotive"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 3,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 1,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "China",
                        "y_data": 3,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Banking"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 2,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "China",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Conglomerate"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 2,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "France",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "China",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 1,
                        "classify": "Oil and gas"
                    },
                    {
                        "x_data": "USA",
                        "y_data": 1,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "UK",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "France",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "China",
                        "y_data": 0,
                        "classify": "Retailing"
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 0,
                        "classify": "Retailing"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_300 and ID , and visualize them by a bar chart.",
            "Give me the comparison about ID over the meter_300 .",
            "Show me about the distribution of meter_300 and ID in a bar chart.",
            "Draw a bar chart about the distribution of meter_300 and ID .",
            "Return a bar chart about the distribution of meter_300 and ID .",
            "Show id from each meter 300"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:56.02",
                        "y_data": 7
                    },
                    {
                        "x_data": "2:55.90",
                        "y_data": 4
                    },
                    {
                        "x_data": "2:56.04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2:53.46",
                        "y_data": 8
                    },
                    {
                        "x_data": "2:57.10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2:56.95",
                        "y_data": 2
                    },
                    {
                        "x_data": "2:56.64",
                        "y_data": 6
                    },
                    {
                        "x_data": "2:55.94",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_300",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Show different locations and the number of performances at each location Visualize by bar chart, I want to display from low to high by the x-axis.",
            "Bar chart of the total number from each location, I want to order bars in asc order.",
            "Show different locations and the number of performances at each location by a bar chart, sort x-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE",
            "ENROLLED_IN"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "What is the number of each course name that have at least five enrollments? Show me a bar chart, show y axis from high to low order.",
            "Give the number of each course name with at least five enrollments Return a bar chart, list y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DISTRIBUTED SYSTEMS",
                        "y_data": 2
                    },
                    {
                        "x_data": "DATABASE SYSTEMS",
                        "y_data": 2
                    },
                    {
                        "x_data": "SUPERCOMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "QUANTITATIVE MEDICAL COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "MULTIMEDIA COMPUTING",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRODUCTION TO PROBABILITY",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO PROGRAMMING IN JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "INTRO TO NATURAL LANGUAGE PROCESSING",
                        "y_data": 1
                    },
                    {
                        "x_data": "EXPLORING THE INTERNET",
                        "y_data": 1
                    },
                    {
                        "x_data": "DATA STRUCTURES in JAVA",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER VISION",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMPUTER SYSTEM FUNDAMENTALS",
                        "y_data": 1
                    },
                    {
                        "x_data": "COMBINATORIAL ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIRCUITS",
                        "y_data": 1
                    },
                    {
                        "x_data": "APPLIED STATISTICS AND DATA ANALYSIS",
                        "y_data": 1
                    },
                    {
                        "x_data": "ALGORITHMS I",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "gas_station"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "How many gas stations dors each manager have? Plot a bar chart, list bars in descending order.",
            "Show the number of gas stations for each manager in a bar chart, and I want to show by the X in desc.",
            "Draw a bar chart of manager name versus how many manager name, and list bars in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tony Bristow",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Whit",
                        "y_data": 1
                    },
                    {
                        "x_data": "SimonMarloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Cope Derek Marloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luke Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jon Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Colin Denman",
                        "y_data": 2
                    },
                    {
                        "x_data": "BryanDenman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bryan Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "BrianWingrave",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Manager_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Manager_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart, and rank by the Y from high to low please.",
            "For those employees who did not have any job in the past, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, and order Y-axis from high to low order.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, could you show in desc by the Y?",
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart, and order in desc by the total number of manager id please.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and sort from high to low by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 1942
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1890
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1845
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1727
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1718
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1684
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1669
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance",
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show each author and the number of workshops they submitted to in a pie chart.",
            "Show each author and the number of workshops they submitted to. Show a pie chart.",
            "Pie. how many workshops did each author submit to? Return the author name and the number of workshops.",
            "Visualize a pie chart with how many workshops did each author submit to? Return the author name and the number of workshops.",
            "How many workshops did each author submit to? Return the author name and the number of workshops by a pie chart.",
            "How many workshops did each author submit to? Return the author name and the number of workshops. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(DISTINCT T1.workshop_id)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and manager_id , and list from low to high by the MANAGER_ID.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and manager_id , sort by the y-axis from low to high please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and manager_id , and visualize them by a bar chart, and could you list in ascending by the y-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name , and could you order y-axis in ascending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name by a bar chart, and show by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hartstein",
                        "y_data": 100
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 101
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 101
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 149
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 201
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and commission_pct .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the phone_number .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and commission_pct , and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 0
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition",
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show all artist names and the number of exhibitions for each artist in a bar chart.",
            "Show all artist names and the number of exhibitions for each artist. Show bar chart.",
            "how many exhibitions has each artist had?",
            "Return a histogram on how many exhibitions has each artist had?",
            "How many exhibitions has each artist had. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Show the smallest enrollment of each state using a bar chart, show in ascending by the y axis.",
            "Show minimal enr from each state, show from low to high by the Y-axis.",
            "Show the smallest enrollment of each state, and could you rank in ascending by the total number?",
            "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, rank by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "LA",
                        "y_data": 18000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "OK",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_600 and ID , and visualize them by a bar chart, rank by the x axis from high to low.",
            "Visualize a bar chart about the distribution of meter_600 and ID , and I want to display X-axis in desc order please.",
            "Return a bar chart about the distribution of meter_600 and ID , and could you rank in desc by the X-axis?",
            "A bar chart shows the distribution of meter_600 and ID , could you rank in desc by the X-axis?",
            "Bar chart x axis meter 600 y axis id, sort X-axis in descending order.",
            "Show me about the distribution of meter_600 and ID in a bar chart, and rank by the meter_600 from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:57.10",
                        "y_data": 2
                    },
                    {
                        "x_data": "5:56.99",
                        "y_data": 6
                    },
                    {
                        "x_data": "5:56.31",
                        "y_data": 1
                    },
                    {
                        "x_data": "5:54.45",
                        "y_data": 4
                    },
                    {
                        "x_data": "5:53.53",
                        "y_data": 5
                    },
                    {
                        "x_data": "5:53.03",
                        "y_data": 8
                    },
                    {
                        "x_data": "5:52.92",
                        "y_data": 3
                    },
                    {
                        "x_data": "5:52.59",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_600",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "patient"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the number of the names of patients who have made appointments, and order from low to high by the y axis.",
            "A bar chart for listing the number of the names of patients who have made appointments, and order from low to high by the y axis.",
            "List the names of patients who have made appointments, and count them by a bar chart, display Y from low to high order please.",
            "What are the number of names of patients who made an appointment?, and could you order by the y axis from low to high?",
            "What are names of patients who made an appointment, and count them by a bar chart, and I want to display from low to high by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Random J. Patient",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grace Ritchie",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dennis Doe",
                        "y_data": 3
                    },
                    {
                        "x_data": "John Smith",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Return a scatter chart on how many documents are with document type code BK for each product id?",
            "how many documents are with document type code BK for each product id?",
            "How many documents are with document type code BK for each product id. Visualize by scatter chart.",
            "Count the number of documents with the type code BK that correspond to each product id with a scatter chart.",
            "Count the number of documents with the type code BK that correspond to each product id. Plot them as scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 30
                    },
                    {
                        "x_data": 1,
                        "y_data": 35
                    },
                    {
                        "x_data": 3,
                        "y_data": 105
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Project_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a bar chart grouping by instructor's first name, and list X from high to low order.",
            "Show the number of courses each instructor taught in a bar chart, and order in descending by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "what are the names and id of courses having at most 2 sections?, and I want to sort in desc by the y-axis.",
            "What are the names and ids of every course with less than 2 sections Visualize by bar chart, could you list by the total number in descending please?",
            "What are the names and id of courses having at most 2 sections, and order y axis from high to low order please.",
            "Display a bar chart for what are the names and ids of every course with less than 2 sections?, rank from high to low by the course_id.",
            "Display a bar chart for what are the names and id of courses having at most 2 sections?, display Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "pl",
                        "y_data": 14
                    },
                    {
                        "x_data": "db",
                        "y_data": 12
                    },
                    {
                        "x_data": "ml",
                        "y_data": 10
                    },
                    {
                        "x_data": "dl",
                        "y_data": 9
                    },
                    {
                        "x_data": "nlp",
                        "y_data": 8
                    },
                    {
                        "x_data": "cal",
                        "y_data": 7
                    },
                    {
                        "x_data": "la",
                        "y_data": 6
                    },
                    {
                        "x_data": "fr",
                        "y_data": 5
                    },
                    {
                        "x_data": "en",
                        "y_data": 4
                    },
                    {
                        "x_data": "math",
                        "y_data": 2
                    },
                    {
                        "x_data": "ds",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "course_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart.",
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season .",
            "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart.",
            "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent .",
            "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart.",
            "Create a bar chart showing all_games_percent across acc regular season"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Games and All_Games_Percent , and order in asc by the X-axis.",
            "Plot all_games_percent by grouped by all games as a bar graph, and could you list bar in asc order please?",
            "Give me the comparison about All_Games_Percent over the All_Games , could you list bar in asc order please?",
            "Visualize a bar chart about the distribution of All_Games and All_Games_Percent , show by the x axis in ascending.",
            "Return a bar chart about the distribution of All_Games and All_Games_Percent , and order in asc by the X-axis.",
            "Give me the comparison about All_Games_Percent over the All_Games by a bar chart, order in asc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21\u201314",
                        "y_data": 0.6
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "35\u20132",
                        "y_data": 0.946
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, and sort in ascending by the Y.",
            "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, rank from low to high by the y axis.",
            "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, list Y-axis in asc order.",
            "Bar chart x axis acc road y axis the average of school id, rank from low to high by the y axis.",
            "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, list Y-axis in asc order.",
            "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and list Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Professionals",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Find the id and cell phone of the professionals who operate two or more types of treatments."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "00230569697",
                        "y_data": 4
                    },
                    {
                        "x_data": "139-321-7313",
                        "y_data": 6
                    },
                    {
                        "x_data": "328.842.3792",
                        "y_data": 8
                    },
                    {
                        "x_data": "962-983-8109x3509",
                        "y_data": 9
                    },
                    {
                        "x_data": "461-801-2600",
                        "y_data": 10
                    },
                    {
                        "x_data": "1-185-137-1945x409",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cell_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "professional_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins departed date by weekday.",
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins departed date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name, and sort X-axis in desc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of revenue , and group by attribute name in a bar chart, I want to display in descending by the X.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of revenue , and group by attribute name, and I want to display in descending by the X.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of revenue , and group by attribute name, and could you show bars in descending order?",
            "For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, I want to display in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 75
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Bar chart x axis carrier y axis the number of carrier, and rank by the Y in ascending.",
            "Can you show a bar chart to visualize the number of carriers?, order in ascending by the y axis please.",
            "What is the number of carriers of phones? Give me a bar chart, and show Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 2
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, and order by their last name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Breitenberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Crona",
                        "y_data": 0
                    },
                    {
                        "x_data": "Gerlach",
                        "y_data": 0
                    },
                    {
                        "x_data": "Greenholt",
                        "y_data": 0
                    },
                    {
                        "x_data": "Homenick",
                        "y_data": 0
                    },
                    {
                        "x_data": "Kessler",
                        "y_data": 0
                    },
                    {
                        "x_data": "Lemke",
                        "y_data": 1
                    },
                    {
                        "x_data": "Little",
                        "y_data": 1
                    },
                    {
                        "x_data": "Murphy",
                        "y_data": 0
                    },
                    {
                        "x_data": "Nicolas",
                        "y_data": 0
                    },
                    {
                        "x_data": "Strosin",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "physician"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "What are the names of all the physicians who took appointments, and count them by a pie chart",
            "List the number of the name of physicians who took some appointment.",
            "List the name of physicians who took some appointment, and count them by a pie chart",
            "A pie chart for listing the number of the name of physicians who took some appointment."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 3
                    },
                    {
                        "x_data": "John Dorian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Molly Clock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Percival Cox",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop",
            "happy_hour)"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Find the address and staff number of the shops that do not have any happy hour Visualize by bar chart, and order by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "909 Walnut Street",
                        "y_data": 27
                    },
                    {
                        "x_data": "909 Main Street",
                        "y_data": 28
                    },
                    {
                        "x_data": "2345 McGee Street",
                        "y_data": 425
                    },
                    {
                        "x_data": "1201 Walnut Street",
                        "y_data": 34
                    },
                    {
                        "x_data": "1100 Main Street",
                        "y_data": 23
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_staff"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart",
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average",
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017",
                        "y_data": 4
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For each city, return the highest latitude among its stations Show bar chart, and could you show X-axis in ascending order?",
            "Show maximal lat from each city, list X-axis in asc order.",
            "For each city, what is the highest latitude for its stations Visualize by bar chart, and list by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mountain View",
                        "y_data": 37.40694000000001
                    },
                    {
                        "x_data": "Palo Alto",
                        "y_data": 37.448598
                    },
                    {
                        "x_data": "Redwood City",
                        "y_data": 37.491269
                    },
                    {
                        "x_data": "San Francisco",
                        "y_data": 37.80477
                    },
                    {
                        "x_data": "San Jose",
                        "y_data": 37.352601
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(lat)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the name , and group by attribute name by a bar chart, could you rank Y in desc order?",
            "For those records from the products and each product's manufacturer, find name and the average of manufacturer , and group by attribute name, and visualize them by a bar chart, and I want to order in desc by the y axis please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, could you show by the Y in descending?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, and I want to order in desc by the y axis please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of manufacturer , and group by attribute name in a bar chart, and I want to order in desc by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route",
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times.",
            "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "04:55",
                        "y_data": 1
                    },
                    {
                        "x_data": "06:30",
                        "y_data": 1
                    },
                    {
                        "x_data": "16:59",
                        "y_data": 2
                    },
                    {
                        "x_data": "17:15",
                        "y_data": 1
                    },
                    {
                        "x_data": "21:49",
                        "y_data": 1
                    },
                    {
                        "x_data": "22:10",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(time)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season by a bar chart, and I want to order All_Games_Percent in descending order.",
            "Create a bar chart showing all_games_percent across acc regular season, sort in descending by the Y.",
            "A bar chart shows the distribution of ACC_Regular_Season and All_Games_Percent , and rank by the Y-axis in descending.",
            "Find ACC_Regular_Season and All_Games_Percent , and visualize them by a bar chart, rank by the Y-axis in descending.",
            "Give me the comparison about All_Games_Percent over the ACC_Regular_Season , and I want to display by the Y in desc.",
            "Show me about the distribution of ACC_Regular_Season and All_Games_Percent in a bar chart, and list Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total number of students in each department Show bar chart, and rank x-axis in desc order.",
            "How many students are in each department Plot them as bar chart, rank x-axis in desc order.",
            "how many students are in each department?, order X-axis in desc order.",
            "Visualize a bar chart for how many students are in each department?, and show in descending by the names.",
            "Give me a bar chart for the total number of each dept name, and rank x-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Math",
                        "y_data": 91
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    },
                    {
                        "x_data": "History",
                        "y_data": 117
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 120
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id, and I want to sort by the how many job id from high to low.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and could you list by the Y in descending please?",
            "For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and order by the y-axis from high to low.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and I want to sort by the how many job id from high to low.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, sort Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 29
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 4
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, return the name and the average rating of reviews given by them Plot them as bar chart, sort by the bars in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Helen",
                        "y_data": 7.333333333333332
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Bar chart x axis meter 500 y axis meter_100, sort y-axis in ascending order.",
            "Give me the comparison about meter_100 over the meter_500 , and I want to sort in ascending by the meter_100.",
            "Give me the comparison about meter_100 over the meter_500 by a bar chart, I want to sort in ascending by the meter_100.",
            "Find meter_500 and meter_100 , and visualize them by a bar chart, and list by the Y-axis in asc.",
            "Show me about the distribution of meter_500 and meter_100 in a bar chart, I want to show by the y-axis from low to high.",
            "A bar chart shows the distribution of meter_500 and meter_100 , and list by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:52.85",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "4:54.19",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "4:54.21",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "4:56.96",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "4:57.03",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "4:55.08",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "4:54.48",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "4:56.15",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_500",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Show the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.",
            "Give me a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.",
            "Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 17
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 2
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Grape)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show all locations and the total number of platforms for all train stations in each location in a bar chart.",
            "Show the total number of platforms of locations in each location in a bar chart.",
            "Bar chart of total number of number of platforms from each location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "London",
                        "y_data": 140
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(number_of_platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "store",
            "store_district",
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Find the number of stores in each city. Visualize by pie chart.",
            "Display a pie chart for how many stores are headquarted in each city?",
            "How many stores are headquarted in each city. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bahawalpur City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bhakkar City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hafizabad City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Khanewal City",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquartered_City"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by year in a stacked bar chart.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by year in a stacked bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 5,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 1,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2,
                        "classify": "Tillman Ernser"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show different types of ships and the number of ships of each type in a bar chart.",
            "Show different types of ships and the number of ships of each type. Show bar chart.",
            "For each type, how many ships are there. Plot them as bar chart.",
            "Bar chart x axis type y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "representative"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "Give me a histogram for what are the different parties of representative? Show the party name and the number of representatives in each party, and show total number in asc order please.",
            "What are the different parties of representative? Show the party name and the number of representatives in each party, order in asc by the Y-axis.",
            "Bar chart of the total number from each party, show total number in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "has_amenity",
            "dorm_amenity"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many students are living in a dorm with a TV Lounge? Show a bar chart grouping by first name, list in desc by the bars please.",
            "Show the number of students who are living in a dorm with a TV Lounge and group by first name in a bar chart, and show in desc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    },
                    {
                        "x_data": "Dinesh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show me mean age by born state in a histogram, and could you order from low to high by the bars please?",
            "Show the average age of heads of departments born in each state with a bar chart, and show in asc by the born_state."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alabama",
                        "y_data": 68
                    },
                    {
                        "x_data": "California",
                        "y_data": 61.25
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 55
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 53
                    },
                    {
                        "x_data": "Florida",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "A bar chart that computes the total number of wines with a price is bigger than 100 Next, Bin the year into the weekday interval, rank y-axis from low to high order.",
            "How many wines with a price higher than 100 of each year? Show a bar chart that converts year into weekday interval, and I want to show by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the average of price supplied by supplier id 3 for different product type code in a bar chart, and order by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 817
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs departed in each day with a bar chart that bins departed date by weekday, and sort in desc by the the number of date departed.",
            "Create a bar chart showing the number of date departed across date departed, and sort in descending by the total number.",
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by weekday, and sort in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 12
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Bar chart x axis log entry description y axis the number of log entry description, and I want to display in descending by the bar please.",
            "Draw a bar chart for what is the number of entry descriptions of each problem?, and show in descending by the X-axis.",
            "List all the log entry descriptions and count them using a bar chart, show in descending by the X-axis.",
            "What is the number of entry descriptions of each problem?, show from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "w",
                        "y_data": 1
                    },
                    {
                        "x_data": "v",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "p",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "a",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(log_entry_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Give me the dates when the max temperature was higher than 85, and count them by a bar chart, and could you list y axis in ascending order please?",
            "A bar chart for what are the number of the dates with a maximum temperature higher than 85?, and could you display from low to high by the y axis?",
            "What are the dates with a maximum temperature higher than 85, and count them by a bar chart, list in asc by the y axis.",
            "Give me the number of the dates when the max temperature was higher than 85, and I want to order from low to high by the y-axis.",
            "A bar chart for giveing me the number of the dates when the max temperature was higher than 85, and could you list y axis in ascending order please?",
            "What are the number of the dates with a maximum temperature higher than 85?, I want to rank by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 20
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 21
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 23
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 24
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 28
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 31
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 32
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Please show the number of films for each type in a bar chart, could you order in descending by the Y-axis?",
            "How many films for each type? Return a bar chart, and I want to rank in descending by the the number of type please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mass suicide",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mass suicide murder",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mass human sacrifice",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Use a group line chart to show how many competitions are held in each year, group by official name and bin by year, and show by the Year in ascending.",
            "Use a group line chart to show how many competitions are held in each year, group by official name and bin by year, and display from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "What is the weight of each dog that was abandoned? Show in a bar chart, and list names in desc order.",
            "List the dog name and weight of the dogs who have been abandoned in a bar chart, and rank in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lyric",
                        "y_data": 4.36
                    },
                    {
                        "x_data": "Kacey",
                        "y_data": 7.57
                    },
                    {
                        "x_data": "Evangeline",
                        "y_data": 4.01
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students for each department. Plot them as bar chart.",
            "Return a histogram on how many students are in each department?",
            "how many students are in each department?",
            "How many students are in each department. Visualize by bar chart.",
            "Draw a bar chart of dept code versus the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 2
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 1
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the sum of code , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 23
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 28
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 5
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "camera_lens"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Group and count brand for each camera lens using a bar chart, and rank in asc by the total number.",
            "Show the number of brand from each brand, order total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Schneider Kreuznach",
                        "y_data": 2
                    },
                    {
                        "x_data": "Olympus",
                        "y_data": 3
                    },
                    {
                        "x_data": "Panasonic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sigma",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "brand",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(brand)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Policies"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ellsworth Paucek",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mrs. Hanna Willms",
                        "y_data": 3
                    },
                    {
                        "x_data": "Dr. Diana Rath",
                        "y_data": 4
                    },
                    {
                        "x_data": "Lauriane Ferry PhD",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Customer_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Customer_Details"
                }
            }
        }
    },
    {
        "tables_used": [
            "assignedto",
            "projects",
            "scientists"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and list in descending by the bar.",
            "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, and count them by a bar chart, could you order by the x-axis in descending?",
            "A bar chart for finding the number of the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to, rank from high to low by the bars.",
            "What is the name of the project that has a scientist assigned to it whose name contains 'Smith', and count them by a bar chart, and could you show bar in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 2
                    },
                    {
                        "x_data": "Aerodynamics and Gas Mileage",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart, I want to rank by the y axis from high to low.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, sort by the Y-axis in desc.",
            "For those employees who did not have any job in the past, find hire_date and the average of department_id bin hire_date by weekday, and visualize them by a bar chart, rank by the total number in descending.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, and sort by the Y-axis in desc.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, and sort by the the average of department id from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 67.33333333333333
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 64.28571428571429
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 63.84615384615385
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 63.57142857142857
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 62
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 61.42857142857143
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 60.666666666666664
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, and show in ascending by the y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart, and I want to sort Y in asc order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time, order in asc by the sum department id.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, rank Y in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and I want to sort Y in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 260
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Transcript_Contents",
            "Transcripts"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Bin the transcript date into year interval and count them for a line chart.",
            "I want to visualize the trend about the total appears times of transcript date in the Year interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1975~1978",
                        "y_data": 1
                    },
                    {
                        "x_data": "1979~1982",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1986",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987~1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1998",
                        "y_data": 1
                    },
                    {
                        "x_data": "1999~2002",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007~2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011~2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transcript_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(transcript_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "List the dates and vote percents of elections Show bar chart, order by the names in ascending.",
            "Show vote_percent from each date, and I want to rank x-axis in ascending order.",
            "List the dates and vote percents of elections in a bar chart, rank in ascending by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1946",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "1949",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "1953",
                        "y_data": 16
                    },
                    {
                        "x_data": "July 1942",
                        "y_data": 16.2
                    },
                    {
                        "x_data": "October 1942",
                        "y_data": 18.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Vote_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "what is the number of wins the team Boston Red Stockings got in the postseasons each year in history?",
            "Show me the trend about what is the number of wins the team Boston Red Stockings got in the postseasons each year in history?",
            "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history. Show the tendency.",
            "For each year, return the year and the number of times the team Boston Red Stockings won in the postseasons. Visualize by line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1912-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1915-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1916-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1918-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1986-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "1999-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 15
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 15
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 15
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return the date of birth for all the guests with gender code \"Male\", and count them by a bar chart, list in ascending by the y axis.",
            "Return the number of the date of birth for all the guests with gender code \"Male\", sort Y in ascending order please.",
            "A bar chart for returning the number of the date of birth for all the guests with gender code \"Male\", and rank from low to high by the y axis.",
            "What are the number of dates of birth of all the guests whose gender is \"Male\"?, and sort Y in ascending order please.",
            "What are dates of birth of all the guests whose gender is \"Male\", and count them by a bar chart, sort in ascending by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hall_of_fame"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Count the number of players who enter hall of fame for each year with a line chart, rank X-axis in asc order please.",
            "Show me a line chart for how many players enter hall of fame each year?, and rank X-axis in asc order please.",
            "How many players enter hall of fame each year Show the tendency, and I want to list by the X from low to high.",
            "Return a line chart on how many players enter hall of fame each year?, display by the X-axis in asc.",
            "I want to see trend of the total number by yearid, and order by the X-axis from low to high.",
            "Count the number of players who enter hall of fame for each year Plot them as line chart, and sort x axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1936-01-01",
                        "y_data": 110
                    },
                    {
                        "x_data": "1937-01-01",
                        "y_data": 118
                    },
                    {
                        "x_data": "1938-01-01",
                        "y_data": 122
                    },
                    {
                        "x_data": "1939-01-01",
                        "y_data": 115
                    },
                    {
                        "x_data": "1942-01-01",
                        "y_data": 72
                    },
                    {
                        "x_data": "1944-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1945-01-01",
                        "y_data": 105
                    },
                    {
                        "x_data": "1946-01-01",
                        "y_data": 108
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1948-01-01",
                        "y_data": 106
                    },
                    {
                        "x_data": "1949-01-01",
                        "y_data": 120
                    },
                    {
                        "x_data": "1950-01-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1951-01-01",
                        "y_data": 86
                    },
                    {
                        "x_data": "1952-01-01",
                        "y_data": 75
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 89
                    },
                    {
                        "x_data": "1954-01-01",
                        "y_data": 53
                    },
                    {
                        "x_data": "1955-01-01",
                        "y_data": 66
                    },
                    {
                        "x_data": "1956-01-01",
                        "y_data": 106
                    },
                    {
                        "x_data": "1957-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1958-01-01",
                        "y_data": 154
                    },
                    {
                        "x_data": "1959-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1960-01-01",
                        "y_data": 134
                    },
                    {
                        "x_data": "1961-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1962-01-01",
                        "y_data": 81
                    },
                    {
                        "x_data": "1963-01-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "1964-01-01",
                        "y_data": 94
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 50
                    },
                    {
                        "x_data": "1967-01-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1968-01-01",
                        "y_data": 50
                    },
                    {
                        "x_data": "1969-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1970-01-01",
                        "y_data": 49
                    },
                    {
                        "x_data": "1971-01-01",
                        "y_data": 56
                    },
                    {
                        "x_data": "1972-01-01",
                        "y_data": 51
                    },
                    {
                        "x_data": "1973-01-01",
                        "y_data": 49
                    },
                    {
                        "x_data": "1974-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1975-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1976-01-01",
                        "y_data": 36
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1978-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 56
                    },
                    {
                        "x_data": "1980-01-01",
                        "y_data": 63
                    },
                    {
                        "x_data": "1981-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1982-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1983-01-01",
                        "y_data": 48
                    },
                    {
                        "x_data": "1984-01-01",
                        "y_data": 31
                    },
                    {
                        "x_data": "1985-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1986-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1987-01-01",
                        "y_data": 29
                    },
                    {
                        "x_data": "1988-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1990-01-01",
                        "y_data": 44
                    },
                    {
                        "x_data": "1991-01-01",
                        "y_data": 47
                    },
                    {
                        "x_data": "1992-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1993-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "1994-01-01",
                        "y_data": 41
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 43
                    },
                    {
                        "x_data": "1996-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "1997-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "1998-01-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1999-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2000-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 33
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 27
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 32
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 24
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 28
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 40
                    },
                    {
                        "x_data": "2014-01-01",
                        "y_data": 39
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 34
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 32
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "yearid",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route",
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find names of trains that run through stations for the local authority Chiltern, compare the total number of name in a bar graph, I want to display by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of All_Road and ACC_Percent , and I want to show by the total number from high to low.",
            "Show me about the distribution of All_Road and ACC_Percent in a bar chart, display from high to low by the Y.",
            "Give me the comparison about ACC_Percent over the All_Road by a bar chart, and I want to show by the total number from high to low.",
            "Show me acc_percent by all road in a histogram, order by the Y in descending.",
            "A bar chart shows the distribution of All_Road and ACC_Percent , and could you display by the y axis from high to low?",
            "Draw a bar chart about the distribution of All_Road and ACC_Percent , could you list by the ACC_Percent in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Return a bar chart about the distribution of date_address_to and the amount of date_address_to bin date_address_to by weekday.",
            "Show me about the distribution of date_address_to and the amount of date_address_to bin date_address_to by weekday in a bar chart.",
            "Draw a bar chart about the distribution of date_address_to and the amount of date_address_to bin date_address_to by weekday.",
            "Give me the comparison about the amount of date_address_to over the date_address_to bin date_address_to by weekday.",
            "Visualize a bar chart about the distribution of date_address_to and the amount of date_address_to bin date_address_to by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_address_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the hire_date bin hire_date by time.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 82.5
                    },
                    {
                        "x_data": "July",
                        "y_data": 46.55172413793103
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 51.851851851851855
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Return a bar chart on what is the average age for each gender?, I want to list by the mean age in descending.",
            "Draw a bar chart for what is the average age for each gender?, I want to sort by the Y from high to low.",
            "Bar graph to show the average of age from different gender, could you order from high to low by the y-axis?",
            "What is the average age for each gender Visualize by bar chart, I want to list by the mean age in descending.",
            "Give me a histogram for how old is each gender, on average?, and show by the Y-axis from high to low.",
            "How old is each gender, on average Plot them as bar chart, I want to sort by the Y from high to low.",
            "Return a histogram on how old is each gender, on average?, show by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "male",
                        "y_data": 40
                    },
                    {
                        "x_data": "female",
                        "y_data": 25.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and compute the total amount payment as the Y-axis, and sort by the y axis in descending please.",
            "Sum the amount for all the payments processed with Visa by each year using a bar chart, and could you sort by the total number from high to low please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 787370
                    },
                    {
                        "x_data": "2018",
                        "y_data": 7343
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "A bar chart shows how many locations.",
            "How many locations? Draw a bar chart.",
            "Bar graph to show how many location from different location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 1
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 1
                    },
                    {
                        "x_data": "London",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart.",
            "Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart.",
            "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home.",
            "Give me the comparison about Team_ID over the ACC_Road , and group by attribute ACC_Home.",
            "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home.",
            "Stacked bar chart of team_id for with each ACC_Home in each acc road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 3,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me a scatter chart that groups acc road, the x-axis is team id and the y-axis is All_Games_Percent.",
            "Group by all acc road, show the team id and All_Games_Percent in a scatter plot.",
            "Show the relation between team id and all_games_percent for each ACC_Road using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.6,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.706,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i. Visualize by bar chart.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 9
                    },
                    {
                        "x_data": "eius",
                        "y_data": 2
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 9.5
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "quo",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, I want to sort bar from low to high order.",
            "Show me total number of vote id by state in a histogram, sort in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 3
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 5
                    },
                    {
                        "x_data": "NY",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(vote_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "enroll"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many students taking a course who received an A or C? Group by students' first name with a bar chart, I want to rank X-axis from low to high order please.",
            "Find the number of students who took some course and got A or C and group by first name in a bar chart, list X in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize the general trend of the average of shop id over the start from, rank in desc by the x axis.",
            "Show me the trend about the average of Shop_ID over Start_from bin start_from by time with a line chart, rank in desc by the x axis.",
            "Give me the trend about the average of Shop_ID over Start_from bin start_from by time, list Start_from in descending order.",
            "Return a line chart about the change of the average of Shop_ID over Start_from bin start_from by time, order by the X from high to low.",
            "For the average of Shop_ID, Start_from, visualize the trend, and list Start_from in descending order.",
            "A line chart shows the trend of the average of Shop_ID over Start_from bin start_from by time, and could you display by the Start_from in desc?",
            "Draw a line chart about the change of the average of Shop_ID over Start_from bin start_from by time, and could you display by the Start_from in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 5
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011",
                        "y_data": 8
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the different nationalities and the number of journalists of each nationality in a bar chart, and display names in descending order.",
            "Show the different nationalities and the number of journalists of each nationality Visualize by bar chart, could you display by the x axis in desc?",
            "Plot the total number by grouped by nationality as a bar graph, rank bar from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wales",
                        "y_data": 1
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    },
                    {
                        "x_data": "England",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders. Show bar chart.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?",
            "what are the draft pick numbers and draft classes for players who play the Defender position?",
            "What are the draft pick numbers and draft classes for players who play the Defender position. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1996 MLS Inaugural Player Draft",
                        "y_data": 87
                    },
                    {
                        "x_data": "1999 MLS College Draft",
                        "y_data": 5
                    },
                    {
                        "x_data": "2000 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005 MLS SuperDraft",
                        "y_data": 9
                    },
                    {
                        "x_data": "2006 MLS SuperDraft",
                        "y_data": 37
                    },
                    {
                        "x_data": "2008 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2009 MLS SuperDraft",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Draft_Class",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Draft_Pick_Number"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "A bar graph listing the local authorities and how many local authorities provided by all stations.",
            "Count the number of local authorities by the local authority.",
            "Compare the number of the local authority by the local authority.",
            "Bar chart of how many local authority from each local authority"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brentwood",
                        "y_data": 1
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 3
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 101
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 101
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 101
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 177
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 100
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 201
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Bar chart x axis card type code y axis the total number, and could you sort y-axis in ascending order?",
            "Display a bar chart for what are the different card types, and how many cards are there of each?, and could you rank in asc by the y-axis?",
            "Show all card type codes and the number of cards in each type by a bar chart, and rank y-axis from low to high order.",
            "Return a histogram on what are the different card types, and how many cards are there of each?, and sort from low to high by the Y.",
            "Show all card type codes and the number of cards in each type Plot them as bar chart, and rank from low to high by the Y.",
            "What are the different card types, and how many cards are there of each, and list in asc by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the name of all trains, count the name and show them with a bar chart.",
            "Visualize a bar chart, group by name and compute each group's total number.",
            "Plot the number of name by grouped by name as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parasuram Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart, order from high to low by the y axis.",
            "For those payments processed with Visa, show me the number of payments of each year using a bar chart, show in descending by the how many date payment made please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Plot the total number by grouped by directed by as a bar graph, and I want to rank by the bars in ascending please.",
            "List all directors along with the number of films directed by each director Plot them as bar chart, display in ascending by the x-axis.",
            "List all directors along with the number of films directed by each director in a bar chart, and I want to rank by the bars in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bill Schreiner",
                        "y_data": 4
                    },
                    {
                        "x_data": "Jesus Salvador Trevi\u00f1o",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Directed_by",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, and sort by the Y-axis in descending.",
            "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, could you list School_ID in descending order?",
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road, and could you sort by the Y in desc?",
            "Stack bar chart of school_id vs ACC_Road based on all home, and show by the Y-axis from high to low please.",
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and rank from high to low by the Y.",
            "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, sort by the Y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 5,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of code , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    },
                    {
                        "x_data": "James",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Give me a bar chart showing the total number of each minister.",
            "Plot how many minister by grouped by minister as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kojo Botsio (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many accounts for different statement details? Draw a bar chart, order in ascending by the y-axis.",
            "Show the number of accounts for different statement details in a bar chart, and could you show y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private Project",
                        "y_data": 6
                    },
                    {
                        "x_data": "Open Project",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Statement_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 15
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 14
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 14
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 13
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 14
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Plot year by sum count(*) as a trend line, display x axis in desc order please.",
            "Find the number of courses provided in each year with a line chart, and show by the year in desc.",
            "How many courses are provided in each year? Visualize with a line chart, sort in descending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010",
                        "y_data": 11
                    },
                    {
                        "x_data": "2009",
                        "y_data": 9
                    },
                    {
                        "x_data": "2008",
                        "y_data": 10
                    },
                    {
                        "x_data": "2007",
                        "y_data": 12
                    },
                    {
                        "x_data": "2006",
                        "y_data": 13
                    },
                    {
                        "x_data": "2005",
                        "y_data": 8
                    },
                    {
                        "x_data": "2004",
                        "y_data": 7
                    },
                    {
                        "x_data": "2003",
                        "y_data": 12
                    },
                    {
                        "x_data": "2002",
                        "y_data": 13
                    },
                    {
                        "x_data": "2001",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the total smallest rating of different movie title using a bar chart, and sort by the X in asc please.",
            "Visualize the title and their total smallest ratings of the movie using a bar chart, sort from low to high by the bars.",
            "Please return me a bar chart show what are the total smallest rating of different movie title?, and list in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 8
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 5
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition",
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show all artist names and the number of exhibitions for each artist in a pie chart.",
            "Show all artist names and the number of exhibitions for each artist.",
            "how many exhibitions has each artist had?",
            "Display a pie chart for how many exhibitions has each artist had?",
            "How many exhibitions has each artist had. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, show Y-axis in desc order.",
            "For those records from the products and each product's manufacturer, find headquarter and the sum of code , and group by attribute headquarter, and visualize them by a bar chart, and list from high to low by the Y-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, order from high to low by the Y-axis.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of code , and group by attribute headquarter in a bar chart, and show by the total number of code in descending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and list from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Los Angeles",
                        "y_data": 28
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 23
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for male and female students with a bar chart.",
            "Show the average age for male and female students. Visualize by bar chart.",
            "A bar chart about what are the average ages for male and female students?",
            "Visualize a bar chart for what are the average ages for male and female students?",
            "What are the average ages for male and female students. Plot them as bar chart.",
            "Show me mean age by sex in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    },
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "How many films for each type? Return a bar chart, and sort Y in ascending order.",
            "Please show the number of films for each type in a bar chart, and could you order Y in asc order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mass human sacrifice",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mass suicide murder",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mass suicide",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, order in ascending by the bars.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and could you list by the x-axis from low to high please?",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and show by the bars from low to high.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart, could you sort by the x axis in asc?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and I want to show in asc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7850
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2933.3333333333335
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8100
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3244.4444444444443
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2822.222222222222
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7350
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of commission_pct over hire_date , could you list by the X in descending?",
            "For those employees who was hired before 2002-06-21, show me about the change of commission_pct over hire_date in a line chart, and list in desc by the x-axis.",
            "For those employees who was hired before 2002-06-21, for commission_pct, hire_date, visualize the trend, sort from high to low by the X.",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of commission_pct over hire_date, and I want to display in desc by the x-axis.",
            "For those employees who was hired before 2002-06-21, show me the trend about commission_pct over hire_date with a line chart, and order from high to low by the x axis.",
            "For those employees who was hired before 2002-06-21, return a line chart about the change of commission_pct over hire_date , and order by the x-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 0.4
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Reutrn a bar chart to bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 20
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 25
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 10
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a scatter chart about the correlation between employee_id and manager_id .",
            "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between employee_id and manager_id .",
            "For all employees who have the letters D or S in their first name, visualize the relationship between employee_id and manager_id .",
            "For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between employee_id and manager_id .",
            "For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between employee_id and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 0
                    },
                    {
                        "x_data": 205,
                        "y_data": 101
                    },
                    {
                        "x_data": 168,
                        "y_data": 148
                    },
                    {
                        "x_data": 114,
                        "y_data": 100
                    },
                    {
                        "x_data": 148,
                        "y_data": 100
                    },
                    {
                        "x_data": 169,
                        "y_data": 148
                    },
                    {
                        "x_data": 151,
                        "y_data": 145
                    },
                    {
                        "x_data": 163,
                        "y_data": 147
                    },
                    {
                        "x_data": 103,
                        "y_data": 102
                    },
                    {
                        "x_data": 109,
                        "y_data": 108
                    },
                    {
                        "x_data": 175,
                        "y_data": 149
                    },
                    {
                        "x_data": 121,
                        "y_data": 100
                    },
                    {
                        "x_data": 153,
                        "y_data": 145
                    },
                    {
                        "x_data": 159,
                        "y_data": 146
                    },
                    {
                        "x_data": 112,
                        "y_data": 108
                    },
                    {
                        "x_data": 111,
                        "y_data": 108
                    },
                    {
                        "x_data": 160,
                        "y_data": 146
                    },
                    {
                        "x_data": 161,
                        "y_data": 146
                    },
                    {
                        "x_data": 113,
                        "y_data": 108
                    },
                    {
                        "x_data": 165,
                        "y_data": 147
                    },
                    {
                        "x_data": 123,
                        "y_data": 100
                    },
                    {
                        "x_data": 203,
                        "y_data": 101
                    },
                    {
                        "x_data": 166,
                        "y_data": 147
                    },
                    {
                        "x_data": 179,
                        "y_data": 149
                    },
                    {
                        "x_data": 173,
                        "y_data": 148
                    },
                    {
                        "x_data": 105,
                        "y_data": 103
                    },
                    {
                        "x_data": 107,
                        "y_data": 103
                    },
                    {
                        "x_data": 184,
                        "y_data": 121
                    },
                    {
                        "x_data": 185,
                        "y_data": 121
                    },
                    {
                        "x_data": 192,
                        "y_data": 123
                    },
                    {
                        "x_data": 137,
                        "y_data": 123
                    },
                    {
                        "x_data": 133,
                        "y_data": 122
                    },
                    {
                        "x_data": 138,
                        "y_data": 123
                    },
                    {
                        "x_data": 180,
                        "y_data": 120
                    },
                    {
                        "x_data": 194,
                        "y_data": 123
                    },
                    {
                        "x_data": 115,
                        "y_data": 114
                    },
                    {
                        "x_data": 142,
                        "y_data": 124
                    },
                    {
                        "x_data": 116,
                        "y_data": 114
                    },
                    {
                        "x_data": 117,
                        "y_data": 114
                    },
                    {
                        "x_data": 183,
                        "y_data": 120
                    },
                    {
                        "x_data": 143,
                        "y_data": 124
                    },
                    {
                        "x_data": 198,
                        "y_data": 124
                    },
                    {
                        "x_data": 199,
                        "y_data": 124
                    },
                    {
                        "x_data": 131,
                        "y_data": 121
                    },
                    {
                        "x_data": 140,
                        "y_data": 123
                    },
                    {
                        "x_data": 191,
                        "y_data": 122
                    },
                    {
                        "x_data": 127,
                        "y_data": 120
                    },
                    {
                        "x_data": 128,
                        "y_data": 120
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Find the number of booking start date for the apartments that have more than two bedrooms for each weekday with a bar chart, and order total number in asc order.",
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each weekday? Show me a bar chart, and display by the total number in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a pie chart about the proportion of ACC_Regular_Season and School_ID.",
            "For the attribute ACC_Regular_Season and School_ID, show their proportion by a pie chart.",
            "Return a pie chart about the proportion of ACC_Regular_Season and School_ID.",
            "Visualize a pie chart about the proportion of ACC_Regular_Season and School_ID.",
            "A pie chart shows the proportion of ACC_Regular_Season and School_ID.",
            "Give me a pie to show school_id from different acc regular season."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 4
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart, and display by the x-axis from high to low.",
            "Show all dates of transactions whose type code is \"SALE\", and count them by a line chart, and list x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003~2004",
                        "y_data": 1
                    },
                    {
                        "x_data": "2000~2002",
                        "y_data": 2
                    },
                    {
                        "x_data": "1997~1999",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994~1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1993",
                        "y_data": 0
                    },
                    {
                        "x_data": "1988~1990",
                        "y_data": 1
                    },
                    {
                        "x_data": "1985~1987",
                        "y_data": 0
                    },
                    {
                        "x_data": "1982~1984",
                        "y_data": 1
                    },
                    {
                        "x_data": "1979~1981",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "poker_player",
        "nl_queries": [
            "Visualize a bar chart for how many people are there of each nationality?, I want to order y axis from low to high order.",
            "Draw a bar chart for how many people are there of each nationality?, could you list by the Y-axis in ascending?",
            "What are different nationalities of people and the corresponding number of people from each nation Visualize by bar chart, rank from low to high by the y-axis.",
            "How many people are there of each nationality Visualize by bar chart, list in asc by the total number please.",
            "Return a bar chart on what are different nationalities of people and the corresponding number of people from each nation?, display in asc by the y axis.",
            "what are different nationalities of people and the corresponding number of people from each nation?, display in asc by the y axis.",
            "Draw a bar chart of nationality versus the total number, sort total number from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bulgaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", could you sort names from low to high order please?",
            "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, and I want to order x-axis in ascending order.",
            "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", sort x-axis from low to high order.",
            "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart, display by the x-axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nominee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Show the name of the product that is cheapest in each product category with their minimum price with a bar graph, and sort by the y-axis in asc.",
            "Bar chart of minimal price from each name, and order y axis in asc order.",
            "What are the names of the cheapest products in each category along with the cheapest price in a bar chart?, and list in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "List the number of games for each away team and group by home team in a stacked bar chart The x-axis is away team, and rank in desc by the total number.",
            "Stacked bar chart of how many away team for with each Home_team in each away team, and could you list y axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 9,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each day and bin date to by weekday with a bar chart, and could you order y axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, could you order x axis in desc order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and rank names in desc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, list by the x axis in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, could you order x axis in desc order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, rank names in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faluts for different fault description recorded in the logs, and display by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "failed parts",
                        "y_data": 6
                    },
                    {
                        "x_data": "system error",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Neutral and ACC_Percent , and show in desc by the x axis.",
            "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , and sort names from high to low order.",
            "Return a bar chart about the distribution of All_Neutral and ACC_Percent , sort in descending by the X-axis.",
            "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, sort names from high to low order.",
            "Give me the comparison about ACC_Percent over the All_Neutral , show in desc by the All_Neutral please.",
            "Bar chart of acc_percent from each all neutral, could you order bars in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_player",
        "nl_queries": [
            "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, and rank total number from high to low order please.",
            "Create a bar chart showing the total number across denomination, rank in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anglican",
                        "y_data": 3
                    },
                    {
                        "x_data": "Catholic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Uniting Church",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Denomination",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart, and rank by the decor in descending.",
            "Please use a bar chart to show the minimum price of the rooms in a different decor, sort by the X-axis in desc please.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!, I want to sort in descending by the bars.",
            "Draw a bar chart of decor versus minimal baseprice, and sort by the X-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "traditional",
                        "y_data": 150
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 150
                    },
                    {
                        "x_data": "modern",
                        "y_data": 75
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, and I want to order from low to high by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday by a bar chart, and could you sort by the Y-axis in ascending?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart, and I want to order in asc by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart, I want to order from low to high by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday, display by the the average of manager id in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 114.1875
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 121.2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 122.2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 124.57142857142857
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 124.66666666666667
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 129.46666666666667
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 130.625
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Compare the total number of each minister using a bar graph, list the number of minister in ascending order.",
            "Bar chart x axis minister y axis how many minister, and rank by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kojo Botsio (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, display from low to high by the names please.",
            "Bar chart of sum shop id from each is full time, display from low to high by the names please.",
            "Show me about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time in a bar chart, and display from low to high by the names please.",
            "A bar chart shows the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, could you sort in ascending by the bar please?",
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, order by the names in ascending please.",
            "Return a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time, sort in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 10
                    },
                    {
                        "x_data": "T",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many professors whose office is located in DRE 102 are hired in each weekday? Return a bar chart, and could you sort in ascending by the Y-axis?",
            "Show the number of professors who is in office DRE 102 hired in each weekday with a bar chart, and I want to list from low to high by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the amount of name , and group by attribute name in a bar chart, and show from high to low by the bars.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the amount of name , and group by attribute name, and I want to sort X-axis from high to low order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the amount of name , and group by attribute name, and show from high to low by the bars.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the amount of name , and group by attribute name, and show in desc by the names.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the amount of name , and group by attribute name, and show from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder, list by the y axis in asc please.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder by a bar chart, and I want to display by the total number in asc.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute founder in a bar chart, I want to rank by the y axis from low to high please.",
            "For those records from the products and each product's manufacturer, find name and price , and group by attribute founder, and visualize them by a bar chart, and sort by the Y from low to high.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute founder, sort by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Visualize the number of grape of the wines whose price is bigger than 100 with a bar chart, ordered the x-axis by year.",
            "Give me a bar chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year.",
            "Visualize a pie chart about the proportion of the number of grape of the wines whose price is bigger than 100 ordered by year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 17
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 2
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Grape)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Stack bar chart of how many home team vs Away_team based on home team, and I want to sort from high to low by the Home_team.",
            "List the number of games for each home team and group by away team in a stacked bar chart The x-axis is home team, and I want to list x-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 7,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 3,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Group by distinct states and them count them in a bar chart, and I want to list by the y-axis in ascending.",
            "What is the number of distinct states? Show me a bar chart, list by the y axis from low to high.",
            "Bar chart x axis state y axis the number of state, and I want to order Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the hire_date bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of manager_id bin hire_date by weekday in a bar chart.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of manager_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 123
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 122.2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 114.1875
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 130.625
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 124.66666666666667
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 121.2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 129.46666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, order in desc by the Y.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and order by the sum employee id in descending.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, I want to rank in desc by the sum employee id.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and list by the y axis from high to low please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and could you display by the y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 5715
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "July",
                        "y_data": 3999
                    },
                    {
                        "x_data": "June",
                        "y_data": 1491
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between ACC_Percent and All_Games_Percent .",
            "What is the relationship between ACC_Percent and All_Games_Percent ?",
            "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent .",
            "A scatter chart shows the correlation between ACC_Percent and All_Games_Percent .",
            "Show me about the correlation between ACC_Percent and All_Games_Percent in a scatter chart.",
            "Scatter plot to show acc percent on x axis and all_games_percent on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.875,
                        "y_data": 0.946
                    },
                    {
                        "x_data": 0.813,
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": 0.625,
                        "y_data": 0.706
                    },
                    {
                        "x_data": 0.563,
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Accounts"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Give me a bar chart showing the number of customers who has an account for each customer last name, I want to display in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Huels",
                        "y_data": 1
                    },
                    {
                        "x_data": "Langworth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lind",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rath",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schinner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turcotte",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wiza",
                        "y_data": 1
                    },
                    {
                        "x_data": "Effertz",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "what are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?, and order in descending by the Y-axis.",
            "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000 Plot them as bar chart, and rank by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Finance Manager",
                        "y_data": 7800
                    },
                    {
                        "x_data": "Accounting Manager",
                        "y_data": 7800
                    },
                    {
                        "x_data": "Purchasing Manager",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Marketing Manager",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max_salary - min_salary"
                }
            }
        }
    },
    {
        "tables_used": [
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show the number of premises for different premises type in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Office",
                        "y_data": 7
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 4
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "Visualize a pie chart with what is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes. Show the proportion.",
            "Return a pie chart on what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "Draw a pie chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abilify",
                        "y_data": 2
                    },
                    {
                        "x_data": "Saphris",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Trade_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a pie chart about the proportion of All_Road and ACC_Percent.",
            "Return a pie chart about the proportion of All_Road and ACC_Percent.",
            "Visualize a pie chart about the proportion of All_Road and ACC_Percent.",
            "A pie chart shows the proportion of All_Road and ACC_Percent.",
            "For the attribute All_Road and ACC_Percent, show their proportion by a pie chart.",
            "Give me a pie to show acc_percent from different all road."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and list bars in asc order.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, and display by the bar in ascending.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and list names in asc order.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, and I want to order JOB_ID in asc order.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, and I want to order JOB_ID in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Find the number of the parties associated with the delegates from district 1 Who served as governors of the parties?, order by the y-axis in asc.",
            "A bar chart for finding the number of the parties associated with the delegates from district 1 Who served as governors of the parties?, display in ascending by the total number.",
            "Find the parties associated with the delegates from district 1 Who served as governors of the parties, and count them by a bar chart, I want to show total number in ascending order please.",
            "Who were the governors of the parties associated with delegates from district 1, and count them by a bar chart, and sort in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tom Golisano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter Vallone",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Governor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Governor)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Return the results of all music festivals using a pie chart.",
            "What is the proportion of results for each music festival? Counld you show me the result with a pie chart.",
            "Please give me a pie chart to show the proportion of results of all music festival.",
            "Create a pie chart showing the number of result across result."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Awarded",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nominated",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Bar graph to show how many result from different result, sort in asc by the X.",
            "Group by the result and count them by a bar chart, and list by the x-axis from low to high.",
            "For each submission, group its acceptance result and count them Visualize them in a bar chart, and show in ascending by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accepted",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rejected",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and score of the movie with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the hire_date bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 5685.714285714285
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6286.666666666667
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7775
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6762.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6320
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6493.333333333333
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5746.666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Give me a bar chart for how many date of transaction of each date of transaction, and display by the the number of date of transaction in ascending.",
            "Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number, and show y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 62
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 65.33333333333333
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 65
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 62
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 60.666666666666664
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 60.666666666666664
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "What are the ids and details of events that have more than one participants Visualize by bar chart, and I want to display by the names from high to low please.",
            "Draw a bar chart for what are the ids and details of events that have more than one participants?, and show bar from high to low order.",
            "Return a bar chart on what are the ids and details of events that have more than one participants?, and could you order by the Event_Details from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Success",
                        "y_data": 41.5
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 23.333333333333332
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For all the claims whose claimed amount is larger than the average, bin the settlement date into the day of week interval and count them for visualizing a bar chart, and order from low to high by the y axis please.",
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin the date it was settled into weekday interval and count them to show a bar chart, and show by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Settled",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Settled)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CAR_MAKERS",
            "MODEL_LIST"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Draw a bar chart for what are the names and ids of all makers with more than 3 models?, rank in descending by the x-axis please.",
            "Show me a bar chart for what are the names and ids of all makers with more than 3 models?, and I want to sort bars from high to low order.",
            "What are the names and ids of all makers with more than 3 models, display by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "General Motors",
                        "y_data": 4
                    },
                    {
                        "x_data": "Chrysler",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FullName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Id"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "What are the number of the descriptions for the aircrafts?, sort bar in ascending order.",
            "List the number of the description of all aircrafts, and show in ascending by the bars.",
            "A bar chart for what are the number of the descriptions for the aircrafts?, and sort by the names in ascending please.",
            "A bar chart for listing the number of the description of all aircrafts, and order bars in ascending order.",
            "What are the descriptions for the aircrafts, and count them by a bar chart, and order by the x-axis from low to high.",
            "List the description of all aircrafts, and count them by a bar chart, and sort bar in ascending order.",
            "Draw a bar chart of description versus the number of description, show in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Heavy-lift helicopter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Light utility helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tandem rotor helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turboshaft utility helicopter",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each instructor in a stacked bar chart. The x-axis is instructor's first name and group by course description.",
            "How many courses for each teacher? Show me a stacked bar chart. The x-axis is teacher's first name and group by course description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "invoices"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "List the number of invoices from the US, grouped by state by a bar chart.",
            "List the number of invoices from the US, grouped by state. Visualize by bar chart.",
            "Show me a bar chart for how many invoices were billed from each state?",
            "Return a histogram on how many invoices were billed from each state?",
            "How many invoices were billed from each state. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 7
                    },
                    {
                        "x_data": "CA",
                        "y_data": 21
                    },
                    {
                        "x_data": "FL",
                        "y_data": 7
                    },
                    {
                        "x_data": "IL",
                        "y_data": 7
                    },
                    {
                        "x_data": "MA",
                        "y_data": 7
                    },
                    {
                        "x_data": "NV",
                        "y_data": 7
                    },
                    {
                        "x_data": "NY",
                        "y_data": 7
                    },
                    {
                        "x_data": "TX",
                        "y_data": 7
                    },
                    {
                        "x_data": "UT",
                        "y_data": 7
                    },
                    {
                        "x_data": "WA",
                        "y_data": 7
                    },
                    {
                        "x_data": "WI",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "billing_state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    },
                    {
                        "x_data": "James",
                        "y_data": 28
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 23
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, and could you order x-axis in descending order?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and list by the Draft_Class from high to low.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, and display from high to low by the x-axis.",
            "what are the draft pick numbers and draft classes for players who play the Defender position?, and list by the Draft_Class from high to low.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, display in descending by the Draft_Class."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009 MLS SuperDraft",
                        "y_data": 3
                    },
                    {
                        "x_data": "2008 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2006 MLS SuperDraft",
                        "y_data": 37
                    },
                    {
                        "x_data": "2005 MLS SuperDraft",
                        "y_data": 9
                    },
                    {
                        "x_data": "2000 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "1999 MLS College Draft",
                        "y_data": 5
                    },
                    {
                        "x_data": "1996 MLS Inaugural Player Draft",
                        "y_data": 87
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Draft_Class",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Draft_Pick_Number"
                }
            }
        }
    },
    {
        "tables_used": [
            "CUSTOMER",
            "INVOICE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart, and show from low to high by the y-axis please.",
            "What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, and show in ascending by the y axis.",
            "A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, order from low to high by the Y-axis.",
            "What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and display from low to high by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "InvoiceDate",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(InvoiceDate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show how many flights for each origin city with a bar chart.",
            "How many flights for each origin city? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chicago",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(origin)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "teaches",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "List the number of courses in year 2008 for each instructor in a bar chart, display by the total number in descending.",
            "Show how many courses in 2008 for every instructor with a bar chart, display Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mingoz",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dale",
                        "y_data": 2
                    },
                    {
                        "x_data": "DAgostino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ullman ",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mahmoud",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaekel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bietzk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show the average salary by each hire date of employees, and please bin the hire date into the day of week interval for showing a bar chart, could you display Y from low to high order please?",
            "Plot the average of salary by grouped by hire date as a bar graph, sort in asc by the y axis.",
            "Compare the average salary by each hire date (bin it into the day of week interval) of employees using a bar chart, and list by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 13800
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Scatter chart. what is the minimum salary in each department?",
            "Visualize a scatter chart on what is the minimum salary in each department?",
            "What is the minimum salary in each department. Show scatter chart.",
            "Scatter plot to show min(salary) on x axis and department_id on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 7000,
                        "y_data": 0
                    },
                    {
                        "x_data": 4400,
                        "y_data": 10
                    },
                    {
                        "x_data": 6000,
                        "y_data": 20
                    },
                    {
                        "x_data": 2500,
                        "y_data": 30
                    },
                    {
                        "x_data": 6500,
                        "y_data": 40
                    },
                    {
                        "x_data": 2100,
                        "y_data": 50
                    },
                    {
                        "x_data": 4200,
                        "y_data": 60
                    },
                    {
                        "x_data": 10000,
                        "y_data": 70
                    },
                    {
                        "x_data": 6100,
                        "y_data": 80
                    },
                    {
                        "x_data": 17000,
                        "y_data": 90
                    },
                    {
                        "x_data": 6900,
                        "y_data": 100
                    },
                    {
                        "x_data": 8300,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "MIN(salary)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a bar chart that groups and count the job id for all employees in the Finance department, and rank by the y-axis in descending.",
            "For all employees in the Finance department, compare the total number of different job id using a bar chart, and sort in descending by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Bar chart of the total number from each location, I want to sort by the bars from high to low.",
            "Show different locations and the number of performances at each location Visualize by bar chart, and sort x axis in desc order.",
            "Show different locations and the number of performances at each location by a bar chart, and I want to sort by the bars from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "teaches",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Show how many courses in 2008 for every instructor with a bar chart, display from high to low by the x axis.",
            "List the number of courses in year 2008 for each instructor in a bar chart, and order X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ullman ",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mingoz",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mahmoud",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaekel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dale",
                        "y_data": 2
                    },
                    {
                        "x_data": "DAgostino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bietzk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Return a bar chart on how many classes are held in each department?, display in ascending by the the total number .",
            "How many classes are held in each department Visualize by bar chart, and order Y in ascending order.",
            "A bar chart about how many classes are held in each department?, and sort from low to high by the Y-axis.",
            "Find the number of classes in each department Visualize by bar chart, and order Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 5
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of name and ID , and rank Y from low to high order.",
            "Give me the comparison about ID over the name , display by the Y-axis in asc.",
            "A bar chart shows the distribution of name and ID , I want to order by the Y-axis in asc.",
            "Visualize a bar chart about the distribution of name and ID , I want to order by the Y-axis in asc.",
            "Draw a bar chart about the distribution of name and ID , and could you rank by the Y in ascending please?",
            "Plot id by grouped by name as a bar graph, and display ID in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 3
                    },
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 4
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 6
                    },
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 7
                    },
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time, and rank in asc by the total number please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, could you show in ascending by the y axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, show by the Y-axis from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, and could you show in asc by the y-axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, could you show in ascending by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    },
                    {
                        "x_data": "June",
                        "y_data": 14
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 29
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 31
                    },
                    {
                        "x_data": "July",
                        "y_data": 31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute founder in a bar chart, order X in ascending order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute founder, and show from low to high by the bar.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute founder, order in ascending by the X-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about revenue over the name , and group by attribute founder by a bar chart, show from low to high by the x-axis please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute founder, show from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "building",
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "For each building, show the name of the building and the number of institutions in it Plot them as bar chart, rank by the the total number in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "100 North Tampa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floridan Hotel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Park Tower",
                        "y_data": 1
                    },
                    {
                        "x_data": "Citizens Bank Building",
                        "y_data": 2
                    },
                    {
                        "x_data": "Franklin Exchange Building",
                        "y_data": 2
                    },
                    {
                        "x_data": "One Tampa City Center",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tampa City Hall",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Give me a bar chart to show the revenue of the company that earns the highest revenue in each headquarter city.",
            "Please tell the revenues of the companies with the highest revenues in each headquarter city.",
            "Create a bar chart showing maximal revenue across headquarter"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 100
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 50
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 30
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me a pie chart to reflect the proportion of Team_Name and School_ID.",
            "School_ID across team name in a pie chart.",
            "Visualize a pie chart about the proportion of Team_Name and School_ID.",
            "A pie chart shows the proportion of Team_Name and School_ID.",
            "Draw a pie chart about the proportion of team name and School_ID.",
            "I want to know the proportion of school id for each team name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 2
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 4
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, and show by the X in descending.",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, rank by the x-axis from high to low.",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?, and order names in desc order.",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart, and show Paragraph_Text from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Korea",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Paragraph_Text",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Paragraph_Text)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Display a bar chart for what are the names and id of courses having at most 2 sections?",
            "what are the names and id of courses having at most 2 sections?",
            "What are the names and id of courses having at most 2 sections.",
            "Display a bar chart for what are the names and ids of every course with less than 2 sections?",
            "What are the names and ids of every course with less than 2 sections. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ds",
                        "y_data": 1
                    },
                    {
                        "x_data": "math",
                        "y_data": 2
                    },
                    {
                        "x_data": "en",
                        "y_data": 4
                    },
                    {
                        "x_data": "fr",
                        "y_data": 5
                    },
                    {
                        "x_data": "la",
                        "y_data": 6
                    },
                    {
                        "x_data": "cal",
                        "y_data": 7
                    },
                    {
                        "x_data": "nlp",
                        "y_data": 8
                    },
                    {
                        "x_data": "dl",
                        "y_data": 9
                    },
                    {
                        "x_data": "ml",
                        "y_data": 10
                    },
                    {
                        "x_data": "db",
                        "y_data": 12
                    },
                    {
                        "x_data": "pl",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "course_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, list in descending by the X-axis.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, sort in desc by the names.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and show X-axis in desc order please.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart, I want to rank names from high to low order please.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and list in descending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7350
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2822.222222222222
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3244.4444444444443
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2933.3333333333335
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7850
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "book_club"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Give me a histogram for how many books fall into each category?, list X-axis in desc order please.",
            "Show the total number from each category, I want to list in desc by the bars.",
            "Show all book categories and the number of books in each category with a bar chart, and show by the names from high to low.",
            "How many books fall into each category, I want to list in desc by the bars.",
            "Show all book categories and the number of books in each category, I want to list in desc by the bars.",
            "Visualize a bar chart for how many books fall into each category?, show by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lesb. M/SF",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gay SF/F",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gay M/SF",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "What is the maximum age for each pet type? Please show me a bar chart, rank by the X in ascending.",
            "Find the maximum age for each type of pet Return the result with a bar chart, display from low to high by the names please.",
            "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age, could you list PetType in asc order please?",
            "Show maximal pet age from each pettype, I want to order from low to high by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 3
                    },
                    {
                        "x_data": "dog",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(pet_age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Give a bar chart showing how many shops in each carrier, list by the the number of carrier in desc.",
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?, display Y-axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vodafone AU",
                        "y_data": 5
                    },
                    {
                        "x_data": "Bell Mobility",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and employee_id , and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and employee_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and employee_id in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the phone_number by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and employee_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 178
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 201
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 202
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 203
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 204
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 205
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of start dates of each apartment booking for each weekday? Return a bar chart, I want to rank from high to low by the y axis.",
            "Show the number of start dates of all the apartment bookings for each weekday with a bar chart, show in descending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "A bar chart shows the number of appellations whose score is higher than 93, and ordered by Name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Amador County",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anderson Valley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bennett Valley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carneros",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chalk Hill",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dry Creek Valley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Napa Valley",
                        "y_data": 14
                    },
                    {
                        "x_data": "Paso Robles",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russian River Valley",
                        "y_data": 11
                    },
                    {
                        "x_data": "Rutherford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santa Lucia Highlands",
                        "y_data": 6
                    },
                    {
                        "x_data": "Santa Maria Valley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sonoma Coast",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sonoma County",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sonoma Valley",
                        "y_data": 2
                    },
                    {
                        "x_data": "St. Helena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sta. Rita Hills",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Appelation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Appelation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs for each size code in a pie chart.",
            "How many dogs for each size code? Return a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "LGE",
                        "y_data": 4
                    },
                    {
                        "x_data": "MED",
                        "y_data": 9
                    },
                    {
                        "x_data": "SML",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(size_code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "size_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Create a bar chart showing the total number across bedtype, and list from high to low by the X-axis please.",
            "Return a bar chart on what are the number of rooms for each bed type?, and I want to show from high to low by the bars.",
            "A bar chart about what are the number of rooms for each bed type?, could you sort in descending by the x-axis?",
            "Find the number of rooms for each bed type Visualize by bar chart, and could you list by the bedType in desc?",
            "What are the number of rooms for each bed type Show bar chart, list from high to low by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Queen",
                        "y_data": 4
                    },
                    {
                        "x_data": "King",
                        "y_data": 4
                    },
                    {
                        "x_data": "Double",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Draw a scatter chart for what are the low and high estimates of film markets?",
            "Return a scatter on what are the low and high estimates of film markets?",
            "What are the low and high estimates of film markets. Visualize by scatter chart.",
            "Return the low and high estimates for all film markets in a scatter chart",
            "Return the low and high estimates for all film markets. Show scatter chart.",
            "Plot a scatter chart, low estimate by high_estimate."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 80000,
                        "y_data": 80400
                    },
                    {
                        "x_data": 8000,
                        "y_data": 8000
                    },
                    {
                        "x_data": 3000,
                        "y_data": 80400
                    },
                    {
                        "x_data": 960,
                        "y_data": 960
                    },
                    {
                        "x_data": 913,
                        "y_data": 913
                    },
                    {
                        "x_data": 300,
                        "y_data": 1000
                    },
                    {
                        "x_data": 53,
                        "y_data": 53
                    },
                    {
                        "x_data": 39,
                        "y_data": 39
                    },
                    {
                        "x_data": 16,
                        "y_data": 16
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Low_Estimate"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "High_Estimate"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For employees with first names that end with the letter 'm', groups and counts the first name to visualize a pie graph.",
            "For those employees whose first name is ending with the letter m, show the proportion of the first name using a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(FIRST_NAME)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "A stacked bar chart about the total number in each competition type, and then split by country, could you order by the bars from low to high?",
            "How many competitions in each competition type? And split them by country, and could you sort in ascending by the names?",
            "Compute the total number in each competition type, and then split by country, and sort in asc by the bar.",
            "Stacked bar chart of the number of country for with each Competition_type in each country, sort in asc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 1,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 0,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 1,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 2,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 0,
                        "classify": "Tournament"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "You can return a bar chart to show the employees' first name and the corresponding manager's id, order by the FIRST_NAME in ascending.",
            "Draw a bar chart of first name versus manager_id, I want to list by the X in asc.",
            "Just show the first name of the employee and list their manager's id in the Y-axis of the bar chart, could you sort in asc by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 100
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 102
                    },
                    {
                        "x_data": "Den",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 101
                    },
                    {
                        "x_data": "John",
                        "y_data": 100
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 0
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Third_Party_Companies",
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Return a scatter on how many assets does each third party company supply? List the count and the company id.",
            "Return a scatter chart on how many assets does each third party company supply? List the count and the company id.",
            "How many assets does each third party company supply? List the count and the company id by a scatter chart.",
            "How many assets does each third party company supply? List the count and the company id. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 3,
                        "y_data": 2
                    },
                    {
                        "x_data": 2,
                        "y_data": 5
                    },
                    {
                        "x_data": 3,
                        "y_data": 6
                    },
                    {
                        "x_data": 1,
                        "y_data": 7
                    },
                    {
                        "x_data": 1,
                        "y_data": 8
                    },
                    {
                        "x_data": 1,
                        "y_data": 11
                    },
                    {
                        "x_data": 1,
                        "y_data": 12
                    },
                    {
                        "x_data": 1,
                        "y_data": 13
                    },
                    {
                        "x_data": 1,
                        "y_data": 14
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "company_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "CAR_MAKERS",
            "MODEL_LIST"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Show me a bar chart for what are the names and ids of all makers with more than 3 models?",
            "Draw a bar chart for what are the names and ids of all makers with more than 3 models?",
            "What are the names and ids of all makers with more than 3 models."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "General Motors",
                        "y_data": 4
                    },
                    {
                        "x_data": "Chrysler",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FullName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of salary bin hire_date by weekday, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 52200
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 33100
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 83500
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 16400
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 44500
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 44400
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 23200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just list the employee id and the management id using a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 100
                    },
                    {
                        "x_data": 103,
                        "y_data": 103
                    },
                    {
                        "x_data": 108,
                        "y_data": 108
                    },
                    {
                        "x_data": 114,
                        "y_data": 114
                    },
                    {
                        "x_data": 121,
                        "y_data": 121
                    },
                    {
                        "x_data": 145,
                        "y_data": 145
                    },
                    {
                        "x_data": 200,
                        "y_data": 200
                    },
                    {
                        "x_data": 201,
                        "y_data": 201
                    },
                    {
                        "x_data": 203,
                        "y_data": 203
                    },
                    {
                        "x_data": 204,
                        "y_data": 204
                    },
                    {
                        "x_data": 205,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "insurance_fnol",
        "nl_queries": [
            "List all the customers in increasing order of IDs by a bar chart.",
            "List all the customers in increasing order of IDs. Show me a bar chart.",
            "Draw a bar chart for what is the ordered list of customer ids?",
            "Give me a histogram to show the ordered list of customer ids?",
            "What is the ordered list of customer ids. Visualize them with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "America Jaskolski",
                        "y_data": 194
                    },
                    {
                        "x_data": "Ellsworth Paucek",
                        "y_data": 214
                    },
                    {
                        "x_data": "Mrs. Hanna Willms",
                        "y_data": 256
                    },
                    {
                        "x_data": "Dr. Diana Rath",
                        "y_data": 562
                    },
                    {
                        "x_data": "Selena Gerhold",
                        "y_data": 582
                    },
                    {
                        "x_data": "Dayana Robel",
                        "y_data": 641
                    },
                    {
                        "x_data": "Mr. Edwardo Blanda I",
                        "y_data": 682
                    },
                    {
                        "x_data": "Mr. Randal Lynch III",
                        "y_data": 756
                    },
                    {
                        "x_data": "Mrs. Liza Heller V",
                        "y_data": 805
                    },
                    {
                        "x_data": "Mrs. Lilly Graham III",
                        "y_data": 826
                    },
                    {
                        "x_data": "Miss Felicita Reichel",
                        "y_data": 882
                    },
                    {
                        "x_data": "Sydnie Friesen",
                        "y_data": 892
                    },
                    {
                        "x_data": "David Ross",
                        "y_data": 923
                    },
                    {
                        "x_data": "Cai Zhang",
                        "y_data": 956
                    },
                    {
                        "x_data": "Jay Cho",
                        "y_data": 996
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Customer_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Customer_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me about the distribution of Date_of_Birth and Weight in a bar chart.",
            "Give me the comparison about Weight over the Date_of_Birth .",
            "Visualize a bar chart about the distribution of Date_of_Birth and Weight .",
            "Give me the comparison about Weight over the Date_of_Birth by a bar chart.",
            "A bar chart shows the distribution of Date_of_Birth and Weight .",
            "Show weight from each date of birth"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "06.10.1976",
                        "y_data": 83
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 85
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 94
                    },
                    {
                        "x_data": "05.05.1972",
                        "y_data": 92
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 90
                    },
                    {
                        "x_data": "01.09.1977",
                        "y_data": 88
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 89
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 88
                    },
                    {
                        "x_data": "28.09.1981",
                        "y_data": 82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Transaction_Types",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval, I want to display y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Sale"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, display y axis from high to low order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, show by the total number in descending.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of code , and group by attribute headquarter, order by the y-axis from high to low.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, order by the y-axis from high to low.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and could you show total number in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the average weight for each pet type.",
            "Visualize a bar chart for what is the average weight for each type of pet?",
            "what is the average weight for each type of pet?",
            "What is the average weight for each type of pet. Show bar chart.",
            "Give me a bar chart for the average of weight of each pettype"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 12
                    },
                    {
                        "x_data": "dog",
                        "y_data": 11.35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of courses for each subject in a bar chart.",
            "How many courses for each subject? Plot a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    },
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Display a bar chart for what is the total revenue of companies started by founder?, and display by the x-axis from low to high.",
            "What is the total revenue of companies started by founder Plot them as bar chart, sort by the X-axis in ascending.",
            "Find the total revenue of companies of each founder Visualize by bar chart, and display bars in asc order.",
            "Draw a bar chart of founder versus sum revenue, and sort by the x axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart, order by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 3
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 4
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 6
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 8
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Editor_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the gpa of the top 5 students with highest gpa? Show me a bar chart.",
            "Show the GPA of the students with the top 5 GPAs in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gerald",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "Anne",
                        "y_data": 3.27
                    },
                    {
                        "x_data": "Raphael",
                        "y_data": 3.15
                    },
                    {
                        "x_data": "Walter",
                        "y_data": 3.09
                    },
                    {
                        "x_data": "John",
                        "y_data": 2.92
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "STU_GPA"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of Nationality and the sum of ID , and group by attribute Nationality in a bar chart, and order from low to high by the X please.",
            "Draw a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, order from low to high by the X please.",
            "Return a bar chart about the distribution of Nationality and the sum of ID , and group by attribute Nationality, could you show by the x-axis in ascending?",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality, order by the Nationality in ascending.",
            "Show total number of id from each nationality, order by the bar from low to high.",
            "Give me the comparison about the sum of ID over the Nationality , and group by attribute Nationality by a bar chart, order by the bar from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 6
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "France",
                        "y_data": 8
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Plot how many minister by grouped by minister as a bar graph, and rank by the bar from high to low.",
            "Give me a bar chart showing the total number of each minister, display by the bars in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kojo Botsio (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of commission_pct over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of commission_pct over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of commission_pct over hire_date in a line chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of commission_pct over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the change of commission_pct over hire_date",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of commission_pct over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 0.4
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "Use a stacked bar chart to show how many films for each title and each type The x-axis is title, display y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 0,
                        "classify": "Mass human sacrifice"
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 0,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 2,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 3,
                        "classify": "Mass suicide"
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 0,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 0,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 1,
                        "classify": "Mass suicide murder"
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 1,
                        "classify": "Mass suicide murder"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show different citizenship of singers and the number of singers of each citizenship in a bar chart.",
            "Show different citizenship of singers and the number of singers of each citizenship. Plot them as bar chart.",
            "For each citizenship, how many singers are from that country.",
            "Show me the total number by citizenship in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ref_product_categories",
            "products"
        ],
        "db_id": "products_gen_characteristics",
        "nl_queries": [
            "Find the number of the category descriptions of the products whose descriptions include letter 't'.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't'.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Herbs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Seeds",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spices",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_category_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "What is the weight of each dog that was abandoned? Show in a bar chart, rank Y in desc order.",
            "List the dog name and weight of the dogs who have been abandoned in a bar chart, display in descending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kacey",
                        "y_data": 7.57
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4.36
                    },
                    {
                        "x_data": "Evangeline",
                        "y_data": 4.01
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "What are the names of the technicians that are assigned to repair machines with more point values than 70, and count them by a bar chart",
            "What are the number of the names of the technicians that are assigned to repair machines with more point values than 70?",
            "A bar chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?",
            "Show names of technicians who are assigned to repair machines with value point more than 70, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the number of winery of the wines whose price is bigger than 100 in a bar chart.",
            "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100.",
            "Compare the number of winery of the wines whose price is bigger than 100."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bucella",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder by a bar chart, display X in descending order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of revenue , and group by attribute founder in a bar chart, list in descending by the Founder please.",
            "For those records from the products and each product's manufacturer, find founder and the average of revenue , and group by attribute founder, and visualize them by a bar chart, I want to list X in descending order please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of revenue , and group by attribute founder, I want to show X-axis from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder, and I want to rank in descending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, display Y in desc order.",
            "Show the director and their lowest rating among all movies in a bar chart, and sort total number from high to low order.",
            "Compare the lowest rating among all movies by each director using a bar chart, and display y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of revenue , and group by attribute name, list from low to high by the x axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the name , and group by attribute name by a bar chart, and sort by the x axis in ascending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name, and order by the Name in asc.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of revenue , and group by attribute name, I want to display X-axis in asc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of revenue , and group by attribute name in a bar chart, I want to list by the Name in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 300
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 150
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 60
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, and I want to sort by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "gucci",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 3
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apple",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the teacher's first name and group by course description, and list Y-axis from low to high order.",
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course description, could you order total number from low to high order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    }
]