[
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the headquarter , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of manufacturer , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of manufacturer , and group by attribute headquarter, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Give me a bar chart for the number of country of each country, list by the x-axis from low to high please.",
            "What is the number of singers for each country? Show a bar chart, display by the names in ascending.",
            "Show the number of singers in each country with a bar chart, and list by the x-axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 4
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move in date, and could you display X-axis in desc order?",
            "What is the proportion of each customer's move in date? Show me the bar chart, and could you rank from high to low by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000 Plot them as bar chart, rank y-axis in ascending order.",
            "what are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?, and sort maximal salary-min salar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marketing Manager",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Purchasing Manager",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Accounting Manager",
                        "y_data": 7800
                    },
                    {
                        "x_data": "Finance Manager",
                        "y_data": 7800
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max_salary - min_salary"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' by a bar chart.",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 115897
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_player",
        "nl_queries": [
            "For each denomination, return the denomination and the count of schools with that denomination Visualize by bar chart, order X-axis in desc order.",
            "Create a bar chart showing the total number across denomination, I want to sort by the Denomination from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Uniting Church",
                        "y_data": 1
                    },
                    {
                        "x_data": "Catholic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Anglican",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Denomination",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute founder, show by the Y-axis in desc.",
            "For those records from the products and each product's manufacturer, find name and price , and group by attribute founder, and visualize them by a bar chart, I want to rank by the Price from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder, display y axis in desc order.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder by a bar chart, display y axis in desc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute founder in a bar chart, and I want to rank by the Price from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Draw a bar chart of name versus age, sort Y-axis in ascending order please.",
            "Compare each editors' ages using a bar chart, sort by the Y in asc.",
            "Visualize a bar chart to show editors' names and their ages, could you show total number from low to high order?",
            "What are the names and ages of editors? Show me a bar chart, and sort Y-axis in ascending order please.",
            "Display a bar chart for the names and the ages of editors, sort Y-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Szymon Wydra",
                        "y_data": 20
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 21
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 24
                    },
                    {
                        "x_data": "Mariusz Zalejski",
                        "y_data": 25
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 34
                    },
                    {
                        "x_data": "Anna Powierza",
                        "y_data": 35
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 38
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 43
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 54
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Visualize the relationship between address_id and monthly_rental .",
            "What is the relationship between address_id and monthly_rental ?",
            "A scatter chart shows the correlation between address_id and monthly_rental .",
            "Show me about the correlation between address_id and monthly_rental in a scatter chart.",
            "Visualize a scatter chart about the correlation between address_id and monthly_rental ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 16,
                        "y_data": 1297.807
                    },
                    {
                        "x_data": 1,
                        "y_data": 1297.3186
                    },
                    {
                        "x_data": 8,
                        "y_data": 1287.5604
                    },
                    {
                        "x_data": 2,
                        "y_data": 1132.742
                    },
                    {
                        "x_data": 18,
                        "y_data": 1113.0996
                    },
                    {
                        "x_data": 13,
                        "y_data": 1067.8383
                    },
                    {
                        "x_data": 13,
                        "y_data": 1036.8462
                    },
                    {
                        "x_data": 10,
                        "y_data": 1032.9782
                    },
                    {
                        "x_data": 1,
                        "y_data": 1032.8717
                    },
                    {
                        "x_data": 5,
                        "y_data": 1007.2597
                    },
                    {
                        "x_data": 3,
                        "y_data": 894.0958
                    },
                    {
                        "x_data": 8,
                        "y_data": 865.2615
                    },
                    {
                        "x_data": 12,
                        "y_data": 826.4319
                    },
                    {
                        "x_data": 3,
                        "y_data": 800.1214
                    },
                    {
                        "x_data": 1,
                        "y_data": 756.6745
                    },
                    {
                        "x_data": 12,
                        "y_data": 747.5312
                    },
                    {
                        "x_data": 16,
                        "y_data": 683.0735
                    },
                    {
                        "x_data": 9,
                        "y_data": 679.2988
                    },
                    {
                        "x_data": 19,
                        "y_data": 644.9306
                    },
                    {
                        "x_data": 18,
                        "y_data": 620.2801
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "address_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "monthly_rental"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show all locations and the total number of platforms for all train stations in each location in a pie chart.",
            "Show the proportion of the total number of platforms of locations in each location in a pie chart.",
            "Give me a pie to show total number of number of platforms from different location."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "London",
                        "y_data": 140
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(number_of_platforms)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, rank Y-axis from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday, rank by the y-axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, could you show y-axis in ascending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, sort by the total number from low to high please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, rank Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 202
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 203
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 204
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 205
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 384
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "When do all the researcher role staff stop working? Bin the time into YEAR interval and count them with a line chart, and could you show by the X in desc?",
            "Plot date to by the number of date to as a trend line, and sort by the x-axis from high to low.",
            "Give me the trend about the date_to attributes of all researchers, and bin the date_to into Year interval, I want to rank in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 3
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 0
                    },
                    {
                        "x_data": "1971~1975",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist",
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "What is the country of origin of the artist who is female and produced a song in Bangla, and count them by a bar chart, rank by the y-axis from low to high.",
            "What countries are the female artists who sung in the language Bangla from, and count them by a bar chart, and I want to rank by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "India",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bangladesh",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show the average of artists' age by country.",
            "What are the average ages of artists by countries? Visualize the result with a histogram.",
            "Compare the average of artists' age by country in a bar graph.",
            "Bar chart x axis country y axis the average of age"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fiji",
                        "y_data": 45
                    },
                    {
                        "x_data": "United States",
                        "y_data": 49.6
                    },
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 48
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of start dates of all the apartment bookings for each weekday with a bar chart.",
            "What is the number of start date of each apartment booking for each weekday? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Order_items"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the product ids and the number of unique orders containing each product by a scatter chart.",
            "Show the product ids and the number of unique orders containing each product. Plot them as scatter chart.",
            "Return a scatter chart on how many distinct order ids correspond to each product?",
            "Show me the correlation about how many distinct order ids correspond to each product?",
            "How many distinct order ids correspond to each product. Plot them as scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 1
                    },
                    {
                        "x_data": 4,
                        "y_data": 2
                    },
                    {
                        "x_data": 5,
                        "y_data": 2
                    },
                    {
                        "x_data": 7,
                        "y_data": 1
                    },
                    {
                        "x_data": 9,
                        "y_data": 1
                    },
                    {
                        "x_data": 10,
                        "y_data": 1
                    },
                    {
                        "x_data": 12,
                        "y_data": 1
                    },
                    {
                        "x_data": 13,
                        "y_data": 1
                    },
                    {
                        "x_data": 14,
                        "y_data": 3
                    },
                    {
                        "x_data": 15,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "product_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT order_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy",
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergy type with number of students affected by a pie chart.",
            "Show all allergy type with number of students affected.",
            "Return a pie chart on how many students are affected by each allergy type?",
            "how many students are affected by each allergy type?",
            "How many students are affected by each allergy type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 8
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 23
                    },
                    {
                        "x_data": "food",
                        "y_data": 28
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, list by the bars in descending.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name, show by the names in desc.",
            "For those records from the products and each product's manufacturer, find name and the sum of manufacturer , and group by attribute name, and visualize them by a bar chart, and display from high to low by the Name.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart, and could you show by the Name in descending?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, list by the bars in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 12
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 9
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "store",
            "store_district",
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Find the number of stores in each city Plot them as bar chart, and I want to order in asc by the Y.",
            "How many stores are headquarted in each city Plot them as bar chart, and list in asc by the total number.",
            "Draw a bar chart for how many stores are headquarted in each city?, sort in asc by the the total number .",
            "Return a bar chart on how many stores are headquarted in each city?, list in asc by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bahawalpur City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bhakkar City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hafizabad City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Khanewal City",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquartered_City",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Find the number of different products that are produced by companies at different headquarter cities. Plot them as bar chart.",
            "Draw a bar chart for how many different products are produced in each headquarter city?",
            "How many different products are produced in each headquarter city. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T1.name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "nomination",
            "artwork",
            "festival_detail"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            "Show the ids and names of festivals that have at least two nominations for artworks by a bar chart.",
            "Show the ids and names of festivals that have at least two nominations for artworks. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Panasonic Awards",
                        "y_data": 1
                    },
                    {
                        "x_data": "Flower Awards",
                        "y_data": 2
                    },
                    {
                        "x_data": "LA Awards",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Festival_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Festival_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Find the number of the parties associated with the delegates from district 1 Who served as governors of the parties?, and display Governor from low to high order.",
            "Find the parties associated with the delegates from district 1 Who served as governors of the parties, and count them by a bar chart, and display by the x axis in ascending.",
            "Who were the governors of the parties associated with delegates from district 1, and count them by a bar chart, could you display from low to high by the X-axis please?",
            "A bar chart for finding the number of the parties associated with the delegates from district 1 Who served as governors of the parties?, and display by the x axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Peter Vallone",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tom Golisano",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Governor",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Governor)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for how many people are under 40 for each gender?, and rank in desc by the x-axis.",
            "Find the number of people who is under 40 for each gender, list bar in desc order please.",
            "How many people are under 40 for each gender Plot them as bar chart, and could you show by the X in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "male",
                        "y_data": 1
                    },
                    {
                        "x_data": "female",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show all main industry and total market value in each industry by a bar chart, show in asc by the y-axis please.",
            "what are the main indstries and total market value for each industry?, and display in asc by the total number.",
            "What are the main indstries and total market value for each industry Visualize by bar chart, I want to order sum market value in asc order.",
            "A bar chart about what are the main indstries and total market value for each industry?, I want to order sum market value in asc order.",
            "Draw a bar chart of main industry versus total number of market value, and order in ascending by the y axis.",
            "Show all main industry and total market value in each industry, and order in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Conglomerate",
                        "y_data": 415.9
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 580.4000000000002
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 1257.1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(market_value)"
                }
            }
        }
    },
    {
        "tables_used": [
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bar graph to show how many country name from different country name, and show by the y-axis from low to high.",
            "You can give me a bar chart, that groups and counts the country name, sort from low to high by the Y-axis please.",
            "Please show me how many employees working on different countries using a bar chart, could you list in asc by the the number of country name?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 2
                    },
                    {
                        "x_data": "United States of America",
                        "y_data": 68
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(COUNTRY_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home.",
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home.",
            "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart.",
            "Stack bar chart of team_id vs ACC_Home based on all home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "What is the number of cities in each country? Return a bar chart, and sort x-axis in descending order.",
            "Show the number of cities in each country with a bar chart, and sort x-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chilliwack",
                        "y_data": 2
                    },
                    {
                        "x_data": "Central Saanich",
                        "y_data": 2
                    },
                    {
                        "x_data": "Castlegar",
                        "y_data": 2
                    },
                    {
                        "x_data": "Campbell River",
                        "y_data": 6
                    },
                    {
                        "x_data": "Burnaby",
                        "y_data": 2
                    },
                    {
                        "x_data": "Abbotsford",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "What are the average star ratings of each movie title? Could you return me a bar chart?, rank in desc by the Y please.",
            "Please tell me the average star ratings of each movie title using a bar chart, rank in desc by the Y please.",
            "Visualize the title and and the average star rating of the movie using a bar chart, and could you display y axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compare the total number of different job titles for all those jobs in department 80 using a bar chart, order by the JOB_TITLE in ascending.",
            "Please tell me how many employees in the department 80 on each type of job titles using a bar chart, and sort from low to high by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sales Manager",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 29
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_TITLE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "architect",
            "bridge"
        ],
        "db_id": "architecture",
        "nl_queries": [
            "Pie chart. what are the ids and names of the architects who built at least 3 bridges ?",
            "What are the ids and names of the architects who built at least 3 bridges . Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Frank Lloyd Wright",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frank Gehry",
                        "y_data": 2
                    },
                    {
                        "x_data": "Le Corbusier",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Return me a bar chart to show the frequency of the year attribute by binning into a weekday interval, and I want to display Y-axis in asc order.",
            "Bar chart x axis year y axis the number of year, and list Y-axis from low to high order.",
            "How many home games by each weekday (bin the year attr into weekdays interval)? Give me a bar chart, and rank by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 20
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 21
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 21
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 21
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course description, and could you show X from high to low order?",
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the teacher's first name and group by course description, and order in descending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many injured players not suffering from injury of 'Knee problem' in each match? Show me a bar chart grouping by number of matches, I want to display from high to low by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4 (6)",
                        "y_data": 2
                    },
                    {
                        "x_data": "4",
                        "y_data": 1
                    },
                    {
                        "x_data": "3",
                        "y_data": 2
                    },
                    {
                        "x_data": "2",
                        "y_data": 2
                    },
                    {
                        "x_data": "12",
                        "y_data": 1
                    },
                    {
                        "x_data": "10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (2)",
                        "y_data": 1
                    },
                    {
                        "x_data": "1",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Number_of_matches",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Number_of_matches)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "What are the number of the titles of all movies that have between 3 and 5 stars?, rank Y-axis in asc order.",
            "What are the titles of all movies that have between 3 and 5 stars, and count them by a bar chart, rank in ascending by the y-axis.",
            "A bar chart for what are the number of the titles of all movies that have rating star is between 3 and 5?, and could you rank y-axis in ascending order?",
            "What are the number of the titles of all movies that have rating star is between 3 and 5?, could you rank y-axis in ascending order?",
            "A bar chart for what are the number of the titles of all movies that have between 3 and 5 stars?, and sort from low to high by the the number of title.",
            "What are the titles of all movies that have rating star is between 3 and 5, and count them by a bar chart, and I want to show by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "E.T.",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many students are in each department? Show me a bar chart, and sort in desc by the total number.",
            "Find the total number of students for each department with a bar chart, and could you list y axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T2.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show the number of films for each day in a bar chart, I want to sort by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21 May",
                        "y_data": 2
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 1
                    },
                    {
                        "x_data": "11 July",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Show the average of population from each status, rank from low to high by the X.",
            "A bar chart about what are the statuses and average populations of each city?, display by the x axis from low to high.",
            "What are the statuses and average populations of each city Plot them as bar chart, and rank in asc by the x axis please.",
            "Give me a histogram for what are the statuses and average populations of each city?, rank in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Town",
                        "y_data": 5706
                    },
                    {
                        "x_data": "Village",
                        "y_data": 1009.75
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Status",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name.",
            "Stacked bar chart of the number of left office for with each Minister in each left office"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Left_office",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Left_office)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.33333333333333
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Show me a bar chart about the number of areas for all appellations, rank from high to low by the x-axis.",
            "Return a bar chart for what is the number of areas for all appellations?, and could you show X-axis in desc order?",
            "List the number of areas of all appellations in the bar chart, rank from high to low by the x-axis.",
            "Give me a bar chart for the number of area of each area, display by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sierra Foothills",
                        "y_data": 5
                    },
                    {
                        "x_data": "Santa Cruz Mountains",
                        "y_data": 3
                    },
                    {
                        "x_data": "North Coast",
                        "y_data": 31
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 1
                    },
                    {
                        "x_data": "Central Valley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Central Coast",
                        "y_data": 14
                    },
                    {
                        "x_data": "California",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Area",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Area)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses",
            "Ref_budget_codes"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different budget type code in a bar chart.",
            "Return a bar chart to show how many documents for different budget type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GV",
                        "y_data": 6
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Budget_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Editor",
                        "y_data": 2
                    },
                    {
                        "x_data": "Manager",
                        "y_data": 1
                    },
                    {
                        "x_data": "Proof Manager",
                        "y_data": 1
                    },
                    {
                        "x_data": "Photo",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "body_builder"
        ],
        "db_id": "body_builder",
        "nl_queries": [
            "Visualize the relationship between People_ID and Clean_Jerk .",
            "Visualize a scatter chart about the correlation between People_ID and Clean_Jerk .",
            "Return a scatter chart about the correlation between People_ID and Clean_Jerk .",
            "What is the relationship between People_ID and Clean_Jerk ?",
            "A scatter chart shows the correlation between People_ID and Clean_Jerk .",
            "Show me a scatter plot of people id and clean_jerk for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 175
                    },
                    {
                        "x_data": 2,
                        "y_data": 177.5
                    },
                    {
                        "x_data": 3,
                        "y_data": 175
                    },
                    {
                        "x_data": 5,
                        "y_data": 175
                    },
                    {
                        "x_data": 6,
                        "y_data": 162.5
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "People_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Clean_Jerk"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the date of birth of professors teaching course ACCT-211? Bin the date by year interval in a line chart.",
            "Show birthdates of the professors in charge of ACCT-211 and bin the date by year interval in a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1937",
                        "y_data": 1
                    },
                    {
                        "x_data": "1938",
                        "y_data": 0
                    },
                    {
                        "x_data": "1939",
                        "y_data": 0
                    },
                    {
                        "x_data": "1940",
                        "y_data": 0
                    },
                    {
                        "x_data": "1941",
                        "y_data": 0
                    },
                    {
                        "x_data": "1942",
                        "y_data": 0
                    },
                    {
                        "x_data": "1943",
                        "y_data": 0
                    },
                    {
                        "x_data": "1944",
                        "y_data": 0
                    },
                    {
                        "x_data": "1945",
                        "y_data": 0
                    },
                    {
                        "x_data": "1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947",
                        "y_data": 0
                    },
                    {
                        "x_data": "1948",
                        "y_data": 0
                    },
                    {
                        "x_data": "1949",
                        "y_data": 0
                    },
                    {
                        "x_data": "1950",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_DOB",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_DOB)"
                }
            }
        }
    },
    {
        "tables_used": [
            "university"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type. Show bar chart.",
            "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?",
            "Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?",
            "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private/Methodist",
                        "y_data": 2100
                    },
                    {
                        "x_data": "Public",
                        "y_data": 43092
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Affiliation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin. Return the result using a bar chart.",
            "Bar chart x axis date of transaction y axis mean share count"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 32176.333333333332
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 554575.3333333334
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3119057.6666666665
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 24427.25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "What is the average age of singers for each country? Visualize with a bar chart, I want to show by the Y-axis in asc.",
            "Show the average of age from each country, I want to list from low to high by the total number.",
            "Show the average age of singers for each country with a bar chart, and I want to show by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 32
                    },
                    {
                        "x_data": "France",
                        "y_data": 34.5
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 52
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Give me a bar chart for the average of baseprice of each decor, and rank by the the average of baseprice in asc please.",
            "Please use a bar chart to show the average price of the rooms in a different decor, and display in ascending by the the average of baseprice.",
            "What is the average price of the rooms for each different decor? Show me a bar chart!, and sort y-axis in ascending order.",
            "Show the average price of the rooms in different decor using a bar chart, list in ascending by the the average of baseprice."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 112.5
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 162.5
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 187.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "operate_company",
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "Return a histogram on what are the ids and names of the companies that operated more than one flight?, could you show from high to low by the x-axis?",
            "What are the ids and names of the companies that operated more than one flight, I want to list by the X-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vogue Laundry Service Limited",
                        "y_data": 11
                    },
                    {
                        "x_data": "Dragonair",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cathay Pacific Cargo",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart, order from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 4
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and score of the movie with a bar chart, I want to display in asc by the x-axis.",
            "Draw a bar chart to compare the stars of each movie by title, and rank by the names in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, rank by the total number from high to low.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, I want to show by the Y in desc.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, and list by the Y-axis in descending.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and list by the Y-axis in descending.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id, rank by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 1040
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 400
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 180
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of the treatments for each dog of the rarest breed in a pie chart.",
            "How many treatments for each dog of the rarest breed? Give me a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Houston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kacey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display names from low to high order.",
            "Bar chart x axis acc road y axis total number of school id, I want to rank in asc by the x axis.",
            "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road, and I want to display in asc by the ACC_Road please.",
            "Give me the comparison about the sum of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, display from low to high by the X-axis.",
            "Draw a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, show from low to high by the bar please.",
            "Return a bar chart about the distribution of ACC_Road and the sum of School_ID , and group by attribute ACC_Road, and display from low to high by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 9
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show all dates of transactions whose type code is \"SALE\", and count them by a bar chart, and I want to sort by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the sum of account details for different statement details in a bar chart, and I want to list by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private Project",
                        "y_data": 21335
                    },
                    {
                        "x_data": "Open Project",
                        "y_data": 20316
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Account_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "A bar chart shows the distribution of name and ID , could you list bar in ascending order?",
            "Plot id by grouped by name as a bar graph, display by the X from low to high.",
            "Draw a bar chart about the distribution of name and ID , and I want to display x-axis in ascending order please.",
            "Return a bar chart about the distribution of name and ID , display from low to high by the x axis.",
            "Give me the comparison about ID over the name , and I want to show in asc by the X-axis.",
            "Visualize a bar chart about the distribution of name and ID , and display from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 4
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 3
                    },
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 7
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    },
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Bar graph to show mean school id from different all home, sort y-axis in desc order.",
            "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and I want to list Y-axis in desc order please.",
            "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, and sort total number in descending order.",
            "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, sort y-axis in desc order.",
            "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and order by the total number from high to low.",
            "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, order by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Parts",
            "Asset_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Visualize a bar chart for how many assets can each parts be used in? List the part name and the number, rank by the x axis in ascending.",
            "How many assets can each parts be used in? List the part name and the number with a bar chart, and rank by the x axis in ascending.",
            "How many assets can each parts be used in? List the part name and the number, could you list in ascending by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "middle",
                        "y_data": 5
                    },
                    {
                        "x_data": "package",
                        "y_data": 6
                    },
                    {
                        "x_data": "top",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "part_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Group and count the move in date in a bar chart, could you display X-axis from low to high order?",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, could you show by the bar in ascending please?",
            "Draw a bar chart of date moved in versus how many date moved in, sort X from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of assets and group by asset make in a bar chart, and display in desc by the asset_make.",
            "Bar graph to show how many asset make from different asset make, order by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RU",
                        "y_data": 3
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "GB",
                        "y_data": 1
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "CN",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description in a bar chart, and sort from high to low by the y axis.",
            "List the cost of each treatment and the corresponding treatment type description, display sum cost of treatment from high to low order.",
            "What are the cost and treatment type description of each treatment, and I want to rank by the y axis in desc.",
            "A bar chart about what are the cost and treatment type description of each treatment?, display in desc by the total number.",
            "Draw a bar chart for what are the cost and treatment type description of each treatment?, display Y from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vaccination",
                        "y_data": 2540
                    },
                    {
                        "x_data": "Physical examination",
                        "y_data": 2429
                    },
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 2392
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cost_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "College"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Visualize a pie chart about the proportion of state and enr.",
            "Return a pie chart about the proportion of state and enr.",
            "A pie chart shows the proportion of state and enr.",
            "Give me a pie chart to reflect the proportion of state and enr.",
            "Draw a pie chart about the proportion of state and enr."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "LA",
                        "y_data": 18000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "OK",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "List the number of companies for each building in a bar chart, order from low to high by the Y.",
            "Return a bar chart showing the number of companies in each building, display in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "LIU East",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 432",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 90",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 2",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 3",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre KOI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre New York Life",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre Reforma",
                        "y_data": 1
                    },
                    {
                        "x_data": "Corporativo BBVA Bancomer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Torre Mitikah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Punto Chapultepec",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and sort names in ascending order.",
            "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, sort names in ascending order.",
            "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and rank by the x-axis from low to high.",
            "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, sort names in ascending order.",
            "Bar graph to show total number of population from different governmentform, I want to list bars in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commonwealth of the US",
                        "y_data": 3947000
                    },
                    {
                        "x_data": "Constitutional Monarchy (Emirate)",
                        "y_data": 1972000
                    },
                    {
                        "x_data": "Constitutional Monarchy, Federation",
                        "y_data": 82516000
                    },
                    {
                        "x_data": "Dependent Territory of the UK",
                        "y_data": 193050
                    },
                    {
                        "x_data": "Emirate Federation",
                        "y_data": 2441000
                    },
                    {
                        "x_data": "Federation",
                        "y_data": 7160400
                    },
                    {
                        "x_data": "Monarchy (Emirate)",
                        "y_data": 617000
                    },
                    {
                        "x_data": "Monarchy (Sultanate)",
                        "y_data": 2870000
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of France",
                        "y_data": 464000
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of The Netherlands",
                        "y_data": 320000
                    },
                    {
                        "x_data": "Overseas Department of France",
                        "y_data": 1731000
                    },
                    {
                        "x_data": "Parliamentary Coprincipality",
                        "y_data": 78000
                    },
                    {
                        "x_data": "Part of Denmark",
                        "y_data": 99000
                    },
                    {
                        "x_data": "Socialistic Republic",
                        "y_data": 115072000
                    },
                    {
                        "x_data": "Socialistic State",
                        "y_data": 5605000
                    },
                    {
                        "x_data": "Special Administrative Region of China",
                        "y_data": 7255000
                    },
                    {
                        "x_data": "US Territory",
                        "y_data": 329000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "GovernmentForm",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, list in desc by the y-axis please.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, and show from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Meaghan",
                        "y_data": 4
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 4
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 3
                    },
                    {
                        "x_data": "Vesta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joesph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jensen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Abbey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show the number of services for each service type description with a bar chart, and I want to display y-axis in desc order.",
            "How many services for each service type description? Use a bar chart to show it, I want to display y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Give me a bar chart for the total number of each product type code, could you rank in desc by the X-axis?",
            "Show different type codes of products and the number of products with each type code Visualize by bar chart, and I want to display in descending by the X.",
            "Show different type codes of products and the number of products with each type code in a bar chart, I want to sort by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Food",
                        "y_data": 5
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Books",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Please draw a histogram to show the total number of participants in each type code, and sort Y from high to low order.",
            "Bar chart x axis participant type code y axis the number of participant type code, and sort in desc by the Y please.",
            "Compare the number of participants in each participant type code using a bar chart, and sort y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Participant",
                        "y_data": 8
                    },
                    {
                        "x_data": "Organizer",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Participant_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the change of the average of Employee_ID over Start_from bin start_from by time in a line chart, and display by the X from low to high.",
            "Plot start from by the average of employee id as a line chart, and could you display in ascending by the Start_from?",
            "For the average of Employee_ID, Start_from, visualize the trend, and order in asc by the X-axis.",
            "A line chart shows the change of the average of Employee_ID over Start_from bin start_from by time, and show by the x axis from low to high.",
            "Draw a line chart about the change of the average of Employee_ID over Start_from bin start_from by time, and I want to order X-axis in asc order.",
            "Return a line chart about the change of the average of Employee_ID over Start_from bin start_from by time, could you display in ascending by the Start_from?",
            "Give me the trend about the average of Employee_ID over Start_from bin start_from by time, show from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 2
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 7
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Show the total number from each flag, and sort by the y axis in ascending.",
            "What are the different ship flags, and how many ships have each Plot them as bar chart, and list Y-axis in ascending order.",
            "Return a bar chart on what are the different ship flags, and how many ships have each?, and could you rank in asc by the Y?",
            "Draw a bar chart for what are the different ship flags, and how many ships have each?, and list the total number in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Panama",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each month and bin date to by month interval with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_to)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, sort by the total number in ascending.",
            "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200, and order by the Y-axis in asc please.",
            "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart, I want to sort the number of meter 200 in ascending order.",
            "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart, display by the the number of meter 200 in ascending.",
            "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200, I want to rank by the y-axis in ascending.",
            "Create a bar chart showing the number of meter 200 across meter 200, and rank by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(meter_200)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "A pie chart shows the average life expectancy for each continent where the average life expectancy is shorter than 72.",
            "For continents that have an average life expectancy less than 72, shows their average life expectancy with a pie chart.",
            "Compute the total mean lifeexpectancy across continent as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Africa",
                        "y_data": 52.57192982456139
                    },
                    {
                        "x_data": "Asia",
                        "y_data": 67.44117647058825
                    },
                    {
                        "x_data": "Oceania",
                        "y_data": 69.715
                    },
                    {
                        "x_data": "South America",
                        "y_data": 70.94615384615386
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(LifeExpectancy)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "Show different publishers together with the number of publications they have in a pie chart.",
            "Show different publishers together with the number of publications they have.",
            "Compute the total the total number across publisher as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bertelsmann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pearson",
                        "y_data": 2
                    },
                    {
                        "x_data": "Springer Nature",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomson Reuters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wiley",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publisher"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the names of all products, and count them by a bar chart, sort by the x-axis in desc.",
            "What are the number of the names of all products?, I want to sort Name in descending order.",
            "A bar chart for what are the number of the names of all products?, and sort by the x-axis in desc.",
            "Select the names of all the products in the store, and count them by a bar chart, and sort x axis in descending order.",
            "Bar chart x axis name y axis the number of name, and list bars in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners in a stacked bar chart The x-axis is last name and group by skill description, list in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 2,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Price",
                        "y_data": 0,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the number of films each cinema has, and order by the bars in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many instructors are in each department? Show me a bar chart, I want to order id) from low to high order.",
            "Find the total number of instructors for each department with a bar chart, show by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Astronomy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 1
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 3
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 4
                    },
                    {
                        "x_data": "English",
                        "y_data": 4
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T3.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many students are in each department? Show me a bar chart, sort by the y-axis from low to high.",
            "Find the total number of students for each department with a bar chart, and sort in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T2.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, display by the Y in asc.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, could you order by the Y-axis in ascending?",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday, list by the Y in ascending.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, order by the y-axis from low to high.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, could you sort Y in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 424
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 740
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 834
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 980
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1197
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1361
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1653
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments, order x axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alicia",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cary",
                        "y_data": 14
                    },
                    {
                        "x_data": "Eliza",
                        "y_data": 15
                    },
                    {
                        "x_data": "Marshall",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "personal_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "For those female students with age is older than 18 who are not majoring in 600, tell me how many students of different first names using a bar chart, display in asc by the how many fname."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Bar graph to show mean memory in g from different carrier, sort X-axis from high to low order please.",
            "A bar chart about what are the memories and carriers of phones?, list x axis in desc order.",
            "What are the memories and carriers of phones Show bar chart, order in descending by the x-axis.",
            "Give me a histogram for what are the memories and carriers of phones?, list by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TMobile",
                        "y_data": 69.33333333333333
                    },
                    {
                        "x_data": "Sprint",
                        "y_data": 80
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy.",
            "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72.",
            "Draw a bar chart of continent versus mean lifeexpectancy"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Africa",
                        "y_data": 52.57192982456139
                    },
                    {
                        "x_data": "Asia",
                        "y_data": 67.44117647058825
                    },
                    {
                        "x_data": "Oceania",
                        "y_data": 69.715
                    },
                    {
                        "x_data": "South America",
                        "y_data": 70.94615384615386
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(LifeExpectancy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Show the proportion of the districts of markets they are on, a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alberta",
                        "y_data": 2
                    },
                    {
                        "x_data": "British Columbia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quebec",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(District)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "A bar chart for what are the number of the paragraph texts for the document with the name 'Customer reviews'?, and display Y in desc order.",
            "What are the paragraph texts for the document with the name 'Customer reviews', and count them by a bar chart, and list by the total number from high to low.",
            "Show all paragraph texts for the document \"Customer reviews\", and count them by a bar chart, could you display in descending by the y-axis?",
            "What are the number of the paragraph texts for the document with the name 'Customer reviews'?, could you list in desc by the Y please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Korea",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Paragraph_Text",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Paragraph_Text)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the average of Employee_ID over the Start_from bin start_from by weekday, show in asc by the Y-axis.",
            "Return a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday, and show in asc by the Y-axis.",
            "Bar chart x axis start from y axis the average of employee id, and display total number in ascending order.",
            "Visualize a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday, and show by the Y from low to high.",
            "Show me about the distribution of Start_from and the average of Employee_ID bin start_from by weekday in a bar chart, and I want to order by the mean employee id from low to high.",
            "Draw a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday, display Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the dates in which the mean sea level pressure was between 30.3 and 31, and count them by a bar chart",
            "What are the dates that have an average sea level pressure between 30.3 and 31, and count them by a bar chart",
            "What are the number of the dates that have an average sea level pressure between 30.3 and 31?",
            "A bar chart for what are the number of the dates in which the mean sea level pressure was between 30.3 and 31?",
            "What are the number of the dates in which the mean sea level pressure was between 30.3 and 31?",
            "A bar chart for what are the number of the dates that have an average sea level pressure between 30.3 and 31?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 27
                    },
                    {
                        "x_data": "2014",
                        "y_data": 38
                    },
                    {
                        "x_data": "2015",
                        "y_data": 22
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SALES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, rank names in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "e",
                        "y_data": 1
                    },
                    {
                        "x_data": "f",
                        "y_data": 1
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "p",
                        "y_data": 2
                    },
                    {
                        "x_data": "s",
                        "y_data": 2
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "y",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "sales_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(sales_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "What is the id and weight of every pet who is older than 1, rank y axis in ascending order.",
            "Visualize a bar chart for what is the id and weight of every pet who is older than 1?, and order from low to high by the y axis please.",
            "A bar chart about what is the id and weight of every pet who is older than 1?, and could you show in ascending by the y-axis please?",
            "Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, and show weight from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 13.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A bar chart showing the number of debates in each venue for those on the negative side, ordered in ascending alphabetical order of name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Use a group line chart to show how many competitions are held in each year, group by official name and bin by year, could you sort by the x axis in desc?",
            "Use a group line chart to show how many competitions are held in each year, group by official name and bin by year, and order x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart.",
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 3
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 3
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 4
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 3
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 4
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 3
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 3
                    },
                    {
                        "x_data": "World History",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of price , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 450
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 486
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course code, could you rank total number from low to high order please?",
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the instructor's first name and group by course code, and display y axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "QM-362"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and price , order in ascending by the Y.",
            "For those products with a price between 60 and 120, give me the comparison about price over the name by a bar chart, and show by the Y in ascending.",
            "For those products with a price between 60 and 120, find name and price , and visualize them by a bar chart, I want to rank by the y-axis in asc please.",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and price , and order in ascending by the Y.",
            "For those products with a price between 60 and 120, give me the comparison about price over the name , and list from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the position of players and the average number of points of players of each position by a bar chart, rank by the bars in desc.",
            "For each position, what is the average number of points for players in that position Plot them as bar chart, order by the x axis in descending.",
            "Give me a bar chart for mean points of each position, and I want to order in descending by the x axis please.",
            "List the position of players and the average number of points of players of each position Visualize by bar chart, and order by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Stand Off",
                        "y_data": 110
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 20
                    },
                    {
                        "x_data": "Scrum Half",
                        "y_data": 188
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 36
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 36
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 20
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 12
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 36
                    },
                    {
                        "x_data": "Full Back",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Points)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Give me a bar chart about the number of customer addresses in each premises type, display x-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Warehouse",
                        "y_data": 6
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 3
                    },
                    {
                        "x_data": "Office",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a line chart, could you order by the X-axis from high to low?",
            "How many courses are in the Psychology department for each year? Return a line chart, and display X-axis in desc order.",
            "Find the number of courses offered by Psychology department in each year with a line chart, and display in desc by the X.",
            "How many courses are in the Psychology department for each year? Return a line chart, order by the X-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the total amount payment as the Y-axis, and rank Y-axis in ascending order.",
            "Sum the amount for all the payments processed with Visa of each day of week using a bar chart, show Y from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 155654
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 172309
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 466750
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and department_id , and I want to show in desc by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and department_id in a bar chart, show in desc by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and department_id , and show in desc by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and department_id , display from high to low by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and department_id , and visualize them by a bar chart, I want to show in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "603.123.6666",
                        "y_data": 20
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 70
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 110
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 110
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 40
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 20
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for all female students and group them by first name in a bar chart, and display x axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tracy",
                        "y_data": 19
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 16
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 18
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 21
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 23
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 18
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, show me about the correlation between code and manufacturer in a scatter chart.",
            "For those products with a price between 60 and 120, visualize a scatter chart about the correlation between code and manufacturer .",
            "For those products with a price between 60 and 120, a scatter chart shows the correlation between code and manufacturer .",
            "For those products with a price between 60 and 120, return a scatter chart about the correlation between code and manufacturer .",
            "For those products with a price between 60 and 120, draw a scatter chart about the correlation between code and manufacturer ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 6
                    },
                    {
                        "x_data": 7,
                        "y_data": 2
                    },
                    {
                        "x_data": 9,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of revenue , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of revenue , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "James",
                        "y_data": 150
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 300
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 60
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compute the number of services by services and then split by local authorities. Show the result with a stacked bar graph.",
            "count services by services, and split by local authorities with a stacked bar chart.",
            "Stack bar chart of the number of local authority vs services based on local authority"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brentwood",
                        "y_data": 1,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 1,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 2,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "c2c"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and revenue , and group by attribute founder in a scatter chart.",
            "For those records from the products and each product's manufacturer, visualize the relationship between code and revenue , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 120,
                        "classify": "Andy"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "James"
                    },
                    {
                        "x_data": 5,
                        "y_data": 130,
                        "classify": "John"
                    },
                    {
                        "x_data": 4,
                        "y_data": 200,
                        "classify": "Mary"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Robert"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and employee_id , display by the y-axis from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the email , and I want to display in ascending by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and employee_id , display in asc by the y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and employee_id in a bar chart, order from low to high by the y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of email and employee_id , list from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KGRANT",
                        "y_data": 178
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 201
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 202
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 203
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 204
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 205
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the names of people and the number of times they have been on the affirmative side of debates by a bar chart, and list from low to high by the X.",
            "Show the names of people and the number of times they have been on the affirmative side of debates, and rank by the bar in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday.",
            "Show me about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart.",
            "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart.",
            "Return a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Draw a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Stacked bar chart of total number of shop id for with each Is_full_time in each start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 11,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, a line chart shows the trend of manager_id over hire_date , and list in ascending by the X-axis.",
            "For all employees who have the letters D or S in their first name, show me about the change of manager_id over hire_date in a line chart, sort by the X-axis in ascending.",
            "For all employees who have the letters D or S in their first name, give me the trend about manager_id over hire_date , display HIRE_DATE from low to high order.",
            "For all employees who have the letters D or S in their first name, a line chart shows the change of manager_id over hire_date, sort X-axis in asc order.",
            "For all employees who have the letters D or S in their first name, for manager_id, hire_date, visualize the trend, sort X-axis in asc order.",
            "For all employees who have the letters D or S in their first name, show me the trend about manager_id over hire_date with a line chart, could you list by the HIRE_DATE from low to high please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize the relationship between commission_pct and department_id .",
            "For all employees who have the letters D or S in their first name, draw a scatter chart about the correlation between commission_pct and department_id .",
            "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between commission_pct and department_id .",
            "For all employees who have the letters D or S in their first name, what is the relationship between commission_pct and department_id ?",
            "For all employees who have the letters D or S in their first name, visualize a scatter chart about the correlation between commission_pct and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 0,
                        "y_data": 110
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 40
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between employee_id and commission_pct .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, what is the relationship between employee_id and commission_pct ?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize the relationship between employee_id and commission_pct .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a scatter chart about the correlation between employee_id and commission_pct .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between employee_id and commission_pct ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 0
                    },
                    {
                        "x_data": 101,
                        "y_data": 0
                    },
                    {
                        "x_data": 102,
                        "y_data": 0
                    },
                    {
                        "x_data": 103,
                        "y_data": 0
                    },
                    {
                        "x_data": 104,
                        "y_data": 0
                    },
                    {
                        "x_data": 105,
                        "y_data": 0
                    },
                    {
                        "x_data": 106,
                        "y_data": 0
                    },
                    {
                        "x_data": 107,
                        "y_data": 0
                    },
                    {
                        "x_data": 108,
                        "y_data": 0
                    },
                    {
                        "x_data": 109,
                        "y_data": 0
                    },
                    {
                        "x_data": 110,
                        "y_data": 0
                    },
                    {
                        "x_data": 111,
                        "y_data": 0
                    },
                    {
                        "x_data": 112,
                        "y_data": 0
                    },
                    {
                        "x_data": 113,
                        "y_data": 0
                    },
                    {
                        "x_data": 114,
                        "y_data": 0
                    },
                    {
                        "x_data": 115,
                        "y_data": 0
                    },
                    {
                        "x_data": 116,
                        "y_data": 0
                    },
                    {
                        "x_data": 117,
                        "y_data": 0
                    },
                    {
                        "x_data": 118,
                        "y_data": 0
                    },
                    {
                        "x_data": 119,
                        "y_data": 0
                    },
                    {
                        "x_data": 120,
                        "y_data": 0
                    },
                    {
                        "x_data": 121,
                        "y_data": 0
                    },
                    {
                        "x_data": 122,
                        "y_data": 0
                    },
                    {
                        "x_data": 123,
                        "y_data": 0
                    },
                    {
                        "x_data": 124,
                        "y_data": 0
                    },
                    {
                        "x_data": 125,
                        "y_data": 0
                    },
                    {
                        "x_data": 126,
                        "y_data": 0
                    },
                    {
                        "x_data": 127,
                        "y_data": 0
                    },
                    {
                        "x_data": 128,
                        "y_data": 0
                    },
                    {
                        "x_data": 129,
                        "y_data": 0
                    },
                    {
                        "x_data": 130,
                        "y_data": 0
                    },
                    {
                        "x_data": 131,
                        "y_data": 0
                    },
                    {
                        "x_data": 132,
                        "y_data": 0
                    },
                    {
                        "x_data": 133,
                        "y_data": 0
                    },
                    {
                        "x_data": 134,
                        "y_data": 0
                    },
                    {
                        "x_data": 135,
                        "y_data": 0
                    },
                    {
                        "x_data": 136,
                        "y_data": 0
                    },
                    {
                        "x_data": 137,
                        "y_data": 0
                    },
                    {
                        "x_data": 138,
                        "y_data": 0
                    },
                    {
                        "x_data": 139,
                        "y_data": 0
                    },
                    {
                        "x_data": 140,
                        "y_data": 0
                    },
                    {
                        "x_data": 141,
                        "y_data": 0
                    },
                    {
                        "x_data": 142,
                        "y_data": 0
                    },
                    {
                        "x_data": 143,
                        "y_data": 0
                    },
                    {
                        "x_data": 144,
                        "y_data": 0
                    },
                    {
                        "x_data": 145,
                        "y_data": 0.4
                    },
                    {
                        "x_data": 146,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 147,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 148,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 149,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 150,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 151,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 152,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 153,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 154,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 155,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 156,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 157,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 158,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 159,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 160,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 161,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 162,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 163,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 164,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 165,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 166,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 167,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 168,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 169,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 170,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 171,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 172,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 173,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 174,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 175,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 176,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 177,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 178,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 179,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 180,
                        "y_data": 0
                    },
                    {
                        "x_data": 181,
                        "y_data": 0
                    },
                    {
                        "x_data": 182,
                        "y_data": 0
                    },
                    {
                        "x_data": 183,
                        "y_data": 0
                    },
                    {
                        "x_data": 184,
                        "y_data": 0
                    },
                    {
                        "x_data": 185,
                        "y_data": 0
                    },
                    {
                        "x_data": 186,
                        "y_data": 0
                    },
                    {
                        "x_data": 187,
                        "y_data": 0
                    },
                    {
                        "x_data": 188,
                        "y_data": 0
                    },
                    {
                        "x_data": 189,
                        "y_data": 0
                    },
                    {
                        "x_data": 190,
                        "y_data": 0
                    },
                    {
                        "x_data": 191,
                        "y_data": 0
                    },
                    {
                        "x_data": 192,
                        "y_data": 0
                    },
                    {
                        "x_data": 193,
                        "y_data": 0
                    },
                    {
                        "x_data": 194,
                        "y_data": 0
                    },
                    {
                        "x_data": 195,
                        "y_data": 0
                    },
                    {
                        "x_data": 196,
                        "y_data": 0
                    },
                    {
                        "x_data": 197,
                        "y_data": 0
                    },
                    {
                        "x_data": 198,
                        "y_data": 0
                    },
                    {
                        "x_data": 199,
                        "y_data": 0
                    },
                    {
                        "x_data": 200,
                        "y_data": 0
                    },
                    {
                        "x_data": 201,
                        "y_data": 0
                    },
                    {
                        "x_data": 202,
                        "y_data": 0
                    },
                    {
                        "x_data": 204,
                        "y_data": 0
                    },
                    {
                        "x_data": 205,
                        "y_data": 0
                    },
                    {
                        "x_data": 206,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of engineers for different skill description The x-axis is skill description and group by other deteails, display Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 9,
                        "classify": ""
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 6,
                        "classify": ""
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 4,
                        "classify": ""
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 0,
                        "classify": "Skilled"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 0,
                        "classify": "Skilled"
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 1,
                        "classify": "Skilled"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show names of technicians in ascending order of quality rank of the machine they are assigned, and count them by a pie chart",
            "What are the names of the technicians by ascending order of quality rank for the machine they are assigned, and count them by a pie chart",
            "A pie chart for what are the number of the names of the technicians by ascending order of quality rank for the machine they are assigned?",
            "What are the number of the names of the technicians by ascending order of quality rank for the machine they are assigned?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "For each continent, list its name, and how many countries it has with a bar chart, display x axis in asc order please.",
            "How many countries does each continent have? Return a bar chart listing the continent name and the number of countries, display x axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "africa",
                        "y_data": 2
                    },
                    {
                        "x_data": "america",
                        "y_data": 3
                    },
                    {
                        "x_data": "asia",
                        "y_data": 2
                    },
                    {
                        "x_data": "australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "europe",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and manufacturer , and group by attribute founder, and visualize them by a bar chart, rank Y-axis in descending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and manufacturer , and group by attribute founder, and could you rank in desc by the y-axis?",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute founder in a bar chart, I want to list in descending by the Y.",
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute founder, show from high to low by the total number.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute founder, I want to rank by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart.",
            "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart.",
            "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart.",
            "Give me the comparison about All_Games_Percent over the All_Neutral .",
            "Return a bar chart about the distribution of All_Neutral and All_Games_Percent .",
            "Create a bar chart showing all_games_percent across all neutral"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, find headquarter and the sum of price , and group by attribute headquarter, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the headquarter , and group by attribute headquarter by a bar chart.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of price , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 450
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 150
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 486
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 125
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 240
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "patient"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, and order Y in asc order.",
            "How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and order in ascending by the y-axis.",
            "Return the name of each physician and the number of patients he or she treats, could you order by the Y-axis in ascending?",
            "Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of, I want to show Y in ascending order.",
            "Return the name of each physician and the number of patients he or she treats in a bar chart, list by the total number from low to high.",
            "Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of, order by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Dorian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor",
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Return a histogram on how many actors have appeared in each musical?, sort bar in desc order.",
            "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, sort bar in desc order.",
            "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, and could you rank from high to low by the bars?",
            "how many actors have appeared in each musical?, sort bar in desc order.",
            "How many actors have appeared in each musical Plot them as bar chart, and rank from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "West Side Story",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Phantom of the Opera",
                        "y_data": 2
                    },
                    {
                        "x_data": "The Book of Mormon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Les Mis\u00e9rables",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Give me a bar chart for the total number of each product type code, and list in descending by the Y-axis.",
            "Show different type codes of products and the number of products with each type code Visualize by bar chart, I want to list by the total number in descending.",
            "Show different type codes of products and the number of products with each type code in a bar chart, list in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Food",
                        "y_data": 5
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Books",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show me mean age by sex in a histogram, and could you show in descending by the y-axis?",
            "What are the average ages for male and female students Plot them as bar chart, display by the y-axis in descending.",
            "Show the average age for male and female students with a bar chart, rank by the mean age in descending.",
            "A bar chart about what are the average ages for male and female students?, and order y axis in desc order.",
            "Visualize a bar chart for what are the average ages for male and female students?, and order y axis in desc order.",
            "Show the average age for male and female students Visualize by bar chart, and could you sort total number in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    },
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution",
            "protein"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution in a bar chart.",
            "Show institution names along with the number of proteins for each institution."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dakota State University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haskell Indian Nations University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lindenwood University\u2013Belleville",
                        "y_data": 2
                    },
                    {
                        "x_data": "Valley City State University",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Institution",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the average age of heads of departments born in each state with a bar chart.",
            "Show me mean age by born state in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alabama",
                        "y_data": 68
                    },
                    {
                        "x_data": "California",
                        "y_data": 61.25
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 55
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 53
                    },
                    {
                        "x_data": "Florida",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart, and rank sum school id in ascending order please.",
            "Give me the comparison about the sum of School_ID over the All_Home , and group by attribute All_Home, and list Y-axis in ascending order.",
            "Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, and order sum school id from low to high order.",
            "Give me a bar chart for total number of school id of each all home, order sum school id from low to high order.",
            "Return a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home, sort by the y-axis in asc please.",
            "Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart, and rank sum school id in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 5
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the trend about the average of Shop_ID over Start_from bin start_from by time.",
            "Draw a line chart about the change of the average of Shop_ID over Start_from bin start_from by time.",
            "Show me the trend about the average of Shop_ID over Start_from bin start_from by time with a line chart.",
            "Return a line chart about the change of the average of Shop_ID over Start_from bin start_from by time.",
            "A line chart shows the trend of the average of Shop_ID over Start_from bin start_from by time.",
            "For the average of Shop_ID, Start_from, visualize the trend.",
            "Visualize the general trend of the average of shop id over the start from."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011",
                        "y_data": 8
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Please tell the names and revenues of the companies with the highest revenues in each headquarter city, and sort in desc by the bars please.",
            "Create a bar chart showing maximal revenue across name, and I want to rank X in descending order please.",
            "Give me a bar chart to show the names and revenue of the company that earns the highest revenue in each headquarter city, could you display Name in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "region",
            "affected_region"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "How many storms occured in each region Visualize by bar chart, and show bars from low to high order.",
            "Show the name for regions and the number of storms for each region by a bar chart, display in ascending by the X-axis.",
            "Show me a bar chart for how many storms occured in each region?, and I want to sort by the names in ascending.",
            "Show the name for regions and the number of storms for each region, and show bars from low to high order.",
            "Draw a bar chart for how many storms occured in each region?, and show bars from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Afghanistan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Albania",
                        "y_data": 2
                    },
                    {
                        "x_data": "Algeria",
                        "y_data": 1
                    },
                    {
                        "x_data": "Denmark",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Region_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "perpetrator"
        ],
        "db_id": "perpetrator",
        "nl_queries": [
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there Plot them as bar chart, and rank by the x-axis from high to low.",
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, could you display in descending by the x axis?",
            "Bar chart x axis country y axis the total number, sort x-axis in descending order please.",
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there, sort x-axis in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "South Korea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "India",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Create a bar chart showing meter_100 across meter 600, and could you order from low to high by the Y-axis?",
            "Return a bar chart about the distribution of meter_600 and meter_100 , show y-axis in ascending order.",
            "Give me the comparison about meter_100 over the meter_600 , and could you order y axis in asc order please?",
            "Draw a bar chart about the distribution of meter_600 and meter_100 , and could you order y axis in asc order please?",
            "Visualize a bar chart about the distribution of meter_600 and meter_100 , show y-axis in ascending order.",
            "Give me the comparison about meter_100 over the meter_600 by a bar chart, and could you order from low to high by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:53.03",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "5:52.59",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "5:52.92",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "5:56.31",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "5:57.10",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "5:54.45",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "5:53.53",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "5:56.99",
                        "y_data": 57.84
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_600",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Transaction_Types",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Find the transaction type descriptions and dates if the share count is smaller than 10, group by transaction type, count the date of transaction, and bin the date into the weekday interval, I want to order by the total number from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Purchase"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Sale"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Sale"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and salary , show bar in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and salary , list in desc by the x-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name , rank from high to low by the X please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and salary in a bar chart, and order by the x-axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the first_name by a bar chart, and could you show X-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, show from high to low by the total number please.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and rank mean department id in descending order.",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart, could you display y-axis from high to low order?",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and rank mean department id in descending order.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and could you display y-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 83.75
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 56.666666666666664
                    },
                    {
                        "x_data": "July",
                        "y_data": 44.666666666666664
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, compare the number of deaths by name, and rank in asc by the y-axis.",
            "For all storms with at least 1 death, compare the number of deaths by name with a bar graph, order from low to high by the Y-axis.",
            "For all storms with at least 1 death, show me the name and the total number of deaths with a bar chart, sort in asc by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Six",
                        "y_data": 2
                    },
                    {
                        "x_data": "Five",
                        "y_data": 3
                    },
                    {
                        "x_data": "Four",
                        "y_data": 7
                    },
                    {
                        "x_data": "Two",
                        "y_data": 7
                    },
                    {
                        "x_data": "Three",
                        "y_data": 52
                    },
                    {
                        "x_data": "9 cyclones",
                        "y_data": 71
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for all female students and group them by first name in a bar chart, and I want to display by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sarah",
                        "y_data": 23
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 21
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 20
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 19
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 18
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 18
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the minimum gpa of all students in each department with a bar chart, and sort bar in descending order.",
            "What is the lowest student GPA for every department? Return a bar chart, and sort x axis in descending order.",
            "Bar chart x axis dept code y axis minimal stu gpa, could you show by the DEPT_CODE in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.09
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 2.26
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Road.",
            "Visualize the relationship between Team_ID and ACC_Percent , and group by attribute All_Road.",
            "Show me about the correlation between Team_ID and ACC_Percent , and group by attribute All_Road in a scatter chart.",
            "What is the relationship between Team_ID and ACC_Percent , and group by attribute All_Road?",
            "Return a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Road.",
            "Show the relation between team id and acc_percent for each All_Road using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "13\u20130"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.563,
                        "classify": "4\u20138"
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.625,
                        "classify": "6\u20135"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "8\u20132"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by first name in a bar chart, and rank by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 1
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2107
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2325
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2440
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2456
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2265
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2280
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Bar chart x axis document name y axis the number of document name, and could you show in desc by the Y-axis please?",
            "How many documents for different document name? Draw a bar chart, could you show in desc by the Y-axis please?",
            "Show the number of documents for different document name in a bar chart, could you show in desc by the Y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Review on UK files",
                        "y_data": 3
                    },
                    {
                        "x_data": "Winona Book",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trenton Presentation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on USA files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on French files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on Canadian files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Noel CV",
                        "y_data": 1
                    },
                    {
                        "x_data": "King Book",
                        "y_data": 1
                    },
                    {
                        "x_data": "Katheryn statement",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jevon Paper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Deontae files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chapter on private files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Book on USA files",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVOICES"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "List the distinct payment method codes with the number of orders mad in a bar chart, and show by the X in ascending.",
            "Show all payment method codes and the number of orders for each code Show bar chart, display in ascending by the names.",
            "List the distinct payment method codes with the number of orders mad Show bar chart, and display X in asc order.",
            "Give me a bar chart for the total number of each payment method code, show by the X in ascending.",
            "Show all payment method codes and the number of orders for each code in a bar chart, and could you rank by the bars from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American E",
                        "y_data": 4
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 6
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Bar graph to show maximal age from different sex, could you rank bars in asc order?",
            "What is the oldest age for each gender of student? Return a bar chart, and order by the x axis in asc please.",
            "Find the oldest age for students with different sex in a bar chart, and sort X in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 26
                    },
                    {
                        "x_data": "M",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "PURCHASES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "What are the purchase details of transactions with amount bigger than 10000, and count them by a bar chart, show by the names in ascending.",
            "What are the number of the purchase details of transactions with amount bigger than 10000?, and show by the names in ascending.",
            "A bar chart for what are the number of the purchase details of transactions with amount bigger than 10000?, could you sort in asc by the x axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 2
                    },
                    {
                        "x_data": "c",
                        "y_data": 1
                    },
                    {
                        "x_data": "i",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "purchase_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(purchase_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, and display in asc by the Y.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and list by the Y-axis in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, and display in asc by the Y.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and display y-axis in ascending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, rank y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result.",
            "Return the number of the completion date for all the tests that have \"Fail\" result.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "death",
            "ship"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "plot scatter on what are the death and injury situations caused by the ship with tonnage 't'?",
            "Visualize a scatter chart on what are the death and injury situations caused by the ship with tonnage 't'?",
            "What are the death and injury situations caused by the ship with tonnage 't'. Visualize by scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 8,
                        "y_data": 0
                    },
                    {
                        "x_data": 3,
                        "y_data": 0
                    },
                    {
                        "x_data": 25,
                        "y_data": 0
                    },
                    {
                        "x_data": 2,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 4,
                        "y_data": 5
                    },
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 29,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 14,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "killed"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "injured"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Return a bar chart on how many faculty members does each building have? List the result with the name of the building, order from high to low by the x axis.",
            "Show me a bar chart for how many faculty members does each building have? List the result with the name of the building, show from high to low by the x-axis.",
            "Show all the buildings along with the number of faculty members the buildings have Plot them as bar chart, and show from high to low by the x-axis.",
            "How many faculty members does each building have? List the result with the name of the building Visualize by bar chart, and order from high to low by the x axis.",
            "Show all the buildings along with the number of faculty members the buildings have with a bar chart, display in descending by the bar.",
            "How many faculty members does each building have? List the result with the name of the building with a bar chart, show from high to low by the x-axis.",
            "Bar graph to show the total number from different building, and I want to list bar in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NEB",
                        "y_data": 18
                    },
                    {
                        "x_data": "Krieger",
                        "y_data": 20
                    },
                    {
                        "x_data": "Barton",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, show the frequency of the first name using a bar chart.",
            "For employees with first names that end with the letter m, groups and count the first name to visualize a bar graph."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(FIRST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give me a bar chart showing the number of products supplied by supplier id 3 for different product type code, and could you list by the bar from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "patient"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the number of the names of patients who have made appointments, and I want to display in desc by the y-axis please.",
            "A bar chart for listing the number of the names of patients who have made appointments, I want to sort by the y axis from high to low.",
            "What are names of patients who made an appointment, and count them by a bar chart, I want to rank by the Y in desc.",
            "What are the number of names of patients who made an appointment?, I want to sort by the y axis from high to low.",
            "List the names of patients who have made appointments, and count them by a bar chart, and I want to rank by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John Smith",
                        "y_data": 3
                    },
                    {
                        "x_data": "Dennis Doe",
                        "y_data": 3
                    },
                    {
                        "x_data": "Grace Ritchie",
                        "y_data": 2
                    },
                    {
                        "x_data": "Random J. Patient",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, and display in ascending by the bars.",
            "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, order x axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bucella",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Syrah"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "A stacked bar graph shows the total number of captains categorize by ranks of different classes, and display in desc by the x-axis.",
            "What is the total number of captains in each rank and class? Let class as X-axis, and categorize by rank with a stacked bar chart, show names from high to low order please.",
            "Stacked bar of class and the number of class colored by Rank, could you list in descending by the Class?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 1,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Commander, junior captain"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 1,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 0,
                        "classify": "Lieutenant"
                    },
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 2,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 0,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 0,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 1,
                        "classify": "Midshipman"
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 1,
                        "classify": "Midshipman"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the first name and GPA of every student that has a GPA lower than average Show bar chart, and rank by the total number of stu gpa in ascending.",
            "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students Plot them as bar chart, could you list in ascending by the y-axis?",
            "Draw a bar chart for what is the first name and GPA of every student that has a GPA lower than average?, display in asc by the Y-axis.",
            "Give me a histogram for what is the first name and GPA of every student that has a GPA lower than average?, and list in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Juliette",
                        "y_data": 2
                    },
                    {
                        "x_data": "William",
                        "y_data": 2
                    },
                    {
                        "x_data": "John",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(STU_GPA)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight",
            "Aircraft"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "What is the name of each aircraft and how many flights does each one complete Show bar chart, sort by the y-axis from low to high please.",
            "Display a bar chart for what is the name of each aircraft and how many flights does each one complete?, and sort in ascending by the y-axis.",
            "Visualize a bar chart for what is the name of each aircraft and how many flights does each one complete?, and display by the Y-axis in ascending.",
            "Show aircraft names and number of flights for each aircraft, and display by the Y-axis in ascending.",
            "Show aircraft names and number of flights for each aircraft with a bar chart, and sort in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Boeing 737-800",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boeing 747-400",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boeing 757-300",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embraer ERJ-145",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piper Archer III",
                        "y_data": 1
                    },
                    {
                        "x_data": "SAAB 340",
                        "y_data": 1
                    },
                    {
                        "x_data": "Airbus A340-300",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lockheed L1011",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "List the names of aircrafts and the number of times it won matches Plot them as bar chart, and list x axis in asc order please.",
            "For each aircraft that has won an award, what is its name and how many time has it won Plot them as bar chart, I want to rank from low to high by the X.",
            "List the names of aircrafts and the number of times it won matches by a bar chart, could you list in asc by the Aircraft?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Compare the total number of locations in each location using a bar graph.",
            "Bar chart x axis location y axis how many location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show me a bar chart for what is the total credit does each department offer?",
            "Return a histogram on what is the total credit does each department offer?",
            "What is the total credit does each department offer.",
            "Display a bar chart for how many credits does the department offer?",
            "how many credits does the department offer?",
            "How many credits does the department offer. Show bar chart.",
            "Bar chart of sum crs credit from each dept code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 6
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(crs_credit)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the employee's last name and their manager's id using a bar chart.",
            "Show me manager_id by last name in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 0
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 102
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 101
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 100
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 100
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 100
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 100
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 101
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "residents"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "What are the number of the distinct move in dates of the residents?",
            "What are the distinct move in dates of the residents, and count them by a bar chart",
            "A bar chart for what are the number of the distinct move in dates of the residents?",
            "Give me a bar chart for the number of date moved in of each date moved in"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, list y axis in descending order.",
            "A bar chart for what are the number of the countries of mountains with height bigger than 5000?, and show from high to low by the total number.",
            "What are the number of the countries of mountains with height bigger than 5000?, and show from high to low by the total number.",
            "Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, list in desc by the y axis please.",
            "Return the number of the countries of the mountains that have a height larger than 5000, and could you show y axis in desc order?",
            "What are the countries of mountains with height bigger than 5000, and count them by a bar chart, display by the y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tanzania",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 1
                    },
                    {
                        "x_data": "DR Congo Uganda",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents are created in each day? Bin the document date by year interval with a line chart, could you sort x-axis in ascending order please?",
            "Show the number of documents created in each day and bin document date by year interval with a line chart, and I want to sort from low to high by the Document_Date.",
            "How many documents are created in each day? Bin the document date by year interval with a line chart, and list x axis in ascending order.",
            "Show the number of documents created in each day and bin document date by year interval with a line chart, and I want to rank Document_Date in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 4
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 3
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "representative"
        ],
        "db_id": "election_representative",
        "nl_queries": [
            "How many representatives in each party? Visualize with a pie chart.",
            "Create a pie chart showing the number of party across party."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Visualize a bar chart for showing the total number of different product type codes, and order from low to high by the total number.",
            "What is the total number of different types of codes of products?, and show Y-axis in ascending order.",
            "Compare the total number of different product type codes, show Y-axis in ascending order.",
            "Bar chart x axis product type code y axis the number of product type code, and rank by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Books",
                        "y_data": 4
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Food",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Draw a bar chart about the distribution of date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by weekday.",
            "Return a bar chart about the distribution of date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by weekday.",
            "Find date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by weekday, and visualize them by a bar chart.",
            "Give me the comparison about the average of monthly_rental over the date_address_from , and group by attribute other_details and bin date_address_from by weekday by a bar chart.",
            "A bar chart shows the distribution of date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1036,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 644,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1007,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 853,
                        "classify": "house"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 865,
                        "classify": "house"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 756,
                        "classify": "house"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 954.6666666666666,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 933.5,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 852.6666666666666,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between employee_id and salary .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a scatter chart about the correlation between employee_id and salary .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a scatter chart shows the correlation between employee_id and salary .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, what is the relationship between employee_id and salary ?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a scatter chart about the correlation between employee_id and salary ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 24000
                    },
                    {
                        "x_data": 101,
                        "y_data": 17000
                    },
                    {
                        "x_data": 102,
                        "y_data": 17000
                    },
                    {
                        "x_data": 103,
                        "y_data": 9000
                    },
                    {
                        "x_data": 104,
                        "y_data": 6000
                    },
                    {
                        "x_data": 105,
                        "y_data": 4800
                    },
                    {
                        "x_data": 106,
                        "y_data": 4800
                    },
                    {
                        "x_data": 107,
                        "y_data": 4200
                    },
                    {
                        "x_data": 108,
                        "y_data": 12000
                    },
                    {
                        "x_data": 109,
                        "y_data": 9000
                    },
                    {
                        "x_data": 110,
                        "y_data": 8200
                    },
                    {
                        "x_data": 111,
                        "y_data": 7700
                    },
                    {
                        "x_data": 112,
                        "y_data": 7800
                    },
                    {
                        "x_data": 113,
                        "y_data": 6900
                    },
                    {
                        "x_data": 114,
                        "y_data": 11000
                    },
                    {
                        "x_data": 115,
                        "y_data": 3100
                    },
                    {
                        "x_data": 116,
                        "y_data": 2900
                    },
                    {
                        "x_data": 117,
                        "y_data": 2800
                    },
                    {
                        "x_data": 118,
                        "y_data": 2600
                    },
                    {
                        "x_data": 119,
                        "y_data": 2500
                    },
                    {
                        "x_data": 120,
                        "y_data": 8000
                    },
                    {
                        "x_data": 121,
                        "y_data": 8200
                    },
                    {
                        "x_data": 122,
                        "y_data": 7900
                    },
                    {
                        "x_data": 123,
                        "y_data": 6500
                    },
                    {
                        "x_data": 124,
                        "y_data": 5800
                    },
                    {
                        "x_data": 125,
                        "y_data": 3200
                    },
                    {
                        "x_data": 126,
                        "y_data": 2700
                    },
                    {
                        "x_data": 127,
                        "y_data": 2400
                    },
                    {
                        "x_data": 128,
                        "y_data": 2200
                    },
                    {
                        "x_data": 129,
                        "y_data": 3300
                    },
                    {
                        "x_data": 130,
                        "y_data": 2800
                    },
                    {
                        "x_data": 131,
                        "y_data": 2500
                    },
                    {
                        "x_data": 132,
                        "y_data": 2100
                    },
                    {
                        "x_data": 133,
                        "y_data": 3300
                    },
                    {
                        "x_data": 134,
                        "y_data": 2900
                    },
                    {
                        "x_data": 135,
                        "y_data": 2400
                    },
                    {
                        "x_data": 136,
                        "y_data": 2200
                    },
                    {
                        "x_data": 137,
                        "y_data": 3600
                    },
                    {
                        "x_data": 138,
                        "y_data": 3200
                    },
                    {
                        "x_data": 139,
                        "y_data": 2700
                    },
                    {
                        "x_data": 140,
                        "y_data": 2500
                    },
                    {
                        "x_data": 141,
                        "y_data": 3500
                    },
                    {
                        "x_data": 142,
                        "y_data": 3100
                    },
                    {
                        "x_data": 143,
                        "y_data": 2600
                    },
                    {
                        "x_data": 144,
                        "y_data": 2500
                    },
                    {
                        "x_data": 145,
                        "y_data": 14000
                    },
                    {
                        "x_data": 146,
                        "y_data": 13500
                    },
                    {
                        "x_data": 147,
                        "y_data": 12000
                    },
                    {
                        "x_data": 148,
                        "y_data": 11000
                    },
                    {
                        "x_data": 149,
                        "y_data": 10500
                    },
                    {
                        "x_data": 150,
                        "y_data": 10000
                    },
                    {
                        "x_data": 151,
                        "y_data": 9500
                    },
                    {
                        "x_data": 152,
                        "y_data": 9000
                    },
                    {
                        "x_data": 153,
                        "y_data": 8000
                    },
                    {
                        "x_data": 154,
                        "y_data": 7500
                    },
                    {
                        "x_data": 155,
                        "y_data": 7000
                    },
                    {
                        "x_data": 156,
                        "y_data": 10000
                    },
                    {
                        "x_data": 157,
                        "y_data": 9500
                    },
                    {
                        "x_data": 158,
                        "y_data": 9000
                    },
                    {
                        "x_data": 159,
                        "y_data": 8000
                    },
                    {
                        "x_data": 160,
                        "y_data": 7500
                    },
                    {
                        "x_data": 161,
                        "y_data": 7000
                    },
                    {
                        "x_data": 162,
                        "y_data": 10500
                    },
                    {
                        "x_data": 163,
                        "y_data": 9500
                    },
                    {
                        "x_data": 164,
                        "y_data": 7200
                    },
                    {
                        "x_data": 165,
                        "y_data": 6800
                    },
                    {
                        "x_data": 166,
                        "y_data": 6400
                    },
                    {
                        "x_data": 167,
                        "y_data": 6200
                    },
                    {
                        "x_data": 168,
                        "y_data": 11500
                    },
                    {
                        "x_data": 169,
                        "y_data": 10000
                    },
                    {
                        "x_data": 170,
                        "y_data": 9600
                    },
                    {
                        "x_data": 171,
                        "y_data": 7400
                    },
                    {
                        "x_data": 172,
                        "y_data": 7300
                    },
                    {
                        "x_data": 173,
                        "y_data": 6100
                    },
                    {
                        "x_data": 174,
                        "y_data": 11000
                    },
                    {
                        "x_data": 175,
                        "y_data": 8800
                    },
                    {
                        "x_data": 176,
                        "y_data": 8600
                    },
                    {
                        "x_data": 177,
                        "y_data": 8400
                    },
                    {
                        "x_data": 178,
                        "y_data": 7000
                    },
                    {
                        "x_data": 179,
                        "y_data": 6200
                    },
                    {
                        "x_data": 180,
                        "y_data": 3200
                    },
                    {
                        "x_data": 181,
                        "y_data": 3100
                    },
                    {
                        "x_data": 182,
                        "y_data": 2500
                    },
                    {
                        "x_data": 183,
                        "y_data": 2800
                    },
                    {
                        "x_data": 184,
                        "y_data": 4200
                    },
                    {
                        "x_data": 185,
                        "y_data": 4100
                    },
                    {
                        "x_data": 186,
                        "y_data": 3400
                    },
                    {
                        "x_data": 187,
                        "y_data": 3000
                    },
                    {
                        "x_data": 188,
                        "y_data": 3800
                    },
                    {
                        "x_data": 189,
                        "y_data": 3600
                    },
                    {
                        "x_data": 190,
                        "y_data": 2900
                    },
                    {
                        "x_data": 191,
                        "y_data": 2500
                    },
                    {
                        "x_data": 192,
                        "y_data": 4000
                    },
                    {
                        "x_data": 193,
                        "y_data": 3900
                    },
                    {
                        "x_data": 194,
                        "y_data": 3200
                    },
                    {
                        "x_data": 195,
                        "y_data": 2800
                    },
                    {
                        "x_data": 196,
                        "y_data": 3100
                    },
                    {
                        "x_data": 197,
                        "y_data": 3000
                    },
                    {
                        "x_data": 198,
                        "y_data": 2600
                    },
                    {
                        "x_data": 199,
                        "y_data": 2600
                    },
                    {
                        "x_data": 200,
                        "y_data": 4400
                    },
                    {
                        "x_data": 201,
                        "y_data": 13000
                    },
                    {
                        "x_data": 202,
                        "y_data": 6000
                    },
                    {
                        "x_data": 204,
                        "y_data": 10000
                    },
                    {
                        "x_data": 205,
                        "y_data": 12000
                    },
                    {
                        "x_data": 206,
                        "y_data": 8300
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the maximum age for each type of pet. Visualize them as a pie chart.",
            "What is the maximum age for each pet type? Give me the result in a pie chart.",
            "Visualize a pie chart about the maximum age for each pet type.",
            "I want to know the proportion of max pet age for each pettype."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 3
                    },
                    {
                        "x_data": "dog",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(pet_age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the highest price of product, grouped by product type? Show a pie chart.",
            "Give the maximum product price for each product type in a pie chart.",
            "Give me a pie to show maximal product price from different product type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time, and could you order by the Y from low to high?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, could you rank y axis from low to high order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, could you sort from low to high by the how many hire date?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart, and could you rank in ascending by the y-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, and list y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions",
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the card type codes and the number of transactions with a bar chart, show by the X in descending.",
            "Show the card type codes and the number of transactions Visualize by bar chart, and rank by the X-axis in descending please.",
            "what are the different card types, and how many transactions have been made with each?, and sort X from high to low order.",
            "Return a bar chart on what are the different card types, and how many transactions have been made with each?, and list in desc by the X.",
            "What are the different card types, and how many transactions have been made with each Visualize by bar chart, and display by the card_type_code in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    },
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Give me a bar chart, that group by location and count them.",
            "Create a bar chart showing how many location across location"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Heineken Music Hall Amsterdam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam, Heineken Music Hall Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "RAI Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Various locations",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Give me a bar chart to show how many dates with a max temperature greater than or equal to 80 for each day, and list by the the number of date from low to high.",
            "For those dates with a max temperature greater than or equal to 80, I want to know the number of days on the day of the week interval using a bar chart, I want to display by the Y in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 51
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 60
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 63
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 66
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 81
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 89
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 92
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a bar chart for employee_id of each last name, and sort by the total number in descending.",
            "Just show the employee's last name and their employee id using a bar chart, list in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 200
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 145
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 121
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 114
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 108
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 103
                    },
                    {
                        "x_data": "King",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a line chart about the change of department_id over hire_date , I want to order by the X-axis in asc.",
            "For those employees who was hired before 2002-06-21, show me the trend about department_id over hire_date with a line chart, sort from low to high by the X-axis.",
            "For those employees who was hired before 2002-06-21, show me about the change of department_id over hire_date in a line chart, show by the HIRE_DATE from low to high please.",
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of department_id over hire_date , I want to order in ascending by the x-axis.",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of department_id over hire_date , show by the HIRE_DATE from low to high please.",
            "For those employees who was hired before 2002-06-21, give me the trend about department_id over hire_date , order x axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 10
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Tell me how many cinemas open for each year in a bar chart, and display by the the number of openning year from high to low.",
            "Bar chart of how many openning year from each openning year, and display by the the number of openning year from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Openning_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart, and sort by the Y from low to high.",
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart, and display y axis in asc order.",
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course, and sort Y-axis in asc order please.",
            "Find the number of the the date of enrollment of the \"Spanish\" course, and list in asc by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nov",
                        "y_data": 0
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 0
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dec",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Show the different headquarters and number of companies at each headquarter with a bar chart.",
            "Show the different headquarters and number of companies at each headquarter.",
            "Bar chart x axis headquarters y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 4
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Give me the times and numbers of all trains that go to Chennai, ordered by time with a bar chart.",
            "Give me the times and numbers of all trains that go to Chennai, ordered by time. Show bar chart.",
            "Visualize a bar graph about the times and numbers of all trains that go to Chennai, ordered by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "17:15",
                        "y_data": 16724
                    },
                    {
                        "x_data": "4:49",
                        "y_data": 16128
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "train_number"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "For each submission, group its acceptance result and count them Visualize them in a bar chart, rank from high to low by the x axis.",
            "Group by the result and count them by a bar chart, could you list by the x-axis in descending?",
            "Bar graph to show how many result from different result, could you rank by the names from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rejected",
                        "y_data": 4
                    },
                    {
                        "x_data": "Accepted",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart, list x-axis from high to low order please.",
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, and display X in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "World History",
                        "y_data": 4
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 3
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 3
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 4
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 3
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 4
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 3
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "enroll"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many students taking a course who received an A or C? Group by students' first name with a bar chart, and show by the how many stu fname in asc please.",
            "Find the number of students who took some course and got A or C and group by first name in a bar chart, and I want to show by the how many stu fname in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?",
            "What are the number of the names of all races held between 2009 and 2011?",
            "What are the number of the names of races held between 2009 and 2011?",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Australian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bahrain Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Belgian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brazilian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "British Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Canadian Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chinese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "European Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "German Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hungarian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Indian Grand Prix",
                        "y_data": 1
                    },
                    {
                        "x_data": "Italian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Japanese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Korean Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Malaysian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monaco Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Singapore Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spanish Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Turkish Grand Prix",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of manager_id over hire_date .",
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of manager_id over hire_date .",
            "For those employees who was hired before 2002-06-21, for manager_id, hire_date, visualize the trend.",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of manager_id over hire_date",
            "For those employees who was hired before 2002-06-21, show me the trend about manager_id over hire_date with a line chart.",
            "For those employees who was hired before 2002-06-21, give me the trend about manager_id over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates with a maximum temperature higher than 85?",
            "A line chart for giveing me the number of the dates when the max temperature was higher than 85.",
            "Give me the dates when the max temperature was higher than 85, and count them by a line chart",
            "A line chart for what are the number of the dates with a maximum temperature higher than 85?",
            "What are the dates with a maximum temperature higher than 85, and count them by a line chart",
            "Give me the number of the dates when the max temperature was higher than 85."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-08-30",
                        "y_data": 3
                    },
                    {
                        "x_data": "2013-09-06",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-09-07",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-09-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-09-09",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-09-19",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-04-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-04-29",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-04-30",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-01",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-12",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-05-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-05-15",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-06-09",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-06-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-06-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-06-18",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-06-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-06-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-07-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-24",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-07-25",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-07-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-07-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-08-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-09-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-09-10",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-09-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-10-02",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-03",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-10-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-10-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-04-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-04-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-05-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-05-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-08",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-06-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-06-25",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-06-30",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-07-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-07-19",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-07-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-07-27",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-07-28",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-07-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-08-16",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-08-17",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015-08-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-08-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-08-28",
                        "y_data": 4
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "How many departments are built in each year? Group by creation time in a line chart.",
            "I want to see trend of the number of creation by creation"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Creation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "What is the average age of singers for each country? Visualize with a bar chart, show X-axis in ascending order.",
            "Show the average of age from each country, and show from low to high by the X please.",
            "Show the average age of singers for each country with a bar chart, and order in asc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 34.5
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 52
                    },
                    {
                        "x_data": "United States",
                        "y_data": 32
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between price and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between price and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, show me about the correlation between price and revenue , and group by attribute headquarter in a scatter chart.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and revenue , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 180,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 90,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 180,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 150,
                        "y_data": 200,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": 270,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 66,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 150,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 120,
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 5,
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 240,
                        "y_data": 130,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": 240,
                        "y_data": 120,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(roomName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor",
            "visit"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Give me a scatter chart to show the id and age for visitors who visited some museums more than once, and group by name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 27,
                        "classify": "Arjen Robben"
                    },
                    {
                        "x_data": 5,
                        "y_data": 36,
                        "classify": "Fernando Gago"
                    },
                    {
                        "x_data": 6,
                        "y_data": 25,
                        "classify": "Rafael van der Vaart"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart, and show y-axis from low to high order.",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval, and list in ascending by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6
                    },
                    {
                        "x_data": "2016",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Calculate the number of actors in each duration of actors using a bar chart, and I want to list by the total number in ascending.",
            "Group and count the durations for each actor with a bar graph, order in asc by the total number.",
            "Bar chart x axis duration y axis how many duration, display by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1985\u20131992, 1993, 2004\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1987\u20131991, 1996\u20132009, 2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988, 1992\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988\u20132008, 2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1993\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1995, 1996\u2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994\u2014",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Duration",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Duration)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, draw a bar chart about the distribution of name and manufacturer , display by the X from low to high.",
            "For those products with a price between 60 and 120, a bar chart shows the distribution of name and manufacturer , display by the X from low to high.",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and manufacturer , and could you order in ascending by the x-axis?",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and manufacturer , I want to list in ascending by the bars.",
            "For those products with a price between 60 and 120, give me the comparison about manufacturer over the name , and rank x axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Give me a bar chart that group and count names of technicians with a series of machines they are assigned to repair, order in asc by the y axis please.",
            "What are the names of technicians with the machine series that they repair? Show me how many machines for each technician's name, order y-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Allergy_Type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "List the first name of the students who do not have any food type allergy and count them in a bar chart, and order in ascending by the x-axis.",
            "What is the first name of each student who is not allergic to any type of food? Count them in a bar chart, and list x-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 5
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and manager_id , and could you display by the x-axis in descending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and manager_id , and visualize them by a bar chart, display in desc by the LAST_NAME please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name by a bar chart, and could you order in descending by the X?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name , could you sort by the LAST_NAME in desc?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and manager_id , display in desc by the LAST_NAME please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mavris",
                        "y_data": 101
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 100
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 149
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 205
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 201
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give the maximum product price for each product type in a pie chart.",
            "What is the highest price of product, grouped by product type? Show a pie chart.",
            "Compute the total maximal product price across product type code as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer",
            "concert"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "What are the names of the singers who performed in a concert in 2014, and count them by a bar chart, list from high to low by the the number of name.",
            "A bar chart for what are the number of the names of the singers who performed in a concert in 2014?, and order from high to low by the total number.",
            "List all singer names in concerts in year 2014, and count them by a bar chart, list from high to low by the the number of name.",
            "What are the number of the names of the singers who performed in a concert in 2014?, could you show the number of name in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Justin Brown",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 1
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Nizinik",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me about the correlation between Height and Weight in a scatter chart.",
            "Draw a scatter chart about the correlation between Height and Weight .",
            "Visualize the relationship between Height and Weight .",
            "What is the relationship between Height and Weight ?",
            "A scatter chart shows the correlation between Height and Weight .",
            "Plot a scatter chart, height by weight."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 188,
                        "y_data": 83
                    },
                    {
                        "x_data": 197,
                        "y_data": 85
                    },
                    {
                        "x_data": 200,
                        "y_data": 94
                    },
                    {
                        "x_data": 202,
                        "y_data": 92
                    },
                    {
                        "x_data": 195,
                        "y_data": 90
                    },
                    {
                        "x_data": 196,
                        "y_data": 88
                    },
                    {
                        "x_data": 193,
                        "y_data": 89
                    },
                    {
                        "x_data": 194,
                        "y_data": 88
                    },
                    {
                        "x_data": 196,
                        "y_data": 82
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Height"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "Activity",
            "Faculty_participates_in"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Display a bar chart for how many faculty members participate in each activity? Return the activity names and the number of faculty members, and sort in ascending by the x-axis.",
            "Show all the activity names and the number of faculty involved in each activity Show bar chart, display by the bar in asc.",
            "How many faculty members participate in each activity? Return the activity names and the number of faculty members Show bar chart, list in ascending by the x-axis.",
            "Show all the activity names and the number of faculty involved in each activity in a bar chart, and I want to list bars in ascending order.",
            "How many faculty members participate in each activity? Return the activity names and the number of faculty members by a bar chart, rank by the activity_name in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baseball",
                        "y_data": 1
                    },
                    {
                        "x_data": "Canasta",
                        "y_data": 3
                    },
                    {
                        "x_data": "Canoeing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Chess",
                        "y_data": 5
                    },
                    {
                        "x_data": "Crossword Puzzles",
                        "y_data": 7
                    },
                    {
                        "x_data": "Extreme Canasta",
                        "y_data": 3
                    },
                    {
                        "x_data": "Football",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kayaking",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mountain Climbing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Soccer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Spelunking",
                        "y_data": 2
                    },
                    {
                        "x_data": "Square Dancing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Volleyball",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "activity_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, and show in descending by the bar.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id, and could you show in desc by the names?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, display in descending by the JOB_ID.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, and could you show bar in descending order please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and could you show in desc by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, list x-axis in descending order.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart, and show X-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-25",
                        "y_data": 6
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the trend about the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, and sort by the X-axis in ascending.",
            "The trend about the the number of start from of different Is_full_time over the start from, list in asc by the x axis please.",
            "Draw a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, rank x axis in asc order.",
            "For the amount of Start_from, Start_from, visualize the trend, display by the Start_from in asc.",
            "Visualize a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, and show by the X-axis in asc.",
            "A line chart shows the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, display by the Start_from in asc.",
            "Return a line chart about the change of the amount of Start_from over Start_from , and group by attribute Is_full_time and bin start_from by time, and could you rank by the Start_from from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather",
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, I want to list in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brentwood",
                        "y_data": 3
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 4
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 10
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart.",
            "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home.",
            "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart.",
            "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home.",
            "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home.",
            "Show me the number of all home by all home in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(All_Home)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Bar chart of how many date of completion from each date of completion, and show total number in ascending order.",
            "List the number of completion students in each month and bin date of completion by month interval with a bar chart, sort Y-axis in asc order.",
            "How many completion students in each month? Return a bar chart binning date of completion by month interval, show total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "chip_model",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32, rank in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HTC Corporation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Huawei Technologies Co.Ltd.",
                        "y_data": 1
                    },
                    {
                        "x_data": "LG Electronics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute name in a bar chart, rank X in descending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart, and list X from high to low order please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name, I want to order by the X-axis in descending.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart, and list X from high to low order please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, display in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "What are the average star ratings of each movie title? Could you return me a bar chart?, and I want to show total number in asc order.",
            "Please tell me the average star ratings of each movie title using a bar chart, and display from low to high by the mean stars.",
            "Visualize the title and and the average star rating of the movie using a bar chart, display from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time.",
            "Return a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time.",
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time.",
            "Show me about the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time in a bar chart.",
            "A bar chart shows the distribution of Is_full_time and the sum of Shop_ID , and group by attribute Is_full_time.",
            "Bar chart of sum shop id from each is full time"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 10
                    },
                    {
                        "x_data": "T",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "I want to see trend of the number of creation by creation, and I want to list from low to high by the Creation.",
            "I want to see trend of the number of creation by creation, order from low to high by the X.",
            "How many departments are built in each year? Group by creation time in a line chart, and order by the x axis in asc.",
            "How many departments are built in each year? Group by creation time in a line chart, order from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Creation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, could you order by the Name from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 6
                    },
                    {
                        "x_data": "Gonzalo Higua\u00edn ",
                        "y_data": 8
                    },
                    {
                        "x_data": "Guti Midfielder",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Level_of_membership"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, could you show from high to low by the Y please?",
            "Show me a bar chart about the number of races held in each year after 2014, sort from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 20
                    },
                    {
                        "x_data": "2016",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Show the minimum of the rooms in different decor using a bar chart, show by the total number in desc please.",
            "Draw a bar chart of decor versus minimal baseprice, order by the total number in descending.",
            "What is the minimum price of the rooms for each different decor? Show me a bar chart!, sort in descending by the minimal baseprice.",
            "Please use a bar chart to show the minimum price of the rooms in a different decor, and display by the y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "traditional",
                        "y_data": 150
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 150
                    },
                    {
                        "x_data": "modern",
                        "y_data": 75
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of revenue , and group by attribute headquarter in a bar chart, list X from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter by a bar chart, and list by the X from high to low.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, list by the X from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter, and could you list in descending by the Headquarter?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, and display X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 60
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 150
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "How many services for each service type description? Use a bar chart to show it.",
            "Show the number of services for each service type description with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs for each size code? Return a bar chart, and could you sort x axis in descending order?",
            "List the number of dogs for each size code in a bar chart, and I want to show in descending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SML",
                        "y_data": 2
                    },
                    {
                        "x_data": "MED",
                        "y_data": 9
                    },
                    {
                        "x_data": "LGE",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "size_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(size_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show the names and ids of tourist attractions that are visited at least two times Visualize by bar chart, display by the Tourist_Attraction_ID in descending.",
            "Show the names and ids of tourist attractions that are visited at least two times with a bar chart, rank Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "parking",
                        "y_data": 9919
                    },
                    {
                        "x_data": "jungle cruise",
                        "y_data": 8698
                    },
                    {
                        "x_data": "exploration trial",
                        "y_data": 6852
                    },
                    {
                        "x_data": "fun games",
                        "y_data": 6523
                    },
                    {
                        "x_data": "US museum",
                        "y_data": 6476
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "game",
            "stadium",
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many players having an injury of 'Foot injury' or 'Knee problem' in each season? Draw a bar chart, and list y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 0
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                }
            }
        }
    },
    {
        "tables_used": [
            "workshop"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Return the number of venues of each workshop in a bar chart, could you rank by the total number in asc?",
            "Draw a bar chart that counts the number of venues of each workshop, could you rank by the total number in asc?",
            "A bar chart shows the venue for each workshop, and could you display Y from low to high order please?",
            "Show the number of venue from each venue, could you list by the Y-axis in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Istanbul Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "New Jersey USA",
                        "y_data": 1
                    },
                    {
                        "x_data": "London UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "New York USA",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show all calendar dates and bin by weekday in a bar chart.",
            "What are all the calendar dates? Show a bar chart binning calendar date by weekday.",
            "Bar chart x axis calendar date y axis the number of calendar date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Calendar_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Calendar_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Count the number of local authorities by the local authority, and order Y-axis from low to high order.",
            "A bar graph listing the local authorities and how many local authorities provided by all stations, order in ascending by the y-axis.",
            "Bar chart of how many local authority from each local authority, and order in ascending by the y-axis.",
            "Compare the number of the local authority by the local authority, and could you show by the total number in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brentwood",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 3
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Draw a pie chart for how many captains with younger than 50 are in each rank?",
            "Show me the proportion on how many captains with younger than 50 are in each rank?",
            "How many captains with younger than 50 are in each rank. Visualize by pie chart.",
            "Count the number of captains younger than 50 of each rank in a pie chart.",
            "Count the number of captains younger than 50 of each rank. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show me maximal stu gpa by dept code in a histogram, list bar from low to high order please.",
            "Find the max gpa of all students in each department with a bar chart, and I want to rank from low to high by the bars.",
            "What is the highest student GPA for every department? Return a bar chart, and list X in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3.15
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.27
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "All_documents",
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Return a bar chart showing the number of documents stored in each weekday, and list in asc by the Y please.",
            "How many documents are stored? Bin the store date by weekday in a bar chart, and order by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Stored",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Stored)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the first name and GPA of every student that has a GPA lower than average Show bar chart, and could you display by the y axis in desc?",
            "Give me a histogram for what is the first name and GPA of every student that has a GPA lower than average?, could you rank by the y-axis from high to low?",
            "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students Plot them as bar chart, show in descending by the y-axis.",
            "Draw a bar chart for what is the first name and GPA of every student that has a GPA lower than average?, could you rank by the y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 4
                    },
                    {
                        "x_data": "William",
                        "y_data": 2
                    },
                    {
                        "x_data": "Juliette",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(STU_GPA)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location, and list how many college location from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Minnesota",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ottawa",
                        "y_data": 2
                    },
                    {
                        "x_data": "St. Francis Xavier",
                        "y_data": 2
                    },
                    {
                        "x_data": "Western Ontario",
                        "y_data": 2
                    },
                    {
                        "x_data": "McGill",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "College_Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(College_Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, and sort bars from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart, and list by the x axis in descending please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter, and could you order by the bar in descending?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of price , and group by attribute headquarter, display in desc by the X please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, order by the Headquarter from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 240
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 240
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 162
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 150
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "What are the memories and carriers of phones, rank X-axis in descending order.",
            "A bar chart about what are the memories and carriers of phones?, and display by the bars from high to low.",
            "Plot total number of memory in g by grouped by carrier as a bar graph, could you rank by the x axis from high to low please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TMobile",
                        "y_data": 208
                    },
                    {
                        "x_data": "Sprint",
                        "y_data": 160
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Find the name and credit score of the customers who have some loans. Plot them as pie chart.",
            "Show me the proportion on what are the different names and credit scores of customers who have taken a loan?",
            "Display a pie chart for what are the different names and credit scores of customers who have taken a loan?",
            "Visualize a pie chart to show the credit scores of customers who have taken a loan by different names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mary",
                        "y_data": 30
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 210
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "credit_score"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cust_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "A bar chart listing the number of battle date.",
            "Bar chart of the number of date from each date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1235",
                        "y_data": 1
                    },
                    {
                        "x_data": "14 April 1205",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 January 1206",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 June 1208",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 September 1207",
                        "y_data": 1
                    },
                    {
                        "x_data": "February 1206",
                        "y_data": 1
                    },
                    {
                        "x_data": "June 1205",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Can you list the employee's last name and the corresponding department id using a bar chart?, and could you show by the y axis from high to low please?",
            "Draw a bar chart of last name versus department_id, could you display in descending by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 100
                    },
                    {
                        "x_data": "King",
                        "y_data": 90
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 80
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 60
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 50
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For each director, return the director's name together with the value of that rating and ignore movies whose director is NULL. Could you plot the result with a pie chart?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 3
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 4
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, I want to order by the total number in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "policies"
        ],
        "db_id": "insurance_and_eClaims",
        "nl_queries": [
            "Find the number of records of each policy type and its type code Visualize by bar chart, and could you display x-axis in desc order?",
            "Bar chart x axis policy type code y axis the total number, and display from high to low by the bar.",
            "For each policy type, return its type code and its count in the record Visualize by bar chart, and order from high to low by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Uniformed",
                        "y_data": 8
                    },
                    {
                        "x_data": "Normal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jurisdiction",
                        "y_data": 3
                    },
                    {
                        "x_data": "Deputy",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Policy_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What is the relationship between ACC_Percent and All_Games_Percent , and group by attribute All_Neutral?",
            "A scatter chart shows the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Neutral.",
            "Draw a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Neutral.",
            "Visualize the relationship between ACC_Percent and All_Games_Percent , and group by attribute All_Neutral.",
            "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Neutral.",
            "Show the relation between acc percent and all_games_percent for each All_Neutral using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.563,
                        "y_data": 0.6,
                        "classify": "3\u20133"
                    },
                    {
                        "x_data": 0.625,
                        "y_data": 0.706,
                        "classify": "4\u20133"
                    },
                    {
                        "x_data": 0.813,
                        "y_data": 0.8240000000000001,
                        "classify": "5\u20133"
                    },
                    {
                        "x_data": 0.875,
                        "y_data": 0.946,
                        "classify": "9\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a bar chart, rank x-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Plot salary by grouped by email as a bar graph, and show y-axis in descending order.",
            "Visualize a bar chart for simply displaying the email address of the employee and the corresponding salary, display in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SKING",
                        "y_data": 24000
                    },
                    {
                        "x_data": "JRUSSEL",
                        "y_data": 14000
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 13000
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 12000
                    },
                    {
                        "x_data": "NGREENBE",
                        "y_data": 12000
                    },
                    {
                        "x_data": "DRAPHEAL",
                        "y_data": 11000
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AHUNOLD",
                        "y_data": 9000
                    },
                    {
                        "x_data": "AFRIPP",
                        "y_data": 8200
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 6500
                    },
                    {
                        "x_data": "JWHALEN",
                        "y_data": 4400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the name of all trains, count the name and show them with a bar chart, could you rank in asc by the X please?",
            "Plot the number of name by grouped by name as a bar graph, and could you show Name in asc order?",
            "Visualize a bar chart, group by name and compute each group's total number, and display X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parasuram Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season , and rank in desc by the X.",
            "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and I want to show in descending by the ACC_Regular_Season.",
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, could you list in descending by the bar?",
            "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, I want to show in descending by the ACC_Regular_Season.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , and show X in desc order.",
            "Bar chart x axis acc regular season y axis acc_percent, and show X-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.625
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What is the average age for each gender of student? Return a bar chart, and show x-axis in desc order.",
            "Find the average age for students with different sex in a bar chart, rank x axis in descending order.",
            "Plot mean age by grouped by sex as a bar graph, and order in desc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each office in a stacked bar chart The x-axis is office name and group by course description, and display from low to high by the y axis please.",
            "How many courses for each office? Show me a stacked bar chart The x-axis is office name and group by course description, list by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BBG 208",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "roller_coaster"
        ],
        "db_id": "roller_coaster",
        "nl_queries": [
            "Show the names of countries and the average speed of roller coasters from each country with a bar chart.",
            "Show the names of countries and the average speed of roller coasters from each country. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austria",
                        "y_data": 58.66666666666666
                    },
                    {
                        "x_data": "Finland",
                        "y_data": 47.45
                    },
                    {
                        "x_data": "Sweden",
                        "y_data": 67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.Speed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and I want to sort by the Y-axis in desc.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of code , and group by attribute founder, I want to sort by the Y-axis in desc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, display total number of code from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, and show Y in descending order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, and show Y in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James",
                        "y_data": 28
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 23
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CUSTOMER",
            "INVOICE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "What are the invoice dates for customers with the first name Astrid and the last name Gruber, and count them by a bar chart, and list from high to low by the Y.",
            "A bar chart for what are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, and rank in descending by the how many invoicedate.",
            "What are the number of the invoice dates for customers with the first name Astrid and the last name Gruber?, could you sort y-axis in descending order?",
            "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber, and count them by a bar chart, and rank in descending by the how many invoicedate."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2012",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "InvoiceDate",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(InvoiceDate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between card id and customer id and group by card type code in a group scatter chart.",
            "Scatterplot of customer_id vs card id by card_type_code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 14,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 2,
                        "y_data": 9,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 4,
                        "y_data": 15,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 5,
                        "y_data": 13,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 7,
                        "y_data": 9,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 8,
                        "y_data": 12,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 13,
                        "y_data": 2,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 3,
                        "y_data": 6,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 6,
                        "y_data": 10,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 9,
                        "y_data": 3,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 10,
                        "y_data": 10,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 11,
                        "y_data": 8,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 12,
                        "y_data": 3,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 14,
                        "y_data": 5,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 15,
                        "y_data": 2,
                        "classify": "Debit"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "card_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, what is the relationship between commission_pct and department_id ?",
            "For those employees who was hired before 2002-06-21, show me about the correlation between commission_pct and department_id in a scatter chart.",
            "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between commission_pct and department_id .",
            "For those employees who was hired before 2002-06-21, return a scatter chart about the correlation between commission_pct and department_id .",
            "For those employees who was hired before 2002-06-21, visualize the relationship between commission_pct and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 60
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 30
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0.4,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 80
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 0
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 80
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 50
                    },
                    {
                        "x_data": 0,
                        "y_data": 10
                    },
                    {
                        "x_data": 0,
                        "y_data": 20
                    },
                    {
                        "x_data": 0,
                        "y_data": 20
                    },
                    {
                        "x_data": 0,
                        "y_data": 40
                    },
                    {
                        "x_data": 0,
                        "y_data": 70
                    },
                    {
                        "x_data": 0,
                        "y_data": 110
                    },
                    {
                        "x_data": 0,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 3
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 7
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Payment_Method_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "Show different publishers together with the number of publications they have Plot them as bar chart, show by the y axis from low to high.",
            "Show different publishers together with the number of publications they have in a bar chart, show total number from low to high order.",
            "Draw a bar chart of publisher versus the total number, and could you sort by the y-axis from low to high please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bertelsmann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Springer Nature",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomson Reuters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pearson",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wiley",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publisher",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of different nationalities of all ships? Give me a bar graph, and list in asc by the X please.",
            "Bar graph to show how many nationality from different nationality, and order Nationality in asc order.",
            "Show me the comparison of the total number of all ships' nationalities with a bar graph, and order Nationality in asc order.",
            "Return a bar chart showing the total number of ships' nationalities, and order Nationality in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United Kingdom",
                        "y_data": 5
                    },
                    {
                        "x_data": "United States",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "A bar chart showing the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each weekday, and list by the y-axis from low to high.",
            "Use a bar chart to show the number of start dates of all the apartment bookings made by guests with gender code \"Female\" for each weekday, order in asc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "club",
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "For all players, show the number of different club names they come from, and rank by the bars from low to high.",
            "For the names and the players of clubs, count the names by names in a bar chart, and order in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AIB",
                        "y_data": 2
                    },
                    {
                        "x_data": "ASC",
                        "y_data": 4
                    },
                    {
                        "x_data": "BK Slide",
                        "y_data": 6
                    },
                    {
                        "x_data": "HGS2",
                        "y_data": 2
                    },
                    {
                        "x_data": "IFG",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, and rank by the x axis in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the founder , and group by attribute founder, and rank in asc by the x-axis please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of manufacturer , and group by attribute founder in a bar chart, show by the bars from low to high please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, and I want to sort X-axis in asc order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of manufacturer , and group by attribute founder, and I want to display by the names from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "university"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type Visualize by bar chart, and order by the total number in desc.",
            "Show me a bar chart for what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, and show by the y axis in descending.",
            "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type Show bar chart, show total number of enrollment in descending order please.",
            "A bar chart about what are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?, order from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Public",
                        "y_data": 43092
                    },
                    {
                        "x_data": "Private/Methodist",
                        "y_data": 2100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Affiliation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Give me the comparison about the average of monthly_rental over the date_address_from , and group by attribute other_details and bin date_address_from by time.",
            "Visualize a bar chart about the distribution of date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by time.",
            "Return a bar chart about the distribution of date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by time.",
            "Give me the comparison about the average of monthly_rental over the date_address_from , and group by attribute other_details and bin date_address_from by time by a bar chart.",
            "Draw a bar chart about the distribution of date_address_from and the average of monthly_rental , and group by attribute other_details and bin date_address_from by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 264,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 291.125,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 296.17857142857144,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 264.6666666666667,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, could you rank by the x-axis in ascending?",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, could you list in ascending by the X-axis please?",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, and rank by the X in asc.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and sort X-axis from low to high order.",
            "For those employees who was hired before 2002-06-21, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, and could you show in ascending by the JOB_ID?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 101.5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "How many products are there for each manufacturer Visualize by bar chart, I want to show in desc by the y-axis.",
            "how many products are there for each manufacturer?, I want to list in desc by the the total number .",
            "Display a bar chart for how many products are there for each manufacturer?, could you show in descending by the Y-axis?",
            "Find the number of products for each manufacturer, showing the name of each company Show bar chart, and display from high to low by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 3
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Count the last year for a bar chart, could you list by the Y in asc?",
            "Count the last year of parties with theme \"Spring\" or \"Teqnology\" with a bar grpah, and I want to show in ascending by the the number of last year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2002",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Last_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Last_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, give me the comparison about manufacturer over the name , list in desc by the y-axis please.",
            "For those products with a price between 60 and 120, a bar chart shows the distribution of name and manufacturer , I want to rank in descending by the y axis.",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and manufacturer , show Y in descending order.",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and manufacturer , and sort in desc by the y-axis.",
            "For those products with a price between 60 and 120, draw a bar chart about the distribution of name and manufacturer , and I want to sort from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                }
            }
        }
    },
    {
        "tables_used": [
            "PRODUCTS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "For each distinct product name, show its average product price, and show by the the average of product price from low to high.",
            "Give me a bar chart for mean product price of each product name, show from low to high by the total number.",
            "Show me a bar chart for what are the different product names? What is the average product price for each of them?, and sort by the total number from low to high.",
            "A bar chart about what are the different product names? What is the average product price for each of them?, sort by the total number from low to high.",
            "What are the different product names? What is the average product price for each of them Show bar chart, could you list total number from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "dinning",
                        "y_data": 238704.33333333328
                    },
                    {
                        "x_data": "photo",
                        "y_data": 5102691.666666667
                    },
                    {
                        "x_data": "film",
                        "y_data": 11385515.333333336
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Product_Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Count the number of captains younger than 50 of each rank by a bar chart, and rank by the y axis in asc.",
            "Draw a bar chart for how many captains with younger than 50 are in each rank?, show by the Y-axis in asc.",
            "Count the number of captains younger than 50 of each rank, list by the y-axis in asc.",
            "Show me a bar chart for how many captains with younger than 50 are in each rank?, list by the y-axis in asc.",
            "How many captains with younger than 50 are in each rank, display y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "List the number of companies for each building in a bar chart, and show by the the number of name in descending.",
            "Return a bar chart showing the number of companies in each building, show in descending by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Punto Chapultepec",
                        "y_data": 4
                    },
                    {
                        "x_data": "Torre Mitikah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Corporativo BBVA Bancomer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Torre Reforma",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre New York Life",
                        "y_data": 1
                    },
                    {
                        "x_data": "Torre KOI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 3",
                        "y_data": 1
                    },
                    {
                        "x_data": "Residencial Vidalta Torre Altaire 2",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 90",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reforma 432",
                        "y_data": 1
                    },
                    {
                        "x_data": "LIU East",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute name by a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute name in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Find the number of matches happened in each year. Plot them as bar chart.",
            "Show me a bar chart for how many matches were played in each year?",
            "Return a histogram on how many matches were played in each year?",
            "How many matches were played in each year.",
            "Bar chart of the total number from each year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 158
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 108
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "screen_mode",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, order in ascending by the how many company name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by last name in a bar chart, sort in asc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adams",
                        "y_data": 2
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 1
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Price",
                        "y_data": 3
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "Show a bar chart about how many employees does each role have?, display x axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Proof Manager",
                        "y_data": 1
                    },
                    {
                        "x_data": "Photo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Manager",
                        "y_data": 1
                    },
                    {
                        "x_data": "Editor",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name, I want to display by the x axis in desc.",
            "For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart, and sort from high to low by the names.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart, and sort by the Name in descending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name, sort by the Name in descending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of price , and group by attribute name, I want to show from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses that have more than one prerequisites for each title with a bar chart, and sort from low to high by the X-axis.",
            "How many courses with more than one prerequisite for each title? Return a bar chart, could you list x axis in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 1
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents for different document name in a bar chart, and could you order by the y axis in ascending please?",
            "How many documents for different document name? Draw a bar chart, could you sort in ascending by the Y?",
            "Bar chart x axis document name y axis the number of document name, and sort by the how many document name in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book on USA files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chapter on private files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Deontae files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jevon Paper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Katheryn statement",
                        "y_data": 1
                    },
                    {
                        "x_data": "King Book",
                        "y_data": 1
                    },
                    {
                        "x_data": "Noel CV",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on Canadian files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on French files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on USA files",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trenton Presentation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winona Book",
                        "y_data": 1
                    },
                    {
                        "x_data": "Review on UK files",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, and order by the total number in ascending.",
            "Draw a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, and display in ascending by the Y.",
            "Show me about the distribution of Sex and the average of Height , and group by attribute Sex in a bar chart, and list in ascending by the Y.",
            "Give me the comparison about the average of Height over the Sex , and group by attribute Sex, I want to sort from low to high by the mean height.",
            "Return a bar chart about the distribution of Sex and the average of Height , and group by attribute Sex, and rank by the Y in ascending please.",
            "Draw a bar chart of sex versus mean height, and rank mean height in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 195.14285714285714
                    },
                    {
                        "x_data": "F",
                        "y_data": 197.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Height)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each building with a bar chart.",
            "How many courses are in the Psychology department in each building? Draw a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of salary over hire_date , could you sort by the x axis in asc please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about salary over hire_date with a line chart, and I want to order by the X in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of salary over hire_date , show by the x axis in ascending please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, for salary, hire_date, visualize the trend, list in ascending by the HIRE_DATE.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of salary over hire_date , and I want to order by the X in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of salary over hire_date , I want to order by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-03",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 13000
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 8300
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, and I want to order Y-axis in ascending order.",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, order by the the number of roomname in asc.",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, display Y-axis in ascending order.",
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, sort by the the number of roomname in ascending please.",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, list y axis in ascending order.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, and show Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(roomName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a bar chart, order in desc by the Y-axis please.",
            "Compare the lowest rating among all movies by each title using a histogram, and show from high to low by the stars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Show the number of train names in a bar chart, and sort in ascending by the x-axis.",
            "Compare all train names' total numbers, and show in asc by the names.",
            "Plot how many name by grouped by name as a bar graph, order in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parasuram Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "For each title, use a bar chart to show the number of films, and order by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and sort total number from low to high order.",
            "For those employees who did not have any job in the past, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, display y axis in asc order.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time, and list by the Y-axis from low to high.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and order Y-axis from low to high order please.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, and list by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 107.33333333333333
                    },
                    {
                        "x_data": "July",
                        "y_data": 129.75862068965517
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 160
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 190.2962962962963
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "status"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Draw a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, and show from low to high by the bar.",
            "What are the different ids and names of the stations that have had more than 12 bikes available Plot them as bar chart, display in asc by the x-axis please.",
            "What are the id and name of the stations that have ever had more than 12 bikes available? Plot them as a bar chart, list in ascending by the bar.",
            "Show me a bar chart for what are the different ids and names of the stations that have had more than 12 bikes available?, show by the x-axis from low to high.",
            "Draw a bar chart for showing the id and name of the stations that have ever had more than 12 bikes available, and sort bar in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5th at Howard",
                        "y_data": 57
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "Civic Center BART (7th at Market)",
                        "y_data": 72
                    },
                    {
                        "x_data": "Commercial at Montgomery",
                        "y_data": 45
                    },
                    {
                        "x_data": "Embarcadero at Vallejo",
                        "y_data": 48
                    },
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    },
                    {
                        "x_data": "Mechanics Plaza (Market at Battery)",
                        "y_data": 75
                    },
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    },
                    {
                        "x_data": "Yerba Buena Center of the Arts (3rd @ Howard)",
                        "y_data": 68
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Tell me how many cinemas open for each year in a bar chart, and list by the X from low to high.",
            "Bar chart of how many openning year from each openning year, I want to show names in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Openning_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "What is total number of show times per dat for each cinema Show bar chart, and could you rank in asc by the y axis?",
            "Display a bar chart for what is total number of show times per dat for each cinema?, and show show times per day in asc order please.",
            "Give me a histogram for what is total number of show times per dat for each cinema?, and show show times per day in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gortahile",
                        "y_data": 4
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 5
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.show_times_per_day)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain)"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, show how many class from low to high order please.",
            "Give me a bar chart showing the total number of ships' classes that do not have a captain, show from low to high by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GL",
                        "y_data": 1
                    },
                    {
                        "x_data": "KR",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Give me a bar chart that bins the year into day of the week interval, and return the average number of times the team Boston Red Stockings won in the postseasons, order from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 10
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 10
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 8.333333333333334
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart for finding the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", show in ascending by the Y.",
            "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\", and count them by a bar chart, and I want to order in asc by the total number.",
            "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and count them by a bar chart, I want to sort in ascending by the y axis.",
            "What are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?, and sort by the Y from low to high.",
            "A bar chart for what are the number of the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?, and order total number in asc order.",
            "Find the number of the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\", and could you list y axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_latest_logon",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_latest_logon)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Return a bar chart on how many students are older than 20 in each dorm?, list bar from low to high order.",
            "Find the number of students who is older than 20 in each dorm Plot them as bar chart, sort bars in asc order.",
            "How many students are older than 20 in each dorm Visualize by bar chart, sort bars in asc order.",
            "Give me a histogram for how many students are older than 20 in each dorm?, display by the names from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anonymous Donor Hall",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dorm-plex 2000",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fawlty Towers",
                        "y_data": 2
                    },
                    {
                        "x_data": "Smith Hall",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dorm_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "what is the average age for each dorm and what are the names of each dorm?, and show by the Y from high to low.",
            "Find the average age of students living in each dorm and the name of dorm Plot them as bar chart, I want to show by the y axis in descending.",
            "What is the average age for each dorm and what are the names of each dorm Plot them as bar chart, and I want to display by the y axis in descending.",
            "Visualize a bar chart for what is the average age for each dorm and what are the names of each dorm?, and could you show Y-axis from high to low order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Smith Hall",
                        "y_data": 20.166666666666668
                    },
                    {
                        "x_data": "Bud Jones Hall",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fawlty Towers",
                        "y_data": 19.777777777777782
                    },
                    {
                        "x_data": "Anonymous Donor Hall",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "Dorm-plex 2000",
                        "y_data": 19.6
                    },
                    {
                        "x_data": "University Hovels",
                        "y_data": 18
                    },
                    {
                        "x_data": "Grad Student Asylum",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dorm_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of start dates of all the apartment bookings made by guests with gender code \"Female\" for each year in a bar chart.",
            "What are the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each year? Plot a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 6
                    },
                    {
                        "x_data": "2017",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Please compare the number of names of parties using a bar chart, sort in desc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "What is the number of start dates for incidents with incident type code \"NOISE\"? Bin by year and return a bar chart, order Y-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_start",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_start)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "What is the number of the faculty members for each rank? Visualize in bar chart, and order in desc by the X.",
            "Show how many rank from each rank, and show x axis in descending order.",
            "Show the number of faculty members for each rank in a bar chart, list in desc by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Rank)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between Credits and Instructor .",
            "What is the relationship between Credits and Instructor ?",
            "Draw a scatter chart about the correlation between Credits and Instructor .",
            "Return a scatter chart about the correlation between Credits and Instructor .",
            "Show me about the correlation between Credits and Instructor in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 4230
                    },
                    {
                        "x_data": 1,
                        "y_data": 9826
                    },
                    {
                        "x_data": 1,
                        "y_data": 6191
                    },
                    {
                        "x_data": 1,
                        "y_data": 9011
                    },
                    {
                        "x_data": 2,
                        "y_data": 2881
                    },
                    {
                        "x_data": 3,
                        "y_data": 6112
                    },
                    {
                        "x_data": 3,
                        "y_data": 1193
                    },
                    {
                        "x_data": 3,
                        "y_data": 4230
                    },
                    {
                        "x_data": 3,
                        "y_data": 6112
                    },
                    {
                        "x_data": 3,
                        "y_data": 6112
                    },
                    {
                        "x_data": 3,
                        "y_data": 6112
                    },
                    {
                        "x_data": 3,
                        "y_data": 1121
                    },
                    {
                        "x_data": 3,
                        "y_data": 9826
                    },
                    {
                        "x_data": 3,
                        "y_data": 9172
                    },
                    {
                        "x_data": 3,
                        "y_data": 2192
                    },
                    {
                        "x_data": 3,
                        "y_data": 1148
                    },
                    {
                        "x_data": 3,
                        "y_data": 8918
                    },
                    {
                        "x_data": 3,
                        "y_data": 7712
                    },
                    {
                        "x_data": 3,
                        "y_data": 2192
                    },
                    {
                        "x_data": 3,
                        "y_data": 1148
                    },
                    {
                        "x_data": 3,
                        "y_data": 8918
                    },
                    {
                        "x_data": 3,
                        "y_data": 7723
                    },
                    {
                        "x_data": 3,
                        "y_data": 8114
                    },
                    {
                        "x_data": 3,
                        "y_data": 7712
                    },
                    {
                        "x_data": 3,
                        "y_data": 7792
                    },
                    {
                        "x_data": 3,
                        "y_data": 1121
                    },
                    {
                        "x_data": 3,
                        "y_data": 8423
                    },
                    {
                        "x_data": 3,
                        "y_data": 1121
                    },
                    {
                        "x_data": 3,
                        "y_data": 9823
                    },
                    {
                        "x_data": 3,
                        "y_data": 9823
                    },
                    {
                        "x_data": 3,
                        "y_data": 8791
                    },
                    {
                        "x_data": 3,
                        "y_data": 8791
                    },
                    {
                        "x_data": 3,
                        "y_data": 2738
                    },
                    {
                        "x_data": 3,
                        "y_data": 8102
                    },
                    {
                        "x_data": 3,
                        "y_data": 6182
                    },
                    {
                        "x_data": 3,
                        "y_data": 9823
                    },
                    {
                        "x_data": 3,
                        "y_data": 8772
                    },
                    {
                        "x_data": 3,
                        "y_data": 6541
                    },
                    {
                        "x_data": 3,
                        "y_data": 8122
                    },
                    {
                        "x_data": 3,
                        "y_data": 9922
                    },
                    {
                        "x_data": 3,
                        "y_data": 8723
                    },
                    {
                        "x_data": 3,
                        "y_data": 9210
                    },
                    {
                        "x_data": 3,
                        "y_data": 6191
                    },
                    {
                        "x_data": 3,
                        "y_data": 1823
                    },
                    {
                        "x_data": 3,
                        "y_data": 9824
                    },
                    {
                        "x_data": 3,
                        "y_data": 6925
                    },
                    {
                        "x_data": 3,
                        "y_data": 6191
                    },
                    {
                        "x_data": 3,
                        "y_data": 6191
                    },
                    {
                        "x_data": 3,
                        "y_data": 2119
                    },
                    {
                        "x_data": 3,
                        "y_data": 7231
                    },
                    {
                        "x_data": 3,
                        "y_data": 9514
                    },
                    {
                        "x_data": 3,
                        "y_data": 6330
                    },
                    {
                        "x_data": 3,
                        "y_data": 8722
                    },
                    {
                        "x_data": 3,
                        "y_data": 9379
                    },
                    {
                        "x_data": 3,
                        "y_data": 7134
                    },
                    {
                        "x_data": 3,
                        "y_data": 9514
                    },
                    {
                        "x_data": 3,
                        "y_data": 4432
                    },
                    {
                        "x_data": 3,
                        "y_data": 6910
                    },
                    {
                        "x_data": 3,
                        "y_data": 4432
                    },
                    {
                        "x_data": 3,
                        "y_data": 6910
                    },
                    {
                        "x_data": 3,
                        "y_data": 8989
                    },
                    {
                        "x_data": 3,
                        "y_data": 4432
                    },
                    {
                        "x_data": 3,
                        "y_data": 4432
                    },
                    {
                        "x_data": 3,
                        "y_data": 5718
                    },
                    {
                        "x_data": 4,
                        "y_data": 2311
                    },
                    {
                        "x_data": 4,
                        "y_data": 8772
                    },
                    {
                        "x_data": 4,
                        "y_data": 6541
                    },
                    {
                        "x_data": 4,
                        "y_data": 8102
                    },
                    {
                        "x_data": 4,
                        "y_data": 2881
                    },
                    {
                        "x_data": 4,
                        "y_data": 1177
                    },
                    {
                        "x_data": 4,
                        "y_data": 2738
                    },
                    {
                        "x_data": 4,
                        "y_data": 8772
                    },
                    {
                        "x_data": 4,
                        "y_data": 9210
                    },
                    {
                        "x_data": 4,
                        "y_data": 8118
                    },
                    {
                        "x_data": 4,
                        "y_data": 9210
                    },
                    {
                        "x_data": 4,
                        "y_data": 9011
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Credits"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Instructor"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of price , and group by attribute headquarter, I want to show total number from high to low order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart, and could you display total number in desc order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter, show by the y-axis in desc.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, I want to show total number from high to low order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter, list by the y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 240
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 240
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 162
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 150
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 150
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Orders",
            "ORDER_ITEMS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "What are the number of the actual delivery dates of orders with quantity 1?",
            "A line chart for what are the number of the actual delivery dates of orders with quantity 1?",
            "What are the actual delivery dates of orders with quantity 1, and count them by a line chart",
            "List the number of the actual delivery date for all the orders with quantity 1",
            "List the actual delivery date for all the orders with quantity , and count them by a line chart",
            "A line chart for listing the number of the actual delivery date for all the orders with quantity 1"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1990~1992",
                        "y_data": 2
                    },
                    {
                        "x_data": "1993~1995",
                        "y_data": 2
                    },
                    {
                        "x_data": "1996~1998",
                        "y_data": 1
                    },
                    {
                        "x_data": "1999~2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "2002~2004",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005~2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008~2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2011~2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014~2015",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Actual_Delivery_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Actual_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Bar chart of how many building from each building, sort bar from high to low order.",
            "How many departments for each building? Draw a bar chart, and sort by the X in descending.",
            "List the number of departments for each building with a bar chart, and could you rank bar from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wrigley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 3
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rauch",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palmer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mercer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linderman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Candlestick",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brodhead",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "race"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "What are the different classes of races, and how many races correspond to each Show bar chart, and could you sort by the X-axis from low to high?",
            "Show the race class and number of races in each class, and could you display bar from low to high order please?",
            "Give me a bar chart for the total number of each class, and order x axis in asc order.",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and list x axis in asc order please.",
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, order x axis in asc order.",
            "Show the race class and number of races in each class with a bar chart, and list x axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DP/GT",
                        "y_data": 5
                    },
                    {
                        "x_data": "GT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, I want to display from low to high by the mean salary.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, display by the total number from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the hire_date bin hire_date by weekday, and I want to order in asc by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of salary bin hire_date by weekday, and visualize them by a bar chart, I want to order in asc by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by weekday, and display by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 5685.714285714285
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5746.666666666667
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6286.666666666667
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6320
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6493.333333333333
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6762.5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 7775
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Bar chart x axis left office y axis the number of left office, order by the total number in descending.",
            "How many parties of the time they leave office, binning the leave office into WEEKDAY interval, display by the how many left office in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Left_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Left_office)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "What is the total number of different types of codes of products?",
            "Compare the total number of different product type codes.",
            "Visualize a bar chart for showing the total number of different product type codes.",
            "Bar chart x axis product type code y axis the number of product type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Books",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Food",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking start dates of the apartments with type code \"Duplex\" in each year? Return a bar chart, show y axis in ascending order.",
            "Return the number of booking start date for the apartments that have type code \"Duplex\" for each year in a bar chart, and could you rank y axis in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 1
                    },
                    {
                        "x_data": "2016",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted in a bar chart, rank from low to high by the y-axis.",
            "Return a bar chart on how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, and could you order by the Y in asc please?",
            "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted Plot them as bar chart, show the total number in ascending order.",
            "Give me a histogram for how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, could you order in ascending by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christophe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cyrus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oren",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rodger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Berneice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Edmond",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kadin",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each year? Return a bar chart, show by the how many booking start date from low to high.",
            "Find the number of booking start date for the apartments that have more than two bedrooms for each year with a bar chart, list how many booking start date from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6
                    },
                    {
                        "x_data": "2016",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Just list the name and price of its most expensive product in a bar chart.",
            "For each manufacturer, what are the names and prices of their most expensive product?",
            "Show the product name and price of its most expensive product using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 180
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the booking status code and the corresponding number of bookings by a pie chart.",
            "Show the booking status code and the corresponding number of bookings. Show a pie chart.",
            "Pie chart. how many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "Draw a pie chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings.",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings in a pie chart.",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings. Show a pie chart.",
            "Give me a pie to show the total number from different booking status code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Confirmed",
                        "y_data": 7
                    },
                    {
                        "x_data": "Provisional",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_status_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Bar chart of school_id from each all games, I want to list x-axis in descending order.",
            "Give me the comparison about School_ID over the All_Games by a bar chart, could you rank by the X from high to low?",
            "Return a bar chart about the distribution of All_Games and School_ID , and order by the X in descending please.",
            "Find All_Games and School_ID , and visualize them by a bar chart, could you list by the bars in desc?",
            "A bar chart shows the distribution of All_Games and School_ID , and could you list by the bars in desc?",
            "Draw a bar chart about the distribution of All_Games and School_ID , order bar in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 4
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, order y-axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 4
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "chip_model",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compute the total number of chips of different company names for all the phones that were launched in year 2002 or have RAM size greater than 32, I want to order by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "LG Electronics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Huawei Technologies Co.Ltd.",
                        "y_data": 1
                    },
                    {
                        "x_data": "HTC Corporation",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Create a bar chart showing the total number across premises type, could you sort by the x axis from low to high?",
            "Show each premise type and the number of premises in that type Visualize by bar chart, and could you show premises_type in ascending order?",
            "Show each premise type and the number of premises in that type with a bar chart, and could you order X in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Office",
                        "y_data": 7
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 4
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "",
            "Plot the total number by grouped by industry as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 8
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 7
                    },
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Telecommunications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "What is the average age for each pet type? Show me a histogram, and sort in ascending by the Y.",
            "Please give me a bar chart to show the average age for each type of pet, and could you list by the Y-axis in asc?",
            "Return a bar graph to visualize the average age for each pet type, and rank by the y axis in ascending.",
            "Bar chart of the average of pet age from each pettype, display y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "dog",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "cat",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(pet_age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, and order in ascending by the bars.",
            "List the number of items by the details of the organization that owns it using a bar chart, rank in ascending by the organization_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 10
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please return me a bar chart show what are the total smallest rating of different movie title?, order from high to low by the names.",
            "Visualize the total smallest rating of different movie title using a bar chart, rank by the x-axis in desc.",
            "Visualize the title and their total smallest ratings of the movie using a bar chart, show bar in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 5
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of bookings for different guests and group by guest first name in a bar chart, and list total number in descending order.",
            "How many bookings for different guests? Show me a bar chart grouping by guest first name, could you rank in descending by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rebeca",
                        "y_data": 4
                    },
                    {
                        "x_data": "Lo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Keon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tamia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mozell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louvenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juvenal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Else",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "guest_first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(guest_first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees, and could you order Y in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PT",
                        "y_data": 2
                    },
                    {
                        "x_data": "ED",
                        "y_data": 2
                    },
                    {
                        "x_data": "PR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "company_1",
        "nl_queries": [
            "Find the number of employees of each gender whose salary is lower than 50000. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 3
                    },
                    {
                        "x_data": "M",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students. Plot them as bar chart.",
            "Give me a histogram for what is the first name and GPA of every student that has a GPA lower than average?",
            "Draw a bar chart for what is the first name and GPA of every student that has a GPA lower than average?",
            "What is the first name and GPA of every student that has a GPA lower than average. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 4
                    },
                    {
                        "x_data": "Juliette",
                        "y_data": 2
                    },
                    {
                        "x_data": "William",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(STU_GPA)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "How many total amounts of payments by each method code? You can give me a bar chart, and order x-axis in ascending order.",
            "Please use a bar chart to show the total amount of payment by each payment method code, and rank by the Payment_Method_Code in ascending.",
            "Bar chart of sum amount payment from each payment method code, rank by the Payment_Method_Code in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 177130
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 232825
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 2531865
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 794713
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "How many delegates in each committee? Return a bar chart, and display by the y-axis in descending.",
            "Show the number of delegates in each committee with a bar chart, and display in descending by the y axis.",
            "Show how many committee from each committee, I want to sort in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Appropriations",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ways and Means",
                        "y_data": 1
                    },
                    {
                        "x_data": "Health and Government Operations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters (Vice-Chair)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Economic Matters",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Committee",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Committee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Return the number of the lot details of lots that belong to investors with details \"l\"?",
            "A pie chart for returning the number of the lot details of lots that belong to investors with details \"l\"?",
            "Return the lot details of lots that belong to investors with details \"l\", and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "bank",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "What are the names of the different bank branches, and what are their total loan amounts Show bar chart, I want to display Y in descending order.",
            "Return a bar chart on what are the names of the different bank branches, and what are their total loan amounts?, I want to list in descending by the sum amount.",
            "Find the total amount of loans offered by each bank branch, and sort in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "broadway",
                        "y_data": 5000
                    },
                    {
                        "x_data": "downtown",
                        "y_data": 3000
                    },
                    {
                        "x_data": "morningside",
                        "y_data": 2050
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "circuits"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?, order in ascending by the total number.",
            "What are the ids and locations of all circuits in France or Belgium Show bar chart, and order in asc by the Y.",
            "Find the id and location of circuits that belong to France or Belgium Plot them as bar chart, and could you display circuitId in ascending order?",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?, order in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Magny Cours",
                        "y_data": 8
                    },
                    {
                        "x_data": "Spa",
                        "y_data": 13
                    },
                    {
                        "x_data": "Le Castellet",
                        "y_data": 34
                    },
                    {
                        "x_data": "Heusden-Zolder",
                        "y_data": 40
                    },
                    {
                        "x_data": "Dijon",
                        "y_data": 41
                    },
                    {
                        "x_data": "Brussels",
                        "y_data": 50
                    },
                    {
                        "x_data": "Clermont-Ferrand",
                        "y_data": 51
                    },
                    {
                        "x_data": "Rouen",
                        "y_data": 53
                    },
                    {
                        "x_data": "Le Mans",
                        "y_data": 54
                    },
                    {
                        "x_data": "Reims",
                        "y_data": 55
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "circuitId"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, and order by the y axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart, and order by the y axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, list by the Y in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, show by the Y-axis from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, I want to list from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 753
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, I want to rank in asc by the y axis please.",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, show by the City_Population in ascending.",
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, I want to rank in asc by the y axis please.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, display by the City_Population from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chiniot District",
                        "y_data": 219254
                    },
                    {
                        "x_data": "Kasur District",
                        "y_data": 314617
                    },
                    {
                        "x_data": "Gujrat District",
                        "y_data": 328512
                    },
                    {
                        "x_data": "Jhang District",
                        "y_data": 365198
                    },
                    {
                        "x_data": "Dera Ghazi Khan District",
                        "y_data": 464742
                    },
                    {
                        "x_data": "Bahawalpur District",
                        "y_data": 530438
                    },
                    {
                        "x_data": "Gujranwala District",
                        "y_data": 1526168
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "City_Population"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What is the relationship between Team_ID and School_ID , and group by attribute ACC_Regular_Season?",
            "Draw a scatter chart about the correlation between Team_ID and School_ID , and group by attribute ACC_Regular_Season.",
            "Return a scatter chart about the correlation between Team_ID and School_ID , and group by attribute ACC_Regular_Season.",
            "Visualize a scatter chart about the correlation between Team_ID and School_ID , and group by attribute ACC_Regular_Season.",
            "Show me about the correlation between Team_ID and School_ID , and group by attribute ACC_Regular_Season in a scatter chart.",
            "Show the relation between team id and school_id for each ACC_Regular_Season using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 4,
                        "classify": "10\u20136"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "13\u20133"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 5,
                        "classify": "9\u20137"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show total number of shop id from each start from, and I want to show by the y axis from high to low.",
            "Draw a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday, display y axis from high to low order.",
            "Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday, and order y-axis from high to low order.",
            "Find Start_from and the sum of Shop_ID bin start_from by weekday, and visualize them by a bar chart, could you rank in desc by the total number?",
            "Visualize a bar chart about the distribution of Start_from and the sum of Shop_ID bin start_from by weekday, and sort Y in descending order.",
            "Give me the comparison about the sum of Shop_ID over the Start_from bin start_from by weekday by a bar chart, and list from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 11
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ALBUM",
            "TRACK"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "A scatter chart showing the album ids and the number of tracks for each album.",
            "What are the names and ids of the different albums, and how many tracks are on each? Return a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 10
                    },
                    {
                        "x_data": 2,
                        "y_data": 1
                    },
                    {
                        "x_data": 3,
                        "y_data": 3
                    },
                    {
                        "x_data": 4,
                        "y_data": 8
                    },
                    {
                        "x_data": 5,
                        "y_data": 15
                    },
                    {
                        "x_data": 6,
                        "y_data": 13
                    },
                    {
                        "x_data": 7,
                        "y_data": 12
                    },
                    {
                        "x_data": 8,
                        "y_data": 14
                    },
                    {
                        "x_data": 9,
                        "y_data": 8
                    },
                    {
                        "x_data": 10,
                        "y_data": 14
                    },
                    {
                        "x_data": 11,
                        "y_data": 12
                    },
                    {
                        "x_data": 12,
                        "y_data": 12
                    },
                    {
                        "x_data": 13,
                        "y_data": 8
                    },
                    {
                        "x_data": 14,
                        "y_data": 13
                    },
                    {
                        "x_data": 15,
                        "y_data": 5
                    },
                    {
                        "x_data": 16,
                        "y_data": 7
                    },
                    {
                        "x_data": 17,
                        "y_data": 10
                    },
                    {
                        "x_data": 18,
                        "y_data": 17
                    },
                    {
                        "x_data": 19,
                        "y_data": 11
                    },
                    {
                        "x_data": 20,
                        "y_data": 11
                    },
                    {
                        "x_data": 21,
                        "y_data": 18
                    },
                    {
                        "x_data": 22,
                        "y_data": 3
                    },
                    {
                        "x_data": 23,
                        "y_data": 34
                    },
                    {
                        "x_data": 24,
                        "y_data": 23
                    },
                    {
                        "x_data": 25,
                        "y_data": 13
                    },
                    {
                        "x_data": 26,
                        "y_data": 17
                    },
                    {
                        "x_data": 27,
                        "y_data": 14
                    },
                    {
                        "x_data": 28,
                        "y_data": 10
                    },
                    {
                        "x_data": 29,
                        "y_data": 14
                    },
                    {
                        "x_data": 30,
                        "y_data": 14
                    },
                    {
                        "x_data": 31,
                        "y_data": 9
                    },
                    {
                        "x_data": 32,
                        "y_data": 14
                    },
                    {
                        "x_data": 33,
                        "y_data": 17
                    },
                    {
                        "x_data": 34,
                        "y_data": 17
                    },
                    {
                        "x_data": 35,
                        "y_data": 11
                    },
                    {
                        "x_data": 36,
                        "y_data": 17
                    },
                    {
                        "x_data": 37,
                        "y_data": 20
                    },
                    {
                        "x_data": 38,
                        "y_data": 12
                    },
                    {
                        "x_data": 39,
                        "y_data": 21
                    },
                    {
                        "x_data": 40,
                        "y_data": 12
                    },
                    {
                        "x_data": 41,
                        "y_data": 14
                    },
                    {
                        "x_data": 42,
                        "y_data": 14
                    },
                    {
                        "x_data": 43,
                        "y_data": 7
                    },
                    {
                        "x_data": 44,
                        "y_data": 6
                    },
                    {
                        "x_data": 45,
                        "y_data": 14
                    },
                    {
                        "x_data": 46,
                        "y_data": 13
                    },
                    {
                        "x_data": 47,
                        "y_data": 14
                    },
                    {
                        "x_data": 48,
                        "y_data": 13
                    },
                    {
                        "x_data": 49,
                        "y_data": 10
                    },
                    {
                        "x_data": 50,
                        "y_data": 4
                    },
                    {
                        "x_data": 51,
                        "y_data": 22
                    },
                    {
                        "x_data": 52,
                        "y_data": 15
                    },
                    {
                        "x_data": 53,
                        "y_data": 14
                    },
                    {
                        "x_data": 54,
                        "y_data": 20
                    },
                    {
                        "x_data": 55,
                        "y_data": 20
                    },
                    {
                        "x_data": 56,
                        "y_data": 15
                    },
                    {
                        "x_data": 57,
                        "y_data": 15
                    },
                    {
                        "x_data": 58,
                        "y_data": 9
                    },
                    {
                        "x_data": 59,
                        "y_data": 7
                    },
                    {
                        "x_data": 60,
                        "y_data": 7
                    },
                    {
                        "x_data": 61,
                        "y_data": 11
                    },
                    {
                        "x_data": 62,
                        "y_data": 7
                    },
                    {
                        "x_data": 63,
                        "y_data": 12
                    },
                    {
                        "x_data": 64,
                        "y_data": 9
                    },
                    {
                        "x_data": 65,
                        "y_data": 9
                    },
                    {
                        "x_data": 66,
                        "y_data": 10
                    },
                    {
                        "x_data": 67,
                        "y_data": 16
                    },
                    {
                        "x_data": 68,
                        "y_data": 9
                    },
                    {
                        "x_data": 69,
                        "y_data": 13
                    },
                    {
                        "x_data": 70,
                        "y_data": 13
                    },
                    {
                        "x_data": 71,
                        "y_data": 14
                    },
                    {
                        "x_data": 72,
                        "y_data": 18
                    },
                    {
                        "x_data": 73,
                        "y_data": 30
                    },
                    {
                        "x_data": 74,
                        "y_data": 12
                    },
                    {
                        "x_data": 75,
                        "y_data": 14
                    },
                    {
                        "x_data": 76,
                        "y_data": 15
                    },
                    {
                        "x_data": 77,
                        "y_data": 11
                    },
                    {
                        "x_data": 78,
                        "y_data": 14
                    },
                    {
                        "x_data": 79,
                        "y_data": 10
                    },
                    {
                        "x_data": 80,
                        "y_data": 10
                    },
                    {
                        "x_data": 81,
                        "y_data": 11
                    },
                    {
                        "x_data": 82,
                        "y_data": 13
                    },
                    {
                        "x_data": 83,
                        "y_data": 24
                    },
                    {
                        "x_data": 84,
                        "y_data": 16
                    },
                    {
                        "x_data": 85,
                        "y_data": 14
                    },
                    {
                        "x_data": 86,
                        "y_data": 15
                    },
                    {
                        "x_data": 87,
                        "y_data": 3
                    },
                    {
                        "x_data": 88,
                        "y_data": 12
                    },
                    {
                        "x_data": 89,
                        "y_data": 13
                    },
                    {
                        "x_data": 90,
                        "y_data": 12
                    },
                    {
                        "x_data": 91,
                        "y_data": 16
                    },
                    {
                        "x_data": 92,
                        "y_data": 14
                    },
                    {
                        "x_data": 93,
                        "y_data": 13
                    },
                    {
                        "x_data": 94,
                        "y_data": 11
                    },
                    {
                        "x_data": 95,
                        "y_data": 12
                    },
                    {
                        "x_data": 96,
                        "y_data": 11
                    },
                    {
                        "x_data": 97,
                        "y_data": 10
                    },
                    {
                        "x_data": 98,
                        "y_data": 11
                    },
                    {
                        "x_data": 99,
                        "y_data": 12
                    },
                    {
                        "x_data": 100,
                        "y_data": 9
                    },
                    {
                        "x_data": 101,
                        "y_data": 10
                    },
                    {
                        "x_data": 102,
                        "y_data": 18
                    },
                    {
                        "x_data": 103,
                        "y_data": 10
                    },
                    {
                        "x_data": 104,
                        "y_data": 10
                    },
                    {
                        "x_data": 105,
                        "y_data": 10
                    },
                    {
                        "x_data": 106,
                        "y_data": 9
                    },
                    {
                        "x_data": 107,
                        "y_data": 8
                    },
                    {
                        "x_data": 108,
                        "y_data": 10
                    },
                    {
                        "x_data": 109,
                        "y_data": 9
                    },
                    {
                        "x_data": 110,
                        "y_data": 8
                    },
                    {
                        "x_data": 111,
                        "y_data": 8
                    },
                    {
                        "x_data": 112,
                        "y_data": 8
                    },
                    {
                        "x_data": 113,
                        "y_data": 11
                    },
                    {
                        "x_data": 114,
                        "y_data": 8
                    },
                    {
                        "x_data": 115,
                        "y_data": 20
                    },
                    {
                        "x_data": 116,
                        "y_data": 10
                    },
                    {
                        "x_data": 117,
                        "y_data": 11
                    },
                    {
                        "x_data": 118,
                        "y_data": 11
                    },
                    {
                        "x_data": 119,
                        "y_data": 13
                    },
                    {
                        "x_data": 120,
                        "y_data": 17
                    },
                    {
                        "x_data": 121,
                        "y_data": 10
                    },
                    {
                        "x_data": 122,
                        "y_data": 14
                    },
                    {
                        "x_data": 123,
                        "y_data": 12
                    },
                    {
                        "x_data": 124,
                        "y_data": 14
                    },
                    {
                        "x_data": 125,
                        "y_data": 16
                    },
                    {
                        "x_data": 126,
                        "y_data": 15
                    },
                    {
                        "x_data": 127,
                        "y_data": 10
                    },
                    {
                        "x_data": 128,
                        "y_data": 8
                    },
                    {
                        "x_data": 129,
                        "y_data": 8
                    },
                    {
                        "x_data": 130,
                        "y_data": 7
                    },
                    {
                        "x_data": 131,
                        "y_data": 8
                    },
                    {
                        "x_data": 132,
                        "y_data": 9
                    },
                    {
                        "x_data": 133,
                        "y_data": 9
                    },
                    {
                        "x_data": 134,
                        "y_data": 10
                    },
                    {
                        "x_data": 135,
                        "y_data": 9
                    },
                    {
                        "x_data": 136,
                        "y_data": 7
                    },
                    {
                        "x_data": 137,
                        "y_data": 5
                    },
                    {
                        "x_data": 138,
                        "y_data": 4
                    },
                    {
                        "x_data": 139,
                        "y_data": 15
                    },
                    {
                        "x_data": 140,
                        "y_data": 16
                    },
                    {
                        "x_data": 141,
                        "y_data": 57
                    },
                    {
                        "x_data": 142,
                        "y_data": 14
                    },
                    {
                        "x_data": 143,
                        "y_data": 14
                    },
                    {
                        "x_data": 144,
                        "y_data": 10
                    },
                    {
                        "x_data": 145,
                        "y_data": 18
                    },
                    {
                        "x_data": 146,
                        "y_data": 18
                    },
                    {
                        "x_data": 147,
                        "y_data": 10
                    },
                    {
                        "x_data": 148,
                        "y_data": 12
                    },
                    {
                        "x_data": 149,
                        "y_data": 16
                    },
                    {
                        "x_data": 150,
                        "y_data": 10
                    },
                    {
                        "x_data": 151,
                        "y_data": 14
                    },
                    {
                        "x_data": 152,
                        "y_data": 8
                    },
                    {
                        "x_data": 153,
                        "y_data": 13
                    },
                    {
                        "x_data": 154,
                        "y_data": 8
                    },
                    {
                        "x_data": 155,
                        "y_data": 11
                    },
                    {
                        "x_data": 156,
                        "y_data": 9
                    },
                    {
                        "x_data": 157,
                        "y_data": 14
                    },
                    {
                        "x_data": 158,
                        "y_data": 13
                    },
                    {
                        "x_data": 159,
                        "y_data": 13
                    },
                    {
                        "x_data": 160,
                        "y_data": 15
                    },
                    {
                        "x_data": 161,
                        "y_data": 12
                    },
                    {
                        "x_data": 162,
                        "y_data": 17
                    },
                    {
                        "x_data": 163,
                        "y_data": 17
                    },
                    {
                        "x_data": 164,
                        "y_data": 12
                    },
                    {
                        "x_data": 165,
                        "y_data": 15
                    },
                    {
                        "x_data": 166,
                        "y_data": 14
                    },
                    {
                        "x_data": 167,
                        "y_data": 21
                    },
                    {
                        "x_data": 168,
                        "y_data": 12
                    },
                    {
                        "x_data": 169,
                        "y_data": 16
                    },
                    {
                        "x_data": 170,
                        "y_data": 1
                    },
                    {
                        "x_data": 171,
                        "y_data": 2
                    },
                    {
                        "x_data": 172,
                        "y_data": 1
                    },
                    {
                        "x_data": 173,
                        "y_data": 2
                    },
                    {
                        "x_data": 174,
                        "y_data": 14
                    },
                    {
                        "x_data": 175,
                        "y_data": 12
                    },
                    {
                        "x_data": 176,
                        "y_data": 14
                    },
                    {
                        "x_data": 177,
                        "y_data": 10
                    },
                    {
                        "x_data": 178,
                        "y_data": 16
                    },
                    {
                        "x_data": 179,
                        "y_data": 13
                    },
                    {
                        "x_data": 180,
                        "y_data": 15
                    },
                    {
                        "x_data": 181,
                        "y_data": 11
                    },
                    {
                        "x_data": 182,
                        "y_data": 12
                    },
                    {
                        "x_data": 183,
                        "y_data": 9
                    },
                    {
                        "x_data": 184,
                        "y_data": 16
                    },
                    {
                        "x_data": 185,
                        "y_data": 17
                    },
                    {
                        "x_data": 186,
                        "y_data": 11
                    },
                    {
                        "x_data": 187,
                        "y_data": 11
                    },
                    {
                        "x_data": 188,
                        "y_data": 11
                    },
                    {
                        "x_data": 189,
                        "y_data": 14
                    },
                    {
                        "x_data": 190,
                        "y_data": 16
                    },
                    {
                        "x_data": 191,
                        "y_data": 10
                    },
                    {
                        "x_data": 192,
                        "y_data": 14
                    },
                    {
                        "x_data": 193,
                        "y_data": 17
                    },
                    {
                        "x_data": 194,
                        "y_data": 16
                    },
                    {
                        "x_data": 195,
                        "y_data": 15
                    },
                    {
                        "x_data": 196,
                        "y_data": 14
                    },
                    {
                        "x_data": 197,
                        "y_data": 8
                    },
                    {
                        "x_data": 198,
                        "y_data": 6
                    },
                    {
                        "x_data": 199,
                        "y_data": 12
                    },
                    {
                        "x_data": 200,
                        "y_data": 11
                    },
                    {
                        "x_data": 201,
                        "y_data": 16
                    },
                    {
                        "x_data": 202,
                        "y_data": 18
                    },
                    {
                        "x_data": 203,
                        "y_data": 17
                    },
                    {
                        "x_data": 204,
                        "y_data": 9
                    },
                    {
                        "x_data": 205,
                        "y_data": 10
                    },
                    {
                        "x_data": 206,
                        "y_data": 12
                    },
                    {
                        "x_data": 207,
                        "y_data": 11
                    },
                    {
                        "x_data": 208,
                        "y_data": 7
                    },
                    {
                        "x_data": 209,
                        "y_data": 10
                    },
                    {
                        "x_data": 210,
                        "y_data": 9
                    },
                    {
                        "x_data": 211,
                        "y_data": 18
                    },
                    {
                        "x_data": 212,
                        "y_data": 12
                    },
                    {
                        "x_data": 213,
                        "y_data": 18
                    },
                    {
                        "x_data": 214,
                        "y_data": 11
                    },
                    {
                        "x_data": 215,
                        "y_data": 14
                    },
                    {
                        "x_data": 216,
                        "y_data": 12
                    },
                    {
                        "x_data": 217,
                        "y_data": 14
                    },
                    {
                        "x_data": 218,
                        "y_data": 15
                    },
                    {
                        "x_data": 219,
                        "y_data": 15
                    },
                    {
                        "x_data": 220,
                        "y_data": 11
                    },
                    {
                        "x_data": 221,
                        "y_data": 20
                    },
                    {
                        "x_data": 222,
                        "y_data": 15
                    },
                    {
                        "x_data": 223,
                        "y_data": 15
                    },
                    {
                        "x_data": 224,
                        "y_data": 22
                    },
                    {
                        "x_data": 225,
                        "y_data": 16
                    },
                    {
                        "x_data": 226,
                        "y_data": 1
                    },
                    {
                        "x_data": 227,
                        "y_data": 19
                    },
                    {
                        "x_data": 228,
                        "y_data": 23
                    },
                    {
                        "x_data": 229,
                        "y_data": 26
                    },
                    {
                        "x_data": 230,
                        "y_data": 25
                    },
                    {
                        "x_data": 231,
                        "y_data": 24
                    },
                    {
                        "x_data": 232,
                        "y_data": 12
                    },
                    {
                        "x_data": 233,
                        "y_data": 11
                    },
                    {
                        "x_data": 234,
                        "y_data": 15
                    },
                    {
                        "x_data": 235,
                        "y_data": 11
                    },
                    {
                        "x_data": 236,
                        "y_data": 12
                    },
                    {
                        "x_data": 237,
                        "y_data": 17
                    },
                    {
                        "x_data": 238,
                        "y_data": 14
                    },
                    {
                        "x_data": 239,
                        "y_data": 10
                    },
                    {
                        "x_data": 240,
                        "y_data": 10
                    },
                    {
                        "x_data": 241,
                        "y_data": 14
                    },
                    {
                        "x_data": 242,
                        "y_data": 12
                    },
                    {
                        "x_data": 243,
                        "y_data": 17
                    },
                    {
                        "x_data": 244,
                        "y_data": 11
                    },
                    {
                        "x_data": 245,
                        "y_data": 12
                    },
                    {
                        "x_data": 246,
                        "y_data": 13
                    },
                    {
                        "x_data": 247,
                        "y_data": 15
                    },
                    {
                        "x_data": 248,
                        "y_data": 19
                    },
                    {
                        "x_data": 249,
                        "y_data": 6
                    },
                    {
                        "x_data": 250,
                        "y_data": 22
                    },
                    {
                        "x_data": 251,
                        "y_data": 25
                    },
                    {
                        "x_data": 252,
                        "y_data": 1
                    },
                    {
                        "x_data": 253,
                        "y_data": 24
                    },
                    {
                        "x_data": 254,
                        "y_data": 1
                    },
                    {
                        "x_data": 255,
                        "y_data": 23
                    },
                    {
                        "x_data": 256,
                        "y_data": 12
                    },
                    {
                        "x_data": 257,
                        "y_data": 12
                    },
                    {
                        "x_data": 258,
                        "y_data": 19
                    },
                    {
                        "x_data": 259,
                        "y_data": 17
                    },
                    {
                        "x_data": 260,
                        "y_data": 1
                    },
                    {
                        "x_data": 261,
                        "y_data": 17
                    },
                    {
                        "x_data": 262,
                        "y_data": 2
                    },
                    {
                        "x_data": 263,
                        "y_data": 2
                    },
                    {
                        "x_data": 264,
                        "y_data": 2
                    },
                    {
                        "x_data": 265,
                        "y_data": 2
                    },
                    {
                        "x_data": 266,
                        "y_data": 1
                    },
                    {
                        "x_data": 267,
                        "y_data": 1
                    },
                    {
                        "x_data": 268,
                        "y_data": 1
                    },
                    {
                        "x_data": 269,
                        "y_data": 10
                    },
                    {
                        "x_data": 270,
                        "y_data": 14
                    },
                    {
                        "x_data": 271,
                        "y_data": 14
                    },
                    {
                        "x_data": 272,
                        "y_data": 1
                    },
                    {
                        "x_data": 273,
                        "y_data": 1
                    },
                    {
                        "x_data": 274,
                        "y_data": 1
                    },
                    {
                        "x_data": 275,
                        "y_data": 1
                    },
                    {
                        "x_data": 276,
                        "y_data": 1
                    },
                    {
                        "x_data": 277,
                        "y_data": 1
                    },
                    {
                        "x_data": 278,
                        "y_data": 1
                    },
                    {
                        "x_data": 279,
                        "y_data": 1
                    },
                    {
                        "x_data": 280,
                        "y_data": 2
                    },
                    {
                        "x_data": 281,
                        "y_data": 1
                    },
                    {
                        "x_data": 282,
                        "y_data": 1
                    },
                    {
                        "x_data": 283,
                        "y_data": 1
                    },
                    {
                        "x_data": 284,
                        "y_data": 1
                    },
                    {
                        "x_data": 285,
                        "y_data": 1
                    },
                    {
                        "x_data": 286,
                        "y_data": 1
                    },
                    {
                        "x_data": 287,
                        "y_data": 1
                    },
                    {
                        "x_data": 288,
                        "y_data": 1
                    },
                    {
                        "x_data": 289,
                        "y_data": 1
                    },
                    {
                        "x_data": 290,
                        "y_data": 1
                    },
                    {
                        "x_data": 291,
                        "y_data": 1
                    },
                    {
                        "x_data": 292,
                        "y_data": 1
                    },
                    {
                        "x_data": 293,
                        "y_data": 1
                    },
                    {
                        "x_data": 294,
                        "y_data": 1
                    },
                    {
                        "x_data": 295,
                        "y_data": 1
                    },
                    {
                        "x_data": 296,
                        "y_data": 1
                    },
                    {
                        "x_data": 297,
                        "y_data": 1
                    },
                    {
                        "x_data": 298,
                        "y_data": 1
                    },
                    {
                        "x_data": 299,
                        "y_data": 1
                    },
                    {
                        "x_data": 300,
                        "y_data": 1
                    },
                    {
                        "x_data": 301,
                        "y_data": 1
                    },
                    {
                        "x_data": 302,
                        "y_data": 1
                    },
                    {
                        "x_data": 303,
                        "y_data": 1
                    },
                    {
                        "x_data": 304,
                        "y_data": 1
                    },
                    {
                        "x_data": 305,
                        "y_data": 1
                    },
                    {
                        "x_data": 306,
                        "y_data": 1
                    },
                    {
                        "x_data": 307,
                        "y_data": 1
                    },
                    {
                        "x_data": 308,
                        "y_data": 1
                    },
                    {
                        "x_data": 309,
                        "y_data": 1
                    },
                    {
                        "x_data": 310,
                        "y_data": 1
                    },
                    {
                        "x_data": 311,
                        "y_data": 1
                    },
                    {
                        "x_data": 312,
                        "y_data": 1
                    },
                    {
                        "x_data": 313,
                        "y_data": 1
                    },
                    {
                        "x_data": 314,
                        "y_data": 2
                    },
                    {
                        "x_data": 315,
                        "y_data": 1
                    },
                    {
                        "x_data": 316,
                        "y_data": 1
                    },
                    {
                        "x_data": 317,
                        "y_data": 1
                    },
                    {
                        "x_data": 318,
                        "y_data": 1
                    },
                    {
                        "x_data": 319,
                        "y_data": 1
                    },
                    {
                        "x_data": 320,
                        "y_data": 1
                    },
                    {
                        "x_data": 321,
                        "y_data": 12
                    },
                    {
                        "x_data": 322,
                        "y_data": 11
                    },
                    {
                        "x_data": 323,
                        "y_data": 1
                    },
                    {
                        "x_data": 324,
                        "y_data": 1
                    },
                    {
                        "x_data": 325,
                        "y_data": 1
                    },
                    {
                        "x_data": 326,
                        "y_data": 1
                    },
                    {
                        "x_data": 327,
                        "y_data": 1
                    },
                    {
                        "x_data": 328,
                        "y_data": 1
                    },
                    {
                        "x_data": 329,
                        "y_data": 1
                    },
                    {
                        "x_data": 330,
                        "y_data": 1
                    },
                    {
                        "x_data": 331,
                        "y_data": 1
                    },
                    {
                        "x_data": 332,
                        "y_data": 1
                    },
                    {
                        "x_data": 333,
                        "y_data": 1
                    },
                    {
                        "x_data": 334,
                        "y_data": 1
                    },
                    {
                        "x_data": 335,
                        "y_data": 1
                    },
                    {
                        "x_data": 336,
                        "y_data": 1
                    },
                    {
                        "x_data": 337,
                        "y_data": 1
                    },
                    {
                        "x_data": 338,
                        "y_data": 1
                    },
                    {
                        "x_data": 339,
                        "y_data": 1
                    },
                    {
                        "x_data": 340,
                        "y_data": 1
                    },
                    {
                        "x_data": 341,
                        "y_data": 1
                    },
                    {
                        "x_data": 342,
                        "y_data": 1
                    },
                    {
                        "x_data": 343,
                        "y_data": 1
                    },
                    {
                        "x_data": 344,
                        "y_data": 1
                    },
                    {
                        "x_data": 345,
                        "y_data": 1
                    },
                    {
                        "x_data": 346,
                        "y_data": 1
                    },
                    {
                        "x_data": 347,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "AlbumId"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Display a bar chart for how many male and female assistant professors do we have?, list by the names in desc.",
            "How many male and female assistant professors do we have, display in descending by the X-axis.",
            "Show the number of male and female assistant professors with a bar chart, rank in desc by the X-axis.",
            "Show the number of male and female assistant professors Plot them as bar chart, display in descending by the X-axis.",
            "Visualize a bar chart for how many male and female assistant professors do we have?, and order by the bars in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 12
                    },
                    {
                        "x_data": "F",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games for each home team in a pie chart.",
            "Give me a pie to show how many home team from different home team."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team"
                }
            }
        }
    },
    {
        "tables_used": [
            "store"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Find all types of store and number of them. Visualize by bar chart.",
            "For each type of store, how many of them are there. Plot them as bar chart.",
            "Bar chart x axis type y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "City Mall",
                        "y_data": 2
                    },
                    {
                        "x_data": "Village Store",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Return a bar chart on how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, and I want to order in desc by the y axis.",
            "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted Plot them as bar chart, I want to order in desc by the y axis.",
            "Give me a histogram for how many engineers did each staff contact? List both the contact staff name and number of engineers contacted, list by the total number in descending.",
            "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted in a bar chart, sort by the the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kadin",
                        "y_data": 4
                    },
                    {
                        "x_data": "Edmond",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Berneice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rodger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oren",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cyrus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Christophe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many male students are there in each city? Show a bar chart, display bars from low to high order.",
            "Find the number of male students (with sex M) from each city in a bar chart, I want to sort from low to high by the city_code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 2
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 3
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 1
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and employee_id in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the email .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of email and employee_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and employee_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and employee_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KGRANT",
                        "y_data": 178
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 201
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 202
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 203
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 204
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 205
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments in each day with a line chart that groups by date of treatment, show in ascending by the X.",
            "List the number of treatments in each day with a line chart that groups by date of treatment, and rank X in ascending order please.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, and I want to sort by the date_of_treatment in ascending.",
            "How many treatments in each day? Return a line chart that groups by date of treatment, list in ascending by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-11",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "A bar chart showing the number of male and female faculty, rank y-axis in asc order.",
            "Create a bar chart showing sum count(*) across sex, order y-axis in ascending order.",
            "How many faculty members do we have for each gender? Draw a bar chart, display from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 7
                    },
                    {
                        "x_data": "M",
                        "y_data": 51
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments, display by the x-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marshall",
                        "y_data": 8
                    },
                    {
                        "x_data": "Eliza",
                        "y_data": 15
                    },
                    {
                        "x_data": "Cary",
                        "y_data": 14
                    },
                    {
                        "x_data": "Alicia",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "personal_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, a bar chart shows the distribution of name and code , rank names in descending order.",
            "For those products with a price between 60 and 120, draw a bar chart about the distribution of name and code , could you rank by the x-axis in desc please?",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and code , and could you rank by the x-axis in desc please?",
            "For those products with a price between 60 and 120, find name and code , and visualize them by a bar chart, list from high to low by the names.",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and code , list X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator",
            "accelerator_compatible_browser"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and could you rank by the bars in desc please?",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and I want to rank in desc by the bar.",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and show by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fasterfox",
                        "y_data": 3
                    },
                    {
                        "x_data": "CProxy",
                        "y_data": 2
                    },
                    {
                        "x_data": "CACHEbox",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the total number from each state province county, and could you display from low to high by the bar?",
            "Show each state and the number of addresses in each state Show bar chart, list from low to high by the names.",
            "Show each state and the number of addresses in each state by a bar chart, and could you display from low to high by the bar?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Colorado",
                        "y_data": 1
                    },
                    {
                        "x_data": "District of Columbia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Idaho",
                        "y_data": 1
                    },
                    {
                        "x_data": "Illinois",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kentucky",
                        "y_data": 2
                    },
                    {
                        "x_data": "Louisiana",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maryland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nevada",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oklahoma",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oregon",
                        "y_data": 1
                    },
                    {
                        "x_data": "SouthDakota",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vermont",
                        "y_data": 1
                    },
                    {
                        "x_data": "Virginia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state_province_county",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A bar chart showing the number of debates in each venue for those on the affirmative side."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of All_Games and All_Games_Percent .",
            "Return a bar chart about the distribution of All_Games and All_Games_Percent .",
            "Give me the comparison about All_Games_Percent over the All_Games by a bar chart.",
            "A bar chart shows the distribution of All_Games and All_Games_Percent .",
            "Give me the comparison about All_Games_Percent over the All_Games .",
            "Plot all_games_percent by grouped by all games as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the sum of price supplied by supplier id 3 for different product type code in a bar chart, and list by the x-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 1634
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "affiliated_with"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the physicians' employee ids together with their primary affiliation departments' ids with a scatter chart.",
            "List the physicians' employee ids together with their primary affiliation departments' ids. Plot them as scatter chart.",
            "Scatter. what are each physician's employee id and department id primarily affiliated.",
            "Visualize a scatter chart on what are each physician's employee id and department id primarily affiliated.",
            "What are each physician's employee id and department id primarily affiliated. Plot them as scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 2,
                        "y_data": 1
                    },
                    {
                        "x_data": 3,
                        "y_data": 2
                    },
                    {
                        "x_data": 4,
                        "y_data": 1
                    },
                    {
                        "x_data": 5,
                        "y_data": 1
                    },
                    {
                        "x_data": 6,
                        "y_data": 2
                    },
                    {
                        "x_data": 7,
                        "y_data": 2
                    },
                    {
                        "x_data": 8,
                        "y_data": 1
                    },
                    {
                        "x_data": 9,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Physician"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Department"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please give me a bar chart to compare the stars by directors, I want to display by the Y-axis from low to high.",
            "Show the stars of each director by a bar chart, and could you order stars in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of All_Neutral and ACC_Percent , rank in asc by the total number.",
            "Give me the comparison about ACC_Percent over the All_Neutral , order total number in asc order.",
            "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , rank y-axis in ascending order.",
            "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, sort by the Y-axis in asc.",
            "A bar chart shows the distribution of All_Neutral and ACC_Percent , and rank by the y-axis from low to high please.",
            "Bar chart of acc_percent from each all neutral, and show in ascending by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, list ACC_Road in ascending order please.",
            "Find ACC_Road and Team_ID , and group by attribute All_Home, and visualize them by a bar chart, list X in asc order.",
            "Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, and display in ascending by the x-axis.",
            "Stacked bar chart of team_id for with each All_Home in each acc road, and list X from low to high order please.",
            "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, could you list ACC_Road in asc order?",
            "Return a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, I want to list from low to high by the ACC_Road."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 3,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 0,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart, order by the Y from low to high.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and rank in asc by the Y.",
            "For those employees who was hired before 2002-06-21, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart, I want to list in asc by the total number.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday, I want to list in asc by the total number.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and could you list y axis in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 15
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 15
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 15
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 16
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is skill description and group by fault short name, display by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TV, Video",
                        "y_data": 4,
                        "classify": "MW"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 1,
                        "classify": "MW"
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 0,
                        "classify": "MW"
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 2,
                        "classify": "PW"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 2,
                        "classify": "PW"
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 3,
                        "classify": "PW"
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 1,
                        "classify": "TW"
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 2,
                        "classify": "TW"
                    },
                    {
                        "x_data": "Electrical",
                        "y_data": 0,
                        "classify": "TW"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" with a pie chart.",
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\". Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "investor_id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments",
            "locations",
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "What are all the employee ids and the names of the countries in which they work Visualize by bar chart, and show Y from high to low order.",
            "Give me a histogram for what are all the employee ids and the names of the countries in which they work?, order by the y axis from high to low.",
            "Find employee with ID and name of the country presently where (s)he is working Visualize by bar chart, could you list Y in descending order?",
            "Show me a bar chart for what are all the employee ids and the names of the countries in which they work?, show Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States of America",
                        "y_data": 9891
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 403
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 204
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 203
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the number of departments created in different year and bin creation time by year in a line chart, and sort Creation in ascending order please.",
            "Show me a line chart of how the number of creation change over the creation, display X-axis in asc order.",
            "Show the number of departments created in different year and bin creation time by year in a line chart, and I want to rank in ascending by the x-axis.",
            "Show me a line chart of how the number of creation change over the creation, sort by the X in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789~1809",
                        "y_data": 2
                    },
                    {
                        "x_data": "1810~1830",
                        "y_data": 0
                    },
                    {
                        "x_data": "1831~1851",
                        "y_data": 1
                    },
                    {
                        "x_data": "1852~1872",
                        "y_data": 1
                    },
                    {
                        "x_data": "1873~1893",
                        "y_data": 1
                    },
                    {
                        "x_data": "1894~1914",
                        "y_data": 2
                    },
                    {
                        "x_data": "1915~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1956",
                        "y_data": 2
                    },
                    {
                        "x_data": "1957~1977",
                        "y_data": 3
                    },
                    {
                        "x_data": "1978~1998",
                        "y_data": 2
                    },
                    {
                        "x_data": "1999~2002",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Creation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "A bar chart about what are the memories and carriers of phones?",
            "Give me a histogram for what are the memories and carriers of phones?",
            "What are the memories and carriers of phones. Show bar chart.",
            "Bar graph to show mean memory in g from different carrier"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 80
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 69.33333333333333
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Paragraphs",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show the relationship between document id and the number of paragraphs in each document with a scatter chart.",
            "What is the relationship between document id and the number of paragraphs in each document? Visualize with a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 1
                    },
                    {
                        "x_data": 80,
                        "y_data": 2
                    },
                    {
                        "x_data": 2394,
                        "y_data": 3
                    },
                    {
                        "x_data": 3830,
                        "y_data": 1
                    },
                    {
                        "x_data": 33930,
                        "y_data": 1
                    },
                    {
                        "x_data": 50123,
                        "y_data": 1
                    },
                    {
                        "x_data": 651512,
                        "y_data": 2
                    },
                    {
                        "x_data": 3540024,
                        "y_data": 1
                    },
                    {
                        "x_data": 16514113,
                        "y_data": 2
                    },
                    {
                        "x_data": 385906526,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Document_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Facilities",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "A bar chart for what are the number of the facility codes of the apartments with more than four bedrooms?",
            "Show the number of the facility codes of apartments with more than 4 bedrooms.",
            "Show the facility codes of apartments with more than 4 bedrooms, and count them by a bar chart",
            "A bar chart for showing the number of the facility codes of apartments with more than 4 bedrooms.",
            "What are the facility codes of the apartments with more than four bedrooms, and count them by a bar chart",
            "What are the number of the facility codes of the apartments with more than four bedrooms?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cable TV",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gym",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "facility_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(facility_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all customer status codes and the number of customers having each status code, could you rank bar in descending order?",
            "For each customer status code, how many customers are classified that way Visualize by bar chart, and I want to sort by the names from high to low.",
            "List all customer status codes and the number of customers having each status code in a bar chart, could you rank bar in descending order?",
            "Bar chart x axis customer status code y axis the total number, list by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Good Customer",
                        "y_data": 6
                    },
                    {
                        "x_data": "Bad Customer",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_status_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a bar chart, sort X in desc order.",
            "Show the number of courses each instructor taught in a bar chart, list EMP_FNAME in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of professors who is in office DRE 102 hired in each month with a bar chart, show y-axis in desc order.",
            "How many professors whose office is located in DRE 102 are hired in each month? Return a bar chart, and show y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "May",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "June",
                        "y_data": 0
                    },
                    {
                        "x_data": "July",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "List the number of documents for each receipt date and bin by weekday in a bar chart.",
            "Bar chart of the number of receipt date from each receipt date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "receipt_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(receipt_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Among all the claims, which claims have a claimed amount larger than the average? Please Bin date the claim was made into week day interval and count them to show a bar chart, and could you list in asc by the total number?",
            "For all the claims whose claimed amount is larger than the average, bin the claim date into day of week interval and count them for visualizing a bar chart, I want to list total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the average of price supplied by supplier id 3 for different product type code in a bar chart, I want to show X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 817
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "A pie chart showing the total number of each ship's nationality.",
            "Tell me the proportion of the nationality of all ships.",
            "What is the proportion of the nationality of all ships? Give me a pie chart.",
            "Create a pie chart showing the number of nationality across nationality."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United Kingdom",
                        "y_data": 5
                    },
                    {
                        "x_data": "United States",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find those themes and years for all exhibitions with ticket prices lower than 15, group by themes, count year, and the x-axis is Year.",
            "Find those themes and years for all exhibitions with ticket prices lower than 15, show me a stacked bar chart that groups by themes, counts year, and the x-axis is Year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Santa Claus and Rudolph the Red-Nosed Reindeer"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Summer"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Summer"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "A bar chart about what are the memories and carriers of phones?",
            "What are the memories and carriers of phones.",
            "Plot total number of memory in g by grouped by carrier as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 160
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 208
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Show the names of climbers and the heights of mountains they climb by a bar chart.",
            "Show the names of climbers and the heights of mountains they climb. Show bar chart.",
            "Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?",
            "A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?",
            "What are the names of climbers and the corresponding heights of the mountains that they climb. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Klaus Enders",
                        "y_data": 5895
                    },
                    {
                        "x_data": "Siegfried Schauz",
                        "y_data": 5895
                    },
                    {
                        "x_data": "Hans Luthringhauser",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Jean Claude Castella",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Horst Owesle",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Georg Auerbacher",
                        "y_data": 5148
                    },
                    {
                        "x_data": "Arseneus Butscher",
                        "y_data": 4985
                    },
                    {
                        "x_data": "Charlie Freedman",
                        "y_data": 4985
                    },
                    {
                        "x_data": "L Currie",
                        "y_data": 4890
                    },
                    {
                        "x_data": "Mick Horsepole",
                        "y_data": 4890
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111.25
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 116
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 148
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.76923076923077
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.55555555555554
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 135.44444444444446
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Give me a group line chart showing the number of documents in different ending date. The x-axis is ending date and group by location code.",
            "I want to see trend the number of date in locaton to over date in locaton to by Location_Code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "1976-06-15",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1987-11-05",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1995-01-01",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2012-07-03",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "2017-01-06",
                        "y_data": 0,
                        "classify": "x"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the total number of platforms of locations in each location in a bar chart, I want to show y axis in asc order please.",
            "Bar chart of total number of number of platforms from each location, and I want to show y axis in asc order please.",
            "Show all locations and the total number of platforms for all train stations in each location in a bar chart, and rank by the Y-axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "London",
                        "y_data": 140
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(number_of_platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Return a bar chart about the distribution of Name and Weight , and could you sort in desc by the Name please?",
            "Show me about the distribution of Name and Weight in a bar chart, could you display from high to low by the x axis?",
            "Show weight from each name, could you sort from high to low by the Name?",
            "A bar chart shows the distribution of Name and Weight , could you sort x axis from high to low order please?",
            "Draw a bar chart about the distribution of Name and Weight , and could you sort from high to low by the Name?",
            "Visualize a bar chart about the distribution of Name and Weight , could you sort from high to low by the Name?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vincent Montm\u00e9at",
                        "y_data": 88
                    },
                    {
                        "x_data": "St\u00e9phane Antiga",
                        "y_data": 94
                    },
                    {
                        "x_data": "Philippe Bar\u00e7a-Cysique",
                        "y_data": 88
                    },
                    {
                        "x_data": "Lo\u00efc De Kergret",
                        "y_data": 89
                    },
                    {
                        "x_data": "Laurent Capet",
                        "y_data": 92
                    },
                    {
                        "x_data": "Hubert Henno",
                        "y_data": 83
                    },
                    {
                        "x_data": "Guillaume Samica",
                        "y_data": 82
                    },
                    {
                        "x_data": "Frantz Granvorka",
                        "y_data": 90
                    },
                    {
                        "x_data": "Dominique Daquin",
                        "y_data": 85
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the first year into weekday interval and count the first year, and I want to display y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "First_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(First_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "elimination"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "Show different teams in eliminations and the number of eliminations from each team by a bar chart.",
            "Show different teams in eliminations and the number of eliminations from each team. Visualize by bar chart.",
            "Return a bar chart on how many eliminations did each team have?",
            "A bar chart about how many eliminations did each team have?",
            "How many eliminations did each team have. Visualize by bar chart.",
            "Bar graph to show the total number from different team"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Team Batista",
                        "y_data": 4
                    },
                    {
                        "x_data": "Team Orton",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the trend about commission_pct over hire_date .",
            "For all employees who have the letters D or S in their first name, show me about the change of commission_pct over hire_date in a line chart.",
            "For all employees who have the letters D or S in their first name, draw a line chart about the change of commission_pct over hire_date .",
            "For all employees who have the letters D or S in their first name, a line chart shows the change of commission_pct over hire_date",
            "For all employees who have the letters D or S in their first name, a line chart shows the trend of commission_pct over hire_date .",
            "For all employees who have the letters D or S in their first name, return a line chart about the change of commission_pct over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A pie chart shows the proportion of All_Road and School_ID.",
            "School_ID across all road attribute in a pie chart.",
            "Give me a pie chart to reflect the proportion of All_Road and School_ID.",
            "For the attribute All_Road and School_ID, show their proportion by a pie chart.",
            "Visualize a pie chart about the proportion of All_Road and School_ID.",
            "I want to know the proportion of school id for each all road."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 4
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compare all train names' total numbers, and display from high to low by the how many name.",
            "Plot how many name by grouped by name as a bar graph, and sort by the total number in descending.",
            "Show the number of train names in a bar chart, sort by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parasuram Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_600 and ID , and display by the Y in asc.",
            "Visualize a bar chart about the distribution of meter_600 and ID , display by the Y in asc.",
            "A bar chart shows the distribution of meter_600 and ID , order in asc by the ID.",
            "Bar chart x axis meter 600 y axis id, and sort Y from low to high order please.",
            "Find meter_600 and ID , and visualize them by a bar chart, sort Y from low to high order please.",
            "Show me about the distribution of meter_600 and ID in a bar chart, list by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:56.31",
                        "y_data": 1
                    },
                    {
                        "x_data": "5:57.10",
                        "y_data": 2
                    },
                    {
                        "x_data": "5:52.92",
                        "y_data": 3
                    },
                    {
                        "x_data": "5:54.45",
                        "y_data": 4
                    },
                    {
                        "x_data": "5:53.53",
                        "y_data": 5
                    },
                    {
                        "x_data": "5:56.99",
                        "y_data": 6
                    },
                    {
                        "x_data": "5:52.59",
                        "y_data": 7
                    },
                    {
                        "x_data": "5:53.03",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_600",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the number of cards in different card type code in a bar chart.",
            "How many cards in different card type code? Plot a bar chart.",
            "Show me the number of card type code by card type code in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(card_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "students",
            "student_course_registrations",
            "courses"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "Give the proportion of how many registed students do each course have? List course name and the number of their registered students?",
            "Draw a pie chart for how many registed students do each course have? List course name and the number of their registered students?",
            "How many registed students do each course have? List course name and the number of their registered students.",
            "For each course id, how many students are registered and what are the course names. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "statistics",
                        "y_data": 4
                    },
                    {
                        "x_data": "English",
                        "y_data": 2
                    },
                    {
                        "x_data": "French",
                        "y_data": 2
                    },
                    {
                        "x_data": "data structure",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents created in each day and bin document date by year interval and group by document type description with a group line chart, I want to rank x axis in descending order.",
            "Show the number of documents created in each day and bin document date by year interval and group by document type description with a group line chart, list in desc by the x axis.",
            "How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart, and I want to show in descending by the X.",
            "How many documents are created in each day? Bin the document date by year interval and group by document type description with a group line chart, and list in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2010~2013",
                        "y_data": 5,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 2,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 5,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 3,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 3,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 9,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 10,
                        "classify": "excellent"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 5,
                        "classify": "fun"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 3,
                        "classify": "fun"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 5,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 3,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 3,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 9,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 2,
                        "classify": "fun"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 10,
                        "classify": "fun"
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 6,
                        "classify": "good"
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 6,
                        "classify": "good"
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0,
                        "classify": "good"
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 9,
                        "classify": "good"
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 3,
                        "classify": "good"
                    },
                    {
                        "x_data": "1970~1973",
                        "y_data": 12,
                        "classify": "good"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give the name of each department and the number of employees in each in a bar chart.",
            "Give the name of each department and the number of employees in each. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 2
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 1
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 6
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT",
                        "y_data": 5
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 34
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "For all storms with at least 1 death, show me the dates active and the total number of deaths with a bar chart.",
            "For all storms with at least 1 death, compare the total number of deaths by dates_active attribute.",
            "For all storms with at least 1 death, compare the number of deaths by dates active with a bar graph."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "August3\u2013August10",
                        "y_data": 7
                    },
                    {
                        "x_data": "August5\u2013August14",
                        "y_data": 52
                    },
                    {
                        "x_data": "August26\u2013September2",
                        "y_data": 7
                    },
                    {
                        "x_data": "September7\u2013September17",
                        "y_data": 3
                    },
                    {
                        "x_data": "September18\u2013September25",
                        "y_data": 2
                    },
                    {
                        "x_data": "May19 \u2013October26",
                        "y_data": 71
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Dates_active",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Number_Deaths"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, and visualize them by a bar chart.",
            "Return a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Visualize a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Draw a bar chart about the distribution of Start_from and the average of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Give me the comparison about the average of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart.",
            "Stacked bar chart of the average of shop id for with each Is_full_time in each start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and employee_id , could you sort by the Y in descending please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the first_name by a bar chart, and show total number in descending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and employee_id , and list Y in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and employee_id in a bar chart, and sort by the total number in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and employee_id , and visualize them by a bar chart, and sort by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 206
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 205
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 204
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 203
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 202
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 201
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 178
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "I want to compare the number of the names of phones by a bar chart, and list by the Name in ascending.",
            "Show the number of names of phones in a bar chart, list by the Name in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Give a bar chart showing how many shops in each carrier.",
            "What are the names of device shops, and what are the carriers that they carry devices in stock for?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell Mobility",
                        "y_data": 3
                    },
                    {
                        "x_data": "Vodafone AU",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Carrier)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and manager_id in a bar chart, and list by the X from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the job_id , order by the X-axis from low to high please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and manager_id , and order by the X-axis from low to high please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and manager_id , list by the X from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of job_id and manager_id , list by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 149
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, list y-axis in desc order.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time, list in descending by the y-axis.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart, and rank from high to low by the y axis.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, and rank from high to low by the Y.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, I want to show y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 4314
                    },
                    {
                        "x_data": "July",
                        "y_data": 3410
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3391
                    },
                    {
                        "x_data": "June",
                        "y_data": 1155
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and order Y in desc order.",
            "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart, and order Y in desc order.",
            "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality, and order Y in desc order.",
            "Bar chart x axis nationality y axis mean meter 100, I want to order from high to low by the Y-axis.",
            "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart, and order Y in desc order.",
            "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and display in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 57
                    },
                    {
                        "x_data": "France",
                        "y_data": 55
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "drivers",
            "results",
            "races"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Show the relationship between driver ID and number of races of all drivers who have at least participated in two races in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 208
                    },
                    {
                        "x_data": 2,
                        "y_data": 184
                    },
                    {
                        "x_data": 3,
                        "y_data": 206
                    },
                    {
                        "x_data": 4,
                        "y_data": 293
                    },
                    {
                        "x_data": 5,
                        "y_data": 112
                    },
                    {
                        "x_data": 6,
                        "y_data": 36
                    },
                    {
                        "x_data": 7,
                        "y_data": 27
                    },
                    {
                        "x_data": 8,
                        "y_data": 273
                    },
                    {
                        "x_data": 9,
                        "y_data": 76
                    },
                    {
                        "x_data": 10,
                        "y_data": 95
                    },
                    {
                        "x_data": 11,
                        "y_data": 91
                    },
                    {
                        "x_data": 12,
                        "y_data": 28
                    },
                    {
                        "x_data": 13,
                        "y_data": 271
                    },
                    {
                        "x_data": 14,
                        "y_data": 247
                    },
                    {
                        "x_data": 15,
                        "y_data": 256
                    },
                    {
                        "x_data": 16,
                        "y_data": 128
                    },
                    {
                        "x_data": 17,
                        "y_data": 217
                    },
                    {
                        "x_data": 18,
                        "y_data": 309
                    },
                    {
                        "x_data": 19,
                        "y_data": 24
                    },
                    {
                        "x_data": 20,
                        "y_data": 199
                    },
                    {
                        "x_data": 21,
                        "y_data": 231
                    },
                    {
                        "x_data": 22,
                        "y_data": 326
                    },
                    {
                        "x_data": 23,
                        "y_data": 180
                    },
                    {
                        "x_data": 24,
                        "y_data": 81
                    },
                    {
                        "x_data": 25,
                        "y_data": 69
                    },
                    {
                        "x_data": 26,
                        "y_data": 28
                    },
                    {
                        "x_data": 27,
                        "y_data": 46
                    },
                    {
                        "x_data": 29,
                        "y_data": 21
                    },
                    {
                        "x_data": 30,
                        "y_data": 308
                    },
                    {
                        "x_data": 31,
                        "y_data": 95
                    },
                    {
                        "x_data": 32,
                        "y_data": 51
                    },
                    {
                        "x_data": 33,
                        "y_data": 37
                    },
                    {
                        "x_data": 34,
                        "y_data": 4
                    },
                    {
                        "x_data": 35,
                        "y_data": 165
                    },
                    {
                        "x_data": 36,
                        "y_data": 7
                    },
                    {
                        "x_data": 37,
                        "y_data": 107
                    },
                    {
                        "x_data": 38,
                        "y_data": 11
                    },
                    {
                        "x_data": 39,
                        "y_data": 48
                    },
                    {
                        "x_data": 40,
                        "y_data": 11
                    },
                    {
                        "x_data": 41,
                        "y_data": 38
                    },
                    {
                        "x_data": 42,
                        "y_data": 20
                    },
                    {
                        "x_data": 43,
                        "y_data": 28
                    },
                    {
                        "x_data": 44,
                        "y_data": 158
                    },
                    {
                        "x_data": 45,
                        "y_data": 14
                    },
                    {
                        "x_data": 46,
                        "y_data": 18
                    },
                    {
                        "x_data": 47,
                        "y_data": 20
                    },
                    {
                        "x_data": 48,
                        "y_data": 36
                    },
                    {
                        "x_data": 49,
                        "y_data": 159
                    },
                    {
                        "x_data": 50,
                        "y_data": 107
                    },
                    {
                        "x_data": 51,
                        "y_data": 16
                    },
                    {
                        "x_data": 52,
                        "y_data": 14
                    },
                    {
                        "x_data": 53,
                        "y_data": 5
                    },
                    {
                        "x_data": 54,
                        "y_data": 15
                    },
                    {
                        "x_data": 55,
                        "y_data": 202
                    },
                    {
                        "x_data": 56,
                        "y_data": 147
                    },
                    {
                        "x_data": 57,
                        "y_data": 165
                    },
                    {
                        "x_data": 58,
                        "y_data": 26
                    },
                    {
                        "x_data": 59,
                        "y_data": 29
                    },
                    {
                        "x_data": 60,
                        "y_data": 21
                    },
                    {
                        "x_data": 61,
                        "y_data": 3
                    },
                    {
                        "x_data": 62,
                        "y_data": 16
                    },
                    {
                        "x_data": 63,
                        "y_data": 111
                    },
                    {
                        "x_data": 64,
                        "y_data": 99
                    },
                    {
                        "x_data": 65,
                        "y_data": 165
                    },
                    {
                        "x_data": 66,
                        "y_data": 17
                    },
                    {
                        "x_data": 67,
                        "y_data": 55
                    },
                    {
                        "x_data": 68,
                        "y_data": 32
                    },
                    {
                        "x_data": 69,
                        "y_data": 58
                    },
                    {
                        "x_data": 70,
                        "y_data": 44
                    },
                    {
                        "x_data": 71,
                        "y_data": 122
                    },
                    {
                        "x_data": 73,
                        "y_data": 30
                    },
                    {
                        "x_data": 74,
                        "y_data": 16
                    },
                    {
                        "x_data": 75,
                        "y_data": 33
                    },
                    {
                        "x_data": 76,
                        "y_data": 25
                    },
                    {
                        "x_data": 77,
                        "y_data": 210
                    },
                    {
                        "x_data": 78,
                        "y_data": 75
                    },
                    {
                        "x_data": 79,
                        "y_data": 97
                    },
                    {
                        "x_data": 81,
                        "y_data": 70
                    },
                    {
                        "x_data": 82,
                        "y_data": 4
                    },
                    {
                        "x_data": 83,
                        "y_data": 32
                    },
                    {
                        "x_data": 84,
                        "y_data": 165
                    },
                    {
                        "x_data": 85,
                        "y_data": 28
                    },
                    {
                        "x_data": 86,
                        "y_data": 10
                    },
                    {
                        "x_data": 87,
                        "y_data": 63
                    },
                    {
                        "x_data": 88,
                        "y_data": 88
                    },
                    {
                        "x_data": 89,
                        "y_data": 18
                    },
                    {
                        "x_data": 90,
                        "y_data": 74
                    },
                    {
                        "x_data": 91,
                        "y_data": 42
                    },
                    {
                        "x_data": 92,
                        "y_data": 84
                    },
                    {
                        "x_data": 93,
                        "y_data": 7
                    },
                    {
                        "x_data": 94,
                        "y_data": 123
                    },
                    {
                        "x_data": 95,
                        "y_data": 192
                    },
                    {
                        "x_data": 96,
                        "y_data": 11
                    },
                    {
                        "x_data": 97,
                        "y_data": 7
                    },
                    {
                        "x_data": 98,
                        "y_data": 3
                    },
                    {
                        "x_data": 99,
                        "y_data": 78
                    },
                    {
                        "x_data": 100,
                        "y_data": 63
                    },
                    {
                        "x_data": 101,
                        "y_data": 30
                    },
                    {
                        "x_data": 102,
                        "y_data": 162
                    },
                    {
                        "x_data": 103,
                        "y_data": 47
                    },
                    {
                        "x_data": 104,
                        "y_data": 43
                    },
                    {
                        "x_data": 105,
                        "y_data": 215
                    },
                    {
                        "x_data": 106,
                        "y_data": 10
                    },
                    {
                        "x_data": 107,
                        "y_data": 3
                    },
                    {
                        "x_data": 108,
                        "y_data": 27
                    },
                    {
                        "x_data": 109,
                        "y_data": 70
                    },
                    {
                        "x_data": 110,
                        "y_data": 214
                    },
                    {
                        "x_data": 111,
                        "y_data": 9
                    },
                    {
                        "x_data": 112,
                        "y_data": 115
                    },
                    {
                        "x_data": 113,
                        "y_data": 2
                    },
                    {
                        "x_data": 114,
                        "y_data": 50
                    },
                    {
                        "x_data": 115,
                        "y_data": 3
                    },
                    {
                        "x_data": 116,
                        "y_data": 2
                    },
                    {
                        "x_data": 117,
                        "y_data": 202
                    },
                    {
                        "x_data": 118,
                        "y_data": 162
                    },
                    {
                        "x_data": 119,
                        "y_data": 257
                    },
                    {
                        "x_data": 120,
                        "y_data": 20
                    },
                    {
                        "x_data": 121,
                        "y_data": 13
                    },
                    {
                        "x_data": 122,
                        "y_data": 98
                    },
                    {
                        "x_data": 123,
                        "y_data": 164
                    },
                    {
                        "x_data": 125,
                        "y_data": 6
                    },
                    {
                        "x_data": 126,
                        "y_data": 2
                    },
                    {
                        "x_data": 127,
                        "y_data": 80
                    },
                    {
                        "x_data": 128,
                        "y_data": 29
                    },
                    {
                        "x_data": 129,
                        "y_data": 62
                    },
                    {
                        "x_data": 130,
                        "y_data": 10
                    },
                    {
                        "x_data": 131,
                        "y_data": 81
                    },
                    {
                        "x_data": 132,
                        "y_data": 3
                    },
                    {
                        "x_data": 133,
                        "y_data": 75
                    },
                    {
                        "x_data": 134,
                        "y_data": 6
                    },
                    {
                        "x_data": 135,
                        "y_data": 7
                    },
                    {
                        "x_data": 136,
                        "y_data": 41
                    },
                    {
                        "x_data": 137,
                        "y_data": 207
                    },
                    {
                        "x_data": 138,
                        "y_data": 80
                    },
                    {
                        "x_data": 139,
                        "y_data": 40
                    },
                    {
                        "x_data": 140,
                        "y_data": 103
                    },
                    {
                        "x_data": 141,
                        "y_data": 20
                    },
                    {
                        "x_data": 142,
                        "y_data": 13
                    },
                    {
                        "x_data": 143,
                        "y_data": 4
                    },
                    {
                        "x_data": 144,
                        "y_data": 2
                    },
                    {
                        "x_data": 145,
                        "y_data": 77
                    },
                    {
                        "x_data": 146,
                        "y_data": 32
                    },
                    {
                        "x_data": 147,
                        "y_data": 15
                    },
                    {
                        "x_data": 148,
                        "y_data": 22
                    },
                    {
                        "x_data": 149,
                        "y_data": 14
                    },
                    {
                        "x_data": 150,
                        "y_data": 2
                    },
                    {
                        "x_data": 151,
                        "y_data": 15
                    },
                    {
                        "x_data": 152,
                        "y_data": 82
                    },
                    {
                        "x_data": 153,
                        "y_data": 46
                    },
                    {
                        "x_data": 154,
                        "y_data": 124
                    },
                    {
                        "x_data": 155,
                        "y_data": 76
                    },
                    {
                        "x_data": 156,
                        "y_data": 88
                    },
                    {
                        "x_data": 157,
                        "y_data": 47
                    },
                    {
                        "x_data": 158,
                        "y_data": 143
                    },
                    {
                        "x_data": 159,
                        "y_data": 32
                    },
                    {
                        "x_data": 160,
                        "y_data": 111
                    },
                    {
                        "x_data": 161,
                        "y_data": 10
                    },
                    {
                        "x_data": 162,
                        "y_data": 17
                    },
                    {
                        "x_data": 163,
                        "y_data": 164
                    },
                    {
                        "x_data": 164,
                        "y_data": 7
                    },
                    {
                        "x_data": 165,
                        "y_data": 21
                    },
                    {
                        "x_data": 166,
                        "y_data": 54
                    },
                    {
                        "x_data": 167,
                        "y_data": 21
                    },
                    {
                        "x_data": 168,
                        "y_data": 2
                    },
                    {
                        "x_data": 169,
                        "y_data": 12
                    },
                    {
                        "x_data": 170,
                        "y_data": 70
                    },
                    {
                        "x_data": 171,
                        "y_data": 2
                    },
                    {
                        "x_data": 172,
                        "y_data": 180
                    },
                    {
                        "x_data": 173,
                        "y_data": 110
                    },
                    {
                        "x_data": 174,
                        "y_data": 16
                    },
                    {
                        "x_data": 175,
                        "y_data": 122
                    },
                    {
                        "x_data": 176,
                        "y_data": 88
                    },
                    {
                        "x_data": 177,
                        "y_data": 128
                    },
                    {
                        "x_data": 178,
                        "y_data": 117
                    },
                    {
                        "x_data": 179,
                        "y_data": 28
                    },
                    {
                        "x_data": 180,
                        "y_data": 9
                    },
                    {
                        "x_data": 181,
                        "y_data": 55
                    },
                    {
                        "x_data": 182,
                        "y_data": 174
                    },
                    {
                        "x_data": 183,
                        "y_data": 20
                    },
                    {
                        "x_data": 184,
                        "y_data": 41
                    },
                    {
                        "x_data": 185,
                        "y_data": 22
                    },
                    {
                        "x_data": 186,
                        "y_data": 9
                    },
                    {
                        "x_data": 187,
                        "y_data": 154
                    },
                    {
                        "x_data": 188,
                        "y_data": 23
                    },
                    {
                        "x_data": 189,
                        "y_data": 8
                    },
                    {
                        "x_data": 190,
                        "y_data": 19
                    },
                    {
                        "x_data": 191,
                        "y_data": 5
                    },
                    {
                        "x_data": 192,
                        "y_data": 32
                    },
                    {
                        "x_data": 193,
                        "y_data": 15
                    },
                    {
                        "x_data": 194,
                        "y_data": 37
                    },
                    {
                        "x_data": 195,
                        "y_data": 29
                    },
                    {
                        "x_data": 196,
                        "y_data": 30
                    },
                    {
                        "x_data": 197,
                        "y_data": 143
                    },
                    {
                        "x_data": 198,
                        "y_data": 3
                    },
                    {
                        "x_data": 199,
                        "y_data": 146
                    },
                    {
                        "x_data": 200,
                        "y_data": 114
                    },
                    {
                        "x_data": 201,
                        "y_data": 15
                    },
                    {
                        "x_data": 202,
                        "y_data": 72
                    },
                    {
                        "x_data": 203,
                        "y_data": 68
                    },
                    {
                        "x_data": 204,
                        "y_data": 8
                    },
                    {
                        "x_data": 205,
                        "y_data": 37
                    },
                    {
                        "x_data": 206,
                        "y_data": 64
                    },
                    {
                        "x_data": 207,
                        "y_data": 129
                    },
                    {
                        "x_data": 208,
                        "y_data": 14
                    },
                    {
                        "x_data": 209,
                        "y_data": 12
                    },
                    {
                        "x_data": 210,
                        "y_data": 5
                    },
                    {
                        "x_data": 211,
                        "y_data": 37
                    },
                    {
                        "x_data": 212,
                        "y_data": 58
                    },
                    {
                        "x_data": 213,
                        "y_data": 17
                    },
                    {
                        "x_data": 214,
                        "y_data": 2
                    },
                    {
                        "x_data": 215,
                        "y_data": 4
                    },
                    {
                        "x_data": 216,
                        "y_data": 13
                    },
                    {
                        "x_data": 217,
                        "y_data": 11
                    },
                    {
                        "x_data": 219,
                        "y_data": 55
                    },
                    {
                        "x_data": 220,
                        "y_data": 2
                    },
                    {
                        "x_data": 221,
                        "y_data": 95
                    },
                    {
                        "x_data": 222,
                        "y_data": 113
                    },
                    {
                        "x_data": 223,
                        "y_data": 138
                    },
                    {
                        "x_data": 224,
                        "y_data": 149
                    },
                    {
                        "x_data": 225,
                        "y_data": 7
                    },
                    {
                        "x_data": 227,
                        "y_data": 2
                    },
                    {
                        "x_data": 229,
                        "y_data": 29
                    },
                    {
                        "x_data": 230,
                        "y_data": 78
                    },
                    {
                        "x_data": 231,
                        "y_data": 93
                    },
                    {
                        "x_data": 232,
                        "y_data": 84
                    },
                    {
                        "x_data": 233,
                        "y_data": 81
                    },
                    {
                        "x_data": 234,
                        "y_data": 3
                    },
                    {
                        "x_data": 235,
                        "y_data": 121
                    },
                    {
                        "x_data": 236,
                        "y_data": 5
                    },
                    {
                        "x_data": 237,
                        "y_data": 20
                    },
                    {
                        "x_data": 238,
                        "y_data": 123
                    },
                    {
                        "x_data": 239,
                        "y_data": 42
                    },
                    {
                        "x_data": 240,
                        "y_data": 6
                    },
                    {
                        "x_data": 241,
                        "y_data": 5
                    },
                    {
                        "x_data": 242,
                        "y_data": 3
                    },
                    {
                        "x_data": 243,
                        "y_data": 61
                    },
                    {
                        "x_data": 244,
                        "y_data": 3
                    },
                    {
                        "x_data": 245,
                        "y_data": 6
                    },
                    {
                        "x_data": 246,
                        "y_data": 15
                    },
                    {
                        "x_data": 247,
                        "y_data": 5
                    },
                    {
                        "x_data": 249,
                        "y_data": 2
                    },
                    {
                        "x_data": 250,
                        "y_data": 73
                    },
                    {
                        "x_data": 251,
                        "y_data": 20
                    },
                    {
                        "x_data": 252,
                        "y_data": 42
                    },
                    {
                        "x_data": 253,
                        "y_data": 6
                    },
                    {
                        "x_data": 254,
                        "y_data": 7
                    },
                    {
                        "x_data": 255,
                        "y_data": 32
                    },
                    {
                        "x_data": 256,
                        "y_data": 15
                    },
                    {
                        "x_data": 257,
                        "y_data": 7
                    },
                    {
                        "x_data": 258,
                        "y_data": 13
                    },
                    {
                        "x_data": 259,
                        "y_data": 11
                    },
                    {
                        "x_data": 260,
                        "y_data": 5
                    },
                    {
                        "x_data": 262,
                        "y_data": 51
                    },
                    {
                        "x_data": 263,
                        "y_data": 2
                    },
                    {
                        "x_data": 265,
                        "y_data": 16
                    },
                    {
                        "x_data": 267,
                        "y_data": 12
                    },
                    {
                        "x_data": 269,
                        "y_data": 4
                    },
                    {
                        "x_data": 270,
                        "y_data": 11
                    },
                    {
                        "x_data": 271,
                        "y_data": 6
                    },
                    {
                        "x_data": 273,
                        "y_data": 2
                    },
                    {
                        "x_data": 274,
                        "y_data": 2
                    },
                    {
                        "x_data": 275,
                        "y_data": 17
                    },
                    {
                        "x_data": 276,
                        "y_data": 12
                    },
                    {
                        "x_data": 277,
                        "y_data": 8
                    },
                    {
                        "x_data": 278,
                        "y_data": 106
                    },
                    {
                        "x_data": 280,
                        "y_data": 59
                    },
                    {
                        "x_data": 282,
                        "y_data": 2
                    },
                    {
                        "x_data": 283,
                        "y_data": 8
                    },
                    {
                        "x_data": 284,
                        "y_data": 4
                    },
                    {
                        "x_data": 285,
                        "y_data": 3
                    },
                    {
                        "x_data": 288,
                        "y_data": 15
                    },
                    {
                        "x_data": 289,
                        "y_data": 179
                    },
                    {
                        "x_data": 290,
                        "y_data": 38
                    },
                    {
                        "x_data": 292,
                        "y_data": 3
                    },
                    {
                        "x_data": 293,
                        "y_data": 13
                    },
                    {
                        "x_data": 294,
                        "y_data": 10
                    },
                    {
                        "x_data": 295,
                        "y_data": 6
                    },
                    {
                        "x_data": 296,
                        "y_data": 15
                    },
                    {
                        "x_data": 297,
                        "y_data": 2
                    },
                    {
                        "x_data": 298,
                        "y_data": 9
                    },
                    {
                        "x_data": 299,
                        "y_data": 2
                    },
                    {
                        "x_data": 300,
                        "y_data": 2
                    },
                    {
                        "x_data": 302,
                        "y_data": 2
                    },
                    {
                        "x_data": 304,
                        "y_data": 112
                    },
                    {
                        "x_data": 305,
                        "y_data": 51
                    },
                    {
                        "x_data": 306,
                        "y_data": 87
                    },
                    {
                        "x_data": 307,
                        "y_data": 39
                    },
                    {
                        "x_data": 308,
                        "y_data": 4
                    },
                    {
                        "x_data": 309,
                        "y_data": 31
                    },
                    {
                        "x_data": 310,
                        "y_data": 2
                    },
                    {
                        "x_data": 311,
                        "y_data": 4
                    },
                    {
                        "x_data": 312,
                        "y_data": 13
                    },
                    {
                        "x_data": 313,
                        "y_data": 13
                    },
                    {
                        "x_data": 314,
                        "y_data": 36
                    },
                    {
                        "x_data": 315,
                        "y_data": 2
                    },
                    {
                        "x_data": 316,
                        "y_data": 6
                    },
                    {
                        "x_data": 317,
                        "y_data": 23
                    },
                    {
                        "x_data": 319,
                        "y_data": 3
                    },
                    {
                        "x_data": 320,
                        "y_data": 30
                    },
                    {
                        "x_data": 321,
                        "y_data": 14
                    },
                    {
                        "x_data": 322,
                        "y_data": 7
                    },
                    {
                        "x_data": 324,
                        "y_data": 3
                    },
                    {
                        "x_data": 326,
                        "y_data": 2
                    },
                    {
                        "x_data": 327,
                        "y_data": 47
                    },
                    {
                        "x_data": 328,
                        "y_data": 100
                    },
                    {
                        "x_data": 329,
                        "y_data": 29
                    },
                    {
                        "x_data": 330,
                        "y_data": 17
                    },
                    {
                        "x_data": 332,
                        "y_data": 12
                    },
                    {
                        "x_data": 333,
                        "y_data": 35
                    },
                    {
                        "x_data": 334,
                        "y_data": 4
                    },
                    {
                        "x_data": 335,
                        "y_data": 2
                    },
                    {
                        "x_data": 337,
                        "y_data": 9
                    },
                    {
                        "x_data": 338,
                        "y_data": 11
                    },
                    {
                        "x_data": 339,
                        "y_data": 9
                    },
                    {
                        "x_data": 340,
                        "y_data": 10
                    },
                    {
                        "x_data": 341,
                        "y_data": 112
                    },
                    {
                        "x_data": 342,
                        "y_data": 6
                    },
                    {
                        "x_data": 343,
                        "y_data": 3
                    },
                    {
                        "x_data": 344,
                        "y_data": 2
                    },
                    {
                        "x_data": 345,
                        "y_data": 54
                    },
                    {
                        "x_data": 346,
                        "y_data": 100
                    },
                    {
                        "x_data": 347,
                        "y_data": 109
                    },
                    {
                        "x_data": 350,
                        "y_data": 13
                    },
                    {
                        "x_data": 351,
                        "y_data": 18
                    },
                    {
                        "x_data": 352,
                        "y_data": 13
                    },
                    {
                        "x_data": 353,
                        "y_data": 11
                    },
                    {
                        "x_data": 354,
                        "y_data": 2
                    },
                    {
                        "x_data": 356,
                        "y_data": 129
                    },
                    {
                        "x_data": 357,
                        "y_data": 15
                    },
                    {
                        "x_data": 358,
                        "y_data": 62
                    },
                    {
                        "x_data": 359,
                        "y_data": 12
                    },
                    {
                        "x_data": 360,
                        "y_data": 103
                    },
                    {
                        "x_data": 361,
                        "y_data": 29
                    },
                    {
                        "x_data": 362,
                        "y_data": 4
                    },
                    {
                        "x_data": 363,
                        "y_data": 4
                    },
                    {
                        "x_data": 364,
                        "y_data": 87
                    },
                    {
                        "x_data": 365,
                        "y_data": 3
                    },
                    {
                        "x_data": 368,
                        "y_data": 6
                    },
                    {
                        "x_data": 369,
                        "y_data": 2
                    },
                    {
                        "x_data": 370,
                        "y_data": 17
                    },
                    {
                        "x_data": 371,
                        "y_data": 2
                    },
                    {
                        "x_data": 373,
                        "y_data": 72
                    },
                    {
                        "x_data": 374,
                        "y_data": 36
                    },
                    {
                        "x_data": 375,
                        "y_data": 13
                    },
                    {
                        "x_data": 376,
                        "y_data": 19
                    },
                    {
                        "x_data": 377,
                        "y_data": 2
                    },
                    {
                        "x_data": 379,
                        "y_data": 2
                    },
                    {
                        "x_data": 380,
                        "y_data": 9
                    },
                    {
                        "x_data": 382,
                        "y_data": 8
                    },
                    {
                        "x_data": 383,
                        "y_data": 26
                    },
                    {
                        "x_data": 385,
                        "y_data": 44
                    },
                    {
                        "x_data": 386,
                        "y_data": 54
                    },
                    {
                        "x_data": 387,
                        "y_data": 7
                    },
                    {
                        "x_data": 388,
                        "y_data": 10
                    },
                    {
                        "x_data": 389,
                        "y_data": 13
                    },
                    {
                        "x_data": 390,
                        "y_data": 2
                    },
                    {
                        "x_data": 392,
                        "y_data": 2
                    },
                    {
                        "x_data": 394,
                        "y_data": 26
                    },
                    {
                        "x_data": 396,
                        "y_data": 9
                    },
                    {
                        "x_data": 397,
                        "y_data": 15
                    },
                    {
                        "x_data": 398,
                        "y_data": 2
                    },
                    {
                        "x_data": 399,
                        "y_data": 5
                    },
                    {
                        "x_data": 400,
                        "y_data": 2
                    },
                    {
                        "x_data": 401,
                        "y_data": 29
                    },
                    {
                        "x_data": 402,
                        "y_data": 3
                    },
                    {
                        "x_data": 403,
                        "y_data": 52
                    },
                    {
                        "x_data": 404,
                        "y_data": 55
                    },
                    {
                        "x_data": 405,
                        "y_data": 11
                    },
                    {
                        "x_data": 406,
                        "y_data": 3
                    },
                    {
                        "x_data": 407,
                        "y_data": 2
                    },
                    {
                        "x_data": 408,
                        "y_data": 27
                    },
                    {
                        "x_data": 409,
                        "y_data": 2
                    },
                    {
                        "x_data": 410,
                        "y_data": 3
                    },
                    {
                        "x_data": 411,
                        "y_data": 3
                    },
                    {
                        "x_data": 412,
                        "y_data": 2
                    },
                    {
                        "x_data": 413,
                        "y_data": 3
                    },
                    {
                        "x_data": 418,
                        "y_data": 45
                    },
                    {
                        "x_data": 420,
                        "y_data": 7
                    },
                    {
                        "x_data": 423,
                        "y_data": 5
                    },
                    {
                        "x_data": 424,
                        "y_data": 4
                    },
                    {
                        "x_data": 425,
                        "y_data": 5
                    },
                    {
                        "x_data": 427,
                        "y_data": 87
                    },
                    {
                        "x_data": 428,
                        "y_data": 6
                    },
                    {
                        "x_data": 429,
                        "y_data": 15
                    },
                    {
                        "x_data": 430,
                        "y_data": 31
                    },
                    {
                        "x_data": 431,
                        "y_data": 7
                    },
                    {
                        "x_data": 432,
                        "y_data": 5
                    },
                    {
                        "x_data": 433,
                        "y_data": 4
                    },
                    {
                        "x_data": 434,
                        "y_data": 6
                    },
                    {
                        "x_data": 435,
                        "y_data": 12
                    },
                    {
                        "x_data": 436,
                        "y_data": 5
                    },
                    {
                        "x_data": 437,
                        "y_data": 26
                    },
                    {
                        "x_data": 438,
                        "y_data": 10
                    },
                    {
                        "x_data": 439,
                        "y_data": 5
                    },
                    {
                        "x_data": 440,
                        "y_data": 12
                    },
                    {
                        "x_data": 441,
                        "y_data": 4
                    },
                    {
                        "x_data": 442,
                        "y_data": 2
                    },
                    {
                        "x_data": 444,
                        "y_data": 3
                    },
                    {
                        "x_data": 445,
                        "y_data": 2
                    },
                    {
                        "x_data": 446,
                        "y_data": 2
                    },
                    {
                        "x_data": 447,
                        "y_data": 2
                    },
                    {
                        "x_data": 449,
                        "y_data": 12
                    },
                    {
                        "x_data": 453,
                        "y_data": 11
                    },
                    {
                        "x_data": 454,
                        "y_data": 6
                    },
                    {
                        "x_data": 455,
                        "y_data": 13
                    },
                    {
                        "x_data": 456,
                        "y_data": 51
                    },
                    {
                        "x_data": 459,
                        "y_data": 9
                    },
                    {
                        "x_data": 460,
                        "y_data": 5
                    },
                    {
                        "x_data": 461,
                        "y_data": 2
                    },
                    {
                        "x_data": 462,
                        "y_data": 3
                    },
                    {
                        "x_data": 463,
                        "y_data": 3
                    },
                    {
                        "x_data": 464,
                        "y_data": 3
                    },
                    {
                        "x_data": 465,
                        "y_data": 7
                    },
                    {
                        "x_data": 467,
                        "y_data": 2
                    },
                    {
                        "x_data": 468,
                        "y_data": 2
                    },
                    {
                        "x_data": 475,
                        "y_data": 73
                    },
                    {
                        "x_data": 476,
                        "y_data": 28
                    },
                    {
                        "x_data": 477,
                        "y_data": 18
                    },
                    {
                        "x_data": 478,
                        "y_data": 20
                    },
                    {
                        "x_data": 479,
                        "y_data": 41
                    },
                    {
                        "x_data": 480,
                        "y_data": 4
                    },
                    {
                        "x_data": 481,
                        "y_data": 10
                    },
                    {
                        "x_data": 482,
                        "y_data": 17
                    },
                    {
                        "x_data": 483,
                        "y_data": 15
                    },
                    {
                        "x_data": 484,
                        "y_data": 9
                    },
                    {
                        "x_data": 486,
                        "y_data": 13
                    },
                    {
                        "x_data": 487,
                        "y_data": 2
                    },
                    {
                        "x_data": 489,
                        "y_data": 2
                    },
                    {
                        "x_data": 491,
                        "y_data": 2
                    },
                    {
                        "x_data": 494,
                        "y_data": 2
                    },
                    {
                        "x_data": 496,
                        "y_data": 12
                    },
                    {
                        "x_data": 498,
                        "y_data": 29
                    },
                    {
                        "x_data": 500,
                        "y_data": 4
                    },
                    {
                        "x_data": 501,
                        "y_data": 64
                    },
                    {
                        "x_data": 502,
                        "y_data": 7
                    },
                    {
                        "x_data": 505,
                        "y_data": 4
                    },
                    {
                        "x_data": 506,
                        "y_data": 9
                    },
                    {
                        "x_data": 507,
                        "y_data": 6
                    },
                    {
                        "x_data": 508,
                        "y_data": 4
                    },
                    {
                        "x_data": 509,
                        "y_data": 12
                    },
                    {
                        "x_data": 510,
                        "y_data": 3
                    },
                    {
                        "x_data": 511,
                        "y_data": 2
                    },
                    {
                        "x_data": 512,
                        "y_data": 9
                    },
                    {
                        "x_data": 513,
                        "y_data": 9
                    },
                    {
                        "x_data": 514,
                        "y_data": 5
                    },
                    {
                        "x_data": 516,
                        "y_data": 5
                    },
                    {
                        "x_data": 517,
                        "y_data": 2
                    },
                    {
                        "x_data": 518,
                        "y_data": 10
                    },
                    {
                        "x_data": 519,
                        "y_data": 3
                    },
                    {
                        "x_data": 520,
                        "y_data": 9
                    },
                    {
                        "x_data": 521,
                        "y_data": 7
                    },
                    {
                        "x_data": 522,
                        "y_data": 2
                    },
                    {
                        "x_data": 523,
                        "y_data": 3
                    },
                    {
                        "x_data": 525,
                        "y_data": 9
                    },
                    {
                        "x_data": 526,
                        "y_data": 9
                    },
                    {
                        "x_data": 527,
                        "y_data": 4
                    },
                    {
                        "x_data": 528,
                        "y_data": 8
                    },
                    {
                        "x_data": 529,
                        "y_data": 13
                    },
                    {
                        "x_data": 531,
                        "y_data": 3
                    },
                    {
                        "x_data": 532,
                        "y_data": 4
                    },
                    {
                        "x_data": 533,
                        "y_data": 6
                    },
                    {
                        "x_data": 534,
                        "y_data": 2
                    },
                    {
                        "x_data": 535,
                        "y_data": 2
                    },
                    {
                        "x_data": 536,
                        "y_data": 3
                    },
                    {
                        "x_data": 537,
                        "y_data": 5
                    },
                    {
                        "x_data": 538,
                        "y_data": 5
                    },
                    {
                        "x_data": 539,
                        "y_data": 2
                    },
                    {
                        "x_data": 540,
                        "y_data": 2
                    },
                    {
                        "x_data": 541,
                        "y_data": 15
                    },
                    {
                        "x_data": 542,
                        "y_data": 3
                    },
                    {
                        "x_data": 543,
                        "y_data": 4
                    },
                    {
                        "x_data": 547,
                        "y_data": 18
                    },
                    {
                        "x_data": 549,
                        "y_data": 6
                    },
                    {
                        "x_data": 551,
                        "y_data": 5
                    },
                    {
                        "x_data": 553,
                        "y_data": 2
                    },
                    {
                        "x_data": 554,
                        "y_data": 57
                    },
                    {
                        "x_data": 555,
                        "y_data": 9
                    },
                    {
                        "x_data": 556,
                        "y_data": 7
                    },
                    {
                        "x_data": 558,
                        "y_data": 5
                    },
                    {
                        "x_data": 559,
                        "y_data": 6
                    },
                    {
                        "x_data": 560,
                        "y_data": 3
                    },
                    {
                        "x_data": 561,
                        "y_data": 3
                    },
                    {
                        "x_data": 562,
                        "y_data": 4
                    },
                    {
                        "x_data": 563,
                        "y_data": 4
                    },
                    {
                        "x_data": 564,
                        "y_data": 2
                    },
                    {
                        "x_data": 565,
                        "y_data": 3
                    },
                    {
                        "x_data": 566,
                        "y_data": 9
                    },
                    {
                        "x_data": 567,
                        "y_data": 3
                    },
                    {
                        "x_data": 573,
                        "y_data": 2
                    },
                    {
                        "x_data": 577,
                        "y_data": 26
                    },
                    {
                        "x_data": 578,
                        "y_data": 48
                    },
                    {
                        "x_data": 579,
                        "y_data": 58
                    },
                    {
                        "x_data": 580,
                        "y_data": 14
                    },
                    {
                        "x_data": 581,
                        "y_data": 37
                    },
                    {
                        "x_data": 583,
                        "y_data": 7
                    },
                    {
                        "x_data": 585,
                        "y_data": 2
                    },
                    {
                        "x_data": 586,
                        "y_data": 9
                    },
                    {
                        "x_data": 589,
                        "y_data": 17
                    },
                    {
                        "x_data": 590,
                        "y_data": 14
                    },
                    {
                        "x_data": 592,
                        "y_data": 6
                    },
                    {
                        "x_data": 593,
                        "y_data": 10
                    },
                    {
                        "x_data": 594,
                        "y_data": 3
                    },
                    {
                        "x_data": 595,
                        "y_data": 2
                    },
                    {
                        "x_data": 596,
                        "y_data": 5
                    },
                    {
                        "x_data": 597,
                        "y_data": 5
                    },
                    {
                        "x_data": 601,
                        "y_data": 2
                    },
                    {
                        "x_data": 606,
                        "y_data": 6
                    },
                    {
                        "x_data": 607,
                        "y_data": 9
                    },
                    {
                        "x_data": 608,
                        "y_data": 17
                    },
                    {
                        "x_data": 609,
                        "y_data": 12
                    },
                    {
                        "x_data": 610,
                        "y_data": 3
                    },
                    {
                        "x_data": 611,
                        "y_data": 9
                    },
                    {
                        "x_data": 612,
                        "y_data": 11
                    },
                    {
                        "x_data": 613,
                        "y_data": 4
                    },
                    {
                        "x_data": 615,
                        "y_data": 8
                    },
                    {
                        "x_data": 619,
                        "y_data": 7
                    },
                    {
                        "x_data": 620,
                        "y_data": 10
                    },
                    {
                        "x_data": 622,
                        "y_data": 6
                    },
                    {
                        "x_data": 623,
                        "y_data": 2
                    },
                    {
                        "x_data": 624,
                        "y_data": 8
                    },
                    {
                        "x_data": 625,
                        "y_data": 7
                    },
                    {
                        "x_data": 626,
                        "y_data": 29
                    },
                    {
                        "x_data": 627,
                        "y_data": 39
                    },
                    {
                        "x_data": 628,
                        "y_data": 5
                    },
                    {
                        "x_data": 629,
                        "y_data": 3
                    },
                    {
                        "x_data": 630,
                        "y_data": 4
                    },
                    {
                        "x_data": 631,
                        "y_data": 2
                    },
                    {
                        "x_data": 632,
                        "y_data": 11
                    },
                    {
                        "x_data": 633,
                        "y_data": 35
                    },
                    {
                        "x_data": 638,
                        "y_data": 3
                    },
                    {
                        "x_data": 640,
                        "y_data": 23
                    },
                    {
                        "x_data": 641,
                        "y_data": 18
                    },
                    {
                        "x_data": 642,
                        "y_data": 37
                    },
                    {
                        "x_data": 643,
                        "y_data": 17
                    },
                    {
                        "x_data": 644,
                        "y_data": 9
                    },
                    {
                        "x_data": 645,
                        "y_data": 5
                    },
                    {
                        "x_data": 647,
                        "y_data": 36
                    },
                    {
                        "x_data": 648,
                        "y_data": 12
                    },
                    {
                        "x_data": 649,
                        "y_data": 2
                    },
                    {
                        "x_data": 650,
                        "y_data": 5
                    },
                    {
                        "x_data": 651,
                        "y_data": 15
                    },
                    {
                        "x_data": 653,
                        "y_data": 6
                    },
                    {
                        "x_data": 654,
                        "y_data": 5
                    },
                    {
                        "x_data": 655,
                        "y_data": 3
                    },
                    {
                        "x_data": 656,
                        "y_data": 4
                    },
                    {
                        "x_data": 657,
                        "y_data": 5
                    },
                    {
                        "x_data": 658,
                        "y_data": 6
                    },
                    {
                        "x_data": 659,
                        "y_data": 5
                    },
                    {
                        "x_data": 660,
                        "y_data": 25
                    },
                    {
                        "x_data": 661,
                        "y_data": 4
                    },
                    {
                        "x_data": 663,
                        "y_data": 16
                    },
                    {
                        "x_data": 664,
                        "y_data": 7
                    },
                    {
                        "x_data": 665,
                        "y_data": 2
                    },
                    {
                        "x_data": 666,
                        "y_data": 3
                    },
                    {
                        "x_data": 667,
                        "y_data": 2
                    },
                    {
                        "x_data": 669,
                        "y_data": 19
                    },
                    {
                        "x_data": 670,
                        "y_data": 12
                    },
                    {
                        "x_data": 672,
                        "y_data": 2
                    },
                    {
                        "x_data": 673,
                        "y_data": 3
                    },
                    {
                        "x_data": 675,
                        "y_data": 4
                    },
                    {
                        "x_data": 677,
                        "y_data": 4
                    },
                    {
                        "x_data": 679,
                        "y_data": 2
                    },
                    {
                        "x_data": 680,
                        "y_data": 7
                    },
                    {
                        "x_data": 681,
                        "y_data": 2
                    },
                    {
                        "x_data": 686,
                        "y_data": 7
                    },
                    {
                        "x_data": 687,
                        "y_data": 12
                    },
                    {
                        "x_data": 688,
                        "y_data": 5
                    },
                    {
                        "x_data": 689,
                        "y_data": 9
                    },
                    {
                        "x_data": 690,
                        "y_data": 2
                    },
                    {
                        "x_data": 691,
                        "y_data": 2
                    },
                    {
                        "x_data": 692,
                        "y_data": 3
                    },
                    {
                        "x_data": 693,
                        "y_data": 3
                    },
                    {
                        "x_data": 697,
                        "y_data": 17
                    },
                    {
                        "x_data": 699,
                        "y_data": 3
                    },
                    {
                        "x_data": 700,
                        "y_data": 2
                    },
                    {
                        "x_data": 701,
                        "y_data": 2
                    },
                    {
                        "x_data": 702,
                        "y_data": 5
                    },
                    {
                        "x_data": 703,
                        "y_data": 2
                    },
                    {
                        "x_data": 704,
                        "y_data": 13
                    },
                    {
                        "x_data": 705,
                        "y_data": 2
                    },
                    {
                        "x_data": 708,
                        "y_data": 5
                    },
                    {
                        "x_data": 709,
                        "y_data": 2
                    },
                    {
                        "x_data": 710,
                        "y_data": 2
                    },
                    {
                        "x_data": 712,
                        "y_data": 2
                    },
                    {
                        "x_data": 715,
                        "y_data": 2
                    },
                    {
                        "x_data": 717,
                        "y_data": 4
                    },
                    {
                        "x_data": 720,
                        "y_data": 2
                    },
                    {
                        "x_data": 721,
                        "y_data": 5
                    },
                    {
                        "x_data": 722,
                        "y_data": 3
                    },
                    {
                        "x_data": 723,
                        "y_data": 7
                    },
                    {
                        "x_data": 724,
                        "y_data": 2
                    },
                    {
                        "x_data": 725,
                        "y_data": 2
                    },
                    {
                        "x_data": 726,
                        "y_data": 3
                    },
                    {
                        "x_data": 728,
                        "y_data": 2
                    },
                    {
                        "x_data": 729,
                        "y_data": 3
                    },
                    {
                        "x_data": 730,
                        "y_data": 3
                    },
                    {
                        "x_data": 731,
                        "y_data": 3
                    },
                    {
                        "x_data": 732,
                        "y_data": 3
                    },
                    {
                        "x_data": 733,
                        "y_data": 2
                    },
                    {
                        "x_data": 734,
                        "y_data": 2
                    },
                    {
                        "x_data": 735,
                        "y_data": 3
                    },
                    {
                        "x_data": 736,
                        "y_data": 2
                    },
                    {
                        "x_data": 738,
                        "y_data": 4
                    },
                    {
                        "x_data": 740,
                        "y_data": 2
                    },
                    {
                        "x_data": 741,
                        "y_data": 12
                    },
                    {
                        "x_data": 742,
                        "y_data": 2
                    },
                    {
                        "x_data": 744,
                        "y_data": 2
                    },
                    {
                        "x_data": 746,
                        "y_data": 4
                    },
                    {
                        "x_data": 747,
                        "y_data": 4
                    },
                    {
                        "x_data": 748,
                        "y_data": 3
                    },
                    {
                        "x_data": 749,
                        "y_data": 3
                    },
                    {
                        "x_data": 756,
                        "y_data": 3
                    },
                    {
                        "x_data": 759,
                        "y_data": 2
                    },
                    {
                        "x_data": 762,
                        "y_data": 5
                    },
                    {
                        "x_data": 763,
                        "y_data": 5
                    },
                    {
                        "x_data": 764,
                        "y_data": 3
                    },
                    {
                        "x_data": 765,
                        "y_data": 2
                    },
                    {
                        "x_data": 766,
                        "y_data": 2
                    },
                    {
                        "x_data": 768,
                        "y_data": 2
                    },
                    {
                        "x_data": 770,
                        "y_data": 2
                    },
                    {
                        "x_data": 771,
                        "y_data": 2
                    },
                    {
                        "x_data": 772,
                        "y_data": 2
                    },
                    {
                        "x_data": 773,
                        "y_data": 6
                    },
                    {
                        "x_data": 774,
                        "y_data": 3
                    },
                    {
                        "x_data": 776,
                        "y_data": 2
                    },
                    {
                        "x_data": 778,
                        "y_data": 2
                    },
                    {
                        "x_data": 780,
                        "y_data": 3
                    },
                    {
                        "x_data": 784,
                        "y_data": 2
                    },
                    {
                        "x_data": 785,
                        "y_data": 2
                    },
                    {
                        "x_data": 786,
                        "y_data": 8
                    },
                    {
                        "x_data": 787,
                        "y_data": 3
                    },
                    {
                        "x_data": 789,
                        "y_data": 2
                    },
                    {
                        "x_data": 793,
                        "y_data": 5
                    },
                    {
                        "x_data": 797,
                        "y_data": 2
                    },
                    {
                        "x_data": 799,
                        "y_data": 2
                    },
                    {
                        "x_data": 807,
                        "y_data": 137
                    },
                    {
                        "x_data": 808,
                        "y_data": 58
                    },
                    {
                        "x_data": 810,
                        "y_data": 19
                    },
                    {
                        "x_data": 811,
                        "y_data": 46
                    },
                    {
                        "x_data": 812,
                        "y_data": 11
                    },
                    {
                        "x_data": 813,
                        "y_data": 96
                    },
                    {
                        "x_data": 814,
                        "y_data": 59
                    },
                    {
                        "x_data": 815,
                        "y_data": 136
                    },
                    {
                        "x_data": 816,
                        "y_data": 20
                    },
                    {
                        "x_data": 817,
                        "y_data": 129
                    },
                    {
                        "x_data": 818,
                        "y_data": 58
                    },
                    {
                        "x_data": 819,
                        "y_data": 39
                    },
                    {
                        "x_data": 820,
                        "y_data": 35
                    },
                    {
                        "x_data": 821,
                        "y_data": 59
                    },
                    {
                        "x_data": 822,
                        "y_data": 98
                    },
                    {
                        "x_data": 823,
                        "y_data": 19
                    },
                    {
                        "x_data": 824,
                        "y_data": 34
                    },
                    {
                        "x_data": 825,
                        "y_data": 61
                    },
                    {
                        "x_data": 826,
                        "y_data": 74
                    },
                    {
                        "x_data": 828,
                        "y_data": 76
                    },
                    {
                        "x_data": 829,
                        "y_data": 19
                    },
                    {
                        "x_data": 830,
                        "y_data": 60
                    },
                    {
                        "x_data": 831,
                        "y_data": 40
                    },
                    {
                        "x_data": 832,
                        "y_data": 60
                    },
                    {
                        "x_data": 833,
                        "y_data": 13
                    },
                    {
                        "x_data": 834,
                        "y_data": 5
                    },
                    {
                        "x_data": 835,
                        "y_data": 37
                    },
                    {
                        "x_data": 836,
                        "y_data": 39
                    },
                    {
                        "x_data": 837,
                        "y_data": 12
                    },
                    {
                        "x_data": 838,
                        "y_data": 21
                    },
                    {
                        "x_data": 839,
                        "y_data": 29
                    },
                    {
                        "x_data": 840,
                        "y_data": 20
                    },
                    {
                        "x_data": 841,
                        "y_data": 2
                    },
                    {
                        "x_data": 842,
                        "y_data": 5
                    },
                    {
                        "x_data": 843,
                        "y_data": 4
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "driverId"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur",
            "people"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\", and count them by a line chart",
            "What are the number of the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
            "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones, and count them by a line chart",
            "Return the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.",
            "A line chart for what are the number of the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
            "A line chart for returning the number of the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972",
                        "y_data": 1
                    },
                    {
                        "x_data": "1973",
                        "y_data": 0
                    },
                    {
                        "x_data": "1974",
                        "y_data": 0
                    },
                    {
                        "x_data": "1975",
                        "y_data": 0
                    },
                    {
                        "x_data": "1976",
                        "y_data": 0
                    },
                    {
                        "x_data": "1977",
                        "y_data": 0
                    },
                    {
                        "x_data": "1978",
                        "y_data": 0
                    },
                    {
                        "x_data": "1979",
                        "y_data": 0
                    },
                    {
                        "x_data": "1980",
                        "y_data": 0
                    },
                    {
                        "x_data": "1981",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_of_Birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "How many flights with price higher than 300 for each destination city? Return a bar chart, list in descending by the Y.",
            "A bar chart showing the number of flights with price higher than 300 for each destination city, and list in descending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many treatments in each day? Return a bar chart that bins date of treatment by weekday, sort in asc by the Y-axis.",
            "List the number of treatments in each day with a bar chart that bins date of treatment by weekday, and display the number of date of treatment from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, return the name and the average rating of reviews given by them Plot them as bar chart, could you display y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mark",
                        "y_data": 7
                    },
                    {
                        "x_data": "Helen",
                        "y_data": 7.333333333333332
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "For the sum of monthly_rental, date_address_to, visualize the trend.",
            "A line chart shows the change of the sum of monthly_rental over date_address_to , and group by attribute date_address_to",
            "A line chart shows the trend of the sum of monthly_rental over date_address_to , and group by attribute date_address_to.",
            "Visualize a line chart about the change of the sum of monthly_rental over date_address_to , and group by attribute date_address_to.",
            "Show me the trend about the sum of monthly_rental over date_address_to , and group by attribute date_address_to with a line chart.",
            "Return a line chart about the change of the sum of monthly_rental over date_address_to , and group by attribute date_address_to."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1297
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 747
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1113
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 3215
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 1032
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 800
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 865
                    },
                    {
                        "x_data": "2018-03-12",
                        "y_data": 1976
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 2043
                    },
                    {
                        "x_data": "2018-03-15",
                        "y_data": 1858
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 620
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1287
                    },
                    {
                        "x_data": "2018-03-22",
                        "y_data": 1067
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 894
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(monthly_rental)"
                }
            }
        }
    },
    {
        "tables_used": [
            "policies"
        ],
        "db_id": "insurance_and_eClaims",
        "nl_queries": [
            "Find the number of records of each policy type and its type code Visualize by bar chart, and could you rank bar in ascending order?",
            "For each policy type, return its type code and its count in the record Visualize by bar chart, could you rank bar in ascending order?",
            "Bar chart x axis policy type code y axis the total number, and order in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Deputy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Jurisdiction",
                        "y_data": 3
                    },
                    {
                        "x_data": "Normal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Uniformed",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Policy_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "machine",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "What are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, and order from high to low by the total number.",
            "A bar chart for what are the number of the names of the technicians that are assigned to repair machines with more point values than 70?, and sort total number from high to low order please.",
            "What are the names of the technicians that are assigned to repair machines with more point values than 70, and count them by a bar chart, and could you sort Y-axis in descending order?",
            "Show names of technicians who are assigned to repair machines with value point more than 70, and count them by a bar chart, order by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day Bin the account open day by weekday in a bar chart, show Y-axis in ascending order.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by weekday in a bar chart, and order y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between student_id and monthly_rental , and group by attribute other_details.",
            "Return a scatter chart about the correlation between student_id and monthly_rental , and group by attribute other_details.",
            "A scatter chart shows the correlation between student_id and monthly_rental , and group by attribute other_details.",
            "What is the relationship between student_id and monthly_rental , and group by attribute other_details?",
            "Show me about the correlation between student_id and monthly_rental , and group by attribute other_details in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 13,
                        "y_data": 1297.807,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 8,
                        "y_data": 1297.3186,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 5,
                        "y_data": 1036.8462,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 12,
                        "y_data": 1032.9782,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 15,
                        "y_data": 1032.8717,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1007.2597,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 13,
                        "y_data": 644.9306,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 2,
                        "y_data": 1287.5604,
                        "classify": "house"
                    },
                    {
                        "x_data": 4,
                        "y_data": 1132.742,
                        "classify": "house"
                    },
                    {
                        "x_data": 3,
                        "y_data": 1113.0996,
                        "classify": "house"
                    },
                    {
                        "x_data": 7,
                        "y_data": 1067.8383,
                        "classify": "house"
                    },
                    {
                        "x_data": 7,
                        "y_data": 894.0958,
                        "classify": "house"
                    },
                    {
                        "x_data": 2,
                        "y_data": 865.2615,
                        "classify": "house"
                    },
                    {
                        "x_data": 6,
                        "y_data": 826.4319,
                        "classify": "house"
                    },
                    {
                        "x_data": 2,
                        "y_data": 800.1214,
                        "classify": "house"
                    },
                    {
                        "x_data": 4,
                        "y_data": 756.6745,
                        "classify": "house"
                    },
                    {
                        "x_data": 11,
                        "y_data": 747.5312,
                        "classify": "house"
                    },
                    {
                        "x_data": 8,
                        "y_data": 683.0735,
                        "classify": "house"
                    },
                    {
                        "x_data": 9,
                        "y_data": 679.2988,
                        "classify": "house"
                    },
                    {
                        "x_data": 10,
                        "y_data": 620.2801,
                        "classify": "house"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "student_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "monthly_rental",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, rank by the x axis in asc please.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, list by the X-axis in ascending.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, sort by the x axis in asc.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, order in asc by the X.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, rank by the x axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4261
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "Show me about the distribution of Days and the sum of Instructor , and group by attribute Days in a bar chart.",
            "Give me the comparison about the sum of Instructor over the Days , and group by attribute Days by a bar chart.",
            "A bar chart shows the distribution of Days and the sum of Instructor , and group by attribute Days.",
            "Give me the comparison about the sum of Instructor over the Days , and group by attribute Days.",
            "Draw a bar chart about the distribution of Days and the sum of Instructor , and group by attribute Days."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 41889
                    },
                    {
                        "x_data": "MT",
                        "y_data": 14011
                    },
                    {
                        "x_data": "MTW",
                        "y_data": 225562
                    },
                    {
                        "x_data": "MW",
                        "y_data": 38000
                    },
                    {
                        "x_data": "T",
                        "y_data": 23244
                    },
                    {
                        "x_data": "TTh",
                        "y_data": 9514
                    },
                    {
                        "x_data": "TW",
                        "y_data": 6330
                    },
                    {
                        "x_data": "Th",
                        "y_data": 41342
                    },
                    {
                        "x_data": "ThF",
                        "y_data": 48758
                    },
                    {
                        "x_data": "T",
                        "y_data": 9379
                    },
                    {
                        "x_data": "W",
                        "y_data": 33883
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Days",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Instructor)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, list by the total number in descending.",
            "Show the number of dogs that received a treatment departed in each day in a bar chart, and display Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-25",
                        "y_data": 6
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "A line chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and I want to display date from low to high order.",
            "A line chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, and I want to display date from low to high order.",
            "What are the dates that have an average sea level pressure between 303 and 31, and count them by a line chart, rank in ascending by the x axis.",
            "What are the number of the dates that have an average sea level pressure between 303 and 31?, display date in asc order.",
            "What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a line chart, list from low to high by the date.",
            "What are the number of the dates in which the mean sea level pressure was between 303 and 31?, display date in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-12-09",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-10",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-12-13",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-12-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-23",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-01-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-01-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-01-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-11-23",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-11-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-11-25",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-12-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-12-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-12-28",
                        "y_data": 3
                    },
                    {
                        "x_data": "2015-01-04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-01-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-01-23",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-02-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-03-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-04-14",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor",
            "visit"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times, and sort X in descending order.",
            "Show name and age for visitors who visited some museums more than once using a bar chart, I want to sort bars from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rafael van der Vaart",
                        "y_data": 25
                    },
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 36
                    },
                    {
                        "x_data": "Arjen Robben",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Road and Team_ID , I want to order x axis in desc order.",
            "Show me team_id by all road in a histogram, could you rank x-axis in descending order?",
            "Show me about the distribution of All_Road and Team_ID in a bar chart, I want to order x axis in desc order.",
            "Find All_Road and Team_ID , and visualize them by a bar chart, and display from high to low by the X-axis.",
            "Return a bar chart about the distribution of All_Road and Team_ID , show by the bars from high to low.",
            "Give me the comparison about Team_ID over the All_Road by a bar chart, could you rank from high to low by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 3
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 4
                    },
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and department_id , and sort by the Y in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and department_id , and order by the y axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and department_id , and visualize them by a bar chart, and rank by the y axis from high to low please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the last_name by a bar chart, rank by the y axis from high to low please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and department_id , and sort DEPARTMENT_ID in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 110
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 20
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Timed_Status_of_Things",
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', and sort y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Furniture",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Commen",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ALBUM",
            "TRACK"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Show the album names and ids for albums that contain tracks with unit price bigger than 1 Visualize by bar chart, and could you show in ascending by the Y-axis?",
            "Return a histogram on what are the titles and ids for albums containing tracks with unit price greater than 1?, and rank in ascending by the y-axis.",
            "Show me a bar chart for what are the titles and ids for albums containing tracks with unit price greater than 1?, and show y axis from low to high order.",
            "Show the album names and ids for albums that contain tracks with unit price bigger than 1 by a bar chart, sort from low to high by the y-axis.",
            "What are the titles and ids for albums containing tracks with unit price greater than 1, could you order by the y axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battlestar Galactica: The Story So Far",
                        "y_data": 226
                    },
                    {
                        "x_data": "Battlestar Galactica, Season 3",
                        "y_data": 227
                    },
                    {
                        "x_data": "Heroes, Season 1",
                        "y_data": 228
                    },
                    {
                        "x_data": "Lost, Season 3",
                        "y_data": 229
                    },
                    {
                        "x_data": "Lost, Season 1",
                        "y_data": 230
                    },
                    {
                        "x_data": "Lost, Season 2",
                        "y_data": 231
                    },
                    {
                        "x_data": "The Office, Season 1",
                        "y_data": 249
                    },
                    {
                        "x_data": "The Office, Season 2",
                        "y_data": 250
                    },
                    {
                        "x_data": "The Office, Season 3",
                        "y_data": 251
                    },
                    {
                        "x_data": "Battlestar Galactica (Classic), Season 1",
                        "y_data": 253
                    },
                    {
                        "x_data": "Aquaman",
                        "y_data": 254
                    },
                    {
                        "x_data": "LOST, Season 4",
                        "y_data": 261
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AlbumId"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Give me a stacked bar chart for showing the total number of each ship type and categorize it by ship nationality, could you list in ascending by the x-axis?",
            "Stack bar chart of the number of type vs Nationality based on type, list by the bar in ascending.",
            "What is the total number of every ship type by categorizing by nationality?, list by the bar in ascending.",
            "Draw a bar chart showing the total number of every ship type by categorizing by nationality, could you sort bars in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 2,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3,
                        "classify": "United Kingdom"
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 1,
                        "classify": "United States"
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 2,
                        "classify": "United States"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of accounts for different statement details in a pie chart.",
            "How many accounts for different statement details? Plot a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Open Project",
                        "y_data": 9
                    },
                    {
                        "x_data": "Private Project",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Statement_Details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of commission_pct over hire_date , and order in descending by the HIRE_DATE please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of commission_pct over hire_date , and rank from high to low by the x-axis please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of commission_pct over hire_date , and rank from high to low by the x-axis please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of commission_pct over hire_date , and rank X in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the change of commission_pct over hire_date, and sort by the X-axis from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of commission_pct over hire_date in a line chart, sort by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 0.1
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 0.35
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 0.25
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 0.3
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 0.4
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Draw a bar chart of county versus the total number, show by the y axis in desc.",
            "Show each county along with the number of schools, and display Y in desc order.",
            "Return a bar chart showing the number of schools in each county, and rank y axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "50 Marshall",
                        "y_data": 3
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 2
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 1
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 1
                    },
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name by a bar chart.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time, and rank by the y axis from low to high.",
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, order y-axis from low to high order.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and I want to order y-axis in asc order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, could you rank by the Y in asc?",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, could you rank by the Y in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 860
                    },
                    {
                        "x_data": "July",
                        "y_data": 1925
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 2111
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 2293
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Create a bar chart showing manager_id across last name, and sort in asc by the MANAGER_ID.",
            "Give me a histogram, that simply displays the last name of the employee and the corresponding manager id, and order y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 103
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 108
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 114
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 121
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 145
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between customer id and card id with a scatter chart.",
            "What is the relationship between customer id and card id? Return a scatter chart.",
            "Scatter plot to show card id on x axis and customer_id on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 14
                    },
                    {
                        "x_data": 2,
                        "y_data": 9
                    },
                    {
                        "x_data": 3,
                        "y_data": 6
                    },
                    {
                        "x_data": 4,
                        "y_data": 15
                    },
                    {
                        "x_data": 5,
                        "y_data": 13
                    },
                    {
                        "x_data": 6,
                        "y_data": 10
                    },
                    {
                        "x_data": 7,
                        "y_data": 9
                    },
                    {
                        "x_data": 8,
                        "y_data": 12
                    },
                    {
                        "x_data": 9,
                        "y_data": 3
                    },
                    {
                        "x_data": 10,
                        "y_data": 10
                    },
                    {
                        "x_data": 11,
                        "y_data": 8
                    },
                    {
                        "x_data": 12,
                        "y_data": 3
                    },
                    {
                        "x_data": 13,
                        "y_data": 2
                    },
                    {
                        "x_data": 14,
                        "y_data": 5
                    },
                    {
                        "x_data": 15,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "card_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order by a pie chart.",
            "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order. Visualize by pie chart.",
            "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments with a pie chart.",
            "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Studio",
                        "y_data": 4
                    },
                    {
                        "x_data": "Duplex",
                        "y_data": 5
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Count the names of each high schooler using a bar chart, and order by the x axis from low to high.",
            "Bar graph to show the number of name from different name, list bar from low to high order.",
            "Can you show me a bar chart to answer how many people with different names for each high schooler?, order by the x axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of companies in each headquarter with a bar chart, show y-axis from low to high order please.",
            "How many companies in each headquarter? Plot a bar chart, could you order in ascending by the y-axis please?",
            "Bar chart of how many headquarters from each headquarters, and list in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                }
            }
        }
    },
    {
        "tables_used": [
            "channel"
        ],
        "db_id": "program_share",
        "nl_queries": [
            "What is the total rating of channel for each channel owner Plot them as bar chart, rank x axis in ascending order.",
            "A bar chart about what is the total rating of channel for each channel owner?, and could you show by the X from low to high?",
            "Draw a bar chart of owner versus total number of rating in percent, and display in ascending by the X.",
            "Show me a bar chart for what is the total rating of channel for each channel owner?, and display in ascending by the X.",
            "Find the total rating ratio for each channel owner Visualize by bar chart, could you show X-axis in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anhui Television",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "CCTV",
                        "y_data": 2.43
                    },
                    {
                        "x_data": "HBS",
                        "y_data": 0.53
                    },
                    {
                        "x_data": "Shandong Television",
                        "y_data": 0.19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Owner",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Rating_in_percent)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the sum of price supplied by supplier id 3 for different product type code in a bar chart, and sort from high to low by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 1634
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "race",
            "track"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Visualize a bar chart for what are the names of different tracks, and how many races has each had?, and could you list in asc by the Y-axis?",
            "What are the names of different tracks, and how many races has each had Plot them as bar chart, could you list in asc by the Y-axis?",
            "Show the name of track and the number of races in each track by a bar chart, and show Y in ascending order please.",
            "Return a histogram on what are the names of different tracks, and how many races has each had?, and show Y in ascending order please.",
            "Show the name of track and the number of races in each track Visualize by bar chart, and could you order y-axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Auto Club Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Daytona International Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Homestead-Miami Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kansas Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Martinsville Speedway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicagoland Speedway",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all majors and corresponding number of students by a scatter chart.",
            "Show all majors and corresponding number of students. Plot them as scatter chart.",
            "how many students are there for each major?",
            "Show me a scatter chart for how many students are there for each major?",
            "How many students are there for each major.",
            "Scatter plot to show major on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 50,
                        "y_data": 2
                    },
                    {
                        "x_data": 100,
                        "y_data": 1
                    },
                    {
                        "x_data": 520,
                        "y_data": 6
                    },
                    {
                        "x_data": 540,
                        "y_data": 2
                    },
                    {
                        "x_data": 550,
                        "y_data": 5
                    },
                    {
                        "x_data": 600,
                        "y_data": 18
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Major"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the number of heads of departments born in each state with a pie chart.",
            "Compute the total the number of born state across born state as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alabama",
                        "y_data": 2
                    },
                    {
                        "x_data": "California",
                        "y_data": 4
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 2
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 1
                    },
                    {
                        "x_data": "Florida",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(born_state)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state"
                }
            }
        }
    },
    {
        "tables_used": [
            "candidate"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A scatter showing the correlation between consider and oppose rates for each candidate.",
            "What is the relationship between consider and oppose rates of each candidate?",
            "Scatter plot to show consider rate on x axis and oppose_rate on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.3,
                        "y_data": 0.43
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 0.45
                    },
                    {
                        "x_data": 0.27,
                        "y_data": 0.43
                    },
                    {
                        "x_data": 0.34,
                        "y_data": 0.44
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 0.32
                    },
                    {
                        "x_data": 0.42,
                        "y_data": 0.32
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Consider_rate"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Oppose_rate"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bin the hire date of employees into the day of week interval and count them for visualizing a bar chart.",
            "Give a bar chart to show the number of employees by each hire date, note that bin the hire date into the day of week interval.",
            "Plot how many hire date by grouped by hire date as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 4
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ref_product_categories",
            "products"
        ],
        "db_id": "products_gen_characteristics",
        "nl_queries": [
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, display by the y-axis from high to low.",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and display by the y-axis from high to low.",
            "Find the number of the category descriptions of the products whose descriptions include letter 't', I want to sort y-axis in descending order.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, display Y from high to low order.",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, display by the total number in desc.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and display Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Seeds",
                        "y_data": 3
                    },
                    {
                        "x_data": "Herbs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Spices",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_category_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart.",
            "Draw a bar chart about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time.",
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time.",
            "Find Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart.",
            "Show me about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time in a bar chart.",
            "Bar chart x axis is full time y axis mean employee id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "T",
                        "y_data": 3.8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Bar graph to show the total number from different address, I want to display names from low to high order.",
            "Find the number of members living in each address Show bar chart, and I want to show x-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bridgeport",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheshire",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Waterbury",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, sort by the Y in asc.",
            "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, and could you show mean meter 100 from low to high order?",
            "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and order by the y-axis in asc.",
            "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, I want to list mean meter 100 from low to high order.",
            "Plot mean meter 100 by grouped by meter 200 as a bar graph, and list by the y axis in ascending.",
            "Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, I want to list mean meter 100 from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "storm",
            "affected_region"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "how many regions were affected by each storm?, could you sort bar in descending order?",
            "How many regions were affected by each storm Visualize by bar chart, and order bars from high to low order.",
            "Return a bar chart on how many regions were affected by each storm?, list in descending by the names please.",
            "List the name for storms and the number of affected regions for each storm, order bars from high to low order.",
            "List the name for storms and the number of affected regions for each storm with a bar chart, and could you sort bar in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Three",
                        "y_data": 1
                    },
                    {
                        "x_data": "One",
                        "y_data": 2
                    },
                    {
                        "x_data": "Four",
                        "y_data": 1
                    },
                    {
                        "x_data": "Five",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What is the relationship between Team_ID and ACC_Percent , and group by attribute ACC_Home?",
            "Visualize the relationship between Team_ID and ACC_Percent , and group by attribute ACC_Home.",
            "Visualize a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute ACC_Home.",
            "Draw a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute ACC_Home.",
            "Show me about the correlation between Team_ID and ACC_Percent , and group by attribute ACC_Home in a scatter chart.",
            "Scatterplot of acc_percent vs team id by ACC_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.563,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.625,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Charges"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Visualize a bar chart for how much does each charge type costs? List both charge type and amount.",
            "How much does each charge type costs? List both charge type and amount.",
            "List each charge type and its amount in a bar chart.",
            "List each charge type and its amount. Show bar chart.",
            "Give me a bar chart for charge_amount of each charge type"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Daily Accommodation",
                        "y_data": 98
                    },
                    {
                        "x_data": "Drugs",
                        "y_data": 322
                    },
                    {
                        "x_data": "Health Check",
                        "y_data": 640
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "charge_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "charge_amount"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For those dates with a max temperature greater than or equal to 80, I want to see the number of days for each year using a bar chart, and show in asc by the total number.",
            "Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year, and could you list total number in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 87
                    },
                    {
                        "x_data": "2015",
                        "y_data": 155
                    },
                    {
                        "x_data": "2014",
                        "y_data": 260
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the minimum room count of apartments in different type with a bar chart, display by the bars in ascending.",
            "Bar graph to show minimal room count from different apt type code, and sort X in asc order.",
            "Return a bar chart showing the minimum room count of apartments in different type, order in asc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duplex",
                        "y_data": 3
                    },
                    {
                        "x_data": "Flat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Studio",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(room_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Give me the comparison about author_id over the family_name .",
            "A bar chart shows the distribution of family_name and author_id .",
            "Draw a bar chart about the distribution of family_name and author_id .",
            "Return a bar chart about the distribution of family_name and author_id .",
            "Show me about the distribution of family_name and author_id in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rohan",
                        "y_data": 6
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Greenholt",
                        "y_data": 11
                    },
                    {
                        "x_data": "Reichel",
                        "y_data": 3
                    },
                    {
                        "x_data": "Champlin",
                        "y_data": 10
                    },
                    {
                        "x_data": "Crist",
                        "y_data": 14
                    },
                    {
                        "x_data": "Zboncak",
                        "y_data": 9
                    },
                    {
                        "x_data": "Nader",
                        "y_data": 4
                    },
                    {
                        "x_data": "Rowe",
                        "y_data": 8
                    },
                    {
                        "x_data": "Treutel",
                        "y_data": 7
                    },
                    {
                        "x_data": "Effertz",
                        "y_data": 13
                    },
                    {
                        "x_data": "Armstrong",
                        "y_data": 2
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 15
                    },
                    {
                        "x_data": "Kreiger",
                        "y_data": 12
                    },
                    {
                        "x_data": "Barrows",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "family_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Find the component amounts and names of all furnitures that have more than 10 components.",
            "Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Billiard table",
                        "y_data": 14
                    },
                    {
                        "x_data": "Dining set",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_Component"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Faculty_participates_in"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "What is the first name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in with a bar chart, and sort in descending by the Y-axis.",
            "A bar chart showing the first name of all the faculty members who participated in some activity, together with the number of activities they participated in, and sort in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Yair",
                        "y_data": 3
                    },
                    {
                        "x_data": "Stacey",
                        "y_data": 3
                    },
                    {
                        "x_data": "Scott",
                        "y_data": 3
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 3
                    },
                    {
                        "x_data": "David",
                        "y_data": 3
                    },
                    {
                        "x_data": "Daniel",
                        "y_data": 3
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 2
                    },
                    {
                        "x_data": "Luigi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Louis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lawrence",
                        "y_data": 2
                    },
                    {
                        "x_data": "Joanne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 2
                    },
                    {
                        "x_data": "Alan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Leslie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ellie",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id, I want to display in desc by the sum department id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and display from high to low by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, I want to display in desc by the sum department id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and could you rank by the Y-axis in desc?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and could you sort sum department id in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "A bar chart showing the number of different competition types, display from high to low by the x axis.",
            "Show the number of different competition types with a bar graph, and I want to display from high to low by the Competition_type.",
            "Give me a bar chart for how many competition type of each competition type, and I want to order in desc by the x axis please.",
            "What is the number of types of competition?, I want to display X-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    },
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Competition_type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter by a bar chart, rank in ascending by the y-axis.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of revenue , and group by attribute headquarter in a bar chart, and rank total number from low to high order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, I want to rank total number in asc order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, and I want to rank total number in asc order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter, rank total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paris",
                        "y_data": 60
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 150
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name, and I want to sort from high to low by the bar please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, order from high to low by the names.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of code , and group by attribute name, order from high to low by the names.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, order names in descending order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and display by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 8.5
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring",
            "shop"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Find the number of employees hired in each shop, and plot them as bar chart.",
            "For each shop, return the number of employees working there and the name of the shop. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FC Haka",
                        "y_data": 2
                    },
                    {
                        "x_data": "FC Inter",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC KooTeePee",
                        "y_data": 1
                    },
                    {
                        "x_data": "FC Lahti",
                        "y_data": 1
                    },
                    {
                        "x_data": "FF Jaro",
                        "y_data": 1
                    },
                    {
                        "x_data": "HJK",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS",
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Give me a bar chart for those countries of all appellations who have at most three wines, I want to sort by the Y from low to high please.",
            "What are the countries for applications with at most 3 wines? Return the result in a bar chart, and sort Y-axis in asc order.",
            "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and rank in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 1
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 2
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 3
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 6
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the proportion of Team_ID and Team_ID in a pie chart.",
            "Draw a pie chart about the proportion of All_Neutral and Team_ID.",
            "Return a pie chart about the proportion of All_Neutral and Team_ID.",
            "A pie chart shows the proportion of All_Neutral and team id.",
            "Visualize a pie chart about the proportion of All_Neutral and Team ID.",
            "I want to know the proportion of team id for each all neutral."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 1
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 3
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then shows the amount of each payment, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 9
                    },
                    {
                        "x_data": "2018",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A line chart shows the change of the sum of Employee_ID over Start_from bin start_from by time, sort X-axis in asc order.",
            "Return a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time, and rank from low to high by the x-axis.",
            "Visualize a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time, display in asc by the x-axis.",
            "Draw a line chart about the change of the sum of Employee_ID over Start_from bin start_from by time, and display in asc by the x-axis.",
            "A line chart shows the trend of the sum of Employee_ID over Start_from bin start_from by time, I want to sort by the x-axis from low to high.",
            "Show me about the change of the sum of Employee_ID over Start_from bin start_from by time in a line chart, and sort Start_from in ascending order.",
            "I want to see trend of sum employee id by start from, list by the x axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 2
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 7
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6
                    },
                    {
                        "x_data": "2011",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the minimum gpa of all students in each department with a pie chart.",
            "What is the lowest student GPA for every department? Return a pie chart.",
            "Compute the total minimal stu gpa across dept code as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 2.26
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.09
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex, and sort by the X-axis from low to high please.",
            "Find Sex and the sum of Weight , and group by attribute Sex, and visualize them by a bar chart, and sort in ascending by the bars please.",
            "Give me a bar chart for sum weight of each sex, could you list X-axis from low to high order?",
            "Show me about the distribution of Sex and the sum of Weight , and group by attribute Sex in a bar chart, and sort X in asc order please.",
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex by a bar chart, and list by the X-axis in ascending.",
            "A bar chart shows the distribution of Sex and the sum of Weight , and group by attribute Sex, could you list X-axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 184
                    },
                    {
                        "x_data": "M",
                        "y_data": 607
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find login_name and author_id , and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of login_name and author_id .",
            "Return a bar chart about the distribution of login_name and author_id .",
            "Show me about the distribution of login_name and author_id in a bar chart.",
            "Draw a bar chart about the distribution of login_name and author_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "al75",
                        "y_data": 6
                    },
                    {
                        "x_data": "jmckenzie",
                        "y_data": 1
                    },
                    {
                        "x_data": "dschaefer",
                        "y_data": 11
                    },
                    {
                        "x_data": "clementina29",
                        "y_data": 3
                    },
                    {
                        "x_data": "adam.rippin",
                        "y_data": 10
                    },
                    {
                        "x_data": "fiona77",
                        "y_data": 14
                    },
                    {
                        "x_data": "antonetta19",
                        "y_data": 9
                    },
                    {
                        "x_data": "wlehner",
                        "y_data": 4
                    },
                    {
                        "x_data": "medhurst.alvah",
                        "y_data": 8
                    },
                    {
                        "x_data": "marty.bergnaum",
                        "y_data": 7
                    },
                    {
                        "x_data": "qking",
                        "y_data": 13
                    },
                    {
                        "x_data": "heidenreich.ara",
                        "y_data": 2
                    },
                    {
                        "x_data": "ekshlerin",
                        "y_data": 15
                    },
                    {
                        "x_data": "nellie.mosciski",
                        "y_data": 12
                    },
                    {
                        "x_data": "nyundt",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "login_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "people)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "A bar chart about the number of countries for all people whose age is smaller than the average, display Y in ascending order.",
            "Show the number of countries for all people whose age is smaller than the average, order from low to high by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "List all directors along with the number of films directed by each director with a pie chart.",
            "List all directors along with the number of films directed by each director. Visualize by pie chart.",
            "Give me a pie to show the total number from different directed by."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bill Schreiner",
                        "y_data": 4
                    },
                    {
                        "x_data": "Jesus Salvador Trevi\u00f1o",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Directed_by"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Display a bar chart for what are the names of climbers and the corresponding heights of the mountains that they climb?, rank y axis from low to high order.",
            "Show the names of climbers and the heights of mountains they climb by a bar chart, show from low to high by the Y-axis please.",
            "Show the names of climbers and the heights of mountains they climb Show bar chart, show from low to high by the Y-axis please.",
            "What are the names of climbers and the corresponding heights of the mountains that they climb Show bar chart, and rank by the Height in ascending.",
            "A bar chart about what are the names of climbers and the corresponding heights of the mountains that they climb?, and sort by the y axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "L Currie",
                        "y_data": 4890
                    },
                    {
                        "x_data": "Mick Horsepole",
                        "y_data": 4890
                    },
                    {
                        "x_data": "Arseneus Butscher",
                        "y_data": 4985
                    },
                    {
                        "x_data": "Charlie Freedman",
                        "y_data": 4985
                    },
                    {
                        "x_data": "Georg Auerbacher",
                        "y_data": 5148
                    },
                    {
                        "x_data": "Hans Luthringhauser",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Horst Owesle",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Jean Claude Castella",
                        "y_data": 5199
                    },
                    {
                        "x_data": "Klaus Enders",
                        "y_data": 5895
                    },
                    {
                        "x_data": "Siegfried Schauz",
                        "y_data": 5895
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each county along with the corresponding number of delegates from that county Plot them as bar chart, and rank in asc by the y-axis please.",
            "For each county, find the name of the county and the number of delegates from that county Show bar chart, and show by the Y from low to high please.",
            "Show the name of each county along with the corresponding number of delegates from that county with a bar chart, and order by the the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please return me a bar chart show what are the average smallest rating of different movie title?, show from low to high by the stars).",
            "Visualize the title and their average smallest ratings of the movie using a bar chart, and show by the y-axis from low to high.",
            "Visualize the average smallest rating of different movie title using a bar chart, and I want to sort by the stars) in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners in a stacked bar chart The x-axis is first name and group by skill description, could you order by the first_name in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 0,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES",
            "car_makers"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many car makers are there in each continents? List the continent name and the count by a bar chart, and order names in asc order.",
            "What is the name of each continent and how many car makers are there in each one Plot them as bar chart, and sort in asc by the x axis please.",
            "A bar chart about what is the name of each continent and how many car makers are there in each one?, and show in asc by the X please.",
            "Display a bar chart for what is the name of each continent and how many car makers are there in each one?, and I want to order in ascending by the Continent.",
            "how many car makers are there in each continents? List the continent name and the count, order names in asc order.",
            "How many car makers are there in each continents? List the continent name and the count Visualize by bar chart, and order names in asc order.",
            "Draw a bar chart for how many car makers are there in each continents? List the continent name and the count, and display in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "america",
                        "y_data": 4
                    },
                    {
                        "x_data": "asia",
                        "y_data": 7
                    },
                    {
                        "x_data": "europe",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Visualize the title and their total smallest ratings of the movie using a bar chart.",
            "Please return me a bar chart show what are the total smallest rating of different movie title?",
            "Visualize the total smallest rating of different movie title using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 8
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 5
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(min(T1.stars))"
                }
            }
        }
    },
    {
        "tables_used": [
            "bank",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Find the total amount of loans offered by each bank branch.",
            "Return a bar chart on what are the names of the different bank branches, and what are their total loan amounts?",
            "What are the names of the different bank branches, and what are their total loan amounts. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "broadway",
                        "y_data": 5000
                    },
                    {
                        "x_data": "downtown",
                        "y_data": 3000
                    },
                    {
                        "x_data": "morningside",
                        "y_data": 2050
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart, show by the bar from high to low.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, and display in desc by the X-axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, and rank by the bars in desc.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute founder, and show by the bar from high to low.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart, and rank by the bars in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Return a scatter chart showing the relationship between major id and average age.",
            "Show me a scatter plot of major and the average of age for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 50,
                        "y_data": 22
                    },
                    {
                        "x_data": 100,
                        "y_data": 17
                    },
                    {
                        "x_data": 520,
                        "y_data": 19.33333333333333
                    },
                    {
                        "x_data": 540,
                        "y_data": 17.5
                    },
                    {
                        "x_data": 550,
                        "y_data": 19.8
                    },
                    {
                        "x_data": 600,
                        "y_data": 19.666666666666668
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Major"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, order by the JOB_ID in asc.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and sort from low to high by the X-axis.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to order x-axis in ascending order please.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, list by the bar from low to high.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to order by the names in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 80
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute headquarter by a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute headquarter in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS",
            "Transactions_Lots"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the average amount of transactions for different lots in a scatter chart",
            "Show the average amount of transactions for different lots. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 101119.2532
                    },
                    {
                        "x_data": 3,
                        "y_data": 207484122.2796
                    },
                    {
                        "x_data": 4,
                        "y_data": 48777.969000000005
                    },
                    {
                        "x_data": 8,
                        "y_data": 48777.969000000005
                    },
                    {
                        "x_data": 9,
                        "y_data": 0
                    },
                    {
                        "x_data": 10,
                        "y_data": 13.084466666666666
                    },
                    {
                        "x_data": 11,
                        "y_data": 24402.613
                    },
                    {
                        "x_data": 14,
                        "y_data": 175642.8343
                    },
                    {
                        "x_data": 15,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "lot_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(amount_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Return a bar chart showing the number of documents for each document type name, show names in asc order please.",
            "How many documents for each document type name? Visualize by a ar chart, sort by the X-axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 3
                    },
                    {
                        "x_data": "Film",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paper",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template ids and number of documents using each template with a scatter chart.",
            "Show all template ids and number of documents using each template. Show the correlation.",
            "Visualize a scatter chart on what are all different template ids used for documents, and how many times were each of them used?",
            "Scatter chart. what are all different template ids used for documents, and how many times were each of them used?",
            "What are all different template ids used for documents, and how many times were each of them used. Visualize by scatter chart.",
            "Scatter plot to show template id on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 4,
                        "y_data": 1
                    },
                    {
                        "x_data": 6,
                        "y_data": 1
                    },
                    {
                        "x_data": 7,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 1
                    },
                    {
                        "x_data": 10,
                        "y_data": 1
                    },
                    {
                        "x_data": 11,
                        "y_data": 2
                    },
                    {
                        "x_data": 14,
                        "y_data": 2
                    },
                    {
                        "x_data": 20,
                        "y_data": 1
                    },
                    {
                        "x_data": 21,
                        "y_data": 1
                    },
                    {
                        "x_data": 22,
                        "y_data": 1
                    },
                    {
                        "x_data": 25,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Template_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, list by the y axis in desc.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, sort total number from high to low order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, display by the Y-axis in descending.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and display by the mean employee id from high to low.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and show in desc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.55555555555554
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.76923076923077
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 148
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 135.44444444444446
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 116
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111.25
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me a scatter chart that groups all home, the x-axis is school id and the y-axis is all games percent.",
            "Group by all home attribute, show me the school id and all_games_percent in a scatter plot.",
            "Draw a scatterplot of school id vs all_games_percent where school id is on the x-axis and points are colored by All_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.706,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.6,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor",
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "how many actors have appeared in each musical?, and list from low to high by the y-axis please.",
            "How many actors have appeared in each musical Plot them as bar chart, list in ascending by the Y-axis.",
            "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, and display Y-axis in ascending order please.",
            "Return a histogram on how many actors have appeared in each musical?, could you display in asc by the total number?",
            "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, and list from low to high by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "West Side Story",
                        "y_data": 1
                    },
                    {
                        "x_data": "Les Mis\u00e9rables",
                        "y_data": 2
                    },
                    {
                        "x_data": "The Phantom of the Opera",
                        "y_data": 2
                    },
                    {
                        "x_data": "The Book of Mormon",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Stacked bar chart of how many away team for with each Home_team in each away team, and I want to sort X-axis from high to low order please.",
            "List the number of games for each away team and group by home team in a stacked bar chart The x-axis is away team, and sort X-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 9,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 1,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, and list by the total number in asc.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time, could you display in ascending by the Y-axis?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, order from low to high by the Y-axis please.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart, and order from low to high by the Y-axis please.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, show from low to high by the total number of manager id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    },
                    {
                        "x_data": "June",
                        "y_data": 1155
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3391
                    },
                    {
                        "x_data": "July",
                        "y_data": 3410
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4314
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "A bar chart showing the average purchase time for each coffee shop address."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bridgeport",
                        "y_data": 26
                    },
                    {
                        "x_data": "Cheshire",
                        "y_data": 35
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 21.666666666666668
                    },
                    {
                        "x_data": "Waterbury",
                        "y_data": 27.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Time_of_purchase)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "A line chart shows how many churches open each year?",
            "Give me the trend about the number of church opening in each year.",
            "Show me a line chart of how the number of open date change over the open date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1830",
                        "y_data": 1
                    },
                    {
                        "x_data": "1831",
                        "y_data": 1
                    },
                    {
                        "x_data": "1832",
                        "y_data": 1
                    },
                    {
                        "x_data": "1833",
                        "y_data": 0
                    },
                    {
                        "x_data": "1834",
                        "y_data": 0
                    },
                    {
                        "x_data": "1835",
                        "y_data": 0
                    },
                    {
                        "x_data": "1836",
                        "y_data": 1
                    },
                    {
                        "x_data": "1837",
                        "y_data": 1
                    },
                    {
                        "x_data": "1838",
                        "y_data": 0
                    },
                    {
                        "x_data": "1839",
                        "y_data": 1
                    },
                    {
                        "x_data": "1840",
                        "y_data": 1
                    },
                    {
                        "x_data": "1841",
                        "y_data": 0
                    },
                    {
                        "x_data": "1842",
                        "y_data": 1
                    },
                    {
                        "x_data": "1843",
                        "y_data": 0
                    },
                    {
                        "x_data": "1844",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, display from low to high by the Y-axis.",
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, display from low to high by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abscond or bolster",
                        "y_data": 51
                    },
                    {
                        "x_data": "Riddle to exculpate",
                        "y_data": 55
                    },
                    {
                        "x_data": "Mendicant with cryptic",
                        "y_data": 56
                    },
                    {
                        "x_data": "Interim but salutary",
                        "y_data": 59
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 59
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 60
                    },
                    {
                        "x_data": "Recluse and defiance",
                        "y_data": 62
                    },
                    {
                        "x_data": "Immutable before decorum",
                        "y_data": 63
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 66
                    },
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 69
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "For each title, use a bar chart to show the number of films, and sort by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rocky III",
                        "y_data": 4
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1
                    },
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught with a bar chart grouping by course code.",
            "How many courses each teacher taught? Show me a bar chart grouping by course code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    },
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_CODE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "How many members are there in each country? Visualize in a pie chart.",
            "Give me a pie to show how many country from different country."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "region",
            "affected_region"
        ],
        "db_id": "storm_record",
        "nl_queries": [
            "Draw a bar chart for how many storms occured in each region?, I want to rank the total number from low to high order.",
            "How many storms occured in each region Visualize by bar chart, and could you display the total number from low to high order?",
            "Show the name for regions and the number of storms for each region, and I want to list by the y axis in asc.",
            "Show me a bar chart for how many storms occured in each region?, sort by the y axis from low to high please.",
            "Show the name for regions and the number of storms for each region by a bar chart, and order total number from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Algeria",
                        "y_data": 1
                    },
                    {
                        "x_data": "Denmark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Afghanistan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Albania",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Region_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students whose age is younger than the average age and group by students' first name in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charles",
                        "y_data": 1
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all the planned delivery dates and bin by year in a line chart.",
            "Visualize the general trend of the number of planned delivery date over the planned delivery date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1971~1975",
                        "y_data": 4
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 2
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 1
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016~2017",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Planned_Delivery_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Planned_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "When do all the researcher role staff start to work? Bin the time into weekday interval and count them with a bar chart.",
            "Plot how many date from by grouped by date from as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, order in descending by the y axis.",
            "For those records from the products and each product's manufacturer, find name and the sum of code , and group by attribute name, and visualize them by a bar chart, and show total number of code from high to low order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, could you list by the y axis in desc?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, could you display total number in desc order?",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, and sort y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 28
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 23
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 5
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "What are the countries of mountains with height bigger than 5000, and count them by a bar chart, and I want to list y-axis in asc order.",
            "A bar chart for what are the number of the countries of mountains with height bigger than 5000?, order by the Y-axis in asc.",
            "Return the number of the countries of the mountains that have a height larger than 5000, and I want to list y axis from low to high order.",
            "A bar chart for returning the number of the countries of the mountains that have a height larger than 5000, and I want to list y-axis in asc order.",
            "What are the number of the countries of mountains with height bigger than 5000?, I want to rank by the Y-axis from low to high.",
            "Return the countries of the mountains that have a height larger than 5000, and count them by a bar chart, could you sort y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DR Congo Uganda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tanzania",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give the name of each department and the number of employees in each Plot them as bar chart, show by the Y-axis in descending please.",
            "Give the name of each department and the number of employees in each in a bar chart, and could you sort by the y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shipping",
                        "y_data": 45
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 34
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 6
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 6
                    },
                    {
                        "x_data": "IT",
                        "y_data": 5
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 2
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 2
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 1
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, for employee_id, hire_date, visualize the trend.",
            "For those employees who was hired before 2002-06-21, show me about the change of employee_id over hire_date in a line chart.",
            "For those employees who was hired before 2002-06-21, give me the trend about employee_id over hire_date .",
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of employee_id over hire_date .",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of employee_id over hire_date",
            "For those employees who was hired before 2002-06-21, show me the trend about employee_id over hire_date with a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 104
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 105
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 106
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 107
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 109
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 111
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 112
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 113
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 115
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 116
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 117
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 118
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 119
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 125
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 126
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 127
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 128
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 129
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 130
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 131
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 132
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 133
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 134
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 135
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 136
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 137
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 138
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 139
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 140
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 141
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 142
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 143
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 144
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 150
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 151
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 152
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 153
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 154
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 155
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 156
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 157
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 158
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 159
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 160
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 161
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 162
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 163
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 164
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 165
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 166
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 167
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 168
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 169
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 170
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 171
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 172
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 173
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 174
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 175
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 176
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 177
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 178
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 179
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 180
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 181
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 182
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 183
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 184
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 185
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 186
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 187
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 188
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 189
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 190
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 191
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 192
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 193
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 194
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 195
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 196
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 197
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 198
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 199
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 200
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 202
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 203
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 204
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 206
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bin the hire date of employees into Month interval and count them for visualizing a bar chart, list by the how many hire date from low to high.",
            "Create a bar chart showing how many hire date across hire date, and I want to list by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "July",
                        "y_data": 2
                    },
                    {
                        "x_data": "June",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the price of each product supplied by supplier id 3 in a bar chart, and show names in asc order.",
            "What is the price of each product supplied by supplier id 3? Return a bar chart, and list bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "black jeans",
                        "y_data": 695.16
                    },
                    {
                        "x_data": "blue jeans",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "mouse",
                        "y_data": 803.74
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "product_price"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Bar graph to show sum card number from different card type code, and display by the X in ascending.",
            "What are card ids, customer ids, card types, and card numbers for each customer card?, and I want to order x axis in asc order.",
            "\u5361\u53f7\u6c42\u548c\u65e0\u610f\u4e49, order x-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 21491532119475148
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 10744938002896200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(card_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Policies"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy, could you order by the bar in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Diana Rath",
                        "y_data": 4
                    },
                    {
                        "x_data": "Ellsworth Paucek",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lauriane Ferry PhD",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mrs. Hanna Willms",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Customer_Details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Customer_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of engineers and group by other details in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 19
                    },
                    {
                        "x_data": "Skilled",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the name and capacity of products with price greater than 700 (in USD) Show bar chart, I want to list in asc by the x axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, list by the X in ascending.",
            "Display a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, display by the names from low to high please.",
            "Visualize a bar chart for which catalog contents has price above 700 dollars? Show their catalog entry names and capacities, order in asc by the x-axis.",
            "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities in a bar chart, and I want to list in asc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Diet Mountain Dew",
                        "y_data": 8
                    },
                    {
                        "x_data": "Diet Pepsi",
                        "y_data": 9
                    },
                    {
                        "x_data": "Dr Pepper",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sprite Lemo",
                        "y_data": 8
                    },
                    {
                        "x_data": "Vimto",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Return me a bar chart to show the average experience working length of journalists working on different role type, I want to display by the y axis in descending.",
            "Visualize the average experience working length of journalists working on different role type using a bar chart, and could you rank in descending by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Host",
                        "y_data": 16.5
                    },
                    {
                        "x_data": "Music",
                        "y_data": 14
                    },
                    {
                        "x_data": "Screening",
                        "y_data": 4.666666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Work_Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Years_working)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, I want to show by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "w",
                        "y_data": 3
                    },
                    {
                        "x_data": "l",
                        "y_data": 3
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, could you sort y axis in ascending order?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, and rank Y-axis in ascending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, display by the Y from low to high.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter by a bar chart, I want to order by the y axis from low to high please.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, and rank by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about ID over the meter_400 by a bar chart, sort in asc by the y axis.",
            "Show me about the distribution of meter_400 and ID in a bar chart, and order by the y axis in asc.",
            "Visualize a bar chart about the distribution of meter_400 and ID , sort in asc by the y axis.",
            "Find meter_400 and ID , and visualize them by a bar chart, order by the y axis in asc.",
            "A bar chart shows the distribution of meter_400 and ID , order by the y axis in asc.",
            "Show id from each meter 400, and sort y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3:57.12",
                        "y_data": 1
                    },
                    {
                        "x_data": "3:57.00",
                        "y_data": 2
                    },
                    {
                        "x_data": "3:55.49",
                        "y_data": 3
                    },
                    {
                        "x_data": "3:55.72",
                        "y_data": 4
                    },
                    {
                        "x_data": "3:55.37",
                        "y_data": 5
                    },
                    {
                        "x_data": "3:56.34",
                        "y_data": 6
                    },
                    {
                        "x_data": "3:55.36",
                        "y_data": 7
                    },
                    {
                        "x_data": "3:52.93",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_400",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and rank in desc by the bars.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id, could you list in desc by the x-axis please?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, and list by the JOB_ID from high to low.",
            "For those employees who did not have any job in the past, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, list by the JOB_ID from high to low.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, and list by the JOB_ID from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 488
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4759
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return a bar chart on what are the apartment number and the room count of each apartment?, list in ascending by the bars.",
            "What are the apartment number and the room count of each apartment Visualize by bar chart, and sort by the x-axis in asc.",
            "Show me a bar chart for what are the apartment number and the room count of each apartment?, list in asc by the bar.",
            "Return the apartment number and the number of rooms for each apartment by a bar chart, could you list by the names in ascending?",
            "Give me a bar chart for room_count of each apt number, and order from low to high by the apt_number.",
            "Return the apartment number and the number of rooms for each apartment, and display by the bar in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apt. 187",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 411",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 5
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 837",
                        "y_data": 8
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 6
                    },
                    {
                        "x_data": "Apt. 908",
                        "y_data": 7
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 6
                    },
                    {
                        "x_data": "Suite 307",
                        "y_data": 9
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 645",
                        "y_data": 7
                    },
                    {
                        "x_data": "Suite 693",
                        "y_data": 9
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "room_count"
                }
            }
        }
    },
    {
        "tables_used": [
            "user_profiles"
        ],
        "db_id": "twitter_1",
        "nl_queries": [
            "List the name and number of followers for each user, and sort the results by the number of followers in descending order with a bar chart.",
            "List the name and number of followers for each user, and sort the results by the number of followers in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tyler Swift",
                        "y_data": 99999998
                    },
                    {
                        "x_data": "Natalie Portman",
                        "y_data": 94375428
                    },
                    {
                        "x_data": "Black Widow\n",
                        "y_data": 35425845
                    },
                    {
                        "x_data": "Celine Dion",
                        "y_data": 23927492
                    },
                    {
                        "x_data": "Iron Man",
                        "y_data": 6662425
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 890
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "followers"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find Team_Name and ACC_Percent , and visualize them by a bar chart, and order by the ACC_Percent in ascending.",
            "A bar chart shows the distribution of Team_Name and ACC_Percent , display in asc by the y-axis please.",
            "Plot acc_percent by grouped by team name as a bar graph, and could you rank Y-axis in ascending order?",
            "Show me about the distribution of Team_Name and ACC_Percent in a bar chart, and could you rank Y-axis in ascending order?",
            "Give me the comparison about ACC_Percent over the Team_Name by a bar chart, and rank from low to high by the ACC_Percent please.",
            "Give me the comparison about ACC_Percent over the Team_Name , and rank from low to high by the ACC_Percent please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the average price of each film in a bar chart, I want to show y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "A bar chart about what is the total revenue of each manufacturer?, and show by the total number of revenue in asc.",
            "Bar graph to show sum revenue from different name, order by the y axis from low to high please.",
            "Find the total revenue for each manufacturer Plot them as bar chart, I want to list from low to high by the Y-axis.",
            "Return a bar chart on what is the total revenue of each manufacturer?, and order by the y axis from low to high please.",
            "What is the total revenue of each manufacturer, and show by the total number of revenue in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "circuits"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Find the id and location of circuits that belong to France or Belgium. Plot them as bar chart.",
            "Visualize a bar chart for what are the ids and locations of all circuits in France or Belgium?",
            "Display a bar chart for what are the ids and locations of all circuits in France or Belgium?",
            "What are the ids and locations of all circuits in France or Belgium. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Magny Cours",
                        "y_data": 8
                    },
                    {
                        "x_data": "Spa",
                        "y_data": 13
                    },
                    {
                        "x_data": "Le Castellet",
                        "y_data": 34
                    },
                    {
                        "x_data": "Heusden-Zolder",
                        "y_data": 40
                    },
                    {
                        "x_data": "Dijon",
                        "y_data": 41
                    },
                    {
                        "x_data": "Brussels",
                        "y_data": 50
                    },
                    {
                        "x_data": "Clermont-Ferrand",
                        "y_data": 51
                    },
                    {
                        "x_data": "Rouen",
                        "y_data": 53
                    },
                    {
                        "x_data": "Le Mans",
                        "y_data": 54
                    },
                    {
                        "x_data": "Reims",
                        "y_data": 55
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "circuitId"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "For each room, find its name and the number of times reservations were made for it, you can use the data to draw a bar chart, list by the roomName from low to high.",
            "Return the name of rooms and the number of reservations made for each of the rooms to draw a bar chart, and order bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abscond or bolster",
                        "y_data": 51
                    },
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 69
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 66
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 60
                    },
                    {
                        "x_data": "Immutable before decorum",
                        "y_data": 63
                    },
                    {
                        "x_data": "Interim but salutary",
                        "y_data": 59
                    },
                    {
                        "x_data": "Mendicant with cryptic",
                        "y_data": 56
                    },
                    {
                        "x_data": "Recluse and defiance",
                        "y_data": 62
                    },
                    {
                        "x_data": "Riddle to exculpate",
                        "y_data": 55
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 59
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of the first name of students who are living in the Smith Hall.",
            "Find the first name of students who are living in the Smith Hall, and count them by a pie chart",
            "What are the number of the first names of all students in Smith Hall?",
            "A pie chart for finding the number of the first name of students who are living in the Smith Hall.",
            "A pie chart for what are the number of the first names of all students in Smith Hall?",
            "What are the first names of all students in Smith Hall, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "What are the number of rooms for each bed type Show bar chart, I want to show by the x axis in ascending.",
            "Find the number of rooms for each bed type Visualize by bar chart, and show in ascending by the bars.",
            "Return a bar chart on what are the number of rooms for each bed type?, and order by the X in ascending.",
            "Create a bar chart showing the total number across bedtype, and rank bar in asc order please.",
            "A bar chart about what are the number of rooms for each bed type?, could you show x-axis in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 2
                    },
                    {
                        "x_data": "King",
                        "y_data": 4
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "What is the number of companies for each headquarter? Visualize by bar chart.",
            "Show the number of headquarters from each headquarters"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 4
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Policies"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Find the the customer details and id for the customers who had more than one policy, list total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lauriane Ferry PhD",
                        "y_data": 6
                    },
                    {
                        "x_data": "Dr. Diana Rath",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mrs. Hanna Willms",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ellsworth Paucek",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Customer_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Customer_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A bar chart shows the distribution of Date_of_Birth and Weight , sort names from low to high order.",
            "Show weight from each date of birth, and I want to order X-axis from low to high order.",
            "Visualize a bar chart about the distribution of Date_of_Birth and Weight , and could you display x-axis from low to high order?",
            "Give me the comparison about Weight over the Date_of_Birth , and list by the bar in ascending.",
            "Give me the comparison about Weight over the Date_of_Birth by a bar chart, display bar in ascending order.",
            "Show me about the distribution of Date_of_Birth and Weight in a bar chart, could you display by the bar in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "01.09.1977",
                        "y_data": 88
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 94
                    },
                    {
                        "x_data": "05.05.1972",
                        "y_data": 92
                    },
                    {
                        "x_data": "06.10.1976",
                        "y_data": 83
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 90
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 85
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 89
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 88
                    },
                    {
                        "x_data": "28.09.1981",
                        "y_data": 82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show the relationship between version number and template id in a scatter chart.",
            "What is the relationship between version number and template id? Give me a scatter chart.",
            "Scatter plot to show template id on x axis and version_number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 5
                    },
                    {
                        "x_data": 1,
                        "y_data": 9
                    },
                    {
                        "x_data": 4,
                        "y_data": 4
                    },
                    {
                        "x_data": 6,
                        "y_data": 2
                    },
                    {
                        "x_data": 7,
                        "y_data": 8
                    },
                    {
                        "x_data": 8,
                        "y_data": 3
                    },
                    {
                        "x_data": 9,
                        "y_data": 2
                    },
                    {
                        "x_data": 10,
                        "y_data": 1
                    },
                    {
                        "x_data": 11,
                        "y_data": 6
                    },
                    {
                        "x_data": 14,
                        "y_data": 7
                    },
                    {
                        "x_data": 15,
                        "y_data": 9
                    },
                    {
                        "x_data": 16,
                        "y_data": 5
                    },
                    {
                        "x_data": 18,
                        "y_data": 5
                    },
                    {
                        "x_data": 19,
                        "y_data": 7
                    },
                    {
                        "x_data": 20,
                        "y_data": 6
                    },
                    {
                        "x_data": 21,
                        "y_data": 9
                    },
                    {
                        "x_data": 22,
                        "y_data": 0
                    },
                    {
                        "x_data": 23,
                        "y_data": 2
                    },
                    {
                        "x_data": 24,
                        "y_data": 8
                    },
                    {
                        "x_data": 25,
                        "y_data": 5
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Template_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Version_Number"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, rank by the Y in desc.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and list in descending by the Y.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart, and list in descending by the Y.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday, and rank in desc by the Y-axis.",
            "For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday, and list the average of employee id from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 159.5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 155.06666666666666
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 154
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 153.5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 153
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 151
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 148.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Visualize a bar chart, count and group by nationality from the journalist table, display by the total number in descending please.",
            "Compare the total number of journalist with different nationality using a bar chart, and rank by the Y from high to low.",
            "Bar graph to show the number of nationality from different nationality, and rank by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 9
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 1
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie that the student with first name Lisa has? Draw a bar chart.",
            "What is the number of each allergie the girl named Lisa has? Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anchovies",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Allergy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "device"
        ],
        "db_id": "device",
        "nl_queries": [
            "A bar chart about what are the different software platforms for devices, and how many devices have each?",
            "what are the different software platforms for devices, and how many devices have each?",
            "What are the different software platforms for devices, and how many devices have each.",
            "Bar chart x axis software platform y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Android",
                        "y_data": 5
                    },
                    {
                        "x_data": "iOS",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Software_Platform",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and the average of manufacturer , and group by attribute name, and visualize them by a bar chart, I want to sort by the X-axis from low to high.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, and I want to sort by the X-axis from low to high.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, and display by the bar in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of manufacturer , and group by attribute name in a bar chart, and display by the bar in ascending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the name , and group by attribute name by a bar chart, could you show by the names from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CARS_DATA"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Show me trends of the total of the average weight change over year.",
            "Show me a line chart of how sum avg(weight) change over the year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970",
                        "y_data": 3441
                    },
                    {
                        "x_data": "1971",
                        "y_data": 2960
                    },
                    {
                        "x_data": "1972",
                        "y_data": 3237
                    },
                    {
                        "x_data": "1973",
                        "y_data": 3419
                    },
                    {
                        "x_data": "1974",
                        "y_data": 2877
                    },
                    {
                        "x_data": "1975",
                        "y_data": 3176
                    },
                    {
                        "x_data": "1976",
                        "y_data": 3078
                    },
                    {
                        "x_data": "1977",
                        "y_data": 2997
                    },
                    {
                        "x_data": "1978",
                        "y_data": 2861
                    },
                    {
                        "x_data": "1979",
                        "y_data": 3055
                    },
                    {
                        "x_data": "1980",
                        "y_data": 2436
                    },
                    {
                        "x_data": "1981",
                        "y_data": 2532
                    },
                    {
                        "x_data": "1982",
                        "y_data": 2453
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(avg(Weight))"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each weekday using a bar chart, sort total number in desc order.",
            "Count those dates for each day of the week and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, could you show in desc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of engineers for different other details in a bar chart, and display from low to high by the other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 19
                    },
                    {
                        "x_data": "Skilled",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, display X-axis in desc order.",
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, and rank names from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "TAA",
                        "y_data": 59
                    },
                    {
                        "x_data": "RTE",
                        "y_data": 55
                    },
                    {
                        "x_data": "RND",
                        "y_data": 62
                    },
                    {
                        "x_data": "MWC",
                        "y_data": 56
                    },
                    {
                        "x_data": "IBS",
                        "y_data": 59
                    },
                    {
                        "x_data": "IBD",
                        "y_data": 63
                    },
                    {
                        "x_data": "HBB",
                        "y_data": 60
                    },
                    {
                        "x_data": "FNA",
                        "y_data": 66
                    },
                    {
                        "x_data": "CAS",
                        "y_data": 69
                    },
                    {
                        "x_data": "AOB",
                        "y_data": 51
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Room",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students whose gpa is lower than the average gpa of all students for different first name in a bar chart.",
            "How many students that has a GPA lower than average? Show me a bar chart grouping by student's first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 2
                    },
                    {
                        "x_data": "Juliette",
                        "y_data": 1
                    },
                    {
                        "x_data": "William",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Give me a bar graph showing the total number of different product names, list x axis from high to low order please.",
            "What is the total number of names of products?, display in descending by the X.",
            "Bar chart x axis product name y axis how many product name, and show in desc by the names please.",
            "Compare the total number of different product names, show by the X-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Trading Policy B",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "TV Equipments",
                        "y_data": 3
                    },
                    {
                        "x_data": "Special Dinning",
                        "y_data": 2
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 3
                    },
                    {
                        "x_data": "Conference Equipments",
                        "y_data": 1
                    },
                    {
                        "x_data": "Business Policy B",
                        "y_data": 1
                    },
                    {
                        "x_data": "Business Policy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Bar chart of mean age from each city code, display from high to low by the Y.",
            "Find the average age of students living in each city with a bar chart, and could you display Y-axis in descending order?",
            "What are average ages for students living in each city? Return a bar chart, and list by the the average of age from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition",
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show all artist names and the number of exhibitions for each artist in a bar chart, and show from low to high by the Y.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, list total number from low to high order.",
            "how many exhibitions has each artist had?, and could you order Y in ascending order?",
            "Return a histogram on how many exhibitions has each artist had?, list total number from low to high order.",
            "How many exhibitions has each artist had Plot them as bar chart, and list y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show all the buildings along with the number of faculty members the buildings have Plot them as bar chart, show in descending by the total number.",
            "Return a bar chart on how many faculty members does each building have? List the result with the name of the building, and rank the total number from high to low order.",
            "How many faculty members does each building have? List the result with the name of the building Visualize by bar chart, I want to order in descending by the y-axis.",
            "Show me a bar chart for how many faculty members does each building have? List the result with the name of the building, list Y from high to low order please.",
            "Bar graph to show the total number from different building, and I want to order in descending by the y-axis.",
            "How many faculty members does each building have? List the result with the name of the building with a bar chart, and could you display in desc by the y-axis?",
            "Show all the buildings along with the number of faculty members the buildings have with a bar chart, and could you display in desc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Krieger",
                        "y_data": 20
                    },
                    {
                        "x_data": "Barton",
                        "y_data": 20
                    },
                    {
                        "x_data": "NEB",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home.",
            "Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart.",
            "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home.",
            "Stacked bar chart of school_id for with each ACC_Home in each acc road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 5,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Stacked bar chart of how many date in location from for with each Location_Code in each date in location from, and order by the y axis in descending.",
            "Show the number of documents in different starting date Bin starting date by weekday and group by location code with a stacked bar chart, show by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "c"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3,
                        "classify": "e"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "x"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "x"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students who is older than 20 in each dorm. Plot them as bar chart.",
            "Return a bar chart on how many students are older than 20 in each dorm?",
            "Give me a histogram for how many students are older than 20 in each dorm?",
            "How many students are older than 20 in each dorm. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anonymous Donor Hall",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dorm-plex 2000",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fawlty Towers",
                        "y_data": 2
                    },
                    {
                        "x_data": "Smith Hall",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dorm_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player",
            "team"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", and list the number of years played in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artwork"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            ", and order in asc by the y axis.",
            "Show the total number from each type, and order y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Presenter Music/Variety Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Presenter Talent Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Program Talent Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Program Music/Variety Show",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show maximal lat from each city, show total number in descending order please.",
            "For each city, return the highest latitude among its stations Show bar chart, I want to sort by the Y-axis in desc please.",
            "For each city, what is the highest latitude for its stations Visualize by bar chart, and order by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "San Francisco",
                        "y_data": 37.80477
                    },
                    {
                        "x_data": "Redwood City",
                        "y_data": 37.491269
                    },
                    {
                        "x_data": "Palo Alto",
                        "y_data": 37.448598
                    },
                    {
                        "x_data": "Mountain View",
                        "y_data": 37.40694000000001
                    },
                    {
                        "x_data": "San Jose",
                        "y_data": 37.352601
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(lat)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and price .",
            "For those products with a price between 60 and 120, give me the comparison about price over the name by a bar chart.",
            "For those products with a price between 60 and 120, find name and price , and visualize them by a bar chart.",
            "For those products with a price between 60 and 120, give me the comparison about price over the name .",
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and price ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? Show their average number by each participant type code using a bar chart, sort from low to high by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organizer",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Participant",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "STUDENT"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "A bar chart for what are the number of the last names of female students, ordered by age descending?",
            "Find the number of the last name of female (sex is F) students in the descending order of age.",
            "Find the last name of female (sex is F) students in the descending order of age, and count them by a bar chart",
            "What are the last names of female students, ordered by age descending, and count them by a bar chart",
            "A bar chart for finding the number of the last name of female (sex is F) students in the descending order of age.",
            "What are the number of the last names of female students, ordered by age descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, I want to order bars in asc order.",
            "Visualize a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and could you sort X-axis in asc order?",
            "Give me the comparison about the sum of meter_100 over the Nationality , and group by attribute Nationality, and order x axis in asc order please.",
            "Draw a bar chart about the distribution of Nationality and the sum of meter_100 , and group by attribute Nationality, and I want to list bar from low to high order.",
            "Bar chart x axis nationality y axis sum meter 100, order x axis in asc order please.",
            "Find Nationality and the sum of meter_100 , and group by attribute Nationality, and visualize them by a bar chart, and order by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 114
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "France",
                        "y_data": 55
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Count the section_description, and group by section_description with a bar chart, I want to order names in descending order.",
            "Show how many section description from each section description, and could you rank bar from high to low order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "voluptatem",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptas",
                        "y_data": 1
                    },
                    {
                        "x_data": "reprehenderit",
                        "y_data": 1
                    },
                    {
                        "x_data": "quis",
                        "y_data": 1
                    },
                    {
                        "x_data": "qui",
                        "y_data": 2
                    },
                    {
                        "x_data": "provident",
                        "y_data": 1
                    },
                    {
                        "x_data": "non",
                        "y_data": 1
                    },
                    {
                        "x_data": "nesciunt",
                        "y_data": 1
                    },
                    {
                        "x_data": "facilis",
                        "y_data": 1
                    },
                    {
                        "x_data": "ex",
                        "y_data": 1
                    },
                    {
                        "x_data": "et",
                        "y_data": 2
                    },
                    {
                        "x_data": "doloremque",
                        "y_data": 1
                    },
                    {
                        "x_data": "ad",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "section_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(section_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and rank total number from low to high order please.",
            "Show me a bar chart about the number of races held in each year after 2014, I want to order y axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of manager_id , and group by attribute job_id, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.66666666666667
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122.22222222222223
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by day interval, sort in asc by the Y-axis.",
            "How many dogs who have gone through a treatment departed in each year? Return a bar chart that bins arrived date by day interval, and could you order from low to high by the total number please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "24th",
                        "y_data": 3
                    },
                    {
                        "x_data": "25th",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel",
            "cartoon"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sky Famiglia",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sky Famiglia + Sky HD",
                        "y_data": 1
                    },
                    {
                        "x_data": "no ( FTV )",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Package_Option",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Package_Option)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_orders"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "List the order id, customer id for orders in Cancelled status, ordered by their order dates with a scatter chart.",
            "List the order id, customer id for orders in Cancelled status, ordered by their order dates. Show the correlation.",
            "Visualize a scatter chart on what are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?",
            "plot scatter on what are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?",
            "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 7,
                        "y_data": 1
                    },
                    {
                        "x_data": 11,
                        "y_data": 8
                    },
                    {
                        "x_data": 10,
                        "y_data": 11
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "order_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain)"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "For those ships that do not have a captain, tell me the total number of their classes using a pie chart.",
            "Give me a bar chart showing the total number of ships' classes that do not have a captain."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GL",
                        "y_data": 1
                    },
                    {
                        "x_data": "KR",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Parts",
            "Asset_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many assets can each parts be used in? List the part name and the number, I want to order Y-axis in descending order.",
            "How many assets can each parts be used in? List the part name and the number with a bar chart, sort from high to low by the Y.",
            "Visualize a bar chart for how many assets can each parts be used in? List the part name and the number, and I want to list Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "package",
                        "y_data": 6
                    },
                    {
                        "x_data": "middle",
                        "y_data": 5
                    },
                    {
                        "x_data": "top",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "part_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", I want to sort x axis from high to low order please.",
            "A bar chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and display x-axis in desc order.",
            "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a bar chart, and could you list from high to low by the X-axis?",
            "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a bar chart, display x-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nominee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar about the number of faults for different fault description and fault status of all the faults recoreded in the logs, and show by the x-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Waiting",
                        "y_data": 3,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Return",
                        "y_data": 0,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 3,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 0,
                        "classify": "failed parts"
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 0,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Return",
                        "y_data": 2,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 2,
                        "classify": "system error"
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 5,
                        "classify": "system error"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_status",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_status)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Reutrn a bar chart to bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons, I want to show from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 25
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 20
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 20
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 10
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and department_id , and visualize them by a bar chart, could you rank by the names in ascending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and department_id , and I want to list from low to high by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and department_id , and order by the bar from low to high please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the email , and rank x-axis in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and department_id in a bar chart, rank in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "HBAER",
                        "y_data": 70
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 0
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 20
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 20
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 110
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 40
                    },
                    {
                        "x_data": "WGIETZ",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart for what are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "A bar chart for finding the number of the enrollment date for all the tests that have \"Pass\" result.",
            "What are the number of the enrollment dates of all the tests that have result \"Pass\"?",
            "Find the enrollment date for all the tests that have \"Pass\" result, and count them by a bar chart",
            "Find the number of the enrollment date for all the tests that have \"Pass\" result.",
            "What are the enrollment dates of all the tests that have result \"Pass\", and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "List how many students in each last name who majored in 600 using a bar chart, and show names from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wilson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schwartz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schultz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Norris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Leighton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kumar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gompers",
                        "y_data": 1
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings, sort booking_status_code from low to high order.",
            "Show the booking status code and the corresponding number of bookings Show bar chart, sort booking_status_code from low to high order.",
            "Plot the total number by grouped by booking status code as a bar graph, and I want to order in ascending by the x-axis.",
            "Show me a bar chart for how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, show names in asc order.",
            "Return a bar chart on how many bookings does each booking status have? List the booking status code and the number of corresponding bookings, could you rank by the x-axis from low to high?",
            "Show the booking status code and the corresponding number of bookings in a bar chart, and show X-axis in asc order.",
            "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings with a bar chart, and show names in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Confirmed",
                        "y_data": 7
                    },
                    {
                        "x_data": "Provisional",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_status_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Show the smallest enrollment of each state.",
            "Show the smallest enrollment of each state using a bar chart.",
            "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment.",
            "Show minimal enr from each state"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LA",
                        "y_data": 18000
                    },
                    {
                        "x_data": "OK",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of the treatments for each dog of the rarest breed in a bar chart.",
            "How many treatments for each dog of the rarest breed? Give me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Houston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kacey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "For each phone, show its names and total number of stocks Visualize by bar chart, rank by the Y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 7",
                        "y_data": 874
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2540
                    },
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2914
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 4324
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.Num_of_stock)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Transcript_Contents",
            "Transcripts"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Bin the transcript date into a day of the week interval and count them for a bar chart, could you display total number in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transcript_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(transcript_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show me a pie chart for what are the names and ids of customers whose address contains TN?",
            "Pie chart. what are the names and ids of customers whose address contains TN?",
            "What are the names and ids of customers whose address contains TN. Visualize by pie chart.",
            "Return the names and ids of customers who have TN in their address by a pie chart.",
            "Return the names and ids of customers who have TN in their address. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lukas",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 13
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college, sort total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "B.C. School",
                        "y_data": 1
                    },
                    {
                        "x_data": "Calgary School",
                        "y_data": 2
                    },
                    {
                        "x_data": "Saskatchewan School",
                        "y_data": 2
                    },
                    {
                        "x_data": "Toronto School",
                        "y_data": 2
                    },
                    {
                        "x_data": "Edmonton School",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts for all accounts by the customer with first name 'Meaghan' opened in each day. Bin the account open day by weekday in a bar chart.",
            "How many accounts are opened in each day for all accounts by the customer with first name 'Meaghan' ? Bin the account open day by weekday in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London with a bar chart, rank by the total number in asc.",
            "Show the names and total passengers for all train stations not in London Visualize by bar chart, I want to list in asc by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Glasgow Central",
                        "y_data": 29.658
                    },
                    {
                        "x_data": "Birmingham New Street",
                        "y_data": 36.330999999999996
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Total_Passengers"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each county along with the corresponding number of delegates from that county Plot them as bar chart, and order Y in desc order.",
            "For each county, find the name of the county and the number of delegates from that county Show bar chart, could you order total number in desc order?",
            "Show the name of each county along with the corresponding number of delegates from that county with a bar chart, I want to rank by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the highest price of product, grouped by product type? Show a bar chart, and display by the names in desc.",
            "Bar chart x axis product type code y axis maximal product price, order names from high to low order.",
            "Give the maximum product price for each product type in a bar chart, and show in desc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of revenue , and group by attribute headquarter in a bar chart, could you rank by the X-axis in ascending?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter, order bars in asc order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, I want to display in ascending by the x axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the headquarter , and group by attribute headquarter by a bar chart, display by the x-axis from low to high please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of revenue , and group by attribute headquarter, order by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 300
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 150
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 60
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time.",
            "For those employees who was hired before 2002-06-21, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 83.57142857142857
                    },
                    {
                        "x_data": "July",
                        "y_data": 46.12903225806452
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 50.333333333333336
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move-in date, note that you should bin move-in date into Day Of Week interval, sort in descending by the Y.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Weekday interval, and could you show in descending by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 9
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, I want to sort from low to high by the x axis.",
            "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, and I want to display X-axis in asc order.",
            "Show all template type codes and number of templates for each with a bar chart, I want to list by the X-axis from low to high.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?, order from low to high by the X.",
            "Show all template type codes and number of templates for each Visualize by bar chart, and I want to sort from low to high by the x axis.",
            "Show me the total number by template type code in a histogram, sort by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airport"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            ", sort Y in descending order.",
            "Show me the total number by country in a histogram, sort total number from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Norway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iceland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Denmark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Belgium",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Road.",
            "Show me about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Road in a scatter chart.",
            "Visualize the relationship between ACC_Percent and All_Games_Percent , and group by attribute All_Road.",
            "What is the relationship between ACC_Percent and All_Games_Percent , and group by attribute All_Road?",
            "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute All_Road.",
            "Scatterplot of all_games_percent vs acc percent by All_Road"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.875,
                        "y_data": 0.946,
                        "classify": "13\u20130"
                    },
                    {
                        "x_data": 0.563,
                        "y_data": 0.6,
                        "classify": "4\u20138"
                    },
                    {
                        "x_data": 0.625,
                        "y_data": 0.706,
                        "classify": "6\u20135"
                    },
                    {
                        "x_data": 0.813,
                        "y_data": 0.8240000000000001,
                        "classify": "8\u20132"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return a bar chart about the number bookings for each apartment number.",
            "How many bookings for each apartment number? Plot a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apt. 187",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 693",
                        "y_data": 3
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Return a histogram on what are the nationalities and the total ages of journalists?",
            "Show me a bar chart for what are the nationalities and total ages of journalists?",
            "What are the nationalities and the taotal ages of journalists. Visualize by a bar chart.",
            "Bar chart of sum age from each nationality"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 308
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the name and age for all drivers with a bar chart.",
            "Give me a bar chart to show the name and age for all drivers.",
            "Bar graph to show age from different name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Matthew Ritter",
                        "y_data": 40
                    },
                    {
                        "x_data": "Dan Carter",
                        "y_data": 30
                    },
                    {
                        "x_data": "Minnie Gonzalez",
                        "y_data": 46
                    },
                    {
                        "x_data": "Angel Acre",
                        "y_data": 42
                    },
                    {
                        "x_data": "Brandon McGee",
                        "y_data": 45
                    },
                    {
                        "x_data": "Edwin Vargas",
                        "y_data": 52
                    },
                    {
                        "x_data": "Douglas McCrory",
                        "y_data": 36
                    },
                    {
                        "x_data": "Timothy Ackert",
                        "y_data": 35
                    },
                    {
                        "x_data": "Jason Rojas",
                        "y_data": 38
                    },
                    {
                        "x_data": "Henry Genga",
                        "y_data": 37
                    },
                    {
                        "x_data": "Tim Larson",
                        "y_data": 36
                    },
                    {
                        "x_data": "Geoff Luxenberg",
                        "y_data": 52
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors with a Ph.D. degree in each department. Show bar chart.",
            "Return a histogram on how many professors have a Ph.D. in each department?",
            "A bar chart about how many professors have a Ph.D. in each department?",
            "How many professors have a Ph.D. in each department. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    },
                    {
                        "x_data": "ART",
                        "y_data": 1
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3
                    },
                    {
                        "x_data": "ECON/FIN",
                        "y_data": 1
                    },
                    {
                        "x_data": "ENG",
                        "y_data": 2
                    },
                    {
                        "x_data": "HIST",
                        "y_data": 1
                    },
                    {
                        "x_data": "MATH",
                        "y_data": 2
                    },
                    {
                        "x_data": "MKT/MGT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PSYCH",
                        "y_data": 1
                    },
                    {
                        "x_data": "SOC",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many bookings for different guests? Show me a bar chart grouping by guest first name, display by the the number of guest first name in ascending.",
            "Show the number of bookings for different guests and group by guest first name in a bar chart, rank by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Else",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juvenal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louvenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mozell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tamia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lo",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rebeca",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "guest_first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(guest_first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How old is each dog that was abandoned? Show in a bar chart, rank names in ascending order.",
            "List the dog name and age of the dogs who have been abandoned in a bar chart, rank by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Evangeline",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kacey",
                        "y_data": 6
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Find the ids and names of stations from which at least 200 trips started, list by the bar in desc.",
            "What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, list by the X-axis in descending.",
            "Show me start_station_id by start station name in a histogram, and could you sort in desc by the start_station_name?",
            "Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, rank from high to low by the X.",
            "what are the ids and names of all start stations that were the beginning of at least 200 trips?, and sort in desc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    },
                    {
                        "x_data": "Temporary Transbay Terminal (Howard at Beale)",
                        "y_data": 55
                    },
                    {
                        "x_data": "Steuart at Market",
                        "y_data": 74
                    },
                    {
                        "x_data": "San Francisco Caltrain 2 (330 Townsend)",
                        "y_data": 69
                    },
                    {
                        "x_data": "San Francisco Caltrain (Townsend at 4th)",
                        "y_data": 70
                    },
                    {
                        "x_data": "Powell Street BART",
                        "y_data": 39
                    },
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    },
                    {
                        "x_data": "Market at 4th",
                        "y_data": 76
                    },
                    {
                        "x_data": "Market at 10th",
                        "y_data": 67
                    },
                    {
                        "x_data": "Howard at 2nd",
                        "y_data": 63
                    },
                    {
                        "x_data": "Harry Bridges Plaza (Ferry Building)",
                        "y_data": 50
                    },
                    {
                        "x_data": "Grant Avenue at Columbus Avenue",
                        "y_data": 73
                    },
                    {
                        "x_data": "Embarcadero at Sansome",
                        "y_data": 60
                    },
                    {
                        "x_data": "Embarcadero at Folsom",
                        "y_data": 51
                    },
                    {
                        "x_data": "Embarcadero at Bryant",
                        "y_data": 54
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "2nd at Townsend",
                        "y_data": 61
                    },
                    {
                        "x_data": "2nd at South Park",
                        "y_data": 64
                    },
                    {
                        "x_data": "2nd at Folsom",
                        "y_data": 62
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "start_station_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "start_station_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "List the name and the number of stations for all the cities that have at least 15 stations with a bar chart, and show by the y-axis from low to high please.",
            "What is the name of every city that has at least 15 stations and how many stations does it have Visualize by bar chart, sort y axis in asc order please.",
            "List the name and the number of stations for all the cities that have at least 15 stations Show bar chart, and sort in ascending by the Y-axis.",
            "Create a bar chart showing the total number across city, and show by the y-axis from low to high please.",
            "Draw a bar chart for what is the name of every city that has at least 15 stations and how many stations does it have?, display Y from low to high order.",
            "A bar chart about what is the name of every city that has at least 15 stations and how many stations does it have?, and could you list the total number in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "San Jose",
                        "y_data": 16
                    },
                    {
                        "x_data": "San Francisco",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and rank total number in desc order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and rank total number in desc order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and display by the Y-axis in desc please.",
            "For all employees who have the letters D or S in their first name, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, and display by the Y-axis in desc please.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, and I want to order y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 105300
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 31400
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 29200
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 25400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 18000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 14700
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 8800
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Show me the total number by citizenship in a histogram, and display by the y-axis from high to low.",
            "Show different citizenship of singers and the number of singers of each citizenship in a bar chart, I want to order total number from high to low order.",
            "Show different citizenship of singers and the number of singers of each citizenship Plot them as bar chart, rank by the total number from high to low.",
            "For each citizenship, how many singers are from that country, and display by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 4
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Citizenship",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Bar graph to show maximal age from different sex, could you order by the Y in asc?",
            "What is the oldest age for each gender of student? Return a bar chart, could you order by the Y in asc?",
            "Find the oldest age for students with different sex in a bar chart, and I want to sort by the total number from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 26
                    },
                    {
                        "x_data": "M",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Compare the number of players of different occupations using a bar chart, list y-axis in desc order.",
            "Visualize a bar chart to show how many players in each occupation, and I want to show by the Y-axis from high to low please.",
            "Bar chart x axis occupation y axis how many occupation, display in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Student",
                        "y_data": 2
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Occupation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of name and meter_100 in a bar chart, could you rank by the bar from low to high?",
            "Draw a bar chart about the distribution of name and meter_100 , sort from low to high by the X.",
            "Visualize a bar chart about the distribution of name and meter_100 , and display from low to high by the x axis.",
            "Return a bar chart about the distribution of name and meter_100 , and list by the name in asc.",
            "Give me the comparison about meter_100 over the name by a bar chart, could you order name from low to high order?",
            "Draw a bar chart of name versus meter_100, list by the name in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 55.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "film",
            "film_market_estimation"
        ],
        "db_id": "film_rank",
        "nl_queries": [
            "For each title, use a bar chart to show the number of films, list from low to high by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "An Officer and a Gentleman",
                        "y_data": 1
                    },
                    {
                        "x_data": "ET the Extra-Terrestrial",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rocky III",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tootsie",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Show me about the distribution of date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by time in a bar chart.",
            "Visualize a bar chart about the distribution of date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by time.",
            "Return a bar chart about the distribution of date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by time.",
            "A bar chart shows the distribution of date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by time.",
            "Find date_address_to and the sum of monthly_rental , and group by attribute other_details and bin date_address_to by time, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 6048,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Feb",
                        "y_data": 747,
                        "classify": "house"
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 10722,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, show me about the correlation between commission_pct and manager_id in a scatter chart.",
            "For those employees who was hired before 2002-06-21, a scatter chart shows the correlation between commission_pct and manager_id .",
            "For those employees who was hired before 2002-06-21, what is the relationship between commission_pct and manager_id ?",
            "For those employees who was hired before 2002-06-21, visualize the relationship between commission_pct and manager_id .",
            "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between commission_pct and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 102
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0.4,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.35,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 149
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 201
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0,
                        "y_data": 205
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What is the total cloud cover rates of the dates (bin into year interval) that had the top 5 cloud cover rates? You can draw me a bar chart for this purpose, rank in descending by the Y-axis.",
            "For those dates that have the 5 highest cloud cover rates, please bin the date into Year interval and compute their total cloud cover, and order in desc by the total number.",
            "Bar chart x axis date y axis total number of cloud cover, and show Y from high to low order.",
            "I want a bar chart to show the total cloud cover of the dates that have the 5 highest cloud cover rates each year, and rank in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 32
                    },
                    {
                        "x_data": "2015",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(cloud_cover)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the relationship between minimum and average gpa of all students in each department with a scatter chart.",
            "What is the relationship between lowest and average student GPA for every department? Give me a scatter chart.",
            "Show me a scatter plot of avg(stu gpa) and minimal stu gpa for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2.776666666666667,
                        "y_data": 2.26
                    },
                    {
                        "x_data": 2.84,
                        "y_data": 2.84
                    },
                    {
                        "x_data": 3.18,
                        "y_data": 3.09
                    },
                    {
                        "x_data": 3.87,
                        "y_data": 3.87
                    },
                    {
                        "x_data": 2.11,
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(stu_gpa)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Give me the comparison about the sum of monthly_rental over the date_address_from , and group by attribute other_details and bin date_address_from by weekday by a bar chart.",
            "Give me the comparison about the sum of monthly_rental over the date_address_from , and group by attribute other_details and bin date_address_from by weekday.",
            "Find date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by weekday, and visualize them by a bar chart.",
            "A bar chart shows the distribution of date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by weekday.",
            "Show me about the distribution of date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by weekday in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1036,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 644,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1297,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1032,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1007,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2559,
                        "classify": "house"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 865,
                        "classify": "house"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 756,
                        "classify": "house"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2864,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1867,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2558,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Find the average age of journalists working on different role type, show the result with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Host",
                        "y_data": 43
                    },
                    {
                        "x_data": "Music",
                        "y_data": 35.5
                    },
                    {
                        "x_data": "Screening",
                        "y_data": 30.33333333333333
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(t1.age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Work_Type"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many students are older than average for each gender, and order y axis in ascending order.",
            "Visualize a bar chart for how many students are older than average for each gender?, and I want to display in asc by the y axis please.",
            "A bar chart about how many students are older than average for each gender?, and show by the total number in ascending please.",
            "Find the number of students whose age is older than the average age for each gender, show by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 5
                    },
                    {
                        "x_data": "M",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Display a bar chart for what is the code of each location and the number of documents in that location?, and could you show X from high to low order?",
            "Create a bar chart showing the total number across location code, and could you show X from high to low order?",
            "Show the location codes and the number of documents in each location in a bar chart, and I want to display by the names from high to low.",
            "what is the code of each location and the number of documents in that location?, display in desc by the X.",
            "Show the location codes and the number of documents in each location Visualize by bar chart, display by the X in descending.",
            "What is the code of each location and the number of documents in that location Show bar chart, and could you show bar in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "x",
                        "y_data": 5
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "e",
                        "y_data": 4
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "b",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a line chart about the change of salary over hire_date , rank by the X in asc.",
            "For those employees who did not have any job in the past, show me the trend about salary over hire_date with a line chart, could you sort x-axis from low to high order?",
            "For those employees who did not have any job in the past, give me the trend about salary over hire_date , could you sort x-axis from low to high order?",
            "For those employees who did not have any job in the past, return a line chart about the change of salary over hire_date , and I want to sort by the X-axis in ascending.",
            "For those employees who did not have any job in the past, visualize a line chart about the change of salary over hire_date , and sort in ascending by the x axis please.",
            "For those employees who did not have any job in the past, show me about the change of salary over hire_date in a line chart, could you order X in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 7700
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 7800
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 5800
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 2100
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 3500
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 13500
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 7200
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 9600
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 7400
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 7300
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 8400
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 3400
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 3800
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 3900
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 8300
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Bar graph to show minimal enr from different cname, I want to display by the X-axis in asc.",
            "Compare the smallest enrollment of schools in each state using a bar chart, and I want to display by the X-axis in asc.",
            "What is the name of the school that has the smallest enrollment in each state?, I want to list x-axis in ascending order.",
            "Return a bar graph for the name of the school that has the smallest enrollment in each state, could you order by the x axis in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ASU",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 18000
                    },
                    {
                        "x_data": "OU",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i. Plot them as bar chart.",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 9
                    },
                    {
                        "x_data": "eius",
                        "y_data": 2
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 19
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "quo",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Give me a bar chart for how many grape of each grape, and I want to order by the bars in descending.",
            "What is the number of different grapes of each wine? Show me a bar chart, rank names from high to low order.",
            "Please give me a bar chart that counts the number of grape of wine, and sort from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Zinfandel",
                        "y_data": 78
                    },
                    {
                        "x_data": "Viognier",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tempranillo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 61
                    },
                    {
                        "x_data": "Sauvignon Blanc",
                        "y_data": 46
                    },
                    {
                        "x_data": "Sangiovese",
                        "y_data": 1
                    },
                    {
                        "x_data": "Roussanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 109
                    },
                    {
                        "x_data": "Petite Sirah",
                        "y_data": 6
                    },
                    {
                        "x_data": "Merlot",
                        "y_data": 10
                    },
                    {
                        "x_data": "Marsanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Malbec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 10
                    },
                    {
                        "x_data": "Chardonnay",
                        "y_data": 104
                    },
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 68
                    },
                    {
                        "x_data": "Cabernet Franc",
                        "y_data": 1
                    },
                    {
                        "x_data": "Barbera",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Grape)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Display a bar chart for what is the code of each location and the number of documents in that location?, rank in descending by the y-axis.",
            "what is the code of each location and the number of documents in that location?, and rank in descending by the y-axis.",
            "What is the code of each location and the number of documents in that location Show bar chart, and display in desc by the the total number .",
            "Create a bar chart showing the total number across location code, and order from high to low by the total number.",
            "Show the location codes and the number of documents in each location Visualize by bar chart, display by the total number from high to low.",
            "Show the location codes and the number of documents in each location in a bar chart, order the total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "x",
                        "y_data": 5
                    },
                    {
                        "x_data": "e",
                        "y_data": 4
                    },
                    {
                        "x_data": "b",
                        "y_data": 3
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show me a bar chart for how many faculty members does each building have? List the result with the name of the building, list by the X from low to high.",
            "Return a bar chart on how many faculty members does each building have? List the result with the name of the building, and rank from low to high by the x-axis.",
            "How many faculty members does each building have? List the result with the name of the building with a bar chart, list by the X from low to high.",
            "Bar graph to show the total number from different building, and could you rank by the bar from low to high?",
            "Show all the buildings along with the number of faculty members the buildings have with a bar chart, could you rank by the bar from low to high?",
            "How many faculty members does each building have? List the result with the name of the building Visualize by bar chart, sort by the X in asc.",
            "Show all the buildings along with the number of faculty members the buildings have Plot them as bar chart, and rank from low to high by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Barton",
                        "y_data": 20
                    },
                    {
                        "x_data": "Krieger",
                        "y_data": 20
                    },
                    {
                        "x_data": "NEB",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0 in a scatter chart",
            "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 2
                    },
                    {
                        "x_data": 3,
                        "y_data": 2
                    },
                    {
                        "x_data": 6,
                        "y_data": 1
                    },
                    {
                        "x_data": 17,
                        "y_data": 1
                    },
                    {
                        "x_data": 18,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "investor_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the sum of capacity of cinemas open for each year, rank by the X from low to high please.",
            "Give me a bar chart for total number of capacity of each openning year, and could you show in ascending by the names please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 305
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1633
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1336
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 368
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 330
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 364
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Count the number of people of each sex who have a weight higher than 85, order y axis from low to high order.",
            "Count the number of people of each sex who have a weight higher than 85 by a bar chart, and list y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "M",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Show names of technicians and the number of machines they are assigned to repair Visualize by bar chart, and sort by the X-axis in descending.",
            "Give me a histogram for what are the names of the technicians and how many machines are they assigned to repair?, rank names in desc order.",
            "Show names of technicians and the number of machines they are assigned to repair with a bar chart, show from high to low by the x axis.",
            "Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?, rank names in desc order.",
            "What are the names of the technicians and how many machines are they assigned to repair, show from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Bar chart x axis gender y axis the total number, and could you list y-axis in descending order?",
            "Find the number of dorms for each gender in a bar chart, and list from high to low by the total number.",
            "How many dorms are there for each gender? Show me a bar chart, I want to list from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "X",
                        "y_data": 5
                    },
                    {
                        "x_data": "M",
                        "y_data": 1
                    },
                    {
                        "x_data": "F",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Bar chart x axis name y axis the number of name, list by the X-axis in asc.",
            "A bar chart for what are the number of the names of all products?, and list by the X-axis in asc.",
            "What are the number of the names of all products?, rank x-axis from low to high order.",
            "What are the names of all products, and count them by a bar chart, rank X-axis from low to high order.",
            "Select the names of all the products in the store, and count them by a bar chart, could you order X-axis in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Find date_address_from and the average of monthly_rental bin date_address_from by time, and visualize them by a bar chart.",
            "Give me the comparison about the average of monthly_rental over the date_address_from bin date_address_from by time.",
            "Draw a bar chart about the distribution of date_address_from and the average of monthly_rental bin date_address_from by time.",
            "Return a bar chart about the distribution of date_address_from and the average of monthly_rental bin date_address_from by time.",
            "Show me about the distribution of date_address_from and the average of monthly_rental bin date_address_from by time in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 950.6428571428571
                    },
                    {
                        "x_data": "2018",
                        "y_data": 917.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "Frequency of the aircrafts that has win an award, across by its name as a pie chart",
            "Please list the proportion of the number of each winning aircraft.",
            "What is the proportion of the number of each winning aircraft?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Aircraft)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and could you rank in descending by the X?",
            "Bar chart x axis position y axis how many position, and order X-axis in desc order.",
            "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, could you show by the X-axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Stand Off",
                        "y_data": 1
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 2
                    },
                    {
                        "x_data": "Scrum Half",
                        "y_data": 1
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 1
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Return a bar chart on what are the id and name of the mountains that have at least 2 photos?",
            "Draw a bar chart for what are the id and name of the mountains that have at least 2 photos?",
            "What are the id and name of the mountains that have at least 2 photos. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mount Cameroon",
                        "y_data": 12
                    },
                    {
                        "x_data": "Ighil Mgoun",
                        "y_data": 14
                    },
                    {
                        "x_data": "Taska n\u2019Zat",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, and list names in asc order.",
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, could you order in ascending by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abbey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jensen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joesph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 4
                    },
                    {
                        "x_data": "Meaghan",
                        "y_data": 4
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 3
                    },
                    {
                        "x_data": "Vesta",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Create a bar chart showing how many arrival across arrival, rank in desc by the y axis.",
            "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, display by the Y-axis from high to low.",
            "Tell me the distribution of the number of trains at each arrival time with a bar chart, and display by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13:04",
                        "y_data": 2
                    },
                    {
                        "x_data": "23:44",
                        "y_data": 1
                    },
                    {
                        "x_data": "23:39",
                        "y_data": 1
                    },
                    {
                        "x_data": "13:28",
                        "y_data": 1
                    },
                    {
                        "x_data": "09:48",
                        "y_data": 1
                    },
                    {
                        "x_data": "09:08",
                        "y_data": 1
                    },
                    {
                        "x_data": "08:54",
                        "y_data": 1
                    },
                    {
                        "x_data": "05:09",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Arrival",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Arrival)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "enroll"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students who took some course and got A or C and group by last name in a bar chart, show by the y-axis from low to high.",
            "How many students taking a course who received an A or C? Group by students' last name with a bar chart, display in ascending by the the number of stu lname."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Smithson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bowser",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_LNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_LNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "trust"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "Find each target user's name and average trust score Visualize by bar chart, rank y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rosie",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 4.666666666666667
                    },
                    {
                        "x_data": "Terry",
                        "y_data": 5
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 8
                    },
                    {
                        "x_data": "Roxi",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(trust)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Create a bar chart showing the total number across rank, and could you list in desc by the X?",
            "A bar chart about how many faculty members do we have for each faculty rank?, display by the bars in descending.",
            "For each faculty rank, show the number of faculty members who have it Show bar chart, and I want to list from high to low by the X.",
            "Show me a bar chart for how many faculty members do we have for each faculty rank?, rank x-axis in desc order please.",
            "How many faculty members do we have for each faculty rank Show bar chart, could you list in desc by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 400
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 180
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 90
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1040
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 450
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each cinema, show the price and group them by film title in a stacked bar chart, and show x axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 9,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 15,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Oriel"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Aircraft"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "What are the names and distances for all airplanes Visualize by bar chart, list by the X-axis in asc.",
            "Show me distance by name in a histogram, and order names from low to high order please.",
            "Return a bar chart on what are the names and distances for all airplanes?, and I want to sort names from low to high order.",
            "Show name and distance for all aircrafts by a bar chart, list by the X-axis in asc.",
            "Show name and distance for all aircrafts Visualize by bar chart, order names from low to high order please.",
            "Return a histogram on what are the names and distances for all airplanes?, and I want to sort names from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Airbus A319",
                        "y_data": 1805
                    },
                    {
                        "x_data": "Airbus A320",
                        "y_data": 2605
                    },
                    {
                        "x_data": "Airbus A340-300",
                        "y_data": 7120
                    },
                    {
                        "x_data": "Boeing 727",
                        "y_data": 1504
                    },
                    {
                        "x_data": "Boeing 737-800",
                        "y_data": 3383
                    },
                    {
                        "x_data": "Boeing 747-400",
                        "y_data": 8430
                    },
                    {
                        "x_data": "Boeing 757-300",
                        "y_data": 4010
                    },
                    {
                        "x_data": "Boeing 767-400ER",
                        "y_data": 6475
                    },
                    {
                        "x_data": "Boeing 777-300",
                        "y_data": 6441
                    },
                    {
                        "x_data": "British Aerospace Jetstream 41",
                        "y_data": 1502
                    },
                    {
                        "x_data": "Embraer ERJ-145",
                        "y_data": 1530
                    },
                    {
                        "x_data": "Lockheed L1011",
                        "y_data": 6900
                    },
                    {
                        "x_data": "Piper Archer III",
                        "y_data": 520
                    },
                    {
                        "x_data": "SAAB 340",
                        "y_data": 2128
                    },
                    {
                        "x_data": "Schwitzer 2-33",
                        "y_data": 30
                    },
                    {
                        "x_data": "Tupolev 154",
                        "y_data": 4103
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "distance"
                }
            }
        }
    },
    {
        "tables_used": [
            "gas_station"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Draw a bar chart of manager name versus how many manager name, and show by the total number from low to high.",
            "Show the number of gas stations for each manager in a bar chart, I want to rank by the Y from low to high.",
            "How many gas stations dors each manager have? Plot a bar chart, and I want to list in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BrianWingrave",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bryan Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "BryanDenman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jon Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luke Rowe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Cope Derek Marloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "SimonMarloe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Whit",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Bristow",
                        "y_data": 1
                    },
                    {
                        "x_data": "Colin Denman",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Manager_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Manager_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of code , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 3
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200, and could you list x-axis from high to low order?",
            "Return a bar chart about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200, order bar from high to low order.",
            "Give me the comparison about the sum of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, list x-axis in descending order.",
            "Create a bar chart showing total number of meter 100 across meter 200, display x-axis from high to low order.",
            "Find meter_200 and the sum of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, list x-axis in descending order.",
            "Show me about the distribution of meter_200 and the sum of meter_100 , and group by attribute meter_200 in a bar chart, and show by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:57.26",
                        "y_data": 114
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, I want to display how many first name from low to high order.",
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, and I want to show from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many professors whose office is located in DRE 102 are hired in each weekday? Return a bar chart, and rank Y in ascending order.",
            "Show the number of professors who is in office DRE 102 hired in each weekday with a bar chart, order in asc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Yukon"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "Return a bar chart showing the number of each company whose office is located in the building, and order in desc by the bar.",
            "List the number of each company whose office is in the building in a bar chart, and display from high to low by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Total",
                        "y_data": 1
                    },
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 3
                    },
                    {
                        "x_data": "JPMorgan Chase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Industrial and Commercial Bank of China",
                        "y_data": 1
                    },
                    {
                        "x_data": "HSBC",
                        "y_data": 2
                    },
                    {
                        "x_data": "General Electric",
                        "y_data": 2
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 2
                    },
                    {
                        "x_data": "Citigroup",
                        "y_data": 1
                    },
                    {
                        "x_data": "BNP Paribas",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Give me the names and prices of furnitures which some companies are manufacturing with a bar chart.",
            "Compare the prices of furnitures which some companies are manufacturing by each name using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bookcase",
                        "y_data": 239
                    },
                    {
                        "x_data": "Chabudai",
                        "y_data": 450
                    },
                    {
                        "x_data": "Dining set",
                        "y_data": 2124
                    },
                    {
                        "x_data": "Billiard table",
                        "y_data": 443
                    },
                    {
                        "x_data": "Hatstand",
                        "y_data": 1234
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price_in_Dollar"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "What are the category of music festivals with result \"Awarded\", and count them by a bar chart",
            "What are the number of the category of music festivals with result \"Awarded\"?",
            "Return the number of the categories of music festivals that have the result \"Awarded\".",
            "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart",
            "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?",
            "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\"."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Best Song",
                        "y_data": 2
                    },
                    {
                        "x_data": "Best Sound Song",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Category)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Bar chart x axis location y axis sum total passengers, order from low to high by the y axis please.",
            "Visualize a bar chart showing each location's total number of passengers, and rank total number in asc order.",
            "Show the total number of passengers of each location in a bar chart, and sort Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Glasgow",
                        "y_data": 29.658
                    },
                    {
                        "x_data": "Birmingham",
                        "y_data": 36.330999999999996
                    },
                    {
                        "x_data": "London",
                        "y_data": 498.50700000000006
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(total_passengers)"
                }
            }
        }
    },
    {
        "tables_used": [
            "procedures"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the name and cost of all procedures sorted by the cost from the highest to the lowest by a bar chart.",
            "List the name and cost of all procedures sorted by the cost from the highest to the lowest. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Complete Walletectomy",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Reversible Pancreomyoplasty",
                        "y_data": 5600
                    },
                    {
                        "x_data": "Obfuscated Dermogastrotomy",
                        "y_data": 4899
                    },
                    {
                        "x_data": "Folded Demiophtalmectomy",
                        "y_data": 4500
                    },
                    {
                        "x_data": "Obtuse Pyloric Recombobulation",
                        "y_data": 3750
                    },
                    {
                        "x_data": "Reverse Rhinopodoplasty",
                        "y_data": 1500
                    },
                    {
                        "x_data": "Follicular Demiectomy",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Cost"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show me the number of card type code by card type code in a histogram, sort X-axis in ascending order.",
            "Show the number of cards in different card type code in a bar chart, display by the names in ascending please.",
            "How many cards in different card type code? Plot a bar chart, list by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(card_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and list by the sum department id from high to low.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time, could you rank by the total number in desc?",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the hire_date bin hire_date by time, could you show in descending by the total number please?",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and rank by the sum department id in descending please.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and show Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 2480
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1510
                    },
                    {
                        "x_data": "July",
                        "y_data": 1430
                    },
                    {
                        "x_data": "June",
                        "y_data": 1170
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the location codes and the number of documents in each location in a bar chart, and list from low to high by the bars.",
            "Display a bar chart for what is the code of each location and the number of documents in that location?, sort in ascending by the x axis please.",
            "what is the code of each location and the number of documents in that location?, and could you order by the Location_Code in ascending?",
            "Create a bar chart showing the total number across location code, and order by the Location_Code in asc.",
            "Show the location codes and the number of documents in each location Visualize by bar chart, and list by the x-axis in asc.",
            "What is the code of each location and the number of documents in that location Show bar chart, sort in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "b",
                        "y_data": 3
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "e",
                        "y_data": 4
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "x",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Student"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show all the faculty ranks and the number of students advised by each rank with a pie chart.",
            "Show all the faculty ranks and the number of students advised by each rank. Show the proportion.",
            "Return a pie on how many students are advised by each rank of faculty? List the rank and the number of students.",
            "A pie chart about how many students are advised by each rank of faculty? List the rank and the number of students.",
            "How many students are advised by each rank of faculty? List the rank and the number of students with a pie chart.",
            "How many students are advised by each rank of faculty? List the rank and the number of students. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 2
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 18
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 14
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, find their name and the number of reviews written by them Show bar chart, order from high to low by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Helen",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "A pie chart showing the number of customer addresses in each premises type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Office",
                        "y_data": 6
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 3
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sportsinfo"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Show all sport name and the number of students in a bar chart.",
            "Show all sport name and the number of students. Show bar chart.",
            "Give me a histogram for how many students play each sport?",
            "Visualize a bar chart for how many students play each sport?",
            "How many students play each sport. Show bar chart.",
            "Bar chart x axis sportname y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Athletics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baseball",
                        "y_data": 1
                    },
                    {
                        "x_data": "Basketball",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cricket",
                        "y_data": 1
                    },
                    {
                        "x_data": "Curling",
                        "y_data": 1
                    },
                    {
                        "x_data": "Football",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lacrosse",
                        "y_data": 3
                    },
                    {
                        "x_data": "Soccer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Swimming",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tennis",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SportName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the student ID and middle name for all the students with at most two enrollments, and could you list in desc by the total number?",
            "What are the student IDs and middle names of the students enrolled in at most two courses, rank by the student_id from high to low please.",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and display in desc by the Y.",
            "what are the student IDs and middle names of the students enrolled in at most two courses?, display in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ursula",
                        "y_data": 14
                    },
                    {
                        "x_data": "Camilla",
                        "y_data": 13
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kolby",
                        "y_data": 11
                    },
                    {
                        "x_data": "Vicente",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kailey",
                        "y_data": 9
                    },
                    {
                        "x_data": "Asa",
                        "y_data": 6
                    },
                    {
                        "x_data": "Casimir",
                        "y_data": 4
                    },
                    {
                        "x_data": "Brandt",
                        "y_data": 3
                    },
                    {
                        "x_data": "Luella",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "middle_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "affiliated_with",
            "department"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "What are the name and primarily affiliated department name of each physician?, and list y axis from low to high order.",
            "Give me a bar chart showing how many physicians for each department name they primarily affiliated in, list Y from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Psychiatry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Surgery",
                        "y_data": 3
                    },
                    {
                        "x_data": "General Medicine",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a group line chart grouping by semester.",
            "How many courses are in the Psychology department in each year? Show a group line chart grouping by semester."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003-01-01",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 0,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 0,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 0,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 0,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 1,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 0,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 1,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1,
                        "classify": "Spring"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Show the number of singers in each country with a bar chart.",
            "What is the number of singers for each country? Show a bar chart.",
            "Give me a bar chart for the number of country of each country"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 4
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "affiliated_with",
            "department"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Give me a bar chart showing how many physicians for each department name they primarily affiliated in.",
            "What are the name and primarily affiliated department name of each physician?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "General Medicine",
                        "y_data": 5
                    },
                    {
                        "x_data": "Psychiatry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Surgery",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "patient"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "A bar chart for listing the number of the names of patients who have made appointments.",
            "What are the number of names of patients who made an appointment?",
            "List the names of patients who have made appointments, and count them by a bar chart",
            "What are names of patients who made an appointment, and count them by a bar chart",
            "List the number of the names of patients who have made appointments."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dennis Doe",
                        "y_data": 3
                    },
                    {
                        "x_data": "Grace Ritchie",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Smith",
                        "y_data": 3
                    },
                    {
                        "x_data": "Random J. Patient",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart, list in ascending by the X.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart, and order in ascending by the names.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, rank bars in asc order.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of department_id , and group by attribute job_id, and visualize them by a bar chart, display JOB_ID in ascending order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, and order in ascending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and I want to rank from high to low by the total number.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time, show in descending by the Y.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart, and sort total number of salary from high to low order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, sort total number of salary from high to low order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, sort total number of salary from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 281300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 139900
                    },
                    {
                        "x_data": "June",
                        "y_data": 138400
                    },
                    {
                        "x_data": "July",
                        "y_data": 117000
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Bar graph to show the number of document type description from different document type description, and show in asc by the y-axis.",
            "Show the number of document type for different document type description in a bar chart, and show y-axis in ascending order.",
            "How many document type for different document type description? Visualize with a bar chart, order in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "good",
                        "y_data": 1
                    },
                    {
                        "x_data": "very good",
                        "y_data": 1
                    },
                    {
                        "x_data": "excellent",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, and I want to rank in ascending by the Y-axis.",
            "Give me the comparison about the amount of All_Home over the All_Home , and group by attribute All_Home by a bar chart, and sort in asc by the total number.",
            "Draw a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, rank y axis from low to high order.",
            "Show me the number of all home by all home in a histogram, show total number in ascending order.",
            "Return a bar chart about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home, I want to sort by the total number from low to high.",
            "Show me about the distribution of All_Home and the amount of All_Home , and group by attribute All_Home in a bar chart, and could you order by the y-axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20133",
                        "y_data": 1
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 1
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(All_Home)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Start_from and the average of Employee_ID bin start_from by weekday in a bar chart.",
            "Visualize a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday.",
            "Return a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday.",
            "Draw a bar chart about the distribution of Start_from and the average of Employee_ID bin start_from by weekday.",
            "Give me the comparison about the average of Employee_ID over the Start_from bin start_from by weekday.",
            "Bar chart x axis start from y axis the average of employee id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the number of professors for different school Plot them as bar chart, and show by the names from high to low.",
            "Return a bar chart on what is the number of professors for different school?, and show by the names from high to low.",
            "A bar chart about how many different professors are there for the different schools?, and I want to list from high to low by the X.",
            "How many different professors are there for the different schools Show bar chart, sort bars from high to low order.",
            "Return a bar chart on how many different professors are there for the different schools?, and sort x axis in desc order.",
            "Give me a histogram for what is the number of professors for different school?, sort x axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BUS",
                        "y_data": 10
                    },
                    {
                        "x_data": "A&SCI",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SCHOOL_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "For each singer name, what is the total sales for their songs Plot them as bar chart, and show total number in descending order.",
            "Show the names of singers and the total sales of their songs in a bar chart, and show in descending by the Y.",
            "Show the names of singers and the total sales of their songs Visualize by bar chart, and rank by the Y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 1646407
                    },
                    {
                        "x_data": "Christy Walton",
                        "y_data": 651421
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 335000
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 292000
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 275000
                    },
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 261000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T2.Sales)"
                }
            }
        }
    },
    {
        "tables_used": [
            "device"
        ],
        "db_id": "device",
        "nl_queries": [
            "A pie chart about what are the different software platforms for devices, and how many devices have each?",
            "Show me the proportion on what are the different software platforms for devices, and how many devices have each?",
            "What are the different software platforms for devices, and how many devices have each.",
            "Give me a pie to show the total number from different software platform."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Android",
                        "y_data": 5
                    },
                    {
                        "x_data": "iOS",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Software_Platform"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name, and I want to rank y-axis from high to low order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of price , and group by attribute name in a bar chart, and display total number in descending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the name , and group by attribute name by a bar chart, and display total number in descending order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of price , and group by attribute name, rank by the Y-axis in desc.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, display total number in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 165
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "What is the number of end dates for incidents with incident type code \"NOISE\"? Bin by weekday and return a bar chart, order by the total number from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_start",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_start)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the highest student GPA for every department? Return a bar chart, could you show from high to low by the Y?",
            "Find the max gpa of all students in each department with a bar chart, and I want to order by the Y in desc.",
            "Show me maximal stu gpa by dept code in a histogram, and order by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.27
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 3.15
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Return a line chart about the change of monthly_rental over date_address_from .",
            "A line chart shows the trend of monthly_rental over date_address_from .",
            "A line chart shows the change of monthly_rental over date_address_from",
            "Give me the trend about monthly_rental over date_address_from .",
            "Show me the trend about monthly_rental over date_address_from with a line chart.",
            "For monthly_rental, date_address_from, visualize the trend."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1297.807
                    },
                    {
                        "x_data": "2017-10-31",
                        "y_data": 1297.3186
                    },
                    {
                        "x_data": "2017-07-21",
                        "y_data": 1287.5604
                    },
                    {
                        "x_data": "2017-09-10",
                        "y_data": 1132.742
                    },
                    {
                        "x_data": "2017-06-19",
                        "y_data": 1113.0996
                    },
                    {
                        "x_data": "2018-01-13",
                        "y_data": 1067.8383
                    },
                    {
                        "x_data": "2017-03-29",
                        "y_data": 1036.8462
                    },
                    {
                        "x_data": "2017-09-23",
                        "y_data": 1032.9782
                    },
                    {
                        "x_data": "2018-03-05",
                        "y_data": 1032.8717
                    },
                    {
                        "x_data": "2017-11-12",
                        "y_data": 1007.2597
                    },
                    {
                        "x_data": "2017-04-28",
                        "y_data": 894.0958
                    },
                    {
                        "x_data": "2017-04-18",
                        "y_data": 865.2615
                    },
                    {
                        "x_data": "2017-10-16",
                        "y_data": 826.4319
                    },
                    {
                        "x_data": "2017-08-12",
                        "y_data": 800.1214
                    },
                    {
                        "x_data": "2017-06-22",
                        "y_data": 756.6745
                    },
                    {
                        "x_data": "2018-02-18",
                        "y_data": 747.5312
                    },
                    {
                        "x_data": "2018-01-12",
                        "y_data": 683.0735
                    },
                    {
                        "x_data": "2018-02-04",
                        "y_data": 679.2988
                    },
                    {
                        "x_data": "2017-08-17",
                        "y_data": 644.9306
                    },
                    {
                        "x_data": "2017-10-09",
                        "y_data": 620.2801
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "monthly_rental"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Give me a bar chart to show how many days with a max temperature greater than or equal to 80 for each year.",
            "For those dates with a max temperature greater than or equal to 80, I want to see the number of days for each year using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 87
                    },
                    {
                        "x_data": "2014",
                        "y_data": 260
                    },
                    {
                        "x_data": "2015",
                        "y_data": 155
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "MATCH"
        ],
        "db_id": "city_record",
        "nl_queries": [
            "Find the number of matches in different competitions. Plot them as pie chart.",
            "For each competition, count the number of matches. Visualize by pie chart.",
            "Create a pie chart showing the total number across competition."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1994 FIFA World Cup qualification",
                        "y_data": 4
                    },
                    {
                        "x_data": "2002 FIFA World Cup qualification",
                        "y_data": 1
                    },
                    {
                        "x_data": "Friendly match",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Can you draw the trend of sum budget in billions over the creation?, could you show by the x-axis in asc?",
            "Show sum of budget in different year and group by department creation time with a line chart, and rank from low to high by the X.",
            "Can you draw the trend of sum budget in billions over the creation?, I want to rank x axis from low to high order.",
            "Show sum of budget in different year and group by department creation time with a line chart, and display by the X-axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 23
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 77
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 59
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 439
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 543
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 58
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 21
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 62
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 73
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 44
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, sort sum credits in desc order please.",
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, and order by the sum credits in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Game Programming",
                        "y_data": 8
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 7
                    },
                    {
                        "x_data": "World History",
                        "y_data": 4
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 4
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 4
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 3
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 3
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 3
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "How many customers for different customer last name? Draw a bar chart, and show names from low to high order.",
            "Show the number of customers for different customer last name in a bar chart, could you sort x-axis in ascending order?",
            "Bar chart x axis customer last name y axis how many customer last name, and sort bars from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brekke",
                        "y_data": 1
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Effertz",
                        "y_data": 2
                    },
                    {
                        "x_data": "Erdman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Farrell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feest",
                        "y_data": 1
                    },
                    {
                        "x_data": "Huels",
                        "y_data": 1
                    },
                    {
                        "x_data": "Langworth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lind",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rath",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schinner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Swift",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turcotte",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wiza",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_last_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road, sort X-axis in descending order.",
            "Stack bar chart of school_id vs ACC_Road based on all home, and list x axis in desc order.",
            "Draw a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, rank in desc by the x axis.",
            "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Road, and rank in desc by the x axis.",
            "Give me the comparison about School_ID over the All_Home , and group by attribute ACC_Road by a bar chart, and sort X-axis in descending order.",
            "Find All_Home and School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and could you show x axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 4,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Tell me how many cinemas open for each year in a bar chart, and sort Y in ascending order please.",
            "Bar chart of how many openning year from each openning year, list from low to high by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Openning_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and employee_id , and visualize them by a bar chart, and order total number from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and employee_id in a bar chart, could you rank in descending by the Y-axis please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and employee_id , and show y axis in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the phone_number by a bar chart, and order total number from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and employee_id , and sort Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "515.123.8181",
                        "y_data": 206
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 205
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 204
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 203
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 202
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 201
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 178
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Return a bar chart on what is the total revenue of each manufacturer?, could you list Y-axis in descending order?",
            "Bar graph to show sum revenue from different name, and rank in descending by the y-axis please.",
            "What is the total revenue of each manufacturer, could you display total number from high to low order?",
            "A bar chart about what is the total revenue of each manufacturer?, and order y-axis from high to low order.",
            "Find the total revenue for each manufacturer Plot them as bar chart, could you display by the y-axis in descending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, could you rank from high to low by the y axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, and sort by the y axis in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, could you rank from high to low by the y axis?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, display from high to low by the total number.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and order total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.33333333333333
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer",
            "record"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "A bar chart for finding the number of the names of swimmers who has a result of \"win\".",
            "Find the names of swimmers who has a result of \"win\", and count them by a bar chart",
            "Find the number of the names of swimmers who has a result of \"win\"."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 3
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party_events",
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show party names and the number of events for each party in a bar chart, could you order by the x axis from high to low?",
            "How many events are there for each party, show by the x-axis from high to low.",
            "Return a bar chart on how many events are there for each party?, and could you order by the x axis from high to low?",
            "Give me a histogram for how many events are there for each party?, could you order by the x axis from high to low?",
            "Show party names and the number of events for each party, list x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Progress Party",
                        "y_data": 2
                    },
                    {
                        "x_data": "Convention Peoples Party",
                        "y_data": 3
                    },
                    {
                        "x_data": "3",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "What is the sum of capacity of cinemas open for each year? Return a line chart.",
            "Plot sum capacity over openning year in a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 305
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1633
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1336
                    },
                    {
                        "x_data": "2012",
                        "y_data": 368
                    },
                    {
                        "x_data": "2013",
                        "y_data": 330
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 364
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, give me the comparison about the amount of headquarter over the headquarter , and group by attribute headquarter by a bar chart.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the amount of headquarter , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, find headquarter and the amount of headquarter , and group by attribute headquarter, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarter)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students living in each city with a bar chart, and rank bar from high to low order.",
            "How many students live in each city? Show a bar chart, show in desc by the x axis please.",
            "Create a bar chart showing the total number across city code, rank from high to low by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute All_Home, list Team_ID from low to high order.",
            "Give me the comparison about Team_ID over the ACC_Road , and group by attribute All_Home, list in ascending by the Y-axis.",
            "Return a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and list in ascending by the Y-axis.",
            "Find ACC_Road and Team_ID , and group by attribute All_Home, and visualize them by a bar chart, and list Team_ID from low to high order.",
            "Stacked bar chart of team_id for with each All_Home in each acc road, and could you list by the Y in ascending?",
            "Visualize a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute All_Home, and could you sort by the y-axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 3,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 0,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the average of code , and group by attribute founder, and I want to sort by the the average of code from high to low.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of code , and group by attribute founder in a bar chart, and rank by the total number from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder by a bar chart, I want to show in descending by the total number.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder, I want to sort by the the average of code from high to low.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of code , and group by attribute founder, and order in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "James",
                        "y_data": 3
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by weekday and group by document name with a stacked bar chart, and order y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Winona Book"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and department_id , and visualize them by a bar chart, and show by the X-axis in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and department_id in a bar chart, display in descending by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of job_id and department_id , I want to display from high to low by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the job_id by a bar chart, rank bars in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and department_id , and could you rank names from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "What is the proportion of the minimum price of the rooms for each different decor? Show me a pie chart!",
            "Please use a pie chart to show the proportion of the minimum price of the rooms in a different decor.",
            "Show the minimum price of the rooms in different decor using a pie chart.",
            "Compute the total minimal baseprice across decor as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 75
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 150
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 150
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(basePrice)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Visualize a bar chart about the distribution of middle_name and gender_mf .",
            "Give me the comparison about gender_mf over the middle_name by a bar chart.",
            "Give me the comparison about gender_mf over the middle_name .",
            "Return a bar chart about the distribution of middle_name and gender_mf .",
            "Draw a bar chart about the distribution of middle_name and gender_mf ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Keira",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ruthie",
                        "y_data": 0
                    },
                    {
                        "x_data": "Alejandra",
                        "y_data": 0
                    },
                    {
                        "x_data": "Ethyl",
                        "y_data": 0
                    },
                    {
                        "x_data": "Joyce",
                        "y_data": 1
                    },
                    {
                        "x_data": "Amani",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mathew",
                        "y_data": 0
                    },
                    {
                        "x_data": "Aniyah",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kennith",
                        "y_data": 0
                    },
                    {
                        "x_data": "Ethelyn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Corene",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fritz",
                        "y_data": 0
                    },
                    {
                        "x_data": "Jayce",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zena",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "middle_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "A bar chart about what are the average prices of products, grouped by manufacturer name?",
            "Draw a bar chart for what are the average prices of products, grouped by manufacturer name?",
            "What are the average prices of products, grouped by manufacturer name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the booking start dates of the apartments with type code \"Duplex\"? Bin the year into weekday interval with a bar chart, show by the total number in asc.",
            "Return the booking start date for the apartments that have type code \"Duplex\" and bin the year into weekday interval with a bar chart, and display by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "PRODUCTS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Give the proportion of what are the different product names? What is the average product price for each of them?",
            "what are the different product names? What is the average product price for each of them?",
            "What are the different product names? What is the average product price for each of them.",
            "For each distinct product name, show its average product price. Plot them as pie chart.",
            "Compute the total the average of product price across product name as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "dinning",
                        "y_data": 238704.33333333328
                    },
                    {
                        "x_data": "film",
                        "y_data": 11385515.333333336
                    },
                    {
                        "x_data": "photo",
                        "y_data": 5102691.666666667
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Product_Price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "What are the names of the teachers and how many courses do they teach Plot them as bar chart, and order bar from high to low order.",
            "Show me a bar chart for what are the names of the teachers and how many courses do they teach?, I want to order in descending by the bar.",
            "Show names of teachers and the number of courses they teach Visualize by bar chart, list Name in desc order.",
            "what are the names of the teachers and how many courses do they teach?, and list Name from high to low order.",
            "Show names of teachers and the number of courses they teach with a bar chart, and I want to sort x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "For events that have more than one participant, count the event details for a bar chart.",
            "Give me a pie chart to show the proportion of event details of events that have more than one participant.",
            "What is the ratio of success and failure of the event details? Show me the result with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    },
                    {
                        "x_data": "Success",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of revenue , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the name , and group by attribute name by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 300
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 150
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 60
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart, and rank by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Agustinstad",
                        "y_data": 2
                    },
                    {
                        "x_data": "East Rickey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Edgardoberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Estaland",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gibsonfurt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gilbertmouth",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gleasonland",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hertafurt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake Floyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake Katheryn",
                        "y_data": 1
                    },
                    {
                        "x_data": "North Lisandroport",
                        "y_data": 3
                    },
                    {
                        "x_data": "Port Montytown",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(city)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and list X-axis from low to high order.",
            "Show me a bar chart about the number of races held in each year after 2014, and rank from low to high by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners and group by last name in a bar chart, and sort in desc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Price",
                        "y_data": 3
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hahn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Grady",
                        "y_data": 2
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 2
                    },
                    {
                        "x_data": "Stamm",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hauck",
                        "y_data": 1
                    },
                    {
                        "x_data": "Harvey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "broadcast"
        ],
        "db_id": "program_share",
        "nl_queries": [
            "Count the number of programs broadcast for each time section of a day in a bar chart.",
            "Count the number of programs broadcast for each time section of a day. Show bar chart.",
            "Plot the total number by grouped by time of day as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Morning",
                        "y_data": 4
                    },
                    {
                        "x_data": "Night",
                        "y_data": 5
                    },
                    {
                        "x_data": "Noon",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time_of_day",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they leave office, binning the leave office into WEEKDAY interval",
            "Bar chart x axis left office y axis the number of left office"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Left_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Left_office)"
                }
            }
        }
    },
    {
        "tables_used": [
            "store",
            "store_district",
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "How many stores are headquarted in each city Plot them as bar chart, rank by the x-axis from low to high.",
            "Find the number of stores in each city Plot them as bar chart, show by the x-axis in ascending.",
            "Draw a bar chart for how many stores are headquarted in each city?, and I want to display by the x axis from low to high.",
            "Return a bar chart on how many stores are headquarted in each city?, and sort in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bahawalpur City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bhakkar City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hafizabad City",
                        "y_data": 1
                    },
                    {
                        "x_data": "Khanewal City",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquartered_City",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Give me a bar chart for the average of baseprice of each decor, and list by the bar in descending please.",
            "Please use a bar chart to show the average price of the rooms in a different decor, list bars in descending order please.",
            "What is the average price of the rooms for each different decor? Show me a bar chart!, list by the x-axis in descending.",
            "Show the average price of the rooms in different decor using a bar chart, could you sort X in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "traditional",
                        "y_data": 187.5
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 162.5
                    },
                    {
                        "x_data": "modern",
                        "y_data": 112.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Give me the proportion of end stations for the trips with the three oldest id using a pie chart.",
            "Please give me a pie chart to show the proportion of end stations for the trips with the three smallest ids?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Harry Bridges Plaza (Ferry Building)",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Francisco Caltrain 2 (330 Townsend)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(end_station_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "end_station_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Has_allergy",
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart about how many students are affected by each allergy type?, rank bars in ascending order please.",
            "Draw a bar chart for how many students are affected by each allergy type?, display bars in ascending order.",
            "Show all allergy type with number of students affected with a bar chart, rank bars in ascending order please.",
            "Show all allergy type with number of students affected Visualize by bar chart, display bars in ascending order.",
            "How many students are affected by each allergy type Visualize by bar chart, order by the X-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 8
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 23
                    },
                    {
                        "x_data": "food",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Please compare the frequency of the position of the pilots using a bar chart.",
            "Can you draw a bar chart to show the number of positions of the pilots?",
            "Bar chart of the number of position from each position"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Center Team",
                        "y_data": 3
                    },
                    {
                        "x_data": "Forward Team",
                        "y_data": 1
                    },
                    {
                        "x_data": "Forward-Center Team",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, and show Y in ascending order.",
            "Create a bar chart showing how many arrival across arrival, list by the the number of arrival in ascending.",
            "Tell me the distribution of the number of trains at each arrival time with a bar chart, and show Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "05:09",
                        "y_data": 1
                    },
                    {
                        "x_data": "08:54",
                        "y_data": 1
                    },
                    {
                        "x_data": "09:08",
                        "y_data": 1
                    },
                    {
                        "x_data": "09:48",
                        "y_data": 1
                    },
                    {
                        "x_data": "13:28",
                        "y_data": 1
                    },
                    {
                        "x_data": "23:39",
                        "y_data": 1
                    },
                    {
                        "x_data": "23:44",
                        "y_data": 1
                    },
                    {
                        "x_data": "13:04",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Arrival",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Arrival)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and sort in asc by the the number of job id please.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and sort in asc by the the number of job id please.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, and display the number of job id from low to high order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, I want to display y-axis in asc order.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, and display the number of job id from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 2
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 3
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 3
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 4
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 9
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 9
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of manufacturer , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the sum of manufacturer , and group by attribute name, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each building with a bar chart, order y axis in desc order.",
            "How many courses are in the Psychology department in each building? Draw a bar chart, display total number in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lambea",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 2
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Main",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lamberton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sportsinfo",
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Show last names for all student who are on scholarship, and count them by a bar chart, and could you sort in descending by the y-axis?",
            "What are the last names for all scholarship students, and count them by a bar chart, and could you sort in descending by the y-axis?",
            "A bar chart for what are the number of the last names for all scholarship students?, and rank total number in desc order.",
            "What are the number of the last names for all scholarship students?, and could you order by the y axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shieber",
                        "y_data": 2
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Please give me a bar chart to show the distribution of results of all music festival.",
            "What is the distibution of results for each music festival? Could you show me the result with a bar chart.",
            "Return the results of all music festivals using a bar chart.",
            "Plot the number of result by grouped by result as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Awarded",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nominated",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Show me a pie chart for what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
            "what are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
            "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.",
            "Compute the total the total number across nationality as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nigeria",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Kindom",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions",
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the card type codes and the number of transactions with a bar chart.",
            "Show the card type codes and the number of transactions. Visualize by bar chart.",
            "what are the different card types, and how many transactions have been made with each?",
            "Return a bar chart on what are the different card types, and how many transactions have been made with each?",
            "What are the different card types, and how many transactions have been made with each. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 7
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show all origins and the number of flights from each origin by a bar chart, list by the X from high to low.",
            "Bar chart of the total number from each origin, list by the x-axis in desc.",
            "Show all origins and the number of flights from each origin Show bar chart, and rank in desc by the x axis.",
            "For each origin, how many flights came from there Show bar chart, and list by the X from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Los Angeles",
                        "y_data": 8
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, show from high to low by the Y.",
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, list y-axis in descending order please.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, I want to sort in descending by the Y-axis.",
            "Return the number of the completion date for all the tests that have \"Fail\" result, and rank total number from high to low order please.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and show from high to low by the Y.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, and show in desc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Show the smallest enrollment of each state using a bar chart, and show in descending by the y axis.",
            "Show the smallest enrollment of each state, and I want to sort Y-axis in descending order please.",
            "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, show in descending by the y axis.",
            "Show minimal enr from each state, and I want to rank y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "OK",
                        "y_data": 22000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LA",
                        "y_data": 18000
                    },
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "How many different products are produced in each headquarter city Visualize by bar chart, and display by the x-axis in asc.",
            "Find the number of different products that are produced by companies at different headquarter cities Plot them as bar chart, and show X in asc order.",
            "Draw a bar chart for how many different products are produced in each headquarter city?, and order X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 3
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T1.name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart about the number of last name for all female students whose sex is F, could you sort in descending by the X?",
            "A bar chart showing the number of last name for all female students Their sex is F, and list by the x-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Smith",
                        "y_data": 2
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute headquarter, could you show by the y-axis in descending please?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and price , and group by attribute headquarter, I want to rank Y in desc order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and price , and group by attribute headquarter, could you display by the y axis in desc?",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute headquarter in a bar chart, and could you sort in desc by the Y?",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute headquarter by a bar chart, and order by the y axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees in the same department as Clara excluding Clara, bin their hire date into the day of week interval, and count how many employees in each month for a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move in date, could you rank by the how many date moved in from high to low?",
            "What is the proportion of each customer's move in date? Show me the bar chart, I want to show in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart.",
            "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality.",
            "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality.",
            "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart.",
            "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality.",
            "Show the average of id from each nationality"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "France",
                        "y_data": 8
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "Visualize a bar chart for what are the ids and names of the medicine that can interact with two or more enzymes?, and sort Y in ascending order please.",
            "What are the ids and names of the medicine that can interact with two or more enzymes Visualize by bar chart, could you order id from low to high order?",
            "A bar chart about what are the ids and names of the medicine that can interact with two or more enzymes?, could you show total number from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aripiprazole",
                        "y_data": 2
                    },
                    {
                        "x_data": "Asenapine",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iloperidone",
                        "y_data": 8
                    },
                    {
                        "x_data": "Ziprasidone",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "catalogs",
            "catalog_structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5 Bin publication dates into Year interval, and count catalog as a bar chart, and could you order Y-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_publication",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_publication)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, I want to list by the sum department id in ascending.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, I want to list by the sum department id in ascending.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, show Y-axis in ascending order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart, and rank by the Y from low to high.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, rank by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 670
                    },
                    {
                        "x_data": "June",
                        "y_data": 670
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 680
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1040
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize the general trend of the average of shop id over the start from, could you sort in ascending by the X?",
            "Give me the trend about the average of Shop_ID over Start_from bin start_from by time, show x-axis in asc order.",
            "Show me the trend about the average of Shop_ID over Start_from bin start_from by time with a line chart, could you rank X from low to high order?",
            "Return a line chart about the change of the average of Shop_ID over Start_from bin start_from by time, could you rank X from low to high order?",
            "A line chart shows the trend of the average of Shop_ID over Start_from bin start_from by time, and could you rank X from low to high order?",
            "For the average of Shop_ID, Start_from, visualize the trend, could you sort in ascending by the X?",
            "Draw a line chart about the change of the average of Shop_ID over Start_from bin start_from by time, show x-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011",
                        "y_data": 8
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a stacked bar chart to show how many things in different types of each thing, and the details of the organization that owns it, I want to show in descending by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 5,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 2,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Commen"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 4,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 0,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 1,
                        "classify": "Electronics"
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 1,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 1,
                        "classify": "Furniture"
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 0,
                        "classify": "Furniture"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between Credits and DNO .",
            "Return a scatter chart about the correlation between Credits and DNO .",
            "What is the relationship between Credits and DNO ?",
            "Show me about the correlation between Credits and DNO in a scatter chart.",
            "Visualize the relationship between Credits and DNO ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 600
                    },
                    {
                        "x_data": 1,
                        "y_data": 600
                    },
                    {
                        "x_data": 1,
                        "y_data": 600
                    },
                    {
                        "x_data": 1,
                        "y_data": 50
                    },
                    {
                        "x_data": 2,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 600
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 550
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 520
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 550
                    },
                    {
                        "x_data": 4,
                        "y_data": 520
                    },
                    {
                        "x_data": 4,
                        "y_data": 520
                    },
                    {
                        "x_data": 4,
                        "y_data": 520
                    },
                    {
                        "x_data": 4,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Credits"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DNO"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners in a stacked bar chart The x-axis is first name and group by skill description, and I want to list by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Naomi",
                        "y_data": 2,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, rank total number in desc order please.",
            "Show me a bar chart about the number of races held in each year after 2014, I want to show by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart, could you sort in asc by the y axis please?",
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart, and display y axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "what are the allergy types and how many allergies correspond to each one?, and display the total number from low to high order.",
            "Return a bar chart on what are the allergy types and how many allergies correspond to each one?, display by the Y from low to high.",
            "What are the allergy types and how many allergies correspond to each one, and order Y in asc order.",
            "Show all allergy types and the number of allergies in each type Plot them as bar chart, display by the Y from low to high.",
            "Bar graph to show the total number from different allergytype, and display by the Y in asc.",
            "Show all allergy types and the number of allergies in each type in a bar chart, rank total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, could you list by the Y-axis from low to high?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, list by the Y in asc.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart, show by the how many hire date in ascending.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart, order how many hire date from low to high order please.",
            "For all employees who have the letters D or S in their first name, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart, show by the how many hire date in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 7
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 9
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show the number of opening years for three churches that opened most recently in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1840",
                        "y_data": 1
                    },
                    {
                        "x_data": "1841",
                        "y_data": 0
                    },
                    {
                        "x_data": "1842",
                        "y_data": 1
                    },
                    {
                        "x_data": "1843",
                        "y_data": 0
                    },
                    {
                        "x_data": "1844",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many bookings for each apartment number? Plot a bar chart, and I want to sort by the total number from high to low please.",
            "Return a bar chart about the number bookings for each apartment number, and could you display by the Y in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Suite 693",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 3
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 2
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 187",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Return a histogram on how many professors have a PhD in each department?, and I want to rank by the X-axis in asc.",
            "How many professors have a PhD in each department Show bar chart, I want to rank by the X-axis in asc.",
            "Find the number of professors with a PhD degree in each department Show bar chart, and could you display X from low to high order?",
            "A bar chart about how many professors have a PhD in each department?, list from low to high by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    },
                    {
                        "x_data": "ART",
                        "y_data": 1
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3
                    },
                    {
                        "x_data": "ECON/FIN",
                        "y_data": 1
                    },
                    {
                        "x_data": "ENG",
                        "y_data": 2
                    },
                    {
                        "x_data": "HIST",
                        "y_data": 1
                    },
                    {
                        "x_data": "MATH",
                        "y_data": 2
                    },
                    {
                        "x_data": "MKT/MGT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PSYCH",
                        "y_data": 1
                    },
                    {
                        "x_data": "SOC",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and order by the Y in asc.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, order by the Y in asc.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", I want to show by the y-axis in ascending.",
            "Find the number of the dates of the tests taken with result \"Pass\", and could you list in ascending by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-25",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_test_taken",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_test_taken)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and the sum of price , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the name , and group by attribute name by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me a pie chart to reflect the proportion of Sex and the amount of Sex.",
            "For the attribute Sex and the amount of Sex, show their proportion by a pie chart.",
            "A pie chart shows the proportion of Sex and the amount of Sex.",
            "Show me about the proportion of the amount of Sex and the amount of Sex in a pie chart.",
            "Visualize a pie chart about the proportion of Sex and the amount of Sex.",
            "Give me a pie to show how many sex from different sex."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "M",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Sex)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "List each test result and its count in descending order of count by a bar chart.",
            "List each test result and its count in descending order of count. Visualize by bar chart.",
            "For each distinct test result, find the number of students who got the result. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pass",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "test_result",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of phone_number and manager_id , and sort by the x-axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and manager_id in a bar chart, could you sort from high to low by the PHONE_NUMBER?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and manager_id , and sort X in descending order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and manager_id , order by the x axis in descending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and manager_id , could you order in descending by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "603.123.6666",
                        "y_data": 201
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 101
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 205
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 101
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 101
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 100
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 149
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "What is the name of the school that has the smallest enrollment in each state?",
            "Return a bar graph for the name of the school that has the smallest enrollment in each state.",
            "Compare the smallest enrollment of schools in each state using a bar chart.",
            "Bar graph to show minimal enr from different cname"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ASU",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 18000
                    },
                    {
                        "x_data": "OU",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of department_id over hire_date , and show in desc by the X-axis please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of department_id over hire_date , sort in desc by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of department_id over hire_date, could you order by the HIRE_DATE in desc?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the trend of department_id over hire_date , and could you sort x-axis in desc order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about department_id over hire_date with a line chart, show by the X in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the trend about department_id over hire_date , sort by the x-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte)"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart, and could you sort y axis in desc order please?",
            "Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart, and order Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bench",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Four-poster bed",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Market_Rate"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "How many accounts for each customer? Show a bar chart that groups by customer's last name, and I want to display in ascending by the bars.",
            "Show the number of accounts for each customer in a bar chart grouping by customer's last name, and I want to display in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Auer",
                        "y_data": 4
                    },
                    {
                        "x_data": "Boyle",
                        "y_data": 3
                    },
                    {
                        "x_data": "Keeling",
                        "y_data": 4
                    },
                    {
                        "x_data": "Leuschke",
                        "y_data": 1
                    },
                    {
                        "x_data": "Muller",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ruecker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schaefer",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_last_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, visualize a scatter chart about the correlation between price and manufacturer , and group by attribute name.",
            "For those products with a price between 60 and 120, a scatter chart shows the correlation between price and manufacturer , and group by attribute name.",
            "For those products with a price between 60 and 120, what is the relationship between price and manufacturer , and group by attribute name?",
            "For those products with a price between 60 and 120, visualize the relationship between price and manufacturer , and group by attribute name.",
            "For those products with a price between 60 and 120, return a scatter chart about the correlation between price and manufacturer , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 90,
                        "y_data": 2,
                        "classify": "CD drive"
                    },
                    {
                        "x_data": 120,
                        "y_data": 6,
                        "classify": "Memory"
                    },
                    {
                        "x_data": 66,
                        "y_data": 3,
                        "classify": "Toner cartridge"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "trust"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "Find each target user's name and average trust score. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mark",
                        "y_data": 4.666666666666667
                    },
                    {
                        "x_data": "Terry",
                        "y_data": 5
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 8
                    },
                    {
                        "x_data": "Rosie",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "Roxi",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(trust)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, display in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 1
                    },
                    {
                        "x_data": "eius",
                        "y_data": 1
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 2
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 1
                    },
                    {
                        "x_data": "quo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organisation_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Plot season by how many season as a line chart, and display by the X-axis in asc.",
            "Plot season by how many season as a line chart, and could you sort by the x-axis in ascending?",
            "List the number of games in each season with a line chart, and could you sort in ascending by the x-axis?",
            "List the number of games in each season with a line chart, and show x-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2007",
                        "y_data": 3
                    },
                    {
                        "x_data": "2008",
                        "y_data": 3
                    },
                    {
                        "x_data": "2009",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2
                    },
                    {
                        "x_data": "2012",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me the comparison about the sum of Height over the Sex , and group by attribute Sex by a bar chart, show sum height in descending order.",
            "Show me about the distribution of Sex and the sum of Height , and group by attribute Sex in a bar chart, show sum height in descending order.",
            "Bar chart of total number of height from each sex, and display in descending by the y-axis please.",
            "Visualize a bar chart about the distribution of Sex and the sum of Height , and group by attribute Sex, and could you list in desc by the total number please?",
            "Return a bar chart about the distribution of Sex and the sum of Height , and group by attribute Sex, and order in desc by the y-axis.",
            "A bar chart shows the distribution of Sex and the sum of Height , and group by attribute Sex, order in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 1366
                    },
                    {
                        "x_data": "F",
                        "y_data": 395
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Height)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and could you rank by the x axis in desc?",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, show in desc by the x-axis.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and show by the JOB_ID in descending.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, sort by the names in descending please.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, and could you rank by the x axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVOICES"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all payment method codes and the number of orders for each code in a bar chart, list by the Y from high to low.",
            "List the distinct payment method codes with the number of orders mad Show bar chart, display by the total number from high to low please.",
            "List the distinct payment method codes with the number of orders mad in a bar chart, and list by the Y from high to low.",
            "Show all payment method codes and the number of orders for each code Show bar chart, order from high to low by the Y.",
            "Give me a bar chart for the total number of each payment method code, and show in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MasterCard",
                        "y_data": 6
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 5
                    },
                    {
                        "x_data": "American E",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the name , and group by attribute name, and could you order X from high to low order please?",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of manufacturer , and group by attribute name in a bar chart, and show in descending by the X-axis.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the name , and group by attribute name by a bar chart, and could you list from high to low by the bars please?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, list in descending by the bars.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of manufacturer , and group by attribute name, I want to show by the X in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of rooms with price higher than 120 for different decor. Show the proportion.",
            "Give the proportion of how many rooms cost more than 120, for each different decor?",
            "Pie. how many rooms cost more than 120, for each different decor?",
            "How many rooms cost more than 120, for each different decor. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 2
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 2
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "How many completion students in each day? Return a line chart grouping by date of completion, and order by the X-axis in descending please.",
            "Visualize the general trend of the number of date of completion over the date of completion, and rank by the X-axis in desc.",
            "List the number of completion students in each day and group by date of completion in a line chart, and show from high to low by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-22",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-09",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-07",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-04",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-02-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-27",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-26",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Visualize the general trend of sum count(*) over the year, and could you show X in asc order please?",
            "Find the number of courses provided in each year with a line chart, and sort in asc by the year.",
            "How many courses are provided in each year? Visualize with a line chart, and I want to list x-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001-01-01",
                        "y_data": 5
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 13
                    },
                    {
                        "x_data": "2003-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2004-01-01",
                        "y_data": 7
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 8
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 13
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 9
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 11
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200.",
            "Give me the comparison about the amount of meter_200 over the meter_200 , and group by attribute meter_200.",
            "Find meter_200 and the amount of meter_200 , and group by attribute meter_200, and visualize them by a bar chart.",
            "Show me about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200 in a bar chart.",
            "Return a bar chart about the distribution of meter_200 and the amount of meter_200 , and group by attribute meter_200.",
            "Create a bar chart showing the number of meter 200 across meter 200"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 1
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(meter_200)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Let institution types as the X-axis and the number of institutions for each type as Y-axis, the visualization type is bar chart, could you order in desc by the Y-axis?",
            "Draw a bar chart of type versus the total number, could you order in descending by the the total number ?",
            "Please give me a bar chart showing institution types, along with the number of institutions for each type, I want to rank in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private",
                        "y_data": 7
                    },
                    {
                        "x_data": "Public",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tribal",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance",
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show each author and the number of workshops they submitted to with a bar chart.",
            "Show each author and the number of workshops they submitted to. Show bar chart.",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops.",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops.",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart.",
            "How many workshops did each author submit to? Return the author name and the number of workshops. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(DISTINCT T1.workshop_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart.",
            "For those employees who did not have any job in the past, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1845
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1684
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1727
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1890
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1669
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1718
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1942
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "Show the number of companies each investor has invested with a pie chart.",
            "How many companies each investor has invested? Show me a pie chart.",
            "Create a pie chart showing how many investor across investor."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the number of films each cinema has."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and manufacturer , and group by attribute headquarter, and sort bars from low to high order.",
            "For those records from the products and each product's manufacturer, give me the comparison about manufacturer over the name , and group by attribute headquarter, rank by the X-axis in ascending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and manufacturer , and group by attribute headquarter, display by the bar in ascending please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and manufacturer , and group by attribute headquarter, rank by the X-axis in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and manufacturer , and group by attribute headquarter in a bar chart, and sort by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show all allergy types and the number of allergies in each type by a pie chart.",
            "Show all allergy types and the number of allergies in each type. Visualize by pie chart.",
            "Give the proportion of what are the allergy types and how many allergies correspond to each one?",
            "Visualize a pie chart with what are the allergy types and how many allergies correspond to each one?",
            "What are the allergy types and how many allergies correspond to each one. Show a pie chart.",
            "I want to know the proportion of allergy types for each allergytype."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie that the student with first name Lisa has? Draw a bar chart, order by the Y from low to high please.",
            "What is the number of each allergie the girl named Lisa has? Plot them as bar chart, and sort by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anchovies",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Allergy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and I want to order by the x-axis in asc.",
            "For those records from the products and each product's manufacturer, find name and the average of code , and group by attribute name, and visualize them by a bar chart, and rank by the names from low to high please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name, and could you sort from low to high by the bars?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, show Name in asc order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, order from low to high by the Name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie type the girl named Lisa has? Show bar chart, and order from low to high by the y axis.",
            "What is the number of each allergie type that the student with first name Lisa has? Visualize by bar chart, list by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 2
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 4
                    },
                    {
                        "x_data": "food",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Has_allergy"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What are the last names and ages of the students who are allergic to milk and cat? Plot them as bar chart, I want to display LName in ascending order.",
            "Find the last name and age of the student who has allergy to both milk and cat Show a bar chart, sort from low to high by the LName."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apap",
                        "y_data": 18
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "List the number of documents for each document description in a bar chart.",
            "How many documents for each document description? Show me a bar chart.",
            "Bar chart x axis document description y axis how many document description"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "f",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 1
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 4
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, and list Y-axis in desc order.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and show by the Y-axis from high to low.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, and show by the Y-axis from high to low.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, rank by the total number from high to low.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and order by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, find hire_date and the average of manager_id bin hire_date by time, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of manager_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 92.5
                    },
                    {
                        "x_data": "July",
                        "y_data": 116.13333333333334
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 143.23076923076923
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 120.75
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a bar chart for simply displaying the email address of the employee and the corresponding employee id, order in ascending by the Y-axis.",
            "Show employee_id from each email, display y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SKING",
                        "y_data": 100
                    },
                    {
                        "x_data": "AHUNOLD",
                        "y_data": 103
                    },
                    {
                        "x_data": "NGREENBE",
                        "y_data": 108
                    },
                    {
                        "x_data": "DRAPHEAL",
                        "y_data": 114
                    },
                    {
                        "x_data": "AFRIPP",
                        "y_data": 121
                    },
                    {
                        "x_data": "JRUSSEL",
                        "y_data": 145
                    },
                    {
                        "x_data": "JWHALEN",
                        "y_data": 200
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 201
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 203
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 204
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events)"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "List the number of the names of products that are not in any event, I want to display in ascending by the X-axis.",
            "A bar chart for listing the number of the names of products that are not in any event, and sort by the Product_Name from low to high please.",
            "List the names of products that are not in any event, and count them by a bar chart, display Product_Name in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Business Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Business Policy B",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 2
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "railway",
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Show id and location of railways that are associated with more than one train Visualize by bar chart, and could you rank Y-axis in asc order?",
            "Show id and location of railways that are associated with more than one train by a bar chart, order in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bressingham",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Railway_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder, order in desc by the total number please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of code , and group by attribute founder, order in desc by the total number please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder by a bar chart, and could you sort total number from high to low order?",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of code , and group by attribute founder in a bar chart, could you show in desc by the the average of code please?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder, and show from high to low by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "Give me a histogram for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, and rank in ascending by the Y.",
            "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72 Visualize by bar chart, and display Y-axis in asc order.",
            "Find the government form name and total population for each government form whose average life expectancy is longer than 72, and I want to order in ascending by the Y.",
            "Show me a bar chart for what are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?, sort by the sum population in asc.",
            "Bar graph to show total number of population from different governmentform, and list in asc by the sum population."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Parliamentary Coprincipality",
                        "y_data": 78000
                    },
                    {
                        "x_data": "Part of Denmark",
                        "y_data": 99000
                    },
                    {
                        "x_data": "Dependent Territory of the UK",
                        "y_data": 193050
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of The Netherlands",
                        "y_data": 320000
                    },
                    {
                        "x_data": "US Territory",
                        "y_data": 329000
                    },
                    {
                        "x_data": "Nonmetropolitan Territory of France",
                        "y_data": 464000
                    },
                    {
                        "x_data": "Monarchy (Emirate)",
                        "y_data": 617000
                    },
                    {
                        "x_data": "Overseas Department of France",
                        "y_data": 1731000
                    },
                    {
                        "x_data": "Constitutional Monarchy (Emirate)",
                        "y_data": 1972000
                    },
                    {
                        "x_data": "Emirate Federation",
                        "y_data": 2441000
                    },
                    {
                        "x_data": "Monarchy (Sultanate)",
                        "y_data": 2870000
                    },
                    {
                        "x_data": "Commonwealth of the US",
                        "y_data": 3947000
                    },
                    {
                        "x_data": "Socialistic State",
                        "y_data": 5605000
                    },
                    {
                        "x_data": "Federation",
                        "y_data": 7160400
                    },
                    {
                        "x_data": "Special Administrative Region of China",
                        "y_data": 7255000
                    },
                    {
                        "x_data": "Constitutional Monarchy, Federation",
                        "y_data": 82516000
                    },
                    {
                        "x_data": "Socialistic Republic",
                        "y_data": 115072000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "GovernmentForm",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airport"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "List the number of airports in each country with a bar chart ordered alphabetically by the name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Belgium",
                        "y_data": 1
                    },
                    {
                        "x_data": "Denmark",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iceland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Norway",
                        "y_data": 1
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs for each size code in a bar chart, could you sort total number from high to low order?",
            "How many dogs for each size code? Return a bar chart, and could you show by the y axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MED",
                        "y_data": 9
                    },
                    {
                        "x_data": "LGE",
                        "y_data": 4
                    },
                    {
                        "x_data": "SML",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "size_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(size_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart about the number of end dates for incidents with incident type code \"NOISE\" and bin by month."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_end",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_end)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, show me the number of payments of each day of the week using a bar chart, and sort total number in ascending order.",
            "For those payments processed with Visa, bin the payment day into the Day of week interval and count them for a bar chart, and sort total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Group and count the move in date in a bar chart, and I want to bin the X into Year interval, and rank by the the number of date moved in in asc.",
            "Bar chart x axis date moved in y axis how many date moved in, list in ascending by the y axis please.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Year interval, and show by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Compare the lowest rating among all movies by each director using a bar chart, display x axis from high to low order please.",
            "Show the director and their lowest rating among all movies in a bar chart, display by the x axis from high to low please.",
            "Please visualize a bar chart, that the X-axis is the director and the Y-axis is thier corresponding lowest rating among all movies, and order x-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the score of the movie with the lowest rating among all movies directed by each title with a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 3,
                        "classify": "Avatar"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Gone with the Wind"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "Raiders of the Lost Ark"
                    },
                    {
                        "x_data": 4,
                        "y_data": 4,
                        "classify": "Snow White"
                    },
                    {
                        "x_data": 2,
                        "y_data": 2,
                        "classify": "The Sound of Music"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "stars",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id.",
            "For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.10344827586206
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "List the maximum weight and type for each type of pet with a bar chart, order by the Y-axis in ascending please.",
            "List the maximum weight and type for each type of pet, could you rank maximal weight from low to high order please?",
            "Find the maximum weight for each type of pet List the maximum weight and pet type Visualize by bar chart, and could you order maximal weight in ascending order?",
            "Bar graph to show maximal weight from different pettype, list by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 12
                    },
                    {
                        "x_data": "dog",
                        "y_data": 13.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show how many customer addresses in each address type code with a bar chart, and could you display by the Y in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Billing",
                        "y_data": 8
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "address_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(address_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Bar chart of maximal product price from each product type code, and list from low to high by the Y.",
            "Give the maximum product price for each product type in a bar chart, sort by the y axis from low to high.",
            "What is the highest price of product, grouped by product type? Show a bar chart, rank in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 939.57
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 971.44
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of department_id , and group by attribute job_id in a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of department_id , and group by attribute job_id, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, could you order in descending by the names?",
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, could you order in descending by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "World History",
                        "y_data": 4
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 3
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 3
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 7
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 4
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 3
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 4
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 3
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and I want to show by the y-axis in descending please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, I want to show by the y-axis in descending please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of code , and group by attribute name, and show y axis in desc order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, rank by the mean code in descending please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name by a bar chart, show y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 5
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle",
            "ship",
            "death"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "Draw a bar chart for what are the ids and names of the battles that led to more than 10 people killed in total.",
            "What are the ids and names of the battles that led to more than 10 people killed in total."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle of Messinopolis",
                        "y_data": 5
                    },
                    {
                        "x_data": "Battle of Boruy",
                        "y_data": 6
                    },
                    {
                        "x_data": "Siege of Constantinople",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees in the Finance department, compare the total number of different job id using a bar chart.",
            "Give me a bar chart that groups and count the job id for all employees in the Finance department."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Find the ids and names of stations from which at least 200 trips started, and rank from low to high by the X-axis.",
            "What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, and rank from low to high by the X-axis.",
            "Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, list by the x-axis from low to high.",
            "Show me start_station_id by start station name in a histogram, and could you rank bars in ascending order?",
            "what are the ids and names of all start stations that were the beginning of at least 200 trips?, and could you rank bars in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2nd at Folsom",
                        "y_data": 62
                    },
                    {
                        "x_data": "2nd at South Park",
                        "y_data": 64
                    },
                    {
                        "x_data": "2nd at Townsend",
                        "y_data": 61
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "Embarcadero at Bryant",
                        "y_data": 54
                    },
                    {
                        "x_data": "Embarcadero at Folsom",
                        "y_data": 51
                    },
                    {
                        "x_data": "Embarcadero at Sansome",
                        "y_data": 60
                    },
                    {
                        "x_data": "Grant Avenue at Columbus Avenue",
                        "y_data": 73
                    },
                    {
                        "x_data": "Harry Bridges Plaza (Ferry Building)",
                        "y_data": 50
                    },
                    {
                        "x_data": "Howard at 2nd",
                        "y_data": 63
                    },
                    {
                        "x_data": "Market at 10th",
                        "y_data": 67
                    },
                    {
                        "x_data": "Market at 4th",
                        "y_data": 76
                    },
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    },
                    {
                        "x_data": "Powell Street BART",
                        "y_data": 39
                    },
                    {
                        "x_data": "San Francisco Caltrain (Townsend at 4th)",
                        "y_data": 70
                    },
                    {
                        "x_data": "San Francisco Caltrain 2 (330 Townsend)",
                        "y_data": 69
                    },
                    {
                        "x_data": "Steuart at Market",
                        "y_data": 74
                    },
                    {
                        "x_data": "Temporary Transbay Terminal (Howard at Beale)",
                        "y_data": 55
                    },
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "start_station_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "start_station_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "Draw a scatter chart about the correlation between CID and Credits .",
            "Return a scatter chart about the correlation between CID and Credits .",
            "Visualize a scatter chart about the correlation between CID and Credits .",
            "Show me about the correlation between CID and Credits in a scatter chart.",
            "A scatter chart shows the correlation between CID and Credits ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 600.1030000000001,
                        "y_data": 1
                    },
                    {
                        "x_data": 600.303,
                        "y_data": 1
                    },
                    {
                        "x_data": 600.601,
                        "y_data": 1
                    },
                    {
                        "x_data": 50.802,
                        "y_data": 1
                    },
                    {
                        "x_data": 550.79,
                        "y_data": 2
                    },
                    {
                        "x_data": 600.101,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.107,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.109,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.113,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.121,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.211,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.227,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.232,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.271,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.315,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.3330000000001,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.337,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.363,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.415,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.433,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.437,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.445,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.461,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.4630000000001,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.465,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.509,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.6569999999999,
                        "y_data": 3
                    },
                    {
                        "x_data": 600.7869999999999,
                        "y_data": 3
                    },
                    {
                        "x_data": 500.20300000000003,
                        "y_data": 3
                    },
                    {
                        "x_data": 500.204,
                        "y_data": 3
                    },
                    {
                        "x_data": 500.205,
                        "y_data": 3
                    },
                    {
                        "x_data": 500.20599999999996,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.62,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.626,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.631,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.661,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.6709999999999,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.681,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.721,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.75,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.137,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.219,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.325,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.345,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.349,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.3530000000001,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.401,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.41,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.419,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.4209999999999,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.432,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.475,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.49,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.605,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.609,
                        "y_data": 3
                    },
                    {
                        "x_data": 520.651,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.102,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.108999999999995,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.325,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.37,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.381,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.427,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.67,
                        "y_data": 3
                    },
                    {
                        "x_data": 50.821000000000005,
                        "y_data": 3
                    },
                    {
                        "x_data": 550.111,
                        "y_data": 4
                    },
                    {
                        "x_data": 550.1709999999999,
                        "y_data": 4
                    },
                    {
                        "x_data": 550.2909999999999,
                        "y_data": 4
                    },
                    {
                        "x_data": 550.31,
                        "y_data": 4
                    },
                    {
                        "x_data": 550.361,
                        "y_data": 4
                    },
                    {
                        "x_data": 550.413,
                        "y_data": 4
                    },
                    {
                        "x_data": 550.42,
                        "y_data": 4
                    },
                    {
                        "x_data": 550.471,
                        "y_data": 4
                    },
                    {
                        "x_data": 520.2130000000001,
                        "y_data": 4
                    },
                    {
                        "x_data": 520.435,
                        "y_data": 4
                    },
                    {
                        "x_data": 520.6030000000001,
                        "y_data": 4
                    },
                    {
                        "x_data": 50.203,
                        "y_data": 4
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "CID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Credits"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bar chart of department_id from each first name, order by the x-axis in descending.",
            "You can return a bar chart to show the employees' first name and the corresponding department's id, and rank by the FIRST_NAME in descending.",
            "Just show the first name of the employee and list their department's id in the Y-axis of the bar chart, could you order by the X in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 90
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 100
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "John",
                        "y_data": 80
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 10
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "Den",
                        "y_data": 30
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 60
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and manager_id in a bar chart, and sort by the y axis from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and manager_id , could you list in descending by the y axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and manager_id , and sort y-axis from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the first_name , list MANAGER_ID in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and manager_id , and could you sort by the y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 205
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 149
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into Year interval and count them for a bar chart, sort by the how many date payment made in asc.",
            "For those payments processed with Visa, show me the number of payments of each year using a bar chart, and sort y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "operate_company",
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "How many companies that have ever operated a flight for each type? Draw a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Corporate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joint Venture",
                        "y_data": 3
                    },
                    {
                        "x_data": "Subsidiary",
                        "y_data": 9
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of courses each teacher teaches in a bar chart, I want to list total number in desc order.",
            "What is the number of courses each teacher teaches? Visualze with a bar chart, and I want to list total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description by a bar chart.",
            "List the cost of each treatment and the corresponding treatment type description. Show bar chart.",
            "Display a bar chart for what are the cost and treatment type description of each treatment?",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?",
            "What are the cost and treatment type description of each treatment. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Physical examination",
                        "y_data": 485.8
                    },
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 478.4
                    },
                    {
                        "x_data": "Vaccination",
                        "y_data": 508
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cost_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the founder , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of manufacturer , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather",
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the id and local authority of the station whose maximum precipitation is higher than 50 Visualize by bar chart, could you rank y-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Three Rivers",
                        "y_data": 10
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 4
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 3
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type name? Visualize by a ar chart.",
            "Return a bar chart showing the number of documents for each document type name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 3
                    },
                    {
                        "x_data": "Film",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paper",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Employees"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show all role codes and the number of employees in each role by a bar chart.",
            "Show all role codes and the number of employees in each role. Show bar chart.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?",
            "Return a histogram on what is the code of each role and the number of employees in each role?",
            "What is the code of each role and the number of employees in each role. Show bar chart.",
            "Bar chart x axis role code y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ED",
                        "y_data": 7
                    },
                    {
                        "x_data": "HR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR",
                        "y_data": 5
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Role_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me a scatter chart that groups all home attribute, the x-axis is school id and the y-axis is acc percent.",
            "Group by all home attribute, show me the school id and acc_percent in a scatter plot.",
            "Show school id vs acc_percent as scatter plot use a different color for each All_Home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.625,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 5,
                        "y_data": 0.563,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 1
                    },
                    {
                        "x_data": "eius",
                        "y_data": 1
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 2
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 1
                    },
                    {
                        "x_data": "quo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organisation_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of department_id bin hire_date by time, and visualize them by a bar chart, could you rank from high to low by the total number?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and could you order from high to low by the Y please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the hire_date bin hire_date by time by a bar chart, and list mean department id from high to low order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, I want to rank by the total number in descending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by time, and could you rank from high to low by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    },
                    {
                        "x_data": "June",
                        "y_data": 83.57142857142857
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 50.689655172413794
                    },
                    {
                        "x_data": "July",
                        "y_data": 46.12903225806452
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "bank",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "What are the names of the different bank branches, and what are their total loan amounts Show bar chart, list bars from low to high order please.",
            "Return a bar chart on what are the names of the different bank branches, and what are their total loan amounts?, and rank x axis from low to high order please.",
            "Find the total amount of loans offered by each bank branch, list bars from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "broadway",
                        "y_data": 5000
                    },
                    {
                        "x_data": "downtown",
                        "y_data": 3000
                    },
                    {
                        "x_data": "morningside",
                        "y_data": 2050
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "candidate"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A scatter showing the correlation between support and oppose rates for each candidate.",
            "What is the relationship between support and oppose rates of each candidate?",
            "Plot a scatter chart, support rate by oppose_rate."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.25,
                        "y_data": 0.43
                    },
                    {
                        "x_data": 0.33,
                        "y_data": 0.45
                    },
                    {
                        "x_data": 0.24,
                        "y_data": 0.43
                    },
                    {
                        "x_data": 0.18,
                        "y_data": 0.44
                    },
                    {
                        "x_data": 0.24,
                        "y_data": 0.32
                    },
                    {
                        "x_data": 0.17,
                        "y_data": 0.32
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Support_rate"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Oppose_rate"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "people)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "A bar chart about the number of countries for all people whose age is smaller than the average, and could you display in desc by the X-axis?",
            "Show the number of countries for all people whose age is smaller than the average, could you rank in descending by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 5
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faults for different fault short name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MW",
                        "y_data": 5
                    },
                    {
                        "x_data": "PW",
                        "y_data": 7
                    },
                    {
                        "x_data": "TW",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_short_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_short_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "roller_coaster"
        ],
        "db_id": "roller_coaster",
        "nl_queries": [
            "Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and could you show in asc by the Y?",
            "Show the names of countries and the average speed of roller coasters from each country with a bar chart, display by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Finland",
                        "y_data": 47.45
                    },
                    {
                        "x_data": "Austria",
                        "y_data": 58.66666666666666
                    },
                    {
                        "x_data": "Sweden",
                        "y_data": 67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.Speed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "What is the number of types of competition?, order in asc by the names.",
            "Give me a bar chart for how many competition type of each competition type, rank from low to high by the bars.",
            "Show the number of different competition types with a bar graph, and order by the bar in asc please.",
            "A bar chart showing the number of different competition types, could you show from low to high by the bar please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Competition_type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, I want to sort by the X in asc please.",
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, order by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AOB",
                        "y_data": 51
                    },
                    {
                        "x_data": "CAS",
                        "y_data": 69
                    },
                    {
                        "x_data": "FNA",
                        "y_data": 66
                    },
                    {
                        "x_data": "HBB",
                        "y_data": 60
                    },
                    {
                        "x_data": "IBD",
                        "y_data": 63
                    },
                    {
                        "x_data": "IBS",
                        "y_data": 59
                    },
                    {
                        "x_data": "MWC",
                        "y_data": 56
                    },
                    {
                        "x_data": "RND",
                        "y_data": 62
                    },
                    {
                        "x_data": "RTE",
                        "y_data": 55
                    },
                    {
                        "x_data": "TAA",
                        "y_data": 59
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Room",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "Show the number of male and female assistant professors with a pie chart.",
            "Show the number of male and female assistant professors.",
            "Give the proportion of how many male and female assistant professors do we have?",
            "A pie chart about how many male and female assistant professors do we have?",
            "How many male and female assistant professors do we have."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 3
                    },
                    {
                        "x_data": "M",
                        "y_data": 12
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Bar chart x axis document description y axis how many document description, and list bars in ascending order please.",
            "How many documents for each document description? Show me a bar chart, and could you display x-axis in asc order please?",
            "List the number of documents for each document description in a bar chart, and I want to sort by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 1
                    },
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "f",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 1
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 4
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of meter_600 and meter_100 , and could you display x axis in descending order?",
            "Return a bar chart about the distribution of meter_600 and meter_100 , and could you order by the x-axis from high to low please?",
            "Visualize a bar chart about the distribution of meter_600 and meter_100 , display X in descending order.",
            "Give me the comparison about meter_100 over the meter_600 , display X in descending order.",
            "Give me the comparison about meter_100 over the meter_600 by a bar chart, and could you order by the x-axis from high to low please?",
            "Create a bar chart showing meter_100 across meter 600, display X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:57.10",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "5:56.99",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "5:56.31",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "5:54.45",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "5:53.53",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "5:53.03",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "5:52.92",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "5:52.59",
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_600",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Return a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, and I want to display by the y-axis from low to high please.",
            "Draw a bar chart about the distribution of Sex and the average of Weight , and group by attribute Sex, I want to rank in asc by the y-axis.",
            "A bar chart shows the distribution of Sex and the average of Weight , and group by attribute Sex, I want to rank in asc by the y-axis.",
            "Show me about the distribution of Sex and the average of Weight , and group by attribute Sex in a bar chart, list mean weight in ascending order.",
            "Show me the average of weight by sex in a histogram, and show by the Y-axis from low to high.",
            "Give me the comparison about the average of Weight over the Sex , and group by attribute Sex by a bar chart, and show by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 86.71428571428571
                    },
                    {
                        "x_data": "F",
                        "y_data": 92
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Please use a bar chart to show the total amount of payment by each payment method code, and I want to display by the Y-axis from high to low.",
            "How many total amounts of payments by each method code? You can give me a bar chart, list by the y axis in desc.",
            "Bar chart of sum amount payment from each payment method code, and show by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MasterCard",
                        "y_data": 2531865
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 794713
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 232825
                    },
                    {
                        "x_data": "American Express",
                        "y_data": 177130
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company",
            "station_company)"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of companies without a gas station in each main industry with a bar chart.",
            "How many companies without a gas station in each main industry? Draw a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 3
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each cinema, show the price and group them by film title in a stacked bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 9,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Carrowleagh"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 12,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 8,
                        "classify": "Codling"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 12,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Gortahile"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 9,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Mount Callan"
                    },
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 15,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 0,
                        "classify": "Oriel"
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 0,
                        "classify": "Oriel"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Bar chart x axis customer last name y axis how many customer last name, could you list from high to low by the X-axis?",
            "How many customers for different customer last name? Draw a bar chart, rank by the bar in desc.",
            "Show the number of customers for different customer last name in a bar chart, show by the x axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wiza",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turcotte",
                        "y_data": 1
                    },
                    {
                        "x_data": "Swift",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schinner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rath",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lind",
                        "y_data": 1
                    },
                    {
                        "x_data": "Langworth",
                        "y_data": 1
                    },
                    {
                        "x_data": "Huels",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feest",
                        "y_data": 1
                    },
                    {
                        "x_data": "Farrell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Erdman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Effertz",
                        "y_data": 2
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brekke",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_last_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "patient"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "How many patients do each physician take care of? List their names and number of patients they take care of Show bar chart, and could you rank in descending by the bar?",
            "How many patients do each physician take care of? List their names and number of patients they take care of in a bar chart, and could you show by the Name in descending?",
            "Return the name of each physician and the number of patients he or she treats in a bar chart, and list Name from high to low order.",
            "Draw a bar chart for how many patients do each physician take care of? List their names and number of patients they take care of, show bars from high to low order.",
            "Return a bar chart on how many patients do each physician take care of? List their names and number of patients they take care of, sort in desc by the x-axis.",
            "Return the name of each physician and the number of patients he or she treats, and show bars from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John Dorian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 2
                    },
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, could you sort in asc by the X-axis?",
            "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and order x-axis in ascending order.",
            "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and could you show names in asc order?",
            "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and order x-axis in ascending order.",
            "Bar chart x axis nationality y axis how many nationality, could you display in asc by the bars?",
            "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, and show in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Bin the claim date into the Day of Week interval and count them for visualizing a bar chart.",
            "Create a bar chart showing the number of date claim made across date claim made"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of employee_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the trend about employee_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about employee_id over hire_date with a line chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for employee_id, hire_date, visualize the trend.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of employee_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of employee_id over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 104
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 105
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 106
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 107
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 109
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 111
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 112
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 113
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 115
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 116
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 117
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 118
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 119
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 125
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 126
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 127
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 128
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 129
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 130
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 131
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 132
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 133
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 134
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 135
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 136
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 137
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 138
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 139
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 140
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 141
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 142
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 143
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 144
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 150
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 151
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 152
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 153
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 154
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 155
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 156
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 157
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 158
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 159
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 160
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 161
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 162
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 163
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 164
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 165
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 166
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 167
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 168
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 169
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 170
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 171
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 172
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 173
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 174
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 175
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 176
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 177
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 178
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 179
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 180
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 181
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 182
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 183
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 184
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 185
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 186
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 187
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 188
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 189
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 190
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 191
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 192
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 193
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 194
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 195
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 196
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 197
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 198
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 199
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 200
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 202
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 204
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 206
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give the proportion of what is the average price for each type of product?",
            "Return a pie chart on what is the average price for each type of product?",
            "What is the average price for each type of product.",
            "Return the average price for each product type by a pie chart.",
            "Return the average price for each product type. Plot them as pie chart.",
            "Give me a pie to show the average of product price from different product type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 715.5366666666665
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 796.0416666666665
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by instructor's name, rank CRS_DESCRIPTION in asc order.",
            "How many courses for each course description? Show me a stacked bar chart The x-axis is course description and group by instructor's name, order from low to high by the CRS_DESCRIPTION please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "news_report",
            "event",
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the names of journalists and the number of events they reported in a bar chart, could you list by the the total number in asc?",
            "Show the names of journalists and the number of events they reported Visualize by bar chart, and list in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Herbert Swindells",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Meaney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ray Ferris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Briggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Waddington",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jackie Waring",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payments"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show me a bar chart that bin all date of transactions into the weekday interval and the y-axis is their total number, and order by the y-axis in desc.",
            "Give me a bar chart for how many date of transaction of each date of transaction, and order by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor",
            "visit"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Show name and age for visitors who visited some museums more than once using a bar chart.",
            "histogram, X-axis is the name and the Y is the age for visitors who visited some museums more than 1 times."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arjen Robben",
                        "y_data": 27
                    },
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 36
                    },
                    {
                        "x_data": "Rafael van der Vaart",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's last name, and sort x-axis from low to high order.",
            "How many dogs each owner has? Return a bar chart that groups by owner's last name, I want to show in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DuBuque",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feil",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fisher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Funk",
                        "y_data": 3
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mertz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nicolas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prohaska",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rippin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmitt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stoltenberg",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of manager_id bin hire_date by time in a bar chart, list by the Y-axis in asc.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the hire_date bin hire_date by time by a bar chart, rank in ascending by the y axis.",
            "For those employees who did not have any job in the past, give me the comparison about the average of manager_id over the hire_date bin hire_date by time, and I want to order total number from low to high order.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and I want to show from low to high by the Y-axis.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of manager_id bin hire_date by time, and could you sort total number from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 96.25
                    },
                    {
                        "x_data": "July",
                        "y_data": 117.58620689655173
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 125.5925925925926
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 139.16129032258064
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Bar chart x axis date claim settled y axis the number of date claim settled, and order the number of date claim settled in descending order.",
            "Bin the settlement date for each settlement case into the day of week interval and count them for visualizing a bar chart, show by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Settled",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Settled)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart, I want to display by the x axis in asc.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph, and show by the Payment_Method_Code from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "American Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 3
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 7
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Payment_Method_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about School_ID over the All_Games by a bar chart, display total number from low to high order.",
            "Find All_Games and School_ID , and visualize them by a bar chart, I want to show by the total number in asc.",
            "Draw a bar chart about the distribution of All_Games and School_ID , and rank total number from low to high order.",
            "Bar chart of school_id from each all games, display total number from low to high order.",
            "Return a bar chart about the distribution of All_Games and School_ID , and rank total number from low to high order.",
            "A bar chart shows the distribution of All_Games and School_ID , I want to show by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 4
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Show minimal enr from each state, could you display by the bar in desc?",
            "Show the smallest enrollment of each state using a bar chart, and could you display by the x axis in descending please?",
            "Bar chart, the-axis is the state, and the Y axis is each state's the smallest enrollment, could you show by the X-axis in desc?",
            "Show the smallest enrollment of each state, and list in descending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "OK",
                        "y_data": 22000
                    },
                    {
                        "x_data": "LA",
                        "y_data": 18000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    },
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart.",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval.",
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart.",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 9
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of rooms with king bed for each decor type, sort bar in desc order.",
            "Return a bar chart on how many rooms have king beds? Report the number for each decor type, could you list x-axis from high to low order?",
            "How many rooms have king beds? Report the number for each decor type Plot them as bar chart, list by the x-axis in descending.",
            "how many rooms have king beds? Report the number for each decor type, and could you list x-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "traditional",
                        "y_data": 3
                    },
                    {
                        "x_data": "modern",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart, display by the y-axis in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, order by the y axis in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and could you sort by the Y in ascending?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, show Y-axis from low to high order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the hire_date bin hire_date by time, show by the y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 3774.1935483870966
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4824.137931034483
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 9074.193548387097
                    },
                    {
                        "x_data": "June",
                        "y_data": 9885.714285714286
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find those years for all exhibitions with ticket prices lower than 15, group by year, and count year.",
            "Find those years for all exhibitions with ticket prices lower than 15, return a bar chart that groups by year and counts the total number of years."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mailshot_campaigns"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show all distinct product categories along with the number of mailshots in each category Visualize by bar chart, order from low to high by the y-axis.",
            "Show all distinct product categories along with the number of mailshots in each category in a bar chart, and list Y-axis from low to high order.",
            "Show me the total number by product category in a histogram, and list from low to high by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "clothes",
                        "y_data": 9
                    },
                    {
                        "x_data": "food",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalogs"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart, sort by the x axis from low to high.",
            "Plot date of latest revision by the number of date of latest revision as a line chart, rank by the x axis in asc please.",
            "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend, list in asc by the date_of_latest_revision please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apr",
                        "y_data": 0
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 0
                    },
                    {
                        "x_data": "Dec",
                        "y_data": 1
                    },
                    {
                        "x_data": "July",
                        "y_data": 0
                    },
                    {
                        "x_data": "June",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 1
                    },
                    {
                        "x_data": "May",
                        "y_data": 0
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 0
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_latest_revision",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_latest_revision)"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "How many home games by each weekday (bin the year attr into weekdays interval)? Give me a bar chart.",
            "Return me a bar chart to show the frequency of the year attribute by binning into a weekday interval.",
            "Bar chart x axis year y axis the number of year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 21
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 21
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 21
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and score of the movie with a bar chart.",
            "Draw a bar chart to compare the stars of each movie by title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names of high school students and their corresponding number of friends Plot them as bar chart, and rank in desc by the X-axis.",
            "A bar chart about what are the names of the high schoolers and how many friends does each have?, and display X-axis in desc order.",
            "Display a bar chart for what are the names of the high schoolers and how many friends does each have?, display by the bars in desc.",
            "Show the names of high school students and their corresponding number of friends in a bar chart, and order in descending by the x axis.",
            "What are the names of the high schoolers and how many friends does each have Show bar chart, and rank in desc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "tryout",
            "player"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "A bar chart about what is minimum hours of the students playing in different position?, order from high to low by the Y.",
            "For each position, what is the minimum time students spent practicing Plot them as bar chart, and I want to display by the total number in descending please.",
            "What is minimum hours of the students playing in different position Plot them as bar chart, and could you sort by the y axis in descending?",
            "Show me a bar chart for what is minimum hours of the students playing in different position?, I want to display by the total number in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "striker",
                        "y_data": 1600
                    },
                    {
                        "x_data": "goalie",
                        "y_data": 1200
                    },
                    {
                        "x_data": "mid",
                        "y_data": 300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "pPos",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T2.HS)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Show the names of products and the number of events they are in by a bar chart, and sort by the X in asc.",
            "Show the names of products and the number of events they are in Visualize by bar chart, and could you display from low to high by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Conference Equipments",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 1
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 2
                    },
                    {
                        "x_data": "Special Dinning",
                        "y_data": 4
                    },
                    {
                        "x_data": "TV Equipments",
                        "y_data": 5
                    },
                    {
                        "x_data": "Trading Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Trading Policy B",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, rank mean school id in ascending order.",
            "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, show by the Y in ascending.",
            "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, and list y axis from low to high order.",
            "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, and sort total number from low to high order.",
            "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, sort total number from low to high order.",
            "Bar graph to show mean school id from different all home, rank by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events)"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "List the number of the names of products that are not in any event, and rank x axis from high to low order please.",
            "A bar chart for listing the number of the names of products that are not in any event, order in desc by the bars.",
            "List the names of products that are not in any event, and count them by a bar chart, and order in descending by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Men suits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 2
                    },
                    {
                        "x_data": "Business Policy B",
                        "y_data": 1
                    },
                    {
                        "x_data": "Business Policy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many accounts for different statement details? Draw a bar chart, list by the bars in descending.",
            "Show the number of accounts for different statement details in a bar chart, list by the x-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private Project",
                        "y_data": 6
                    },
                    {
                        "x_data": "Open Project",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Statement_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Return a histogram on how old is the average person for each job?, and could you list by the y axis in desc please?",
            "Bar chart x axis job y axis the average of age, list by the y-axis in desc.",
            "Display a bar chart for how old is the average person for each job?, sort in descending by the total number.",
            "What is average age for different job title Visualize by bar chart, rank total number from high to low order.",
            "Visualize a bar chart for what is average age for different job title?, and display by the Y-axis from high to low.",
            "How old is the average person for each job Show bar chart, and rank total number from high to low order.",
            "A bar chart about what is average age for different job title?, and rank by the the average of age in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Use a histogram to show the department's id and corresponding employees' first name, I want to display by the y axis in ascending.",
            "Show me department_id by first name in a histogram, and could you list Y-axis from low to high order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jennifer",
                        "y_data": 10
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "Den",
                        "y_data": 30
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 50
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 60
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "John",
                        "y_data": 80
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 90
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 100
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, and could you show from low to high by the total number?",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, could you order in ascending by the y-axis?",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time, and could you display in asc by the y axis?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and sort by the y axis in ascending.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, sort by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 107.5
                    },
                    {
                        "x_data": "July",
                        "y_data": 128.33333333333334
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 162.3846153846154
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 191.08333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalogs"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a line chart.",
            "On which days more than one revisions were made on catalogs, bin the date into weekday interval and count them to show the trend.",
            "Plot date of latest revision by the number of date of latest revision as a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apr",
                        "y_data": 0
                    },
                    {
                        "x_data": "May",
                        "y_data": 0
                    },
                    {
                        "x_data": "June",
                        "y_data": 0
                    },
                    {
                        "x_data": "July",
                        "y_data": 0
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nov",
                        "y_data": 0
                    },
                    {
                        "x_data": "Dec",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_latest_revision",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_latest_revision)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "What are the category of music festivals with result \"Awarded\", and count them by a bar chart, show from low to high by the y axis.",
            "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", could you show in ascending by the Y?",
            "What are the number of the category of music festivals with result \"Awarded\"?, could you list Y from low to high order?",
            "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, could you list Y from low to high order?",
            "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, and sort by the y-axis from low to high.",
            "Return the number of the categories of music festivals that have the result \"Awarded\", show from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Best Sound Song",
                        "y_data": 1
                    },
                    {
                        "x_data": "Best Song",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Category)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Find the number of the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties?, sort by the total number from low to high.",
            "A bar chart for finding the number of the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties?, could you sort in ascending by the y-axis?",
            "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2, and count them by a bar chart, and rank from low to high by the total number.",
            "Find the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties, and count them by a bar chart, and rank the number of comptroller from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alan Hevesi",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Faso",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carl McCall",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Comptroller",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Comptroller)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airports"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "Find the altitude (or elevation) of the airports in the city of New York with a pie chart.",
            "What is the altitude (or elevation) of the airports in the city of New York? Show me a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "La Guardia Airport",
                        "y_data": 21
                    },
                    {
                        "x_data": "John F Kennedy International Airport",
                        "y_data": 13
                    },
                    {
                        "x_data": "Indianola Municipal Airport",
                        "y_data": 126
                    },
                    {
                        "x_data": "One Police Plaza Heliport",
                        "y_data": 244
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "elevation"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of meter_300 and meter_100 in a bar chart.",
            "Visualize a bar chart about the distribution of meter_300 and meter_100 .",
            "Find meter_300 and meter_100 , and visualize them by a bar chart.",
            "Give me the comparison about meter_100 over the meter_300 by a bar chart.",
            "Give me the comparison about meter_100 over the meter_300 .",
            "Plot meter_100 by grouped by meter 300 as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:56.02",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "2:55.90",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "2:56.04",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "2:53.46",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "2:57.10",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:56.95",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:56.64",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "2:55.94",
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_300",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, sort by the y axis from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart, and rank by the total number in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday by a bar chart, show by the Y from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, display from high to low by the total number.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and rank by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 155
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 153.5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 153
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 152.5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 152
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 151
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 150.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "what is average age of male for different job title?",
            "Visualize a pie chart with what is average age of male for different job title?",
            "What is average age of male for different job title. Show the proportion.",
            "Draw a pie chart for what is the average age for a male in each job?",
            "Return a pie on what is the average age for a male in each job?",
            "What is the average age for a male in each job."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Bar graph to show the number of booking end date from different booking end date, could you list in desc by the how many booking end date?",
            "How many apartment bookings in each year? Show me a bar chart binning booking end date by year, I want to rank in descending by the how many booking end date.",
            "Show the number of apartment bookings in each year and bin booking end date by year with a bar chart, and could you list in desc by the how many booking end date?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 11
                    },
                    {
                        "x_data": "2018",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_end_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_end_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "complaints"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "what are all the different product names, and how many complains has each received?, and order X-axis in asc order.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, I want to order by the X-axis in ascending please.",
            "List the name of all products along with the number of complaints that they have received, and order from low to high by the X-axis.",
            "List the name of all products along with the number of complaints that they have received with a bar chart, and I want to rank by the x axis in ascending please.",
            "What are all the different product names, and how many complains has each received Show bar chart, sort by the X-axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chocolate",
                        "y_data": 6
                    },
                    {
                        "x_data": "Keyboard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mouse",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Great Gatsby",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Show white percentages of cities and the crime rates of counties they are in with a scatter chart.",
            "Show white percentages of cities and the crime rates of counties they are in. Plot them as scatter chart.",
            "Scatter chart. what are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
            "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to. Show scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 93.1,
                        "y_data": 118
                    },
                    {
                        "x_data": 86.6,
                        "y_data": 118
                    },
                    {
                        "x_data": 83,
                        "y_data": 118
                    },
                    {
                        "x_data": 72.5,
                        "y_data": 123
                    },
                    {
                        "x_data": 83.5,
                        "y_data": 123
                    },
                    {
                        "x_data": 82,
                        "y_data": 178
                    },
                    {
                        "x_data": 84.5,
                        "y_data": 178
                    },
                    {
                        "x_data": 53.5,
                        "y_data": 178
                    },
                    {
                        "x_data": 80.7,
                        "y_data": 178
                    },
                    {
                        "x_data": 86,
                        "y_data": 178
                    },
                    {
                        "x_data": 78.3,
                        "y_data": 178
                    },
                    {
                        "x_data": 84.1,
                        "y_data": 150
                    },
                    {
                        "x_data": 76.1,
                        "y_data": 150
                    },
                    {
                        "x_data": 87.9,
                        "y_data": 49
                    },
                    {
                        "x_data": 61.2,
                        "y_data": 49
                    },
                    {
                        "x_data": 64.3,
                        "y_data": 174
                    },
                    {
                        "x_data": 70.7,
                        "y_data": 174
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "White"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Crime_rate"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and could you display y axis in desc order?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and I want to display in desc by the Y-axis.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, and I want to display from high to low by the y-axis.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart, display y-axis in desc order.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time, and sort sum department id in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 2480
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 1400
                    },
                    {
                        "x_data": "July",
                        "y_data": 1350
                    },
                    {
                        "x_data": "June",
                        "y_data": 990
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Road and All_Games_Percent , and visualize them by a bar chart, sort in descending by the y axis.",
            "Bar chart of all_games_percent from each all road, list in desc by the y axis.",
            "Show me about the distribution of All_Road and All_Games_Percent in a bar chart, and show by the y-axis in descending.",
            "Visualize a bar chart about the distribution of All_Road and All_Games_Percent , could you rank from high to low by the total number?",
            "Return a bar chart about the distribution of All_Road and All_Games_Percent , rank from high to low by the y axis please.",
            "Draw a bar chart about the distribution of All_Road and All_Games_Percent , and could you display total number from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the average age of male students (with sex M) from each city, show X-axis in ascending order.",
            "What is the average age of male students in each city? Draw a bar chart, display by the city_code in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 19
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19.33333333333333
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 18
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? Show their total number by each participant type code using a bar chart, and sort y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Participant",
                        "y_data": 12
                    },
                    {
                        "x_data": "Organizer",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each instructor in a bar chart, and list x-axis from low to high order.",
            "How many courses for each teacher? Show me a bar chart, and rank by the bar in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Show me a bar chart about the number of races held in each year after 2014, and order X-axis from high to low order please.",
            "How many races are held in each year after 2014? Show me a bar chart, and rank bar in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments each professional has operated with a bar chart that groups by professional's first name, I want to order the number of first name from high to low order.",
            "How many treatments each professional has operated? Show a bar chart that groups by professional's first name, and could you list by the the number of first name in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Monte",
                        "y_data": 3
                    },
                    {
                        "x_data": "Vernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 2
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the number of films each cinema has, and order y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Codling",
                        "y_data": 3
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party_events",
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show party names and the number of events for each party in a bar chart, show in descending by the y-axis.",
            "How many events are there for each party, order by the the total number in desc please.",
            "Show party names and the number of events for each party, order by the the total number in desc please.",
            "Return a bar chart on how many events are there for each party?, and order in descending by the y axis.",
            "Give me a histogram for how many events are there for each party?, and list by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convention Peoples Party",
                        "y_data": 3
                    },
                    {
                        "x_data": "3",
                        "y_data": 3
                    },
                    {
                        "x_data": "Progress Party",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            ", and order by the y axis in ascending.",
            "Plot the total number by grouped by industry as a bar graph, and sort in ascending by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Telecommunications",
                        "y_data": 1
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 7
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show each employee's salary using a bar chart, note that use the last name of each employee.",
            "Show me salary by last name in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "visitor"
        ],
        "db_id": "museum_visit",
        "nl_queries": [
            "Can you give me a bar chart to show the name and membership level of the visitors whose membership level is higher than 4, could you order by the y-axis in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Guti Midfielder",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fernando Gago",
                        "y_data": 6
                    },
                    {
                        "x_data": "Gonzalo Higua\u00edn ",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Level_of_membership"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Bar chart x axis is full time y axis mean employee id, show in descending by the bar.",
            "Find Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, and I want to list by the Is_full_time in desc.",
            "Show me about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time in a bar chart, I want to list by the Is_full_time in desc.",
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time, and sort in desc by the x axis.",
            "Draw a bar chart about the distribution of Is_full_time and the average of Employee_ID , and group by attribute Is_full_time, display by the x-axis in desc.",
            "Give me the comparison about the average of Employee_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, show in descending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 3.8
                    },
                    {
                        "x_data": "F",
                        "y_data": 4.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Bar chart x axis state y axis the number of state, and sort by the how many state in descending.",
            "What is the number of distinct states? Show me a bar chart, I want to list by the Y-axis in descending please.",
            "Group by distinct states and them count them in a bar chart, and I want to list by the Y-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NY",
                        "y_data": 2
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "CA",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the number of debates for each person on the negative side in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Charles Van Wyck",
                        "y_data": 1
                    },
                    {
                        "x_data": "George Briggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Horace F. Clark",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Cochrane",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents are created in each day? Bin the document date by year interval with a line chart.",
            "Show the number of documents created in each day and bin document date by year interval with a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 4
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 1
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 3
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006~2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010~2013",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Give me a histogram for what are the names and ids of the tourist attractions that are visited at most once?, and rank in asc by the y-axis.",
            "What are the names and ids of the tourist attractions that are visited at most once Visualize by bar chart, show by the Tourist_Attraction_ID in asc.",
            "Display a bar chart for what are the names and ids of the tourist attractions that are visited at most once?, rank in asc by the y-axis.",
            "Show the names and ids of tourist attractions that are visited at most once, could you display in ascending by the Y?",
            "Show the names and ids of tourist attractions that are visited at most once by a bar chart, list by the Y-axis in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "UK gallery",
                        "y_data": 2701
                    },
                    {
                        "x_data": "flying elephant",
                        "y_data": 5076
                    },
                    {
                        "x_data": "history gallery",
                        "y_data": 6653
                    },
                    {
                        "x_data": "presidents hall",
                        "y_data": 8429
                    },
                    {
                        "x_data": "fun shops",
                        "y_data": 9360
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template type codes and number of templates for each with a bar chart, could you list Y-axis in descending order please?",
            "Visualize a bar chart for what are the different template type codes, and how many templates correspond to each?, and I want to show by the y axis in desc.",
            "Return a bar chart on what are the different template type codes, and how many templates correspond to each?, and I want to sort by the Y from high to low.",
            "Show all template type codes and number of templates for each Visualize by bar chart, show Y-axis in descending order.",
            "Show me the total number by template type code in a histogram, and list y-axis from high to low order.",
            "What are the different template type codes, and how many templates correspond to each Plot them as bar chart, I want to show by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    },
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "How old is each gender, on average Plot them as bar chart, and rank from high to low by the gender.",
            "Return a histogram on how old is each gender, on average?, rank from high to low by the gender.",
            "Bar graph to show the average of age from different gender, and I want to show by the bars in desc.",
            "Return a bar chart on what is the average age for each gender?, and sort X in descending order please.",
            "Give me a histogram for how old is each gender, on average?, and sort X in descending order please.",
            "What is the average age for each gender Visualize by bar chart, and could you rank by the x-axis in descending?",
            "Draw a bar chart for what is the average age for each gender?, and I want to show by the bars in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "male",
                        "y_data": 40
                    },
                    {
                        "x_data": "female",
                        "y_data": 25.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, display in descending by the x-axis.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, sort from high to low by the x-axis.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and display in desc by the bar.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the average of department_id , and group by attribute job_id, sort in descending by the bar.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, could you sort by the X in desc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Stacked bar chart of the number of left office for with each Minister in each left office, could you sort by the Y in descending please?",
            "How many parties of the time they took office, binning the left office into Weekday interval, and then split by the minister's name, and rank by the how many left office in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Kojo Botsio (MP)"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Left_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Left_office)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player",
            "Player_Attributes"
        ],
        "db_id": "soccer_1",
        "nl_queries": [
            "For the top five players in terms of potential, bin their birthday into YEAR interval, and show me the distribution of their birthday.",
            "For the top five players in terms of potential, bin their birthday into YEAR interval count them using a trend line."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987",
                        "y_data": 1
                    },
                    {
                        "x_data": "1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992",
                        "y_data": 1
                    },
                    {
                        "x_data": "1993",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "birthday",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(birthday)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie type that the student with first name Lisa has? Visualize by bar chart.",
            "What is the number of each allergie type the girl named Lisa has? Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 2
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 4
                    },
                    {
                        "x_data": "food",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Show me a bar chart for the average of how many matches were played each year?",
            "Return a histogram on the average of how many matches were played in each year.",
            "Compute the average of the number of matches that happened each year. Plot them as a bar chart.",
            "Bar graph to show mean count(*) from different year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 12
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2016",
                        "y_data": 158
                    },
                    {
                        "x_data": "2017",
                        "y_data": 108
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "wedding)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show the name and age for all male people who don't have a wedding with a bar chart, and list by the x axis in descending please.",
            "A bar chart about the name and age for all male people who don't have a wedding, and could you rank in desc by the X please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Graeme McDowell",
                        "y_data": 34
                    },
                    {
                        "x_data": "Adam Scott",
                        "y_data": 26
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart",
            "A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
            "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season , and rank by the Y-axis in descending.",
            "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, and could you order by the y axis from high to low?",
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, could you order by the y axis from high to low?",
            "Bar chart x axis acc regular season y axis acc_percent, sort by the ACC_Percent in descending.",
            "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , show in descending by the y-axis.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , show in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each office in a bar chart.",
            "How many courses for each office? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BBG 208",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the sum of capacity of cinemas open for each year.",
            "Give me a bar chart for total number of capacity of each openning year"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 305
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 1633
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 1336
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 368
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 330
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 364
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "What is the number of each winning aircraft? Visualize by bar chart, and show from low to high by the total number.",
            "Please list the number of each winning aircraft in a bar chart, and rank in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Aircraft)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Plot how many booking start date by grouped by booking start date as a bar graph, order Y in ascending order.",
            "How many apartment bookings in each weekday? Show me a bar chart binning booking start date by weekday, and order total number in ascending order.",
            "Show the number of apartment bookings in each weekday and bin booking start date by weekday with a bar chart, show how many booking start date in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What is the oldest age for each gender of student? Return a bar chart, sort in descending by the X-axis.",
            "Find the oldest age for students with different sex in a bar chart, I want to show from high to low by the names.",
            "Bar graph to show maximal age from different sex, and could you list Sex from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 27
                    },
                    {
                        "x_data": "F",
                        "y_data": 26
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and could you rank by the Y-axis from high to low?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart, display by the y-axis from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of salary over the hire_date bin hire_date by time, and I want to sort y-axis in desc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, order in desc by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, sort by the Y-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 9885.714285714286
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 9074.193548387097
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4824.137931034483
                    },
                    {
                        "x_data": "July",
                        "y_data": 3774.1935483870966
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find Nationality and the amount of Nationality , and group by attribute Nationality, and visualize them by a bar chart, and I want to rank by the how many nationality from high to low.",
            "Bar chart x axis nationality y axis how many nationality, and list in descending by the Y-axis.",
            "Visualize a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, list y axis from high to low order.",
            "Return a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and list in descending by the Y-axis.",
            "Draw a bar chart about the distribution of Nationality and the amount of Nationality , and group by attribute Nationality, and I want to rank by the how many nationality from high to low.",
            "Give me the comparison about the amount of Nationality over the Nationality , and group by attribute Nationality, and rank total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by weekday with a bar chart, and I want to display how many document date from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of manager_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of manager_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of manager_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of manager_id over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of manager_id over hire_date in a line chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about manager_id over hire_date with a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, could you show x-axis from high to low order?",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, sort x axis in desc order please.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, could you rank in descending by the bar?",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, sort x axis in desc order please.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and order from high to low by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 135.44444444444446
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.55555555555554
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.76923076923077
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 148
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 116
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111.25
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, I want to sort in desc by the y axis.",
            "A bar chart shows the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road, and rank from high to low by the total number.",
            "Bar chart x axis acc road y axis the average of school id, and rank in desc by the Y please.",
            "Find ACC_Road and the average of School_ID , and group by attribute ACC_Road, and visualize them by a bar chart, rank in desc by the Y please.",
            "Give me the comparison about the average of School_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, I want to sort in desc by the y axis.",
            "Show me about the distribution of ACC_Road and the average of School_ID , and group by attribute ACC_Road in a bar chart, I want to display Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 4.5
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "what is the total number of last names of all candidates?",
            "Give me a bar graph for what is the total number of last names of all candidates?",
            "Bar graph to show the number of last name from different last name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bartoletti",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bednar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feest",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hartmann",
                        "y_data": 2
                    },
                    {
                        "x_data": "Senger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wintheiser",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "operate_company",
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "How many companies that have ever operated a flight for each type? Draw a bar chart, I want to rank from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Corporate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Joint Venture",
                        "y_data": 3
                    },
                    {
                        "x_data": "Subsidiary",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and display by the total number of manager id in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, and sort from low to high by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, sort from low to high by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, order in ascending by the y axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart, and sort from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1744
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1818
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1827
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1833
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1870
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1942
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2090
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show different types of ships and the number of ships of each type in a bar chart, and show Type in desc order.",
            "For each type, how many ships are there Plot them as bar chart, and show names from high to low order please.",
            "Bar chart x axis type y axis the total number, and show names from high to low order please.",
            "Show different types of ships and the number of ships of each type Show bar chart, and order from high to low by the Type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Sections"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Show how many section description from each section description, I want to display total number from low to high order.",
            "Count the section_description, and group by section_description with a bar chart, and could you rank the number of section description in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ad",
                        "y_data": 1
                    },
                    {
                        "x_data": "doloremque",
                        "y_data": 1
                    },
                    {
                        "x_data": "ex",
                        "y_data": 1
                    },
                    {
                        "x_data": "facilis",
                        "y_data": 1
                    },
                    {
                        "x_data": "nesciunt",
                        "y_data": 1
                    },
                    {
                        "x_data": "non",
                        "y_data": 1
                    },
                    {
                        "x_data": "provident",
                        "y_data": 1
                    },
                    {
                        "x_data": "quis",
                        "y_data": 1
                    },
                    {
                        "x_data": "reprehenderit",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptas",
                        "y_data": 1
                    },
                    {
                        "x_data": "voluptatem",
                        "y_data": 1
                    },
                    {
                        "x_data": "et",
                        "y_data": 2
                    },
                    {
                        "x_data": "qui",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "section_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(section_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bar chart x axis first name y axis salary, and order by the total number from low to high.",
            "Just show employees' salaries by their first name in a bar chart, and list from low to high by the y-axis please.",
            "You can return a bar chart with employees' first names and their salaries, display by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jennifer",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Den",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "John",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 24000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Compare the total number of each minister using a bar graph, rank in descending by the x-axis.",
            "Bar chart x axis minister y axis how many minister, could you sort by the X-axis in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kojo Botsio (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road, and show from high to low by the x axis.",
            "Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, display from high to low by the X-axis.",
            "Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, order in desc by the x axis.",
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, I want to rank by the All_Home from high to low please.",
            "Stacked bar chart of team_id for with each ACC_Road in each all home, and sort by the x axis in descending.",
            "Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and order in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "What is the relationship between the average and minimum age of captains in different classes?",
            "Tell me the relationship between average and minimum age of captains in each class. Give a scatter plot.",
            "Show me a scatter plot for the relationship between average and minimum age of captains in each class, color different classes.",
            "Show the relation between avg(age) and minimal age for each Class using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 45,
                        "y_data": 45,
                        "classify": "Armed schooner"
                    },
                    {
                        "x_data": 43,
                        "y_data": 43,
                        "classify": "Cutter"
                    },
                    {
                        "x_data": 38,
                        "y_data": 38,
                        "classify": "Frigate"
                    },
                    {
                        "x_data": 38,
                        "y_data": 38,
                        "classify": "Sloop-of-war"
                    },
                    {
                        "x_data": 51.33333333333334,
                        "y_data": 40,
                        "classify": "Third-rate ship of the line"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(age)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "Show the hometown of all members, and rank X-axis in desc order.",
            "Count the hometown by hometown using a bar chart, and order in descending by the x-axis please.",
            "Bar chart of the number of hometown from each hometown, and rank X-axis in desc order.",
            "Count the hometown by hometown, display x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Simpsonville, South Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Red Jacket, West Virginia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louisville, Kentucky",
                        "y_data": 2
                    },
                    {
                        "x_data": "LaGrange, Georgia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jacksonville, Florida",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hiram, Georgia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fort Campbell, Kentucky",
                        "y_data": 1
                    },
                    {
                        "x_data": "Columbia, South Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Collierville, Tennessee",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Hometown)"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Give me a bar chart to visualize the number of the districts of markets they are on, and display bars in descending order.",
            "I want to know the number of districts of markets they are on, and list X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quebec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "British Columbia",
                        "y_data": 2
                    },
                    {
                        "x_data": "Alberta",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(District)"
                }
            }
        }
    },
    {
        "tables_used": [
            "players"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Find the number of players for each hand type. Plot them as pie chart.",
            "Visualize a pie chart with how many players are there for each hand type?",
            "Give the proportion of how many players are there for each hand type?",
            "How many players are there for each hand type. Show the proportion.",
            "Give me a pie to show the total number from different hand."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 954
                    },
                    {
                        "x_data": "L",
                        "y_data": 487
                    },
                    {
                        "x_data": "R",
                        "y_data": 5028
                    },
                    {
                        "x_data": "U",
                        "y_data": 14193
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "hand"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and salary , and visualize them by a bar chart, and could you display from high to low by the X?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of email and salary , I want to show by the X-axis from high to low please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and salary , and I want to show by the X-axis from high to low please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and salary in a bar chart, and I want to display from high to low by the bar.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the email , and I want to list by the x-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "WGIETZ",
                        "y_data": 8300
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 6500
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 12000
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 6000
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 13000
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 7000
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 10000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Show sum enrollment from each county, sort y-axis from low to high order.",
            "Compare the total enrollment in each county with a bar chart, sort y-axis from low to high order.",
            "Please give me a bar chart for the total enrollment in each county, sort in asc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 601
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 620
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 852
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 984
                    },
                    {
                        "x_data": "50 Marshall",
                        "y_data": 1098
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many injured players not suffering from injury of 'Knee problem' in each match? Show me a bar chart grouping by number of matches, I want to display from low to high by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1",
                        "y_data": 3
                    },
                    {
                        "x_data": "1 (2)",
                        "y_data": 1
                    },
                    {
                        "x_data": "10",
                        "y_data": 1
                    },
                    {
                        "x_data": "12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2",
                        "y_data": 2
                    },
                    {
                        "x_data": "3",
                        "y_data": 2
                    },
                    {
                        "x_data": "4",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 (6)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Number_of_matches",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Number_of_matches)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the total number of hours have done for all students in each department. Visualize by bar chart.",
            "Return a bar chart on how many hours do the students spend studying in each department?",
            "Visualize a bar chart for how many hours do the students spend studying in each department?",
            "How many hours do the students spend studying in each department. Plot them as bar chart.",
            "Create a bar chart showing total number of stu hrs across dept code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 165
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 42
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 147
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 120
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 102
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(stu_hrs)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of revenue , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, find name and the sum of revenue , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of revenue , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of revenue over the name , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 100
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course code, show y axis in descending order.",
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the instructor's first name and group by course code, could you sort the number of emp fname in descending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-362"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the stars of each director by a bar chart, show by the Y in desc.",
            "Please give me a bar chart to compare the stars by directors, list by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "What is the relationship between customer id and account name? Show me a scatter chart.",
            "Show the relationship between customer id and account name in a scatter chart.",
            "Plot a scatter chart, customer id by account_name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 6,
                        "y_data": 338
                    },
                    {
                        "x_data": 14,
                        "y_data": 562
                    },
                    {
                        "x_data": 9,
                        "y_data": 162
                    },
                    {
                        "x_data": 12,
                        "y_data": 38
                    },
                    {
                        "x_data": 13,
                        "y_data": 858
                    },
                    {
                        "x_data": 12,
                        "y_data": 262
                    },
                    {
                        "x_data": 9,
                        "y_data": 621
                    },
                    {
                        "x_data": 8,
                        "y_data": 381
                    },
                    {
                        "x_data": 9,
                        "y_data": 546
                    },
                    {
                        "x_data": 4,
                        "y_data": 767
                    },
                    {
                        "x_data": 4,
                        "y_data": 22
                    },
                    {
                        "x_data": 2,
                        "y_data": 866
                    },
                    {
                        "x_data": 10,
                        "y_data": 234
                    },
                    {
                        "x_data": 9,
                        "y_data": 557
                    },
                    {
                        "x_data": 4,
                        "y_data": 725
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "account_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "catalogs",
            "catalog_structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level numbers greater than 5 Bin publication dates into Year interval, and count catalog as a bar chart, display by the Y from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_publication",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_publication)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name.",
            "How many accounts for each customer? Show a bar chart that groups by customer's first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Joesph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vesta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Meaghan",
                        "y_data": 4
                    },
                    {
                        "x_data": "Abbey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jensen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 4
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the average age of drivers from the same home city using a bar graph, sort total number from low to high order.",
            "Compare the average age of drivers from the same home city with a bar chart, and could you list by the y-axis in asc?",
            "Plot the average of age by grouped by home city as a bar graph, and sort total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bethel",
                        "y_data": 30
                    },
                    {
                        "x_data": "Coventry",
                        "y_data": 35
                    },
                    {
                        "x_data": "East Hartford",
                        "y_data": 37
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 43.5
                    },
                    {
                        "x_data": "Manchester",
                        "y_data": 52
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_city",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and salary , and visualize them by a bar chart, and could you list by the Y from low to high?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and salary , and show by the total number in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the last_name by a bar chart, order by the y-axis from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of last_name and salary in a bar chart, show by the total number in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and salary , order by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fay",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 7000
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 13000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart, and could you rank from high to low by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sterling",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shany",
                        "y_data": 2
                    },
                    {
                        "x_data": "Orion",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melissa",
                        "y_data": 3
                    },
                    {
                        "x_data": "Madaline",
                        "y_data": 4
                    },
                    {
                        "x_data": "Lela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheyenne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cecelia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Buford",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name, and display by the y axis in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart, and sort from low to high by the Code.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute name, could you show Code in ascending order?",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart, and sort from low to high by the Code.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, order in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_master_index"
        ],
        "db_id": "local_govt_mdm",
        "nl_queries": [
            "List all information about customer master index, and sort them by details in descending order in a bar chart.",
            "Could you draw a bar graph to show all information about customer master index, and sort them by details in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Volkman, Mills and Ferry",
                        "y_data": 2
                    },
                    {
                        "x_data": "Streich-Morissette",
                        "y_data": 7
                    },
                    {
                        "x_data": "Schmitt-Lang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt, Kertzmann and Lubowitz",
                        "y_data": 4
                    },
                    {
                        "x_data": "Reynolds-McClure",
                        "y_data": 9
                    },
                    {
                        "x_data": "Quigley-Paucek",
                        "y_data": 8
                    },
                    {
                        "x_data": "Mayer-Hagenes",
                        "y_data": 6
                    },
                    {
                        "x_data": "Gusikowski PLC",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gottlieb, Becker and Wyman",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cmi_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "master_customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Visualize a scatter chart about the correlation between author_tutor_ATB and gender_mf .",
            "Show me about the correlation between author_tutor_ATB and gender_mf in a scatter chart.",
            "What is the relationship between author_tutor_ATB and gender_mf ?",
            "Return a scatter chart about the correlation between author_tutor_ATB and gender_mf .",
            "Visualize the relationship between author_tutor_ATB and gender_mf ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 817,
                        "y_data": 1
                    },
                    {
                        "x_data": 331,
                        "y_data": 0
                    },
                    {
                        "x_data": 229,
                        "y_data": 0
                    },
                    {
                        "x_data": 349,
                        "y_data": 0
                    },
                    {
                        "x_data": 159,
                        "y_data": 1
                    },
                    {
                        "x_data": 833,
                        "y_data": 1
                    },
                    {
                        "x_data": 505,
                        "y_data": 0
                    },
                    {
                        "x_data": 782,
                        "y_data": 1
                    },
                    {
                        "x_data": 557,
                        "y_data": 0
                    },
                    {
                        "x_data": 869,
                        "y_data": 1
                    },
                    {
                        "x_data": 613,
                        "y_data": 1
                    },
                    {
                        "x_data": 975,
                        "y_data": 0
                    },
                    {
                        "x_data": 974,
                        "y_data": 0
                    },
                    {
                        "x_data": 847,
                        "y_data": 1
                    },
                    {
                        "x_data": 388,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "author_tutor_ATB"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name by a bar chart, list by the total number in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the name , and group by attribute name, and order total number from low to high order.",
            "For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, sort the average of revenue from low to high order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of revenue , and group by attribute name, I want to rank by the the average of revenue in asc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name, list by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a line chart about the change of salary over hire_date , sort x axis in asc order.",
            "For those employees who was hired before 2002-06-21, visualize a line chart about the change of salary over hire_date , and order x axis in asc order.",
            "For those employees who was hired before 2002-06-21, return a line chart about the change of salary over hire_date , and could you rank by the X-axis from low to high?",
            "For those employees who was hired before 2002-06-21, show me about the change of salary over hire_date in a line chart, and could you rank by the X-axis from low to high?",
            "For those employees who was hired before 2002-06-21, a line chart shows the change of salary over hire_date, and list x-axis in ascending order.",
            "For those employees who was hired before 2002-06-21, show me the trend about salary over hire_date with a line chart, and rank in ascending by the HIRE_DATE please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 7700
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 7800
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 7900
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 5800
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 2100
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 3500
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 13500
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 7200
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 9600
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 7400
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 7300
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 8600
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 8400
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 3400
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 3800
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 3900
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 4400
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 13000
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 8300
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Create a bar chart showing the number of date in locaton to across date in locaton to, I want to show the number of date in locaton to from high to low order.",
            "How many documents in different ending date? Return a bar chart binning ending date by weekday, and rank by the total number in descending.",
            "Show the number of documents in different ending date and bin ending date by weekday with a bar chart, and rank by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of Time and ID in a bar chart, show bars from high to low order.",
            "Find Time and ID , and visualize them by a bar chart, sort by the names in desc.",
            "Give me the comparison about ID over the Time by a bar chart, sort X from high to low order.",
            "Bar chart x axis time y axis id, and I want to order X-axis in descending order.",
            "Return a bar chart about the distribution of Time and ID , could you show by the X-axis from high to low please?",
            "Draw a bar chart about the distribution of Time and ID , and display x-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "7:56.56",
                        "y_data": 6
                    },
                    {
                        "x_data": "7:55.39",
                        "y_data": 2
                    },
                    {
                        "x_data": "7:53.43",
                        "y_data": 1
                    },
                    {
                        "x_data": "7:52.04",
                        "y_data": 8
                    },
                    {
                        "x_data": "7:49.98",
                        "y_data": 5
                    },
                    {
                        "x_data": "7:48.67",
                        "y_data": 4
                    },
                    {
                        "x_data": "7:47.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "7:46.95",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, compute their average salary for visualizing a bar chart, and rank names from low to high order please.",
            "For employees with first names that end with the letter m, give me a bar chart to show their average salary, and list FIRST_NAME in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 7900
                    },
                    {
                        "x_data": "William",
                        "y_data": 7850
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a bar chart.",
            "How many courses for each course description? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting I",
                        "y_data": 3
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                }
            }
        }
    },
    {
        "tables_used": [
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "Show me a bar chart for what is the average rating of songs for each language?, and I want to order by the x axis in asc.",
            "What is the average rating of songs for each language Plot them as bar chart, I want to sort languages in ascending order.",
            "What is the average song rating for each language Plot them as bar chart, display by the X in ascending.",
            "Show me a bar chart for what is the average song rating for each language?, list by the names from low to high please.",
            "Draw a bar chart for what is the average rating of songs for each language?, display by the X in ascending.",
            "Show me mean rating by languages in a histogram, and list by the names from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "bangla",
                        "y_data": 7.5
                    },
                    {
                        "x_data": "english",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "languages",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "playlists"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "What are the number of the names of all the playlists?, I want to rank x-axis in asc order.",
            "List the number of the name of all playlist, display in asc by the names.",
            "What are the names of all the playlists, and count them by a bar chart, order from low to high by the bars please.",
            "A bar chart for listing the number of the name of all playlist, and list x axis from low to high order.",
            "List the name of all playlist, and count them by a bar chart, show by the X-axis in ascending.",
            "A bar chart for what are the number of the names of all the playlists?, could you order x axis in asc order please?",
            "Bar chart x axis name y axis how many name, display in asc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "90\u2019s Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Audiobooks",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brazilian Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Deep Cuts",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - Next Steps",
                        "y_data": 1
                    },
                    {
                        "x_data": "Classical 101 - The Basics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grunge",
                        "y_data": 1
                    },
                    {
                        "x_data": "Heavy Metal Classic",
                        "y_data": 1
                    },
                    {
                        "x_data": "Movies",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music Videos",
                        "y_data": 1
                    },
                    {
                        "x_data": "On-The-Go 1",
                        "y_data": 1
                    },
                    {
                        "x_data": "TV Shows",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Employees"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Return a histogram on what is the code of each role and the number of employees in each role?, and I want to display bars in ascending order.",
            "Show all role codes and the number of employees in each role Show bar chart, and show by the X-axis in ascending.",
            "Show all role codes and the number of employees in each role by a bar chart, could you sort from low to high by the names?",
            "Bar chart x axis role code y axis the total number, order X-axis from low to high order please.",
            "What is the code of each role and the number of employees in each role Show bar chart, order X-axis from low to high order please.",
            "Give me a histogram for what is the code of each role and the number of employees in each role?, could you sort from low to high by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ED",
                        "y_data": 7
                    },
                    {
                        "x_data": "HR",
                        "y_data": 1
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR",
                        "y_data": 5
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Role_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart, and sort y axis in asc order.",
            "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and display by the y-axis in ascending please.",
            "Return a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, I want to display y-axis in ascending order.",
            "Give me the comparison about the sum of Shop_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, sort in ascending by the Y.",
            "Stacked bar chart of total number of shop id for with each Is_full_time in each start from, sort in ascending by the Y.",
            "Draw a bar chart about the distribution of Start_from and the sum of Shop_ID , and group by attribute Is_full_time and bin start_from by weekday, and display total number of shop id in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 11,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Shop_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "people",
            "people)"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Show the proportion of the number of countries for all people whose age is smaller than the average.",
            "A pie chart about the proportion of the number of countries for all people whose age is smaller than the average."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name, and sort Y in desc order.",
            "Stack bar chart of how many took office vs Minister based on took office, list by the y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 1,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Took_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Took_office)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, I want to rank from high to low by the X.",
            "Group by the local authorities and count the number of local authorities, and then group by services, could you display in desc by the x-axis?",
            "Stacked bar of services and how many services colored by local_authority, could you order from high to low by the bar please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 1,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 2,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 1,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Watford"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bar graph to show sum share count from different date of transaction, and could you rank Y from low to high order?",
            "Bin all date of transactions into the weekday interval, and sum the share count of each bin Return the result using a bar chart, order in asc by the total number of share count please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 96529
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 97709
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1663726
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 9357173
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 674529892
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a line chart, and could you list by the date_of_birth from low to high?",
            "What is the date of birth of every customer whose status code is 'Good Customer', and count them by a line chart, and show from low to high by the X-axis please.",
            "What is the date of birth of every customer whose status code is 'Good Customer', and count them by a line chart, could you display by the X in ascending please?",
            "When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a line chart, and show from low to high by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1988",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989",
                        "y_data": 0
                    },
                    {
                        "x_data": "1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1993",
                        "y_data": 2
                    },
                    {
                        "x_data": "1994",
                        "y_data": 2
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0
                    },
                    {
                        "x_data": "1996",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "when is the hire date for those employees whose first name does not containing the letter M, and count them by a bar chart, order y axis from high to low order.",
            "On what dates were employees without the letter M in their first names hired, and count them by a bar chart, and list y axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 28
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 24
                    },
                    {
                        "x_data": "July",
                        "y_data": 24
                    },
                    {
                        "x_data": "June",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 540
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 360
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 670
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 230
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 470
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 530
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 260
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of document type for different document type description in a bar chart.",
            "How many document type for different document type description? Visualize with a bar chart.",
            "Bar graph to show the number of document type description from different document type description"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "excellent",
                        "y_data": 2
                    },
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "good",
                        "y_data": 1
                    },
                    {
                        "x_data": "very good",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Find the ids and names of stations from which at least 200 trips started, and list y-axis in descending order please.",
            "what are the ids and names of all start stations that were the beginning of at least 200 trips?, sort start_station_id from high to low order.",
            "Show me start_station_id by start station name in a histogram, and sort start_station_id in desc order.",
            "What are the ids and names of all start stations that were the beginning of at least 200 trips Show bar chart, sort start_station_id from high to low order.",
            "Visualize a bar chart for what are the ids and names of all start stations that were the beginning of at least 200 trips?, and I want to list from high to low by the start_station_id please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Market at Sansome",
                        "y_data": 77
                    },
                    {
                        "x_data": "Market at 4th",
                        "y_data": 76
                    },
                    {
                        "x_data": "Steuart at Market",
                        "y_data": 74
                    },
                    {
                        "x_data": "Grant Avenue at Columbus Avenue",
                        "y_data": 73
                    },
                    {
                        "x_data": "San Francisco Caltrain (Townsend at 4th)",
                        "y_data": 70
                    },
                    {
                        "x_data": "San Francisco Caltrain 2 (330 Townsend)",
                        "y_data": 69
                    },
                    {
                        "x_data": "Market at 10th",
                        "y_data": 67
                    },
                    {
                        "x_data": "Townsend at 7th",
                        "y_data": 65
                    },
                    {
                        "x_data": "2nd at South Park",
                        "y_data": 64
                    },
                    {
                        "x_data": "Howard at 2nd",
                        "y_data": 63
                    },
                    {
                        "x_data": "2nd at Folsom",
                        "y_data": 62
                    },
                    {
                        "x_data": "2nd at Townsend",
                        "y_data": 61
                    },
                    {
                        "x_data": "Embarcadero at Sansome",
                        "y_data": 60
                    },
                    {
                        "x_data": "Beale at Market",
                        "y_data": 56
                    },
                    {
                        "x_data": "Temporary Transbay Terminal (Howard at Beale)",
                        "y_data": 55
                    },
                    {
                        "x_data": "Embarcadero at Bryant",
                        "y_data": 54
                    },
                    {
                        "x_data": "Embarcadero at Folsom",
                        "y_data": 51
                    },
                    {
                        "x_data": "Harry Bridges Plaza (Ferry Building)",
                        "y_data": 50
                    },
                    {
                        "x_data": "Powell Street BART",
                        "y_data": 39
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "start_station_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "start_station_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "For each faculty rank, show the number of faculty members who have it. Show bar chart.",
            "Show me a bar chart for how many faculty members do we have for each faculty rank?",
            "A bar chart about how many faculty members do we have for each faculty rank?",
            "How many faculty members do we have for each faculty rank. Show bar chart.",
            "Create a bar chart showing the total number across rank"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 432
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 308
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 342
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 1911
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1098
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1100
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Visualize a bar chart about the distribution of meter_300 and meter_100 , and list Y-axis in descending order.",
            "Give me the comparison about meter_100 over the meter_300 by a bar chart, could you display in desc by the y-axis?",
            "Give me the comparison about meter_100 over the meter_300 , and display in desc by the Y.",
            "Find meter_300 and meter_100 , and visualize them by a bar chart, and could you display in desc by the y-axis?",
            "Plot meter_100 by grouped by meter 300 as a bar graph, rank in descending by the Y-axis.",
            "Show me about the distribution of meter_300 and meter_100 in a bar chart, and list Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:56.64",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "2:56.04",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "2:55.90",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "2:57.10",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:56.95",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:56.02",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "2:55.94",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "2:53.46",
                        "y_data": 55.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_300",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Can you draw the trend of how many date in location from over the date in location from?, and list by the x-axis from low to high.",
            "Show the number of documents in different starting date and bin starting date by year interval with a line chart, sort X in asc order please.",
            "How many documents in different starting date? Return a line chart binning starting date by year interval, sort X in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972~1976",
                        "y_data": 3
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 3
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 0
                    },
                    {
                        "x_data": "2017",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EMPLOYEE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "A bar chart for what are the number of the phone numbers for each employee?, rank x axis in asc order please.",
            "What are the number of the phone numbers for each employee?, and sort by the x axis in asc please.",
            "Plot the number of phone by grouped by phone as a bar graph, and could you list X in asc order please?",
            "List the number of the phone numbers of all employees, list in asc by the names please.",
            "What are the phone numbers for each employee, and count them by a bar chart, and list from low to high by the X please.",
            "List the phone numbers of all employees, and count them by a bar chart, and list in asc by the names please.",
            "A bar chart for listing the number of the phone numbers of all employees, display Phone in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "+1 (403) 246-9887",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 262-3443",
                        "y_data": 2
                    },
                    {
                        "x_data": "+1 (403) 263-4423",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 456-9986",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 467-3351",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (780) 428-9482",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (780) 836-9987",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Phone",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Phone)"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator",
            "accelerator_compatible_browser"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and I want to sort y-axis from low to high order.",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, and order by the y axis in asc.",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, display Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CACHEbox",
                        "y_data": 1
                    },
                    {
                        "x_data": "CProxy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fasterfox",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "membership_register_branch",
            "branch"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "Show all branch names with the number of members in each branch registered after 2015 Plot them as bar chart, and could you rank bars in desc order?",
            "Show all branch names with the number of members in each branch registered after 2015 with a bar chart, and could you show Name from high to low order?",
            "For each branch id, what are the names of the branches that were registered after 2015 Visualize by bar chart, and could you show Name from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Zytogorski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taverner",
                        "y_data": 1
                    },
                    {
                        "x_data": "Popert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cochrane",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brooke Greville",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexandre",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of name and ID , and I want to display x-axis in desc order.",
            "A bar chart shows the distribution of name and ID , and show names in descending order.",
            "Plot id by grouped by name as a bar graph, show by the x-axis in descending please.",
            "Give me the comparison about ID over the name , and show by the x-axis in descending please.",
            "Return a bar chart about the distribution of name and ID , list in descending by the x axis.",
            "Visualize a bar chart about the distribution of name and ID , and list by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "S\u00e9bastien Rouault",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sergiy Fesenko",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ryan Cochrane",
                        "y_data": 6
                    },
                    {
                        "x_data": "Przemys\u0142aw Sta\u0144czyk",
                        "y_data": 7
                    },
                    {
                        "x_data": "Oussama Mellouli",
                        "y_data": 3
                    },
                    {
                        "x_data": "Grant Hackett",
                        "y_data": 2
                    },
                    {
                        "x_data": "Federico Colbertaldo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Craig Stevens",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, and show by the the number of first year in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001",
                        "y_data": 0
                    },
                    {
                        "x_data": "2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "First_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(First_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the relationship between minimum product price and maximum product price and group by product type code in a group scatter chart.",
            "Scatterplot of minimal product price vs max(product price) by product_type_code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 939.57,
                        "y_data": 408.82,
                        "classify": "Clothes"
                    },
                    {
                        "x_data": 971.44,
                        "y_data": 612.46,
                        "classify": "Hardware"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(product_price)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "What is the proportion of the smallest enrollment of schools in each state?",
            "A pie chart showing the proportion of the smallest enrollment of schools in each state",
            "Create a pie chart showing minimal enr across cname."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ASU",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 18000
                    },
                    {
                        "x_data": "OU",
                        "y_data": 22000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "What are the student IDs and middle names of the students enrolled in at most two courses, rank x axis from low to high order please.",
            "A bar chart about what are the student IDs and middle names of the students enrolled in at most two courses?, and I want to list x-axis in ascending order please.",
            "Find the student ID and middle name for all the students with at most two enrollments, show by the bar from low to high.",
            "what are the student IDs and middle names of the students enrolled in at most two courses?, could you list in ascending by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Asa",
                        "y_data": 6
                    },
                    {
                        "x_data": "Brandt",
                        "y_data": 3
                    },
                    {
                        "x_data": "Camilla",
                        "y_data": 13
                    },
                    {
                        "x_data": "Casimir",
                        "y_data": 4
                    },
                    {
                        "x_data": "Kailey",
                        "y_data": 9
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kolby",
                        "y_data": 11
                    },
                    {
                        "x_data": "Luella",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ursula",
                        "y_data": 14
                    },
                    {
                        "x_data": "Vicente",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "middle_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "A pie chart for showing the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
            "Show the number of the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".",
            "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\", and count them by a pie chart",
            "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nominee)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee"
                }
            }
        }
    },
    {
        "tables_used": [
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "Find the name and population of districts with population between 200000 and 200000. Show a bar chart.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bahawalpur District",
                        "y_data": 530438
                    },
                    {
                        "x_data": "Chiniot District",
                        "y_data": 219254
                    },
                    {
                        "x_data": "Dera Ghazi Khan District",
                        "y_data": 464742
                    },
                    {
                        "x_data": "Gujranwala District",
                        "y_data": 1526168
                    },
                    {
                        "x_data": "Gujrat District",
                        "y_data": 328512
                    },
                    {
                        "x_data": "Jhang District",
                        "y_data": 365198
                    },
                    {
                        "x_data": "Kasur District",
                        "y_data": 314617
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "City_Population"
                }
            }
        }
    },
    {
        "tables_used": [
            "store"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "For each type of store, how many of them are there Plot them as bar chart, and sort from low to high by the X.",
            "Find all types of store and number of them Visualize by bar chart, could you order Type in ascending order?",
            "Bar chart x axis type y axis the total number, could you sort x-axis in asc order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "City Mall",
                        "y_data": 2
                    },
                    {
                        "x_data": "Village Store",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, show the price and group them by cinema name in a stacked bar chart, sort x axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 9,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 15,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 12,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 8,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "workshop"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "A pie chart shows the venue for each workshop.",
            "Return the number of venues of each workshop in a pie chart.",
            "I want to know the proportion of the total number for each venue."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Istanbul Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "London UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Jersey USA",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York USA",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show different types of ships and the average tonnage of ships of each type in a bar chart.",
            "Show different types of ships and the average tonnage of ships of each type. Show bar chart.",
            "For each type, what is the average tonnage.",
            "Give me a bar chart for mean tonnage of each type"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 4845
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 3932.2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Tonnage)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show budget type codes and the number of documents in each budget type with a bar chart.",
            "Show budget type codes and the number of documents in each budget type. Show bar chart.",
            "Show me a bar chart for what are the different budget type codes, and how many documents are there for each?",
            "what are the different budget type codes, and how many documents are there for each?",
            "What are the different budget type codes, and how many documents are there for each. Plot them as bar chart.",
            "Give me a bar chart for the total number of each budget type code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GV",
                        "y_data": 6
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "nomination",
            "artwork",
            "festival_detail"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            "Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, display names in asc order.",
            "Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, could you show by the X-axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Flower Awards",
                        "y_data": 2
                    },
                    {
                        "x_data": "LA Awards",
                        "y_data": 5
                    },
                    {
                        "x_data": "Panasonic Awards",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Festival_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Festival_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Using a pie chart to show the proportion of each type of bed.",
            "Can you show me the proportion of each bed type using a pie chart?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 3
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(bedType)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "What is the proportion of each customer's move in date? Show me the bar chart.",
            "Please use a bar chart to compare the number of customers of each customer's move in date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "What are the draft pick numbers and draft classes for players who play the Defender position Show bar chart, I want to rank from high to low by the Y-axis.",
            "Show me a bar chart for what are the draft pick numbers and draft classes for players who play the Defender position?, could you display in desc by the Y?",
            "Show the draft pick numbers and draft classes of players whose positions are defenders Show bar chart, show Y-axis in descending order please.",
            "Show the draft pick numbers and draft classes of players whose positions are defenders in a bar chart, and list Y from high to low order.",
            "what are the draft pick numbers and draft classes for players who play the Defender position?, rank in descending by the total number please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1996 MLS Inaugural Player Draft",
                        "y_data": 87
                    },
                    {
                        "x_data": "2006 MLS SuperDraft",
                        "y_data": 37
                    },
                    {
                        "x_data": "2005 MLS SuperDraft",
                        "y_data": 9
                    },
                    {
                        "x_data": "1999 MLS College Draft",
                        "y_data": 5
                    },
                    {
                        "x_data": "2008 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2000 MLS SuperDraft",
                        "y_data": 4
                    },
                    {
                        "x_data": "2009 MLS SuperDraft",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Draft_Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Draft_Pick_Number"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the job_id , and order in ascending by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and commission_pct , and visualize them by a bar chart, and list total number in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and commission_pct in a bar chart, and order in asc by the y axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and commission_pct , order in ascending by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and commission_pct , order in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 0
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 0.15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Contents",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "A bar chart for what are the number of the names of catalog entries with level number 8?, and rank from high to low by the X-axis.",
            "What are the number of the names of catalog entries with level number 8?, rank from high to low by the X-axis.",
            "What are the names of catalog entries with level number 8, and count them by a bar chart, and order by the X in descending.",
            "A bar chart for finding the number of the names of catalog entries with level number 8, and I want to show x-axis in desc order.",
            "Find the names of catalog entries with level number 8, and count them by a bar chart, I want to show x-axis in desc order.",
            "Find the number of the names of catalog entries with level number 8, list by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Root beer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ginger Beer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cola",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carbonated Water",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_entry_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(catalog_entry_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "What is the relationship between the average and minimum age of captains in different classes?",
            "Tell me the relationship between average and minimum age of captains in each class.",
            "Show me a scatter plot for the relationship between average and minimum age of captains in each class.",
            "Show me a scatter plot of avg(age) and minimal age for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 45,
                        "y_data": 45
                    },
                    {
                        "x_data": 43,
                        "y_data": 43
                    },
                    {
                        "x_data": 38,
                        "y_data": 38
                    },
                    {
                        "x_data": 38,
                        "y_data": 38
                    },
                    {
                        "x_data": 51.33333333333334,
                        "y_data": 40
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of salary bin hire_date by time in a bar chart, could you order by the Y in descending?",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and display Y-axis in descending order.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and sort the average of salary from high to low order please.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of salary bin hire_date by time, and sort the average of salary from high to low order please.",
            "For those employees who did not have any job in the past, find hire_date and the average of salary bin hire_date by time, and visualize them by a bar chart, sort the average of salary from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 9074.193548387097
                    },
                    {
                        "x_data": "June",
                        "y_data": 8700
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4459.259259259259
                    },
                    {
                        "x_data": "July",
                        "y_data": 3382.7586206896553
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "A bar chart about how many wines are there for each grape?, and display by the the total number in desc please.",
            "How many wines are there for each grape, display by the the total number in desc please.",
            "What are the numbers of wines for different grapes Plot them as bar chart, and I want to rank in descending by the the total number .",
            "Show me the total number by grape in a histogram, and show Y-axis in descending order please.",
            "what are the numbers of wines for different grapes?, and I want to rank in descending by the the total number .",
            "Return a bar chart on how many wines are there for each grape?, and I want to list the total number in desc order.",
            "Display a bar chart for what are the numbers of wines for different grapes?, display by the the total number in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 109
                    },
                    {
                        "x_data": "Chardonnay",
                        "y_data": 104
                    },
                    {
                        "x_data": "Zinfandel",
                        "y_data": 78
                    },
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 68
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 61
                    },
                    {
                        "x_data": "Sauvignon Blanc",
                        "y_data": 46
                    },
                    {
                        "x_data": "Merlot",
                        "y_data": 10
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 10
                    },
                    {
                        "x_data": "Petite Sirah",
                        "y_data": 6
                    },
                    {
                        "x_data": "Viognier",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tempranillo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sangiovese",
                        "y_data": 1
                    },
                    {
                        "x_data": "Roussanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marsanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Malbec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cabernet Franc",
                        "y_data": 1
                    },
                    {
                        "x_data": "Barbera",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "What is the number of courses each teacher teaches? Visualze with a bar chart, and sort y axis in asc order.",
            "Show the number of courses each teacher teaches in a bar chart, could you rank from low to high by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of revenue , and group by attribute founder in a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of revenue , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, find founder and the average of revenue , and group by attribute founder, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 203
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 204
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 205
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 384
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 202
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Show me a bar chart comparing the total number of captains of different classes, order from high to low by the the number of class.",
            "Compare the total number of captains with different classes using a bar graph, and order from high to low by the the number of class.",
            "What is the total number of captains with different classes?, and list Y in descending order please.",
            "Plot how many class by grouped by class as a bar graph, and rank total number from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Third-rate ship of the line",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sloop-of-war",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frigate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cutter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Armed schooner",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Return a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, sort X-axis from low to high order.",
            "Find Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, could you rank in asc by the names?",
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, could you rank in asc by the names?",
            "Draw a bar chart of is full time versus sum employee id, order x axis in ascending order please.",
            "A bar chart shows the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and display by the X from low to high.",
            "Draw a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and could you rank in asc by the names?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 9
                    },
                    {
                        "x_data": "T",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the headquarter , and group by attribute headquarter by a bar chart, and rank Y-axis from high to low order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and sort Y in desc order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, list in desc by the Y.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, list by the y axis in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter in a bar chart, and show by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a histogram, that simply displays the last name of the employee and the corresponding manager id.",
            "Create a bar chart showing manager_id across last name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 103
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 108
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 114
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 121
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 145
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Compare the total number of different job titles for all those jobs in department 80 using a bar chart.",
            "Please tell me how many employees in the department 80 on each type of job titles using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sales Manager",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 29
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_TITLE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, rank bars in descending order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, show bar in desc order please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, order by the X-axis in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, order by the X-axis in descending.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name, and show bar in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 17
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart.",
            "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home.",
            "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home.",
            "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home.",
            "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart.",
            "Bar graph to show mean school id from different all home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, order total number in asc order.",
            "Draw a bar chart of meter 200 versus the average of id, order total number in asc order.",
            "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, sort Y-axis in asc order please.",
            "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, sort Y-axis in asc order please.",
            "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and order by the y axis from low to high please.",
            "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, and show from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "A pie chart showing the number of faculty members for each rank.",
            "What is the number of the faculty members for each rank? Return a pie.",
            "Compute the total the number of rank across rank as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 8
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 15
                    },
                    {
                        "x_data": "Instructor",
                        "y_data": 8
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 27
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Rank)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Give me a bar chart showing the number of cinemas open for each year in descending order of opening year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Openning_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compute the number of services by services and then split by local authorities Show the result with a stacked bar graph, sort the number of local authority in ascending order.",
            "count services by services, and split by local authorities with a stacked bar chart, and order Y-axis from low to high order.",
            "Stack bar chart of the number of local authority vs services based on local authority, and order Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "Greater Anglia"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "London Overground"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "London Overground and London Midland"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 1,
                        "classify": "Metropolitan line"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 1,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 2,
                        "classify": "Metropolitan line and Chiltern Railways"
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Thurrock",
                        "y_data": 1,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Chiltern",
                        "y_data": 0,
                        "classify": "c2c"
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 0,
                        "classify": "c2c"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(local_authority)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "tv_channel"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English. Show the proportion of the pixel aspect ratio with a pie chart.",
            "What is the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the proportion of the pixel aspect ratio with a pie chart.",
            "Give me a pie chart showing the proportion of the pixel aspect ratio and the nation of the tv channels that do not use English."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "16:9",
                        "y_data": 3
                    },
                    {
                        "x_data": "4:3",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:3 / 16:9",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Pixel_aspect_ratio_PAR)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Pixel_aspect_ratio_PAR"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Show the proportion of the total enrollment in each county with a pie chart.",
            "Please give me a pie chart for the proportion of the total enrollment in each county.",
            "Compute the total sum enrollment across county as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 601
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 852
                    },
                    {
                        "x_data": "50 Marshall",
                        "y_data": 1098
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 984
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 620
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of manager_id over the job_id , and group by attribute job_id by a bar chart, and list total number from low to high order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, sort sum manager id in ascending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, sort in asc by the Y-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, order in asc by the Y.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of manager_id , and group by attribute job_id in a bar chart, order in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a bar chart, I want to rank in ascending by the Y.",
            "Compare the lowest rating among all movies by each title using a histogram, and I want to show Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? Show their average number by each participant type code using a bar chart, and list by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Participant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Organizer",
                        "y_data": 1.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, I want to rank in ascending by the sum employee id.",
            "Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, and I want to rank in ascending by the sum employee id.",
            "Return a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday, I want to display by the y axis in ascending.",
            "Stack bar chart of sum employee id vs Is_full_time based on start from, and I want to rank in ascending by the sum employee id.",
            "Give me the comparison about the sum of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, and could you show in asc by the y axis?",
            "Show me about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart, and order total number from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 12,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Provide the frequency of the last names of employees earning more than the employee with id 163 using a bar chart, and could you rank y-axis in descending order?",
            "For those employees who get more salary than the employee whose id is 163, show the frequency of their last name, I want to show total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 2
                    },
                    {
                        "x_data": "Zlotkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vishney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tucker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 1
                    },
                    {
                        "x_data": "Partners",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ozer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kochhar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 1
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fox",
                        "y_data": 1
                    },
                    {
                        "x_data": "Errazuriz",
                        "y_data": 1
                    },
                    {
                        "x_data": "De Haan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cambrault",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bloom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Abel",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LAST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then compute the average amount of each payment, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 423154
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 289772
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 123255
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 209430
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 248523.5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 239525.2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Display a bar chart for how many counties correspond to each police force?, show by the names in desc.",
            "How many counties correspond to each police force, and display in descending by the Police_force please.",
            "Create a bar chart showing the total number across police force, show by the names in desc.",
            "Return a bar chart on how many counties correspond to each police force?, display in descending by the Police_force please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "RCMP",
                        "y_data": 4
                    },
                    {
                        "x_data": "Central Saanich Police",
                        "y_data": 1
                    },
                    {
                        "x_data": "Abbotsford Police Department",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Police_force",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "orchestra"
        ],
        "db_id": "orchestra",
        "nl_queries": [
            "Visualize a bar chart for how many orchestras does each record company manage?, rank by the Record_Company from low to high.",
            "How many orchestras does each record company manage Show bar chart, and could you display by the bars in ascending?",
            "Display a bar chart for how many orchestras does each record company manage?, and could you show in ascending by the bar?",
            "Draw a bar chart of record company versus the total number, and I want to list in ascending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Columbia Masterworks",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decca Records",
                        "y_data": 2
                    },
                    {
                        "x_data": "Delos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Deutsche Grammophon",
                        "y_data": 1
                    },
                    {
                        "x_data": "EMI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Koch Records / Naxos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kultur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercury Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips Classics Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "RCA",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Record_Company",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart about the number of end dates for incidents with incident type code \"NOISE\"?, order by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_end",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_end)"
                }
            }
        }
    },
    {
        "tables_used": [
            "acceptance",
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show each author and the number of workshops they submitted to Show bar chart, and show by the bar in asc.",
            "How many workshops did each author submit to? Return the author name and the number of workshops in a bar chart, and could you display by the X in asc?",
            "Visualize a bar chart for how many workshops did each author submit to? Return the author name and the number of workshops, display names from low to high order.",
            "Show each author and the number of workshops they submitted to with a bar chart, and display by the x-axis from low to high.",
            "Give me a histogram for how many workshops did each author submit to? Return the author name and the number of workshops, display by the x-axis from low to high.",
            "How many workshops did each author submit to? Return the author name and the number of workshops Plot them as bar chart, and list X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(DISTINCT T1.workshop_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show project ids and the number of documents in each project in a scatter chart",
            "Show project ids and the number of documents in each project. Visualize by scatter chart.",
            "Show me a scatter chart for how many documents correspond with each project id?",
            "Return a scatter on how many documents correspond with each project id?",
            "How many documents correspond with each project id.",
            "Scatter plot to show project id on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 30,
                        "y_data": 3
                    },
                    {
                        "x_data": 35,
                        "y_data": 3
                    },
                    {
                        "x_data": 105,
                        "y_data": 5
                    },
                    {
                        "x_data": 134,
                        "y_data": 3
                    },
                    {
                        "x_data": 195,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Project_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Draw a scatter chart about the correlation between student_id and address_id .",
            "Return a scatter chart about the correlation between student_id and address_id .",
            "Visualize a scatter chart about the correlation between student_id and address_id .",
            "Show me about the correlation between student_id and address_id in a scatter chart.",
            "A scatter chart shows the correlation between student_id and address_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 13,
                        "y_data": 16
                    },
                    {
                        "x_data": 8,
                        "y_data": 1
                    },
                    {
                        "x_data": 2,
                        "y_data": 8
                    },
                    {
                        "x_data": 4,
                        "y_data": 2
                    },
                    {
                        "x_data": 3,
                        "y_data": 18
                    },
                    {
                        "x_data": 7,
                        "y_data": 13
                    },
                    {
                        "x_data": 5,
                        "y_data": 13
                    },
                    {
                        "x_data": 12,
                        "y_data": 10
                    },
                    {
                        "x_data": 15,
                        "y_data": 1
                    },
                    {
                        "x_data": 1,
                        "y_data": 5
                    },
                    {
                        "x_data": 7,
                        "y_data": 3
                    },
                    {
                        "x_data": 2,
                        "y_data": 8
                    },
                    {
                        "x_data": 6,
                        "y_data": 12
                    },
                    {
                        "x_data": 2,
                        "y_data": 3
                    },
                    {
                        "x_data": 4,
                        "y_data": 1
                    },
                    {
                        "x_data": 11,
                        "y_data": 12
                    },
                    {
                        "x_data": 8,
                        "y_data": 16
                    },
                    {
                        "x_data": 9,
                        "y_data": 9
                    },
                    {
                        "x_data": 13,
                        "y_data": 19
                    },
                    {
                        "x_data": 10,
                        "y_data": 18
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "student_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "address_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Addresses",
            "Drama_Workshop_Groups"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "How many drama workshop groups are there in each city? Return both the city and the count Plot them as bar chart, order in ascending by the x-axis.",
            "Show me a bar chart for how many drama workshop groups are there in each city? Return both the city and the count, order by the x axis in asc.",
            "Show all cities along with the number of drama workshop groups in each city with a bar chart, and rank by the X in ascending.",
            "Give me a histogram for how many drama workshop groups are there in each city? Return both the city and the count, display from low to high by the X-axis.",
            "Show all cities along with the number of drama workshop groups in each city Visualize by bar chart, and list names in ascending order.",
            "How many drama workshop groups are there in each city? Return both the city and the count with a bar chart, and order in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chrisside",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feliciaberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jasthaven",
                        "y_data": 2
                    },
                    {
                        "x_data": "Macejkovicchester",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monahanshire",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nataliamouth",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Lonzoville",
                        "y_data": 2
                    },
                    {
                        "x_data": "Port Maximeview",
                        "y_data": 1
                    },
                    {
                        "x_data": "Purdyville",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rueckermouth",
                        "y_data": 1
                    },
                    {
                        "x_data": "South Eugenia",
                        "y_data": 1
                    },
                    {
                        "x_data": "West Sherwoodstad",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "City_Town",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "For each continent where the average life expectancy is shorter than 72, shows the proportion of their total population with a pie chart.",
            "A pie chart shows the proportion of the total population of continents that have an average life expectancy of less than 72.",
            "Give me a pie to show sum population from different continent."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Africa",
                        "y_data": 784475000
                    },
                    {
                        "x_data": "Asia",
                        "y_data": 3705025700
                    },
                    {
                        "x_data": "Oceania",
                        "y_data": 30401150
                    },
                    {
                        "x_data": "South America",
                        "y_data": 345780000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Population)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show average of the price for each day in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "11 July",
                        "y_data": 9
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 15
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 12
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 9
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 8
                    },
                    {
                        "x_data": "21 May",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "has_amenity",
            "dorm_amenity"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many students are living in a dorm with a TV Lounge? Show a bar chart grouping by first name, and rank by the Y in ascending.",
            "Show the number of students who are living in a dorm with a TV Lounge and group by first name in a bar chart, and rank in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinesh",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes.",
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abilify",
                        "y_data": 2
                    },
                    {
                        "x_data": "Saphris",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Trade_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Compare the total number of locations in each location using a bar graph, and display x axis from high to low order please.",
            "Bar chart x axis location y axis how many location, I want to display names from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Verizon Center",
                        "y_data": 2
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bell Centre",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "enroll"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students who took some course and got A or C and group by first name in a bar chart, and rank by the x-axis from high to low please.",
            "How many students taking a course who received an A or C? Group by students' first name with a bar chart, and show in desc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 3
                    },
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's first name, and could you display by the y-axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Etha",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 2
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pilot"
        ],
        "db_id": "pilot_record",
        "nl_queries": [
            "Can you draw a bar chart to show the number of positions of the pilots?, and I want to rank by the Y from low to high.",
            "Bar chart of the number of position from each position, and could you sort the number of position in asc order please?",
            "Please compare the frequency of the position of the pilots using a bar chart, and order Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Forward Team",
                        "y_data": 1
                    },
                    {
                        "x_data": "Forward-Center Team",
                        "y_data": 1
                    },
                    {
                        "x_data": "Center Team",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Create a bar chart showing the number of date claim made across date claim made, and could you order in asc by the Y-axis?",
            "Bin the claim date into the Year interval and count them for visualizing a bar chart, could you list Y-axis in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 3
                    },
                    {
                        "x_data": "2016",
                        "y_data": 4
                    },
                    {
                        "x_data": "2017",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the Year interval and then shows the average amount of each payment, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 260895.55555555556
                    },
                    {
                        "x_data": "2018",
                        "y_data": 231412.16666666666
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ref_product_categories",
            "products"
        ],
        "db_id": "products_gen_characteristics",
        "nl_queries": [
            "Find the number of the category descriptions of the products whose descriptions include letter 't', list names in ascending order.",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', and could you rank x axis from low to high order?",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and list names in ascending order.",
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and order product_category_description in ascending order.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, list x axis in ascending order.",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, could you rank x axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Herbs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Seeds",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spices",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_category_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a scatter chart about the correlation between employee_id and department_id .",
            "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between employee_id and department_id .",
            "For all employees who have the letters D or S in their first name, what is the relationship between employee_id and department_id ?",
            "For all employees who have the letters D or S in their first name, visualize the relationship between employee_id and department_id .",
            "For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between employee_id and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 90
                    },
                    {
                        "x_data": 205,
                        "y_data": 110
                    },
                    {
                        "x_data": 168,
                        "y_data": 80
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 169,
                        "y_data": 80
                    },
                    {
                        "x_data": 151,
                        "y_data": 80
                    },
                    {
                        "x_data": 163,
                        "y_data": 80
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 109,
                        "y_data": 100
                    },
                    {
                        "x_data": 175,
                        "y_data": 80
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 153,
                        "y_data": 80
                    },
                    {
                        "x_data": 159,
                        "y_data": 80
                    },
                    {
                        "x_data": 112,
                        "y_data": 100
                    },
                    {
                        "x_data": 111,
                        "y_data": 100
                    },
                    {
                        "x_data": 160,
                        "y_data": 80
                    },
                    {
                        "x_data": 161,
                        "y_data": 80
                    },
                    {
                        "x_data": 113,
                        "y_data": 100
                    },
                    {
                        "x_data": 165,
                        "y_data": 80
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 203,
                        "y_data": 40
                    },
                    {
                        "x_data": 166,
                        "y_data": 80
                    },
                    {
                        "x_data": 179,
                        "y_data": 80
                    },
                    {
                        "x_data": 173,
                        "y_data": 80
                    },
                    {
                        "x_data": 105,
                        "y_data": 60
                    },
                    {
                        "x_data": 107,
                        "y_data": 60
                    },
                    {
                        "x_data": 184,
                        "y_data": 50
                    },
                    {
                        "x_data": 185,
                        "y_data": 50
                    },
                    {
                        "x_data": 192,
                        "y_data": 50
                    },
                    {
                        "x_data": 137,
                        "y_data": 50
                    },
                    {
                        "x_data": 133,
                        "y_data": 50
                    },
                    {
                        "x_data": 138,
                        "y_data": 50
                    },
                    {
                        "x_data": 180,
                        "y_data": 50
                    },
                    {
                        "x_data": 194,
                        "y_data": 50
                    },
                    {
                        "x_data": 115,
                        "y_data": 30
                    },
                    {
                        "x_data": 142,
                        "y_data": 50
                    },
                    {
                        "x_data": 116,
                        "y_data": 30
                    },
                    {
                        "x_data": 117,
                        "y_data": 30
                    },
                    {
                        "x_data": 183,
                        "y_data": 50
                    },
                    {
                        "x_data": 143,
                        "y_data": 50
                    },
                    {
                        "x_data": 198,
                        "y_data": 50
                    },
                    {
                        "x_data": 199,
                        "y_data": 50
                    },
                    {
                        "x_data": 131,
                        "y_data": 50
                    },
                    {
                        "x_data": 140,
                        "y_data": 50
                    },
                    {
                        "x_data": 191,
                        "y_data": 50
                    },
                    {
                        "x_data": 127,
                        "y_data": 50
                    },
                    {
                        "x_data": 128,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Show the number of year of the maximum price and score of wines in a bar chart, and bin the year into the weekday interval, could you order by the Y from low to high?",
            "Bar graph to show how many year from different year, and rank y-axis from low to high order.",
            "A bar chart shows the number of year of the maximum price and score of wines, and bin the year into the weekday interval, and list total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "building",
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show the names and heights of buildings with at least two institutions founded after 1880 by a bar chart, show in desc by the Y.",
            "Show the names and heights of buildings with at least two institutions founded after 1880 Plot them as bar chart, and I want to show Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "One Tampa City Center",
                        "y_data": 537
                    },
                    {
                        "x_data": "Tampa City Hall",
                        "y_data": 160
                    },
                    {
                        "x_data": "Citizens Bank Building",
                        "y_data": 145
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height_feet"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "What about the average amounts of payments by each method code? You can give me a bar chart, display from high to low by the X.",
            "Bar graph to show the average of amount payment from different payment method code, display from high to low by the X.",
            "Please use a bar chart to show the average amount of payment by each payment method code, and could you display by the bar in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Visa",
                        "y_data": 198678.25
                    },
                    {
                        "x_data": "MasterCard",
                        "y_data": 361695
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 77608.33333333333
                    },
                    {
                        "x_data": "American Express",
                        "y_data": 177130
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template type codes and number of templates for each in a pie chart.",
            "Show all template type codes and number of templates for each. Visualize by pie chart.",
            "Return a pie chart on what are the different template type codes, and how many templates correspond to each?",
            "Show me the proportion on what are the different template type codes, and how many templates correspond to each?",
            "What are the different template type codes, and how many templates correspond to each.",
            "I want to know the proportion of toatal number of templates for each template type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 6
                    },
                    {
                        "x_data": "CV",
                        "y_data": 2
                    },
                    {
                        "x_data": "PP",
                        "y_data": 6
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "management"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes' with a bar chart, and order from high to low by the Y.",
            "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes', and list total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Treasury",
                        "y_data": 231794
                    },
                    {
                        "x_data": "Homeland Security",
                        "y_data": 208000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Num_Employees)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many courses have more than one prerequisite for each department? Visualize with a bar chart, and order x-axis in desc order.",
            "Find the number of courses that have more than one prerequisites for each department in a bar chart, and show by the x-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 1
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 1
                    },
                    {
                        "x_data": "History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 1
                    },
                    {
                        "x_data": "English",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(dept_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route",
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times, I want to rank by the X from high to low.",
            "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times, and I want to sort by the X from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "22:10",
                        "y_data": 2
                    },
                    {
                        "x_data": "21:49",
                        "y_data": 1
                    },
                    {
                        "x_data": "17:15",
                        "y_data": 1
                    },
                    {
                        "x_data": "16:59",
                        "y_data": 2
                    },
                    {
                        "x_data": "06:30",
                        "y_data": 1
                    },
                    {
                        "x_data": "04:55",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(time)"
                }
            }
        }
    }
]