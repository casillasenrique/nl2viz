[
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Bar chart x axis date in location from y axis the number of date in location from, and order by the total number in desc please.",
            "Show the number of documents in different starting date and bin starting date by weekday interval with a bar chart, and rank y axis in desc order please.",
            "How many documents in different starting date? Return a bar chart binning starting date by weekday interval, I want to sort y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 9
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show sum of budget in each year and bin creation time by year in a line chart.",
            "Show me a line chart of how sum budget in billions change over the creation"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789~1809",
                        "y_data": 20
                    },
                    {
                        "x_data": "1810~1830",
                        "y_data": 0
                    },
                    {
                        "x_data": "1831~1851",
                        "y_data": 10
                    },
                    {
                        "x_data": "1852~1872",
                        "y_data": 23
                    },
                    {
                        "x_data": "1873~1893",
                        "y_data": 77
                    },
                    {
                        "x_data": "1894~1914",
                        "y_data": 65
                    },
                    {
                        "x_data": "1915~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1956",
                        "y_data": 982
                    },
                    {
                        "x_data": "1957~1977",
                        "y_data": 125
                    },
                    {
                        "x_data": "1978~1998",
                        "y_data": 135
                    },
                    {
                        "x_data": "1999~2002",
                        "y_data": 44
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Give me a histogram for how many climbers are from each country?, I want to show by the X-axis from low to high please.",
            "Bar chart of the total number from each country, I want to show by the x-axis in ascending.",
            "Display a bar chart for how many climbers are from each country?, and could you display X in asc order?",
            "How many climbers are from each country, rank X-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Switzerland",
                        "y_data": 1
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 3
                    },
                    {
                        "x_data": "West Germany",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize the relationship between manager_id and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a scatter chart about the correlation between manager_id and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, what is the relationship between manager_id and department_id ?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a scatter chart about the correlation between manager_id and department_id .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a scatter chart shows the correlation between manager_id and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 100,
                        "y_data": 90
                    },
                    {
                        "x_data": 100,
                        "y_data": 90
                    },
                    {
                        "x_data": 102,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 103,
                        "y_data": 60
                    },
                    {
                        "x_data": 101,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 108,
                        "y_data": 100
                    },
                    {
                        "x_data": 100,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 114,
                        "y_data": 30
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 145,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 146,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 147,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 148,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 149,
                        "y_data": 0
                    },
                    {
                        "x_data": 149,
                        "y_data": 80
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 120,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 121,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 122,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 123,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 124,
                        "y_data": 50
                    },
                    {
                        "x_data": 101,
                        "y_data": 10
                    },
                    {
                        "x_data": 100,
                        "y_data": 20
                    },
                    {
                        "x_data": 201,
                        "y_data": 20
                    },
                    {
                        "x_data": 101,
                        "y_data": 70
                    },
                    {
                        "x_data": 101,
                        "y_data": 110
                    },
                    {
                        "x_data": 205,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Compare the distribution of the players' gender using a bar chart, rank by the total number in ascending.",
            "Draw a bar chart of gender versus the number of gender, and rank by the Y in asc.",
            "Visualize a bar chart that X-axis is the gender and compute the number of players in each gender as a Y-axis, and could you list y axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 5
                    },
                    {
                        "x_data": "M",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Gender)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, rank Y-axis in asc order.",
            "Draw a bar chart of date moved in versus how many date moved in, and sort in asc by the y axis.",
            "Group and count the move in date in a bar chart, show Y-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-09-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2015-03-27",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a histogram, that simply displays the last name of the employee and the corresponding manager id, could you show by the x-axis in asc?",
            "Create a bar chart showing manager_id across last name, and show by the X-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 121
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 108
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 103
                    },
                    {
                        "x_data": "King",
                        "y_data": 100
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 114
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 145
                    },
                    {
                        "x_data": "Whalen",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and could you display by the y axis from low to high?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time, could you order total number in asc order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, could you list by the total number in asc?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and I want to display by the total number of salary in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart, I want to show in asc by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "July",
                        "y_data": 117000
                    },
                    {
                        "x_data": "June",
                        "y_data": 138400
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 139900
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 281300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of employee_id bin hire_date by weekday in a bar chart, and sort total number in desc order.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, display in descending by the Y please.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of employee_id over the hire_date bin hire_date by weekday, I want to rank by the total number in desc.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by weekday, and sort by the Y in desc.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by weekday, and display y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 166.8
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 151.22222222222223
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 150.27272727272728
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 149.625
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 148
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 141.33333333333334
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 140
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Show how many installation date from each installation date, and rank by the Y in ascending.",
            "Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis, and count for showing how many stations are installed each year, sort in asc by the Y-axis.",
            "Bin the installation date into the day of week interval, and then you can draw a bar chart to tell me how many stations each year, sort from low to high by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 964
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1369
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1469
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1694
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1957
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2506
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "installation_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(installation_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Show the amount for all the payments processed with Visa distributing the payment date with a bar chart, I want to order in ascending by the Amount_Payment please.",
            "Give me a histogram to show the date and the amount for all the payments processed with Visa, and show in asc by the Y-axis please.",
            "Which Payments were processed with Visa? List the date and the amount using a bar chart, and rank by the Y from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-24",
                        "y_data": 7343
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 155654
                    },
                    {
                        "x_data": "2017-05-03",
                        "y_data": 172309
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 459407
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Amount_Payment"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "When are the birthdays of customer who are classified as 'Good Customer' status, and count them by a bar chart, could you order y-axis in ascending order?",
            "What is the date of birth of every customer whose status code is 'Good Customer', and count them by a bar chart, I want to rank by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Bar chart x axis position y axis how many position, display from low to high by the the number of position.",
            "List the positions of players whose average number of points scored by that position is larger than 20, give me a bar chart showing the number of different positions, show in ascending by the Y-axis.",
            "List the positions of players whose average number of points scored by that position is larger than 20, compare the number of positions, and I want to rank in asc by the the number of position."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hooker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 1
                    },
                    {
                        "x_data": "Right Centre",
                        "y_data": 1
                    },
                    {
                        "x_data": "Right Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scrum Half",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stand Off",
                        "y_data": 1
                    },
                    {
                        "x_data": "Second Row",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Position)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by weekday with a bar chart, and display by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Display a bar chart for what is the lowest salary in departments with average salary greater than the overall average, show by the bar in ascending.",
            "Find the minimum salary for the departments whose average salary is above the average payment of all instructors Plot them as bar chart, and show names in ascending order.",
            "Give me a histogram for what is the lowest salary in departments with average salary greater than the overall average, and could you rank by the x axis in asc?",
            "Bar chart of minimal salary from each dept name, order dept_name in ascending order please.",
            "What is the lowest salary in departments with average salary greater than the overall average Plot them as bar chart, and sort dept_name in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070.08
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 80797.83
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 79866.95
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311.38
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382.59
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 43770.36
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 51647.57
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 108011.81
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 87549.8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_300 , and could you order by the bar from high to low?",
            "Give me the comparison about meter_100 over the meter_300 by a bar chart, list X in descending order.",
            "Show me about the distribution of meter_300 and meter_100 in a bar chart, rank by the bars in descending please.",
            "Find meter_300 and meter_100 , and visualize them by a bar chart, and rank by the bars in descending please.",
            "Visualize a bar chart about the distribution of meter_300 and meter_100 , and list X in descending order.",
            "Plot meter_100 by grouped by meter 300 as a bar graph, I want to order by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:57.10",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:56.95",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "2:56.64",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "2:56.04",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "2:56.02",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "2:55.94",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "2:55.90",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "2:53.46",
                        "y_data": 55.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_300",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "What is the number of courses each teacher teaches? Visualize with a bar chart, and order y-axis in descending order.",
            "Show the number of courses each teacher teaches in a bar chart, display y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "What are the dates of publications in descending order of price, and count them by a bar chart",
            "A bar chart for what are the number of the dates of publications in descending order of price?",
            "What are the number of the dates of publications in descending order of price?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "April 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "August 2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "June 2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "October 2005",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publication_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Publication_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "department)"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Return a histogram on what are the names and budgets of departments with budgets greater than the average?, and sort in ascending by the Y please.",
            "What are the names and budgets of departments with budgets greater than the average Plot them as bar chart, could you display by the budget from low to high?",
            "Display a bar chart for what are the names and budgets of departments with budgets greater than the average?, and order total number in asc order.",
            "Find the name and budget of departments whose budgets are more than the average budget Visualize by bar chart, and could you display by the budget from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 573745.09
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 601283.6
                    },
                    {
                        "x_data": "English",
                        "y_data": 611042.66
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 617253.94
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 647610.55
                    },
                    {
                        "x_data": "History",
                        "y_data": 699140.86
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 734550.7
                    },
                    {
                        "x_data": "Math",
                        "y_data": 777605.11
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 794541.46
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 848175.04
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 866831.75
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 942162.76
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "budget"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart.",
            "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent .",
            "A bar chart shows the distribution of All_Neutral and ACC_Percent .",
            "Return a bar chart about the distribution of All_Neutral and ACC_Percent .",
            "Give me the comparison about ACC_Percent over the All_Neutral .",
            "Bar chart of acc_percent from each all neutral"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Find the organisation ids and details of the organisations which are involved i Visualize by bar chart, and I want to rank total number from high to low order please.",
            "Return a bar chart on what are the ids and details for all organizations that have grants of more than 6000 dollars?, and sort by the Y-axis from high to low.",
            "Show me a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you sort y axis in desc order?",
            "What are the ids and details for all organizations that have grants of more than 6000 dollars Show bar chart, and could you order in descending by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "quo",
                        "y_data": 14
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 9.5
                    },
                    {
                        "x_data": "a",
                        "y_data": 9
                    },
                    {
                        "x_data": "eius",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Show me about the distribution of family_name and gender_mf in a bar chart.",
            "Visualize a bar chart about the distribution of family_name and gender_mf .",
            "A bar chart shows the distribution of family_name and gender_mf .",
            "Give me the comparison about gender_mf over the family_name .",
            "Draw a bar chart about the distribution of family_name and gender_mf ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rohan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 0
                    },
                    {
                        "x_data": "Greenholt",
                        "y_data": 0
                    },
                    {
                        "x_data": "Reichel",
                        "y_data": 0
                    },
                    {
                        "x_data": "Champlin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Crist",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zboncak",
                        "y_data": 0
                    },
                    {
                        "x_data": "Nader",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rowe",
                        "y_data": 0
                    },
                    {
                        "x_data": "Treutel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Effertz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Armstrong",
                        "y_data": 0
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 0
                    },
                    {
                        "x_data": "Kreiger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Barrows",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "family_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "Player",
            "Player_Attributes"
        ],
        "db_id": "soccer_1",
        "nl_queries": [
            "Find the top five players in terms of potential, bin the birthday into weekday interval, and count the birthday grouping by player's name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Cristiano Ronaldo"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "James Rodriguez"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Lionel Messi"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Neymar"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Paul Pogba"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "birthday",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(birthday)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show the authors of their total submissions with a bar chart.",
            "Visualize a bar chart for how many authors submit to the workshop.",
            "Create a bar chart showing the number of author across author"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Author)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, and order by the ACC_Road in asc.",
            "Visualize a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, and order by the ACC_Road in asc.",
            "Stacked bar chart of school_id for with each ACC_Home in each acc road, and show by the ACC_Road in ascending.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and show by the ACC_Road in ascending.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart, sort by the X in ascending.",
            "Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and show x axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 5,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Display a bar chart for how many counties correspond to each police force?, and I want to rank by the the total number in ascending please.",
            "Create a bar chart showing the total number across police force, sort in ascending by the y-axis.",
            "How many counties correspond to each police force, sort in ascending by the y-axis.",
            "Return a bar chart on how many counties correspond to each police force?, sort by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abbotsford Police Department",
                        "y_data": 1
                    },
                    {
                        "x_data": "Central Saanich Police",
                        "y_data": 1
                    },
                    {
                        "x_data": "RCMP",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Police_force",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Tell me how many songs each singer has.",
            "Compare the number of songs each singer has.",
            "Compare the number of songs each singer has using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christy Walton",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 2
                    },
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft",
            "MATCH"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "What is the number of each winning aircraft? Visualize by bar chart, could you sort bar from high to low order?",
            "Please list the number of each winning aircraft in a bar chart, and list by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robinson R-22",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mil Mi-26",
                        "y_data": 2
                    },
                    {
                        "x_data": "CH-53E Super Stallion",
                        "y_data": 1
                    },
                    {
                        "x_data": "CH-47D Chinook",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bell 206B3 JetRanger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Aircraft",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Aircraft)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route",
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find times of trains that run through stations for the local authority Chiltern, compare the total number of different times, and I want to order by the Y-axis in desc.",
            "Show a bar graph, the data is those times of trains that run through stations for the local authority Chiltern, and the Y axis is the total number of different times, could you list in descending by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "22:10",
                        "y_data": 2
                    },
                    {
                        "x_data": "16:59",
                        "y_data": 2
                    },
                    {
                        "x_data": "21:49",
                        "y_data": 1
                    },
                    {
                        "x_data": "17:15",
                        "y_data": 1
                    },
                    {
                        "x_data": "06:30",
                        "y_data": 1
                    },
                    {
                        "x_data": "04:55",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(time)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart for returning the number of the completion date for all the tests that have \"Fail\" result, and display by the y axis in desc.",
            "What are the completion dates of all the tests that have result \"Fail\", and count them by a bar chart, and display Y from high to low order.",
            "Return the number of the completion date for all the tests that have \"Fail\" result, and list Y-axis from high to low order.",
            "Return the completion date for all the tests that have \"Fail\" result, and count them by a bar chart, and I want to show in descending by the y axis.",
            "What are the number of the completion dates of all the tests that have result \"Fail\"?, and sort y axis in desc order.",
            "A bar chart for what are the number of the completion dates of all the tests that have result \"Fail\"?, display Y from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mar",
                        "y_data": 6
                    },
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_completion",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_completion)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and show by the y axis in asc.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, display y-axis from low to high order.",
            "For those employees who did not have any job in the past, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, rank in asc by the y axis.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, could you sort by the Y in ascending please?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and could you sort by the Y in ascending please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 28500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 241900
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player",
            "team"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Give me a bar chart that groups and counts the years played for players from team \"Columbus Crew\", and sort Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2 (2010-2011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 (2010\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "3 (2005, 2007\u20132008)",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 (2003\u20132005, 2007\u20132011)",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (2011)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Years_Played",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Years_Played)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Facilities",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What are the number of the facility codes of the apartments with more than four bedrooms?, and order by the total number in ascending please.",
            "A bar chart for what are the number of the facility codes of the apartments with more than four bedrooms?, and sort in ascending by the the number of facility code.",
            "A bar chart for showing the number of the facility codes of apartments with more than 4 bedrooms, sort by the y-axis in ascending please.",
            "Show the number of the facility codes of apartments with more than 4 bedrooms, and could you show by the Y in asc?",
            "What are the facility codes of the apartments with more than four bedrooms, and count them by a bar chart, sort in asc by the Y.",
            "Show the facility codes of apartments with more than 4 bedrooms, and count them by a bar chart, and list by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cable TV",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gym",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "facility_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(facility_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, display by the y axis in descending please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time by a bar chart, and could you display by the total number in desc?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, rank Y in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of employee_id bin hire_date by time in a bar chart, and list Y-axis in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, and list Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 5512
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4960
                    },
                    {
                        "x_data": "July",
                        "y_data": 3999
                    },
                    {
                        "x_data": "June",
                        "y_data": 1491
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the average prices of products, grouped by manufacturer name, could you show in desc by the y-axis?",
            "A bar chart about what are the average prices of products, grouped by manufacturer name?, I want to list by the y-axis in descending.",
            "Draw a bar chart for what are the average prices of products, grouped by manufacturer name?, and I want to show by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Tell me how many songs each singer has, order in desc by the total number.",
            "Compare the number of songs each singer has, and show y-axis in descending order.",
            "Compare the number of songs each singer has using a bar chart, order in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 2
                    },
                    {
                        "x_data": "Christy Walton",
                        "y_data": 2
                    },
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Group and count the name attribute for visualizing a bar chart, show y axis from high to low order please.",
            "Bar chart x axis name y axis how many name, could you sort Y in descending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, what is the relationship between price and code , and group by attribute founder?",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between price and code , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, show me about the correlation between price and code , and group by attribute founder in a scatter chart.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and code , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 240,
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": 270,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 66,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 150,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 240,
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": 150,
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 90,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 120,
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": 5,
                        "y_data": 6,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "order_items",
            "products"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "List the count and id of each product in all the orders with a scatter chart.",
            "List the count and id of each product in all the orders.",
            "For each product, return its id and the number of times it was ordered. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 2,
                        "y_data": 3
                    },
                    {
                        "x_data": 2,
                        "y_data": 4
                    },
                    {
                        "x_data": 1,
                        "y_data": 7
                    },
                    {
                        "x_data": 1,
                        "y_data": 8
                    },
                    {
                        "x_data": 2,
                        "y_data": 11
                    },
                    {
                        "x_data": 1,
                        "y_data": 12
                    },
                    {
                        "x_data": 2,
                        "y_data": 14
                    },
                    {
                        "x_data": 3,
                        "y_data": 15
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "product_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Please tell me the repeat times of each ministers using a pie chart.",
            "I want to know the proportion of the total number for each minister."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kojo Botsio (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday.",
            "Draw a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday.",
            "Give me the comparison about the average of Shop_ID over the Start_from bin start_from by weekday by a bar chart.",
            "A bar chart shows the distribution of Start_from and the average of Shop_ID bin start_from by weekday.",
            "Return a bar chart about the distribution of Start_from and the average of Shop_ID bin start_from by weekday.",
            "Bar chart x axis start from y axis the average of shop id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5.5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 8
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "book_club"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show all book categories and the number of books in each category in a pie chart.",
            "Show all book categories and the number of books in each category. Plot them as pie chart.",
            "Return a pie on how many books fall into each category?",
            "Pie. how many books fall into each category?",
            "How many books fall into each category. Show the proportion.",
            "Create a pie chart showing the total number across category."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gay M/SF",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gay SF/F",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lesb. M/SF",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, return a bar chart about the distribution of name and code , I want to sort from low to high by the Y.",
            "For those products with a price between 60 and 120, draw a bar chart about the distribution of name and code , and rank by the y axis in asc please.",
            "For those products with a price between 60 and 120, a bar chart shows the distribution of name and code , list Y-axis in ascending order please.",
            "For those products with a price between 60 and 120, visualize a bar chart about the distribution of name and code , I want to sort in ascending by the y axis.",
            "For those products with a price between 60 and 120, find name and code , and visualize them by a bar chart, list Y-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "List singer names and number of concerts for each singer, and sort by the Y in asc.",
            "List singer names and number of concerts for each singer with a bar chart, and rank in ascending by the y-axis.",
            "A bar chart about what are the names of the singers and number of concerts for each person?, I want to order y-axis in ascending order.",
            "What are the names of the singers and number of concerts for each person Show bar chart, sort in ascending by the the total number .",
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, and could you show in asc by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Nizinik",
                        "y_data": 2
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 2
                    },
                    {
                        "x_data": "Justin Brown",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Games.",
            "Return a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Games.",
            "Show me about the correlation between Team_ID and ACC_Percent , and group by attribute All_Games in a scatter chart.",
            "Visualize a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute All_Games.",
            "What is the relationship between Team_ID and ACC_Percent , and group by attribute All_Games?",
            "Show team id vs acc_percent as scatter plot use a different color for each All_Games"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 0.563,
                        "classify": "21\u201314"
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.625,
                        "classify": "24\u201310"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "28\u20136"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "35\u20132"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Draw a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality.",
            "Visualize a bar chart about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality.",
            "Show me about the distribution of Nationality and the average of meter_100 , and group by attribute Nationality in a bar chart.",
            "Find Nationality and the average of meter_100 , and group by attribute Nationality, and visualize them by a bar chart.",
            "Give me the comparison about the average of meter_100 over the Nationality , and group by attribute Nationality by a bar chart.",
            "Bar chart x axis nationality y axis mean meter 100"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 57
                    },
                    {
                        "x_data": "France",
                        "y_data": 55
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 57
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 57
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Research_outcomes",
            "Project_outcomes"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "List the number of the description of the outcomes for all projects, and could you sort in ascending by the y axis?",
            "What are the descriptions of all the project outcomes, and count them by a bar chart, I want to rank y axis in ascending order.",
            "What are the number of the descriptions of all the project outcomes?, I want to rank y axis in ascending order.",
            "A bar chart for listing the number of the description of the outcomes for all projects, could you sort in ascending by the y axis?",
            "A bar chart for what are the number of the descriptions of all the project outcomes?, and could you display in ascending by the Y please?",
            "List the description of the outcomes for all projects, and count them by a bar chart, and list from low to high by the the number of outcome description please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Research Patent",
                        "y_data": 5
                    },
                    {
                        "x_data": "Published Research Paper",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "outcome_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(outcome_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the maximum weight for each type of pet. List the maximum weight and pet type. Plot them as pie chart.",
            "List the maximum weight and type for each type of pet in a pie chart.",
            "List the maximum weight and type for each type of pet. Show a pie chart.",
            "Compute the total maximal weight across pettype as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 12
                    },
                    {
                        "x_data": "dog",
                        "y_data": 13.4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(weight)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between salary and commission_pct .",
            "For those employees who was hired before 2002-06-21, visualize the relationship between salary and commission_pct .",
            "For those employees who was hired before 2002-06-21, return a scatter chart about the correlation between salary and commission_pct .",
            "For those employees who was hired before 2002-06-21, show me about the correlation between salary and commission_pct in a scatter chart.",
            "For those employees who was hired before 2002-06-21, visualize a scatter chart about the correlation between salary and commission_pct ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 0
                    },
                    {
                        "x_data": 17000,
                        "y_data": 0
                    },
                    {
                        "x_data": 17000,
                        "y_data": 0
                    },
                    {
                        "x_data": 9000,
                        "y_data": 0
                    },
                    {
                        "x_data": 6000,
                        "y_data": 0
                    },
                    {
                        "x_data": 4800,
                        "y_data": 0
                    },
                    {
                        "x_data": 4800,
                        "y_data": 0
                    },
                    {
                        "x_data": 4200,
                        "y_data": 0
                    },
                    {
                        "x_data": 12000,
                        "y_data": 0
                    },
                    {
                        "x_data": 9000,
                        "y_data": 0
                    },
                    {
                        "x_data": 8200,
                        "y_data": 0
                    },
                    {
                        "x_data": 7700,
                        "y_data": 0
                    },
                    {
                        "x_data": 7800,
                        "y_data": 0
                    },
                    {
                        "x_data": 6900,
                        "y_data": 0
                    },
                    {
                        "x_data": 11000,
                        "y_data": 0
                    },
                    {
                        "x_data": 3100,
                        "y_data": 0
                    },
                    {
                        "x_data": 2900,
                        "y_data": 0
                    },
                    {
                        "x_data": 2800,
                        "y_data": 0
                    },
                    {
                        "x_data": 2600,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 8000,
                        "y_data": 0
                    },
                    {
                        "x_data": 8200,
                        "y_data": 0
                    },
                    {
                        "x_data": 7900,
                        "y_data": 0
                    },
                    {
                        "x_data": 6500,
                        "y_data": 0
                    },
                    {
                        "x_data": 5800,
                        "y_data": 0
                    },
                    {
                        "x_data": 3200,
                        "y_data": 0
                    },
                    {
                        "x_data": 2700,
                        "y_data": 0
                    },
                    {
                        "x_data": 2400,
                        "y_data": 0
                    },
                    {
                        "x_data": 2200,
                        "y_data": 0
                    },
                    {
                        "x_data": 3300,
                        "y_data": 0
                    },
                    {
                        "x_data": 2800,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 2100,
                        "y_data": 0
                    },
                    {
                        "x_data": 3300,
                        "y_data": 0
                    },
                    {
                        "x_data": 2900,
                        "y_data": 0
                    },
                    {
                        "x_data": 2400,
                        "y_data": 0
                    },
                    {
                        "x_data": 2200,
                        "y_data": 0
                    },
                    {
                        "x_data": 3600,
                        "y_data": 0
                    },
                    {
                        "x_data": 3200,
                        "y_data": 0
                    },
                    {
                        "x_data": 2700,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 3500,
                        "y_data": 0
                    },
                    {
                        "x_data": 3100,
                        "y_data": 0
                    },
                    {
                        "x_data": 2600,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 14000,
                        "y_data": 0.4
                    },
                    {
                        "x_data": 13500,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 12000,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 11000,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 10500,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 10000,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 9500,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 9000,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 8000,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 7500,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 7000,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 10000,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 9500,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 9000,
                        "y_data": 0.35
                    },
                    {
                        "x_data": 8000,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 7500,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 7000,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 10500,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 9500,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 7200,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 6800,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 6400,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 6200,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 11500,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 10000,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 9600,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 7400,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 7300,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 6100,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 11000,
                        "y_data": 0.3
                    },
                    {
                        "x_data": 8800,
                        "y_data": 0.25
                    },
                    {
                        "x_data": 8600,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 8400,
                        "y_data": 0.2
                    },
                    {
                        "x_data": 7000,
                        "y_data": 0.15
                    },
                    {
                        "x_data": 6200,
                        "y_data": 0.1
                    },
                    {
                        "x_data": 3200,
                        "y_data": 0
                    },
                    {
                        "x_data": 3100,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 2800,
                        "y_data": 0
                    },
                    {
                        "x_data": 4200,
                        "y_data": 0
                    },
                    {
                        "x_data": 4100,
                        "y_data": 0
                    },
                    {
                        "x_data": 3400,
                        "y_data": 0
                    },
                    {
                        "x_data": 3000,
                        "y_data": 0
                    },
                    {
                        "x_data": 3800,
                        "y_data": 0
                    },
                    {
                        "x_data": 3600,
                        "y_data": 0
                    },
                    {
                        "x_data": 2900,
                        "y_data": 0
                    },
                    {
                        "x_data": 2500,
                        "y_data": 0
                    },
                    {
                        "x_data": 4000,
                        "y_data": 0
                    },
                    {
                        "x_data": 3900,
                        "y_data": 0
                    },
                    {
                        "x_data": 3200,
                        "y_data": 0
                    },
                    {
                        "x_data": 2800,
                        "y_data": 0
                    },
                    {
                        "x_data": 3100,
                        "y_data": 0
                    },
                    {
                        "x_data": 3000,
                        "y_data": 0
                    },
                    {
                        "x_data": 2600,
                        "y_data": 0
                    },
                    {
                        "x_data": 2600,
                        "y_data": 0
                    },
                    {
                        "x_data": 4400,
                        "y_data": 0
                    },
                    {
                        "x_data": 13000,
                        "y_data": 0
                    },
                    {
                        "x_data": 6000,
                        "y_data": 0
                    },
                    {
                        "x_data": 6500,
                        "y_data": 0
                    },
                    {
                        "x_data": 10000,
                        "y_data": 0
                    },
                    {
                        "x_data": 12000,
                        "y_data": 0
                    },
                    {
                        "x_data": 8300,
                        "y_data": 0
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?",
            "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?",
            "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "enroll"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students who took some course and got A or C and group by last name in a bar chart, and order from low to high by the X.",
            "How many students taking a course who received an A or C? Group by students' last name with a bar chart, and sort in ascending by the x axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bowser",
                        "y_data": 3
                    },
                    {
                        "x_data": "Smithson",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_LNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STU_LNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "You can use a bar chart to show the employees' first name and their manager id as Y, order by the y-axis from high to low.",
            "Just show the first name and the manager id with a bar chart, and sort total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shelley",
                        "y_data": 205
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 204
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 203
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 201
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 200
                    },
                    {
                        "x_data": "John",
                        "y_data": 145
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 121
                    },
                    {
                        "x_data": "Den",
                        "y_data": 114
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 108
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 103
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Find all the distinct visit dates, and count them by a bar chart",
            "What are the distinct visit dates, and count them by a bar chart",
            "What are the number of the distinct visit dates?",
            "A bar chart for what are the number of the distinct visit dates?",
            "Show the number of visit date from each visit date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 6
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Visit_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Visit_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Plot how many date in location from over date in location from in a line chart, display in desc by the x-axis.",
            "How many documents in different starting date? Return a line chart grouping by starting date, list by the X in descending.",
            "Show the number of documents in different starting date and group by starting date with a line chart, list by the X in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2010-11-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009-08-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008-06-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "1997-03-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986-10-14",
                        "y_data": 2
                    },
                    {
                        "x_data": "1985-05-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "1972-03-31",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Location_From",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Location_From)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, and list in descending by the x axis.",
            "Show the number of customer address history in each year and bin date from by year interval with a line chart, and sort from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 1
                    },
                    {
                        "x_data": "2016",
                        "y_data": 2
                    },
                    {
                        "x_data": "2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011",
                        "y_data": 4
                    },
                    {
                        "x_data": "2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Compare the total number of end stations for the trips with the three oldest id.",
            "What is the number of end stations for the trips with the three smallest ids? Show a bar chart.",
            "Plot a bar chart to show the frequency of end stations for the trips with the three oldest id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Harry Bridges Plaza (Ferry Building)",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Francisco Caltrain 2 (330 Townsend)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "end_station_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(end_station_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of manager_id over hire_date , and could you display X-axis from high to low order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of manager_id over hire_date , could you display X-axis from high to low order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of manager_id over hire_date , and list by the x-axis from high to low.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of manager_id over hire_date in a line chart, and show from high to low by the x-axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about manager_id over hire_date with a line chart, list by the x-axis from high to low please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of manager_id over hire_date , list X-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Draw a bar chart for what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, and list in descending by the Name.",
            "Return a bar chart on what are the names and average prices of products for manufacturers whose products cost on average 150 or more?, display in descending by the Name.",
            "What are the names and average prices of products for manufacturers whose products cost on average 150 or more Plot them as bar chart, and list by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Show all countries and the number of singers in each country by a pie chart.",
            "Show all countries and the number of singers in each country. Show the proportion.",
            "Display a pie chart for how many singers are from each country?",
            "Pie chart. how many singers are from each country?",
            "How many singers are from each country. Visualize by pie chart.",
            "Compute the total the total number across country as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 4
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of employee_id over the hire_date bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 106.5
                    },
                    {
                        "x_data": "July",
                        "y_data": 129
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 160
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 190.5
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and could you rank Name from high to low order?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, I want to list in desc by the names.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, order in descending by the x axis.",
            "For those records from the products and each product's manufacturer, find name and the average of code , and group by attribute name, and visualize them by a bar chart, and order in descending by the x-axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name, list by the X in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, draw a scatter chart about the correlation between code and price .",
            "For those products with a price between 60 and 120, a scatter chart shows the correlation between code and price .",
            "For those products with a price between 60 and 120, return a scatter chart about the correlation between code and price .",
            "For those products with a price between 60 and 120, visualize a scatter chart about the correlation between code and price .",
            "For those products with a price between 60 and 120, show me about the correlation between code and price in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 120
                    },
                    {
                        "x_data": 7,
                        "y_data": 90
                    },
                    {
                        "x_data": 9,
                        "y_data": 66
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the stars of each director by a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 3
                    },
                    {
                        "x_data": "Robert Wise",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven Spielberg",
                        "y_data": 2
                    },
                    {
                        "x_data": "Victor Fleming",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "director"
                }
            }
        }
    },
    {
        "tables_used": [
            "Professionals",
            "Professionals",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many professionals did not operate any treatment on dogs for each role? Draw a bar chart, and order in ascending by the x-axis.",
            "Give me the number of professionals who did not perform any treatment on dogs for each role in a bar chart, display in asc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Employee",
                        "y_data": 5
                    },
                    {
                        "x_data": "Veterenarian",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(role_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each course description? Show me a stacked bar chart The x-axis is course description and group by instructor's name, and order from low to high by the y axis.",
            "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by instructor's name, show in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, show the frequency of the first name using a bar chart, and display X in descending order please.",
            "For employees with first names that end with the letter m, groups and count the first name to visualize a bar graph, and could you display in desc by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 2
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(FIRST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Who has friends that are older than the average age? Print their names and their ages as well using a pie chart.",
            "Whare the friends, and ages of all people who are older than the average age of a person? Plot the result by a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alice",
                        "y_data": 35
                    },
                    {
                        "x_data": "Bob",
                        "y_data": 45
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Display a bar chart for what is total number of show times per dat for each cinema?",
            "Give me a histogram for what is total number of show times per dat for each cinema?",
            "What is total number of show times per dat for each cinema. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Codling",
                        "y_data": 10
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 5
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.show_times_per_day)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval, sort by the Y-axis in ascending.",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval, and list from low to high by the y axis.",
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart, list from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 6
                    },
                    {
                        "x_data": "2016",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Count the names of each high schooler using a bar chart.",
            "Can you show me a bar chart to answer how many people with different names for each high schooler?",
            "Bar graph to show the number of name from different name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for what is average age of male for different job title?, and sort in desc by the x axis.",
            "Return a histogram on what is average age of male for different job title?, sort bars in descending order.",
            "What is the average age for a male in each job Visualize by bar chart, and show x-axis in desc order.",
            "Return a bar chart on what is the average age for a male in each job?, I want to rank by the X from high to low please.",
            "What is average age of male for different job title Visualize by bar chart, and rank by the x axis from high to low.",
            "what is the average age for a male in each job?, rank X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about All_Games_Percent over the Team_Name , I want to list by the y axis from high to low.",
            "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent , sort Y in descending order.",
            "Return a bar chart about the distribution of Team_Name and All_Games_Percent , and sort Y in desc order.",
            "Give me a bar chart for all_games_percent of each team name, and list in descending by the y-axis.",
            "Draw a bar chart about the distribution of Team_Name and All_Games_Percent , could you display y-axis in descending order please?",
            "Find Team_Name and All_Games_Percent , and visualize them by a bar chart, and list in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Bar graph to show the number of rank from different rank, I want to display bar in asc order.",
            "Show me a bar chart comparing the total number of captains in each rank, rank in ascending by the Rank.",
            "Compare the total number of different ranks using a bar graph, and sort bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Rank)"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "Find the number of web accelerators used for each Operating system, show from high to low by the total number.",
            "Draw a bar chart of operating system versus the total number, and list by the Y in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Windows, Mac",
                        "y_data": 3
                    },
                    {
                        "x_data": "Windows",
                        "y_data": 3
                    },
                    {
                        "x_data": "Unix (Linux, *BSD, Mac OS X, others), Windows",
                        "y_data": 2
                    },
                    {
                        "x_data": "Windows, except NT and 95",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac, Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac, Linux and Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac and Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows (2000 onwards)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Unix (Linux, *BSD, Mac OS X, others)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Appliance (Linux)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Any system with Java 1.6 VM available",
                        "y_data": 1
                    },
                    {
                        "x_data": "Any",
                        "y_data": 1
                    },
                    {
                        "x_data": "Android, Linux, Mac and Windows devices",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Operating_system",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of courses each teacher teaches in a bar chart.",
            "What is the number of courses each teacher teaches? Visualize with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show first name and id for all customers with at least 2 accounts Show bar chart, and sort X in descending order.",
            "What are the first names and ids for customers who have two or more accounts, and rank in desc by the X.",
            "Return a histogram on what are the first names and ids for customers who have two or more accounts?, and display in descending by the names.",
            "Show first name and id for all customers with at least 2 accounts in a bar chart, and could you order x axis from high to low order?",
            "Visualize a bar chart for what are the first names and ids for customers who have two or more accounts?, and order from high to low by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ruby",
                        "y_data": 15
                    },
                    {
                        "x_data": "Meaghan",
                        "y_data": 8
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "customer_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Bar chart of how many headquarters from each headquarters, could you sort from high to low by the Y-axis?",
            "Show the number of companies in each headquarter with a bar chart, and order by the the number of headquarters in desc.",
            "How many companies in each headquarter? Plot a bar chart, and could you sort from high to low by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 4
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, and I want to list by the y axis from high to low please.",
            "Show sum team id from each all home, and could you show by the total number in desc?",
            "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, sort by the total number in descending.",
            "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart, and could you show by the total number in desc?",
            "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart, and I want to list by the y axis from high to low please.",
            "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home, I want to display y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 4
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_500 by a bar chart, rank in asc by the bar.",
            "Find meter_500 and meter_100 , and visualize them by a bar chart, could you list by the X in asc?",
            "Bar chart x axis meter 500 y axis meter_100, and list by the bars in asc.",
            "A bar chart shows the distribution of meter_500 and meter_100 , and rank by the bar from low to high.",
            "Show me about the distribution of meter_500 and meter_100 in a bar chart, rank by the bar from low to high.",
            "Give me the comparison about meter_100 over the meter_500 , show bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:52.85",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "4:54.19",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "4:54.21",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "4:54.48",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "4:55.08",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "4:56.15",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "4:56.96",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "4:57.03",
                        "y_data": 57.34
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_500",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of manager_id over hire_date , and show from low to high by the HIRE_DATE.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of manager_id over hire_date in a line chart, show by the x axis in asc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of manager_id over hire_date , list from low to high by the X.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of manager_id over hire_date , and I want to show X-axis in ascending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of manager_id over hire_date , could you show x axis from low to high order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about manager_id over hire_date with a line chart, and show from low to high by the HIRE_DATE."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 102
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 114
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 122
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products",
            "Products_in_Events)"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "List the number of the names of products that are not in any event, and sort y-axis in asc order.",
            "A bar chart for listing the number of the names of products that are not in any event, sort the number of product name in ascending order.",
            "List the names of products that are not in any event, and count them by a bar chart, I want to show total number from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Business Policy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Business Policy B",
                        "y_data": 1
                    },
                    {
                        "x_data": "Men suits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinning",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Product_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each weekday? Show me a bar chart, rank by the total number in desc.",
            "Find the number of booking start date for the apartments that have more than two bedrooms for each weekday with a bar chart, display in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Count those days for each year and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, and display the number of date in ascending order.",
            "For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each year using a bar chart, list from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and list bar from low to high order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, display X from low to high order.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, order x axis in ascending order please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and could you rank by the X from low to high?",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, could you show by the x-axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Return the number of music festivals of each category in a bar chart, could you show by the Y in asc?",
            "Return the number of music festivals of each category, show total number from low to high order.",
            "Show me the total number by category in a histogram, show total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Best Sound Song",
                        "y_data": 1
                    },
                    {
                        "x_data": "Best Lyrics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Best Song",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution",
            "protein"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show institution names along with the number of proteins for each institution in a bar chart, and rank by the X in descending.",
            "Show institution names along with the number of proteins for each institution, and display names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Valley City State University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lindenwood University\u2013Belleville",
                        "y_data": 2
                    },
                    {
                        "x_data": "Haskell Indian Nations University",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dakota State University",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Institution",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Visualize a bar chart for how many rooms cost more than 120, for each different decor?, could you list Y-axis from low to high order?",
            "Find the number of rooms with price higher than 120 for different decor Show bar chart, and could you list Y-axis from low to high order?",
            "How many rooms cost more than 120, for each different decor Plot them as bar chart, and list by the Y from low to high.",
            "Give me a histogram for how many rooms cost more than 120, for each different decor?, could you sort y-axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 2
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 2
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "game_1",
        "nl_queries": [
            "Return a scatter chart showing the relationship between major id and minimum age.",
            "Scatter plot to show major on x axis and minimal age on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 50,
                        "y_data": 18
                    },
                    {
                        "x_data": 100,
                        "y_data": 17
                    },
                    {
                        "x_data": 520,
                        "y_data": 18
                    },
                    {
                        "x_data": 540,
                        "y_data": 17
                    },
                    {
                        "x_data": 550,
                        "y_data": 18
                    },
                    {
                        "x_data": 600,
                        "y_data": 16
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Major"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the greatest capacity for rooms in each building? Draw a bar chart, list Y in asc order.",
            "Bar chart x axis building y axis maximal capacity, I want to show in asc by the total number please.",
            "Find the maximum capacity among rooms in each building with a bar chart, and I want to show Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Lamberton",
                        "y_data": 10
                    },
                    {
                        "x_data": "Chandler",
                        "y_data": 11
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 12
                    },
                    {
                        "x_data": "Power",
                        "y_data": 12
                    },
                    {
                        "x_data": "Drown",
                        "y_data": 18
                    },
                    {
                        "x_data": "Fairchild",
                        "y_data": 27
                    },
                    {
                        "x_data": "Polya",
                        "y_data": 28
                    },
                    {
                        "x_data": "Main",
                        "y_data": 30
                    },
                    {
                        "x_data": "Grace",
                        "y_data": 34
                    },
                    {
                        "x_data": "Alumni",
                        "y_data": 47
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 51
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 59
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 60
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 65
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 92
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 97
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 109
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 113
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 115
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What is the average age of male students in each city? Draw a bar chart, show by the names in descending.",
            "Find the average age of male students (with sex M) from each city, show in descending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 18
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19.33333333333333
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.5
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 19
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Give me the comparison about the sum of monthly_rental over the date_address_from , and group by attribute other_details and bin date_address_from by time by a bar chart.",
            "Show me about the distribution of date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by time in a bar chart.",
            "Visualize a bar chart about the distribution of date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by time.",
            "Return a bar chart about the distribution of date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by time.",
            "Draw a bar chart about the distribution of date_address_from and the sum of monthly_rental , and group by attribute other_details and bin date_address_from by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 5016,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2329,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 8293,
                        "classify": "house"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 3176,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(monthly_rental)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Faculty_participates_in"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "What is the first name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in with a bar chart, list by the Y in asc.",
            "A bar chart showing the first name of all the faculty members who participated in some activity, together with the number of activities they participated in, display y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ellie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Leslie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 2
                    },
                    {
                        "x_data": "Joanne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lawrence",
                        "y_data": 2
                    },
                    {
                        "x_data": "Louis",
                        "y_data": 2
                    },
                    {
                        "x_data": "Luigi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 2
                    },
                    {
                        "x_data": "Daniel",
                        "y_data": 3
                    },
                    {
                        "x_data": "David",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 3
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 3
                    },
                    {
                        "x_data": "Scott",
                        "y_data": 3
                    },
                    {
                        "x_data": "Stacey",
                        "y_data": 3
                    },
                    {
                        "x_data": "Yair",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between card number and customer id and group by card type code in a group scatter chart.",
            "Scatterplot of card_number vs customer id by card_type_code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 14,
                        "y_data": 4560596484842,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 9,
                        "y_data": 4859448397570735,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 15,
                        "y_data": 4485460762694,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 13,
                        "y_data": 5122249720639438,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 9,
                        "y_data": 4716674779726,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 12,
                        "y_data": 6011225247353230,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 2,
                        "y_data": 5484846021884483,
                        "classify": "Credit"
                    },
                    {
                        "x_data": 6,
                        "y_data": 348237249146948,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 10,
                        "y_data": 5102229294602335,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4929590358481,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 10,
                        "y_data": 4532488235104,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 8,
                        "y_data": 4707949584519,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 3,
                        "y_data": 4929896676202959,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 5,
                        "y_data": 4929384762825,
                        "classify": "Debit"
                    },
                    {
                        "x_data": 2,
                        "y_data": 345475370003028,
                        "classify": "Debit"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "customer_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "card_number",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and commission_pct in a bar chart, I want to list y-axis from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and commission_pct , and rank in descending by the Y-axis please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and commission_pct , I want to rank from high to low by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the job_id , and could you rank Y-axis in descending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and commission_pct , and visualize them by a bar chart, and could you rank Y-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 0
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Draw a bar chart for what is the average age for each city and what are those cities?, show by the Y in ascending.",
            "A bar chart about what is the average age for each city and what are those cities?, order in asc by the y axis please.",
            "Bar chart of mean age from each city code, and show Y-axis in ascending order.",
            "What is the average age for each city and what are those cities Show bar chart, order Y from low to high order.",
            "Find the average age of all students living in the each city Show bar chart, display by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Compare the frequency of product names using a bar chart, and list from low to high by the y axis please.",
            "Bar chart x axis product name y axis how many product name, I want to order by the Y in ascending.",
            "Show me a bar chart with the product name and their frequency, list from low to high by the y axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apple",
                        "y_data": 3
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 3
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the number of heads of departments born in each state with a bar chart, and could you rank Y-axis in asc order?",
            "Show me the number of born state by born state in a histogram, show by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Delaware",
                        "y_data": 1
                    },
                    {
                        "x_data": "Florida",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alabama",
                        "y_data": 2
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 2
                    },
                    {
                        "x_data": "California",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(born_state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the name , and group by attribute name by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of price , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of price , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 165
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "news_report",
            "event",
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show the names of journalists and the number of events they reported Visualize by bar chart, and list by the bar in ascending.",
            "Show the names of journalists and the number of events they reported in a bar chart, and could you display bar in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Herbert Swindells",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jackie Waring",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Meaney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ray Ferris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tom Briggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tony Waddington",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "contestants"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the contestant numbers and names, ordered by contestant name descending in a bar chart.",
            "List the contestant numbers and names, ordered by contestant name descending. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tabatha Gehling",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nita Coster",
                        "y_data": 8
                    },
                    {
                        "x_data": "Loraine NygrenTania Mattioli",
                        "y_data": 11
                    },
                    {
                        "x_data": "Kurt Walser",
                        "y_data": 9
                    },
                    {
                        "x_data": "Kelly Clauss",
                        "y_data": 3
                    },
                    {
                        "x_data": "Jessie Eichman",
                        "y_data": 6
                    },
                    {
                        "x_data": "Jessie Alloway",
                        "y_data": 4
                    },
                    {
                        "x_data": "Ericka Dieter",
                        "y_data": 10
                    },
                    {
                        "x_data": "Edwina Burnam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Allie Rogalski",
                        "y_data": 7
                    },
                    {
                        "x_data": "Alana Bregman",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "contestant_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "contestant_number"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Reviewer"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Draw a bar chart for what is the average number of stars that each reviewer awards for a movie?, rank in ascending by the y-axis.",
            "What is the average rating star for each reviewer, and order Y-axis from low to high order please.",
            "What is the average number of stars that each reviewer awards for a movie Show bar chart, and rank in ascending by the y-axis.",
            "Return a histogram on what is the average number of stars that each reviewer awards for a movie?, and display by the y axis in ascending.",
            "Draw a bar chart for what is the average rating star for each reviewer?, order by the stars in ascending.",
            "A bar chart about what is the average rating star for each reviewer?, and display in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brittany Harris",
                        "y_data": 2.6666666666666665
                    },
                    {
                        "x_data": "Ashley White",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chris Jackson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mike Anderson",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sarah Martinez",
                        "y_data": 3
                    },
                    {
                        "x_data": "Daniel Lewis",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elizabeth Thomas",
                        "y_data": 4
                    },
                    {
                        "x_data": "James Cameron",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees in the same department and with the first name Clara, please give me a bar chart that bins hire date into the day of week interval, and count how many employees in each day."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they took office, binning the took office into WEEKDAY interval, could you rank y-axis in ascending order?",
            "Bar graph to show the number of took office from different took office, and show by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Took_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Took_office)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show all calendar dates and bin by year in a line chart.",
            "What are all the calendar dates? Give me a line chart binning calendar dates by year.",
            "Plot calendar date by how many calendar date as a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972~1976",
                        "y_data": 2
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 2
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 2
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 2
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 4
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Calendar_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Calendar_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "A bar chart about what are the destinations and number of flights to each one?, display by the X-axis in ascending please.",
            "Show all destinations and the number of flights to each destination by a bar chart, display by the X-axis in ascending please.",
            "What are the destinations and number of flights to each one Visualize by bar chart, and display X from low to high order.",
            "Show all destinations and the number of flights to each destination Plot them as bar chart, list by the x axis in ascending.",
            "Draw a bar chart for what are the destinations and number of flights to each one?, and rank in asc by the bars.",
            "Draw a bar chart of destination versus the total number, sort by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Boston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dallas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sydney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Washington D.C.",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "properties",
            "residents"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Scatter chart. how many residents does each property have? List property id and resident count.",
            "plot scatter on how many residents does each property have? List property id and resident count.",
            "How many residents does each property have? List property id and resident count with a scatter chart.",
            "How many residents does each property have? List property id and resident count. Visualize by scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 107,
                        "y_data": 2
                    },
                    {
                        "x_data": 108,
                        "y_data": 1
                    },
                    {
                        "x_data": 120,
                        "y_data": 1
                    },
                    {
                        "x_data": 373,
                        "y_data": 1
                    },
                    {
                        "x_data": 445,
                        "y_data": 1
                    },
                    {
                        "x_data": 605,
                        "y_data": 1
                    },
                    {
                        "x_data": 629,
                        "y_data": 1
                    },
                    {
                        "x_data": 669,
                        "y_data": 2
                    },
                    {
                        "x_data": 748,
                        "y_data": 2
                    },
                    {
                        "x_data": 879,
                        "y_data": 1
                    },
                    {
                        "x_data": 954,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "property_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Visualize a bar chart about the distribution of date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday.",
            "Return a bar chart about the distribution of date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday.",
            "Find date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday, and visualize them by a bar chart.",
            "Show me about the distribution of date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday in a bar chart.",
            "Draw a bar chart about the distribution of date_address_to and the amount of date_address_to , and group by attribute other_details and bin date_address_to by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3,
                        "classify": "house"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2,
                        "classify": "house"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_address_to)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Give me a tendency forwhat are the average prices of wines for different years?",
            "What are the average prices of wines for different years. Show the trend.",
            "Display a line chart for what is the average prices of wines for each each?",
            "Draw a line chart for what is the average prices of wines for each each?",
            "What is the average prices of wines for each each. Visualize by line chart.",
            "Plot year by mean price as a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004-01-01",
                        "y_data": 60.714285714285715
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 52.82142857142857
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 52.941176470588225
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 49.41847826086956
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 39.70769230769231
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 30.953846153846154
                    },
                    {
                        "x_data": "2066-01-01",
                        "y_data": 32
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "For artist names who are not from United States, show me a stacked that the x-axis is the Year_Join and the group by name in Y.",
            "For artist names who are not from the United States, how many names in each year?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1994",
                        "y_data": 2,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1997",
                        "y_data": 0,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1998",
                        "y_data": 1,
                        "classify": "Nick Price"
                    },
                    {
                        "x_data": "1994",
                        "y_data": 2,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1995",
                        "y_data": 0,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1997",
                        "y_data": 0,
                        "classify": "Vijay Singh"
                    },
                    {
                        "x_data": "1998",
                        "y_data": 2,
                        "classify": "Vijay Singh"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year_Join",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year_Join)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, and rank by the x axis in desc please.",
            "Draw a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, display in descending by the X.",
            "Stack bar chart of school_id vs All_Home based on acc road, and display in descending by the X.",
            "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart, and sort from high to low by the ACC_Road.",
            "Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart, order by the x axis in desc.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute All_Home, and show by the names in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 5,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 0,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Bin the installation date into the day of week interval, and then you can draw a bar chart to tell me how many stations each year.",
            "Please give me a bar chart that bins the installation date of stations into the day of week interval as the X-axis, and count for showing how many stations are installed each year.",
            "Show how many installation date from each installation date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 964
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1957
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1369
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1694
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2506
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1469
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "installation_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(installation_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents are created in each day? Bin the document date by weekday with a bar chart.",
            "Show the number of documents created in each day and bin document date by weekday with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the dog name and age of the dogs who have been abandoned in a bar chart, and list in ascending by the y-axis please.",
            "How old is each dog that was abandoned? Show in a bar chart, and order age from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Evangeline",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4
                    },
                    {
                        "x_data": "Kacey",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Visualize a bar chart about the number of winery of the wines whose price is bigger than 100, sort bars from high to low order please.",
            "List the number of winery of the wines whose price is bigger than 100 in a bar chart, rank names from high to low order.",
            "Compare the number of winery of the wines whose price is bigger than 100, and show by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 4
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Show different occupations along with the number of players in each occupation Show bar chart, show in ascending by the bar.",
            "Bar chart x axis occupation y axis the total number, and show in ascending by the bar.",
            "Show different occupations along with the number of players in each occupation with a bar chart, and list by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Student",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each year? Return a bar chart that bins arrived date by year interval.",
            "Show the number of dogs that received a treatment arrived in each year in a bar chart that bins arrived date by year interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 8
                    },
                    {
                        "x_data": "2018",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show the average salary by each hire date of employees, and please bin the hire date into the Month interval for showing a bar chart.",
            "Compare the average salary by each hire date (bin it into month interval) of employees using a bar chart.",
            "Give me a bar chart for the average of salary of each hire date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 15000
                    },
                    {
                        "x_data": "July",
                        "y_data": 9600
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 9180
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, list from low to high by the X please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, and rank in asc by the X-axis please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and list in asc by the X.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, and could you order bar in asc order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, and rank in asc by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Return a histogram on the average of how many matches were played in each year, order by the the average of count(*) in ascending.",
            "Show me a bar chart for the average of how many matches were played each year?, list by the total number from low to high.",
            "Compute the average of the number of matches that happened each year Plot them as a bar chart, sort Y-axis in asc order.",
            "Bar graph to show mean count(*) from different year, rank in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 0
                    },
                    {
                        "x_data": "2013",
                        "y_data": 12
                    },
                    {
                        "x_data": "2017",
                        "y_data": 108
                    },
                    {
                        "x_data": "2016",
                        "y_data": 158
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN for visualizing a bar chart, and order Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 30
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 3
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Show the names and total passengers for all train stations not in London with a bar chart, show Total_Passengers in desc order please.",
            "Show the names and total passengers for all train stations not in London Visualize by bar chart, rank y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham New Street",
                        "y_data": 36.330999999999996
                    },
                    {
                        "x_data": "Glasgow Central",
                        "y_data": 29.658
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Total_Passengers"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Return a bar chart showing the number of teachers of each course, display from low to high by the X-axis.",
            "Show the number of teachers of each course with a bar chart, list x-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bible",
                        "y_data": 1
                    },
                    {
                        "x_data": "History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Math",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Science",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Course",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Course)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way in a bar chart, I want to rank total number from high to low order.",
            "Plot the total number by grouped by how to get there as a bar graph, rank from high to low by the Y-axis.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods in a bar chart, and show y-axis in desc order.",
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way Plot them as bar chart, could you display by the y axis in descending please?",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods Visualize by bar chart, could you show total number in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "bus",
                        "y_data": 6
                    },
                    {
                        "x_data": "walk",
                        "y_data": 5
                    },
                    {
                        "x_data": "shuttle",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "How_to_Get_There",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Please display the employee number, and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name in a scatter plot.",
            "You can use a scatter chart to simply show ids and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 108,
                        "y_data": 12000
                    },
                    {
                        "x_data": 109,
                        "y_data": 9000
                    },
                    {
                        "x_data": 110,
                        "y_data": 8200
                    },
                    {
                        "x_data": 111,
                        "y_data": 7700
                    },
                    {
                        "x_data": 112,
                        "y_data": 7800
                    },
                    {
                        "x_data": 113,
                        "y_data": 6900
                    },
                    {
                        "x_data": 120,
                        "y_data": 8000
                    },
                    {
                        "x_data": 121,
                        "y_data": 8200
                    },
                    {
                        "x_data": 122,
                        "y_data": 7900
                    },
                    {
                        "x_data": 123,
                        "y_data": 6500
                    },
                    {
                        "x_data": 145,
                        "y_data": 14000
                    },
                    {
                        "x_data": 146,
                        "y_data": 13500
                    },
                    {
                        "x_data": 147,
                        "y_data": 12000
                    },
                    {
                        "x_data": 148,
                        "y_data": 11000
                    },
                    {
                        "x_data": 149,
                        "y_data": 10500
                    },
                    {
                        "x_data": 150,
                        "y_data": 10000
                    },
                    {
                        "x_data": 151,
                        "y_data": 9500
                    },
                    {
                        "x_data": 152,
                        "y_data": 9000
                    },
                    {
                        "x_data": 153,
                        "y_data": 8000
                    },
                    {
                        "x_data": 154,
                        "y_data": 7500
                    },
                    {
                        "x_data": 155,
                        "y_data": 7000
                    },
                    {
                        "x_data": 156,
                        "y_data": 10000
                    },
                    {
                        "x_data": 157,
                        "y_data": 9500
                    },
                    {
                        "x_data": 158,
                        "y_data": 9000
                    },
                    {
                        "x_data": 159,
                        "y_data": 8000
                    },
                    {
                        "x_data": 160,
                        "y_data": 7500
                    },
                    {
                        "x_data": 161,
                        "y_data": 7000
                    },
                    {
                        "x_data": 162,
                        "y_data": 10500
                    },
                    {
                        "x_data": 163,
                        "y_data": 9500
                    },
                    {
                        "x_data": 164,
                        "y_data": 7200
                    },
                    {
                        "x_data": 165,
                        "y_data": 6800
                    },
                    {
                        "x_data": 168,
                        "y_data": 11500
                    },
                    {
                        "x_data": 169,
                        "y_data": 10000
                    },
                    {
                        "x_data": 170,
                        "y_data": 9600
                    },
                    {
                        "x_data": 171,
                        "y_data": 7400
                    },
                    {
                        "x_data": 172,
                        "y_data": 7300
                    },
                    {
                        "x_data": 174,
                        "y_data": 11000
                    },
                    {
                        "x_data": 175,
                        "y_data": 8800
                    },
                    {
                        "x_data": 176,
                        "y_data": 8600
                    },
                    {
                        "x_data": 177,
                        "y_data": 8400
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "projects",
            "assignedto"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each, and display by the total number in asc.",
            "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list by the Y-axis in asc please.",
            "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, display by the total number in asc.",
            "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, and display by the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aerodynamics and Ice Hockey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juicy: Extracting Apple Juice with Pectinase",
                        "y_data": 1
                    },
                    {
                        "x_data": "A Silver-Cleaning Battery",
                        "y_data": 2
                    },
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel",
            "cartoon"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, I want to rank names in descending order.",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and I want to show from high to low by the X.",
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and list by the bars from high to low.",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, I want to rank names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "no ( FTV )",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sky Famiglia + Sky HD",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sky Famiglia",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Package_Option",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Package_Option)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Please tell me the average star ratings of each movie title using a bar chart, and could you show by the bar in desc?",
            "Visualize the title and and the average star rating of the movie using a bar chart, list bars in desc order please.",
            "What are the average star ratings of each movie title? Could you return me a bar chart?, show names from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "E.T.",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses",
            "Ref_budget_codes"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Return a bar chart to show how many documents for different budget type code, show from low to high by the total number.",
            "Show the number of documents for different budget type code in a bar chart, show in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    },
                    {
                        "x_data": "GV",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Budget_Type_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Show me the trend using a line chart that group and count payment date, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-05-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-05-04",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-05-28",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-06-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-07-31",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-08-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-10",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-24",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, display by the y-axis in desc please.",
            "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and order in descending by the total number.",
            "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, rank by the Y in descending.",
            "Show the average of id from each nationality, display mean id in desc order.",
            "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and list in desc by the y axis.",
            "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and order in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "France",
                        "y_data": 8
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Templates",
            "Documents"
        ],
        "db_id": "cre_Doc_Template_Mgt",
        "nl_queries": [
            "Show all template type codes and the number of documents using each type Visualize by bar chart, rank Template_Type_Code in asc order.",
            "Show all template type codes and the number of documents using each type with a bar chart, and sort by the x-axis in ascending.",
            "What are the different template type codes, and how many documents use each type Plot them as bar chart, list X-axis from low to high order.",
            "A bar chart about what are the different template type codes, and how many documents use each type?, display from low to high by the Template_Type_Code.",
            "what are the different template type codes, and how many documents use each type?, and rank in ascending by the Template_Type_Code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD",
                        "y_data": 3
                    },
                    {
                        "x_data": "BK",
                        "y_data": 5
                    },
                    {
                        "x_data": "PP",
                        "y_data": 4
                    },
                    {
                        "x_data": "PPT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Template_Type_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a scatter chart about the correlation between Team_ID and All_Games_Percent .",
            "Return a scatter chart about the correlation between Team_ID and All_Games_Percent .",
            "Visualize a scatter chart about the correlation between Team_ID and All_Games_Percent .",
            "Show me about the correlation between Team_ID and All_Games_Percent in a scatter chart.",
            "A scatter chart shows the correlation between Team_ID and All_Games_Percent .",
            "Plot a scatter chart, team id by all_games_percent."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 0.946
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": 3,
                        "y_data": 0.706
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, display y axis in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday, order in descending by the Y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, rank from high to low by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and show Y in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart, and list by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 110
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 110
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 70
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 40
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, sort by the Y-axis from low to high.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and I want to display total number from low to high order please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and I want to sort by the total number in asc please.",
            "For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, display by the y-axis in asc.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, I want to order by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.10344827586206
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about department_id over hire_date with a line chart, show by the x-axis in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of department_id over hire_date , and show by the x-axis in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of department_id over hire_date , rank HIRE_DATE in descending order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of department_id over hire_date , and could you order X in desc order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of department_id over hire_date in a line chart, and sort from high to low by the x axis.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for department_id, hire_date, visualize the trend, and could you order X in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 10
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students Plot them as bar chart, sort bar from low to high order.",
            "Give me a histogram for what is the first name and GPA of every student that has a GPA lower than average?, sort names in ascending order.",
            "What is the first name and GPA of every student that has a GPA lower than average Show bar chart, I want to show by the bars in ascending.",
            "Draw a bar chart for what is the first name and GPA of every student that has a GPA lower than average?, order from low to high by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John",
                        "y_data": 4
                    },
                    {
                        "x_data": "Juliette",
                        "y_data": 2
                    },
                    {
                        "x_data": "William",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STU_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(STU_GPA)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Tell me the trend using a line chart to show the total number of the station over the installation date, show by the x axis from high to low.",
            "Show me a line chart of how how many installation date change over the installation date, and order x axis from high to low order.",
            "Show the number of stations installed change over the installation date of in station table using a line chart, order by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014-04-09",
                        "y_data": 21
                    },
                    {
                        "x_data": "2014-02-20",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-01-22",
                        "y_data": 140
                    },
                    {
                        "x_data": "2013-12-31",
                        "y_data": 96
                    },
                    {
                        "x_data": "2013-08-25",
                        "y_data": 1469
                    },
                    {
                        "x_data": "2013-08-23",
                        "y_data": 2394
                    },
                    {
                        "x_data": "2013-08-22",
                        "y_data": 1473
                    },
                    {
                        "x_data": "2013-08-21",
                        "y_data": 1002
                    },
                    {
                        "x_data": "2013-08-20",
                        "y_data": 1623
                    },
                    {
                        "x_data": "2013-08-19",
                        "y_data": 859
                    },
                    {
                        "x_data": "2013-08-16",
                        "y_data": 112
                    },
                    {
                        "x_data": "2013-08-15",
                        "y_data": 219
                    },
                    {
                        "x_data": "2013-08-14",
                        "y_data": 101
                    },
                    {
                        "x_data": "2013-08-12",
                        "y_data": 40
                    },
                    {
                        "x_data": "2013-08-07",
                        "y_data": 105
                    },
                    {
                        "x_data": "2013-08-06",
                        "y_data": 238
                    },
                    {
                        "x_data": "2013-08-05",
                        "y_data": 65
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "installation_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(installation_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Give me a bar chart showing the number of products supplied by supplier id 3 for different product type code, rank in desc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "How many delegates in each committee? Return a bar chart, display in asc by the how many committee please.",
            "Show how many committee from each committee, sort from low to high by the y axis please.",
            "Show the number of delegates in each committee with a bar chart, and could you order y axis in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Economic Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters (Vice-Chair)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Health and Government Operations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ways and Means",
                        "y_data": 1
                    },
                    {
                        "x_data": "Appropriations",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Committee",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Committee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Select the name of the products with a price less than or equal to $200, and count them by a bar chart",
            "A bar chart for what are the number of the names of products with price at most 200?",
            "What are the names of products with price at most 200, and count them by a bar chart",
            "What are the number of the names of products with price at most 200?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each course description? Show me a stacked bar chart The x-axis is course description and group by office name, list by the X-axis from high to low.",
            "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by office name, and list in descending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 300"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of salary over the job_id , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "A pie chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a pie chart",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a pie chart",
            "A pie chart for finding the number of the name of rooms booked by some customers whose first name contains ROY.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(roomName)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Home and School_ID , and group by attribute ACC_Home, and visualize them by a bar chart, I want to order from low to high by the School_ID.",
            "A bar chart shows the distribution of All_Home and School_ID , and group by attribute ACC_Home, order in asc by the Y-axis please.",
            "Return a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, and order in asc by the Y-axis please.",
            "Visualize a bar chart about the distribution of All_Home and School_ID , and group by attribute ACC_Home, show in asc by the Y-axis.",
            "Show me about the distribution of All_Home and School_ID , and group by attribute ACC_Home in a bar chart, list by the Y in asc.",
            "Stack bar chart of school_id vs ACC_Home based on all home, rank total number from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 5,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 4,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "party_events",
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show party names and the number of events for each party by a pie chart.",
            "Show party names and the number of events for each party. Visualize by pie chart.",
            "Visualize a pie chart with how many events are there for each party?",
            "Return a pie chart on how many events are there for each party?",
            "How many events are there for each party. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convention Peoples Party",
                        "y_data": 3
                    },
                    {
                        "x_data": "Progress Party",
                        "y_data": 2
                    },
                    {
                        "x_data": "3",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Display a bar chart for what is the average salary for each job title?, display from low to high by the bars.",
            "Visualize a bar chart for what is the average salary for each job title?, and rank by the names in asc.",
            "What is the average salary for each job title Show bar chart, display by the names from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accountant",
                        "y_data": 7920
                    },
                    {
                        "x_data": "Accounting Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Administration Assistant",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Administration Vice President",
                        "y_data": 17000
                    },
                    {
                        "x_data": "Finance Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Human Resources Representative",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Marketing Manager",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Marketing Representative",
                        "y_data": 6000
                    },
                    {
                        "x_data": "President",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Programmer",
                        "y_data": 5760
                    },
                    {
                        "x_data": "Public Accountant",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Public Relations Representative",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Purchasing Clerk",
                        "y_data": 2780
                    },
                    {
                        "x_data": "Purchasing Manager",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Sales Manager",
                        "y_data": 12200
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 8350
                    },
                    {
                        "x_data": "Shipping Clerk",
                        "y_data": 3215
                    },
                    {
                        "x_data": "Stock Clerk",
                        "y_data": 2785
                    },
                    {
                        "x_data": "Stock Manager",
                        "y_data": 7280
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "complaints"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "What are all the different product names, and how many complains has each received Show bar chart, and show in desc by the bars.",
            "what are all the different product names, and how many complains has each received?, rank in desc by the product_name.",
            "List the name of all products along with the number of complaints that they have received with a bar chart, and show in descending by the x axis.",
            "List the name of all products along with the number of complaints that they have received, sort in desc by the bars.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, sort in desc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Great Gatsby",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mouse",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keyboard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chocolate",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a bar chart, could you order in descending by the y axis?",
            "How many courses for each course description? Show me a bar chart, and show in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 3
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of professors who is in office DRE 102 hired in each weekday with a bar chart.",
            "How many professors whose office is located in DRE 102 are hired in each weekday? Return a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Smith"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Yukon"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Yukon"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_HIREDATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_HIREDATE)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history in each day and bin date from by weekday with a bar chart, and sort how many date from from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "A bar chart shows the distribution of Days and the average of Instructor , and group by attribute Days.",
            "Find Days and the average of Instructor , and group by attribute Days, and visualize them by a bar chart.",
            "Show me about the distribution of Days and the average of Instructor , and group by attribute Days in a bar chart.",
            "Visualize a bar chart about the distribution of Days and the average of Instructor , and group by attribute Days.",
            "Return a bar chart about the distribution of Days and the average of Instructor , and group by attribute Days."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 6981.5
                    },
                    {
                        "x_data": "MT",
                        "y_data": 4670.333333333333
                    },
                    {
                        "x_data": "MTW",
                        "y_data": 6096.27027027027
                    },
                    {
                        "x_data": "MW",
                        "y_data": 7600
                    },
                    {
                        "x_data": "T",
                        "y_data": 7748
                    },
                    {
                        "x_data": "TTh",
                        "y_data": 9514
                    },
                    {
                        "x_data": "TW",
                        "y_data": 6330
                    },
                    {
                        "x_data": "Th",
                        "y_data": 6890.333333333333
                    },
                    {
                        "x_data": "ThF",
                        "y_data": 6094.75
                    },
                    {
                        "x_data": "T",
                        "y_data": 9379
                    },
                    {
                        "x_data": "W",
                        "y_data": 6776.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Days",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Instructor)"
                }
            }
        }
    },
    {
        "tables_used": [
            "problems",
            "product"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id. Visualize by scatter chart.",
            "Show me a scatter chart for what are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.",
            "Return a scatter on what are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.",
            "What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13. Visualize by scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 1
                    },
                    {
                        "x_data": 1,
                        "y_data": 2
                    },
                    {
                        "x_data": 2,
                        "y_data": 4
                    },
                    {
                        "x_data": 1,
                        "y_data": 8
                    },
                    {
                        "x_data": 1,
                        "y_data": 15
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "product_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "locations"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Give me a bar chart to compare the number of state provinces located in different cities, and list in desc by the names please.",
            "Group and count the state province attribute of the location table to visualize a bar chart, list STATE_PROVINCE in desc order.",
            "Create a bar chart showing the number of state province across state province, show in descending by the STATE_PROVINCE."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Washington",
                        "y_data": 21
                    },
                    {
                        "x_data": "Texas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oxford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "California",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bavaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STATE_PROVINCE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STATE_PROVINCE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "Take the first name of all the good customers as the X-axis and gender of all the good customers as Y-axis in a bar chart, show y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tyler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marilo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Laury",
                        "y_data": 1
                    },
                    {
                        "x_data": "German",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vergie",
                        "y_data": 0
                    },
                    {
                        "x_data": "Rosalee",
                        "y_data": 0
                    },
                    {
                        "x_data": "Maximilian",
                        "y_data": 0
                    },
                    {
                        "x_data": "Jailyn",
                        "y_data": 0
                    },
                    {
                        "x_data": "Geovany",
                        "y_data": 0
                    },
                    {
                        "x_data": "Ericka",
                        "y_data": 0
                    },
                    {
                        "x_data": "Elinore",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "orders",
            "order_items",
            "products"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "List the name and count of each product in all orders with a bar chart.",
            "List the name and count of each product in all orders.",
            "For each product, show its name and the number of times it was ordered. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "book",
                        "y_data": 1
                    },
                    {
                        "x_data": "clothes",
                        "y_data": 1
                    },
                    {
                        "x_data": "food",
                        "y_data": 5
                    },
                    {
                        "x_data": "music",
                        "y_data": 5
                    },
                    {
                        "x_data": "phone",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Return a pie chart to show the proportion of participant type code.",
            "How many items in each participant type code? Show me a pie chart!",
            "I want to know the proportion of the total number for each participant type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organizer",
                        "y_data": 7
                    },
                    {
                        "x_data": "Participant",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Participant_Type_Code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Draw a bar chart about the distribution of Date_of_Birth and Height , could you sort from low to high by the total number?",
            "Show me about the distribution of Date_of_Birth and Height in a bar chart, and list by the total number in asc.",
            "Visualize a bar chart about the distribution of Date_of_Birth and Height , and could you sort from low to high by the total number?",
            "Bar chart x axis date of birth y axis height, order by the y axis in ascending.",
            "A bar chart shows the distribution of Date_of_Birth and Height , and order by the y axis in ascending.",
            "Return a bar chart about the distribution of Date_of_Birth and Height , and could you list by the Height in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "06.10.1976",
                        "y_data": 188
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 193
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 194
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 195
                    },
                    {
                        "x_data": "01.09.1977",
                        "y_data": 196
                    },
                    {
                        "x_data": "28.09.1981",
                        "y_data": 196
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 197
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 200
                    },
                    {
                        "x_data": "05.05.1972",
                        "y_data": 202
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marshall",
                        "y_data": 8
                    },
                    {
                        "x_data": "Alicia",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cary",
                        "y_data": 14
                    },
                    {
                        "x_data": "Eliza",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "personal_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, show by the total number from high to low.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, I want to list by the Team_ID in descending please.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, and could you rank in desc by the Y?",
            "Stack bar chart of team_id vs ACC_Home based on all home, show by the total number from high to low.",
            "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, and show by the total number from high to low.",
            "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and list in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the average amount payment as the Y-axis.",
            "Calculate the average amount for all the payments processed with Visa of each day of week using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 172309
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 233375
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 155654
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's last name, could you sort by the y axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 2
                    },
                    {
                        "x_data": "Price",
                        "y_data": 2
                    },
                    {
                        "x_data": "Streich",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a scatter chart about the correlation between manager_id and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize the relationship between manager_id and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, what is the relationship between manager_id and department_id ?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a scatter chart about the correlation between manager_id and department_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a scatter chart about the correlation between manager_id and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 149,
                        "y_data": 0
                    },
                    {
                        "x_data": 100,
                        "y_data": 20
                    },
                    {
                        "x_data": 201,
                        "y_data": 20
                    },
                    {
                        "x_data": 101,
                        "y_data": 40
                    },
                    {
                        "x_data": 101,
                        "y_data": 70
                    },
                    {
                        "x_data": 101,
                        "y_data": 110
                    },
                    {
                        "x_data": 205,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "artwork"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            ", and order by the bar in desc.",
            "Show the total number from each type, and I want to sort names from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Program Talent Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Program Music/Variety Show",
                        "y_data": 3
                    },
                    {
                        "x_data": "Presenter Talent Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Presenter Music/Variety Show",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show the number of dogs that received a treatment departed in each day in a bar chart, order in asc by the how many date departed.",
            "How many dogs who have gone through a treatment departed in each day? Return a bar chart, could you show by the y axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-24",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-25",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show the title and the lowest rating among all movies in a bar chart, order names from high to low order please.",
            "Compare the lowest rating among all movies by each title using a histogram, could you rank from high to low by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 2
                    },
                    {
                        "x_data": "Snow White",
                        "y_data": 4
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 2
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Does it have something interesting about the employee id and the manager id?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 0
                    },
                    {
                        "x_data": 103,
                        "y_data": 102
                    },
                    {
                        "x_data": 108,
                        "y_data": 101
                    },
                    {
                        "x_data": 114,
                        "y_data": 100
                    },
                    {
                        "x_data": 121,
                        "y_data": 100
                    },
                    {
                        "x_data": 145,
                        "y_data": 100
                    },
                    {
                        "x_data": 200,
                        "y_data": 101
                    },
                    {
                        "x_data": 201,
                        "y_data": 100
                    },
                    {
                        "x_data": 203,
                        "y_data": 101
                    },
                    {
                        "x_data": 204,
                        "y_data": 101
                    },
                    {
                        "x_data": 205,
                        "y_data": 101
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, order from low to high by the x-axis please.",
            "Visualize a bar chart about the distribution of All_Home and the average of School_ID , and group by attribute All_Home, display X from low to high order.",
            "A bar chart shows the distribution of All_Home and the average of School_ID , and group by attribute All_Home, rank by the names in asc.",
            "Find All_Home and the average of School_ID , and group by attribute All_Home, and visualize them by a bar chart, show in asc by the x-axis please.",
            "Bar graph to show mean school id from different all home, rank by the names in asc.",
            "Give me the comparison about the average of School_ID over the All_Home , and group by attribute All_Home by a bar chart, I want to display by the x axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 2.5
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member_attendance",
            "member",
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Show the number of the dates of performances with attending members whose roles are \"Violin\", and could you display x-axis in asc order?",
            "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\", and I want to list X in ascending order.",
            "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, and display by the x-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "February 11",
                        "y_data": 1
                    },
                    {
                        "x_data": "February 2",
                        "y_data": 2
                    },
                    {
                        "x_data": "February 5",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES",
            "car_makers"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Display a bar chart for what is the name of each continent and how many car makers are there in each one?, and sort by the the total number in desc.",
            "What is the name of each continent and how many car makers are there in each one Plot them as bar chart, and show from high to low by the y-axis please.",
            "A bar chart about what is the name of each continent and how many car makers are there in each one?, and show from high to low by the y-axis please.",
            "how many car makers are there in each continents? List the continent name and the count, sort by the y-axis in desc.",
            "How many car makers are there in each continents? List the continent name and the count by a bar chart, and could you sort from high to low by the y axis?",
            "How many car makers are there in each continents? List the continent name and the count Visualize by bar chart, sort y axis in descending order.",
            "Draw a bar chart for how many car makers are there in each continents? List the continent name and the count, and sort y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "europe",
                        "y_data": 11
                    },
                    {
                        "x_data": "asia",
                        "y_data": 7
                    },
                    {
                        "x_data": "america",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Services"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "what are the event details of the services that have the type code 'Marriage', and count them by a bar chart, show in descending by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    },
                    {
                        "x_data": "Success",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_orders"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of orders in each day and show in a line chart.",
            "How many orders in each day? Return a bar chart to show."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4th",
                        "y_data": 1
                    },
                    {
                        "x_data": "5th",
                        "y_data": 0
                    },
                    {
                        "x_data": "6th",
                        "y_data": 1
                    },
                    {
                        "x_data": "7th",
                        "y_data": 0
                    },
                    {
                        "x_data": "8th",
                        "y_data": 1
                    },
                    {
                        "x_data": "9th",
                        "y_data": 0
                    },
                    {
                        "x_data": "10th",
                        "y_data": 0
                    },
                    {
                        "x_data": "11th",
                        "y_data": 0
                    },
                    {
                        "x_data": "12th",
                        "y_data": 0
                    },
                    {
                        "x_data": "13th",
                        "y_data": 0
                    },
                    {
                        "x_data": "14th",
                        "y_data": 0
                    },
                    {
                        "x_data": "15th",
                        "y_data": 0
                    },
                    {
                        "x_data": "16th",
                        "y_data": 1
                    },
                    {
                        "x_data": "17th",
                        "y_data": 0
                    },
                    {
                        "x_data": "18th",
                        "y_data": 0
                    },
                    {
                        "x_data": "19th",
                        "y_data": 0
                    },
                    {
                        "x_data": "20th",
                        "y_data": 0
                    },
                    {
                        "x_data": "21th",
                        "y_data": 0
                    },
                    {
                        "x_data": "22th",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "order_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(order_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "trip"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For each station, just show its latitude and the minimum duration of trips that ended at the station using a scatter chart.",
            "Can you give me each end station's latitude and minimum duration for trips ended there with a scatter chart?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 37.329732,
                        "y_data": 195
                    },
                    {
                        "x_data": 37.330698,
                        "y_data": 211
                    },
                    {
                        "x_data": 37.333988,
                        "y_data": 169
                    },
                    {
                        "x_data": 37.331415,
                        "y_data": 237
                    },
                    {
                        "x_data": 37.336721,
                        "y_data": 182
                    },
                    {
                        "x_data": 37.333798,
                        "y_data": 147
                    },
                    {
                        "x_data": 37.330165,
                        "y_data": 161
                    },
                    {
                        "x_data": 37.348742,
                        "y_data": 259
                    },
                    {
                        "x_data": 37.337391,
                        "y_data": 219
                    },
                    {
                        "x_data": 37.335885,
                        "y_data": 209
                    },
                    {
                        "x_data": 37.332808,
                        "y_data": 205
                    },
                    {
                        "x_data": 37.339301,
                        "y_data": 101
                    },
                    {
                        "x_data": 37.332692,
                        "y_data": 165
                    },
                    {
                        "x_data": 37.333955,
                        "y_data": 258
                    },
                    {
                        "x_data": 37.481758,
                        "y_data": 198
                    },
                    {
                        "x_data": 37.486078000000006,
                        "y_data": 206
                    },
                    {
                        "x_data": 37.487616,
                        "y_data": 126
                    },
                    {
                        "x_data": 37.484219,
                        "y_data": 1193
                    },
                    {
                        "x_data": 37.48537,
                        "y_data": 651
                    },
                    {
                        "x_data": 37.487682,
                        "y_data": 225
                    },
                    {
                        "x_data": 37.389218,
                        "y_data": 145
                    },
                    {
                        "x_data": 37.394358,
                        "y_data": 189
                    },
                    {
                        "x_data": 37.40694000000001,
                        "y_data": 153
                    },
                    {
                        "x_data": 37.39027700000001,
                        "y_data": 191
                    },
                    {
                        "x_data": 37.400443,
                        "y_data": 198
                    },
                    {
                        "x_data": 37.385956,
                        "y_data": 166
                    },
                    {
                        "x_data": 37.400241,
                        "y_data": 320
                    },
                    {
                        "x_data": 37.443988,
                        "y_data": 80
                    },
                    {
                        "x_data": 37.444521,
                        "y_data": 631
                    },
                    {
                        "x_data": 37.429082,
                        "y_data": 151
                    },
                    {
                        "x_data": 37.448598,
                        "y_data": 145
                    },
                    {
                        "x_data": 37.4256839,
                        "y_data": 166
                    },
                    {
                        "x_data": 37.78387100000001,
                        "y_data": 104
                    },
                    {
                        "x_data": 37.795001,
                        "y_data": 92
                    },
                    {
                        "x_data": 37.79728,
                        "y_data": 84
                    },
                    {
                        "x_data": 37.794231,
                        "y_data": 76
                    },
                    {
                        "x_data": 37.795425,
                        "y_data": 175
                    },
                    {
                        "x_data": 37.788975,
                        "y_data": 73
                    },
                    {
                        "x_data": 37.799953,
                        "y_data": 111
                    },
                    {
                        "x_data": 37.790302,
                        "y_data": 139
                    },
                    {
                        "x_data": 37.795392,
                        "y_data": 114
                    },
                    {
                        "x_data": 37.79146400000001,
                        "y_data": 63
                    },
                    {
                        "x_data": 37.787152,
                        "y_data": 136
                    },
                    {
                        "x_data": 37.789756,
                        "y_data": 86
                    },
                    {
                        "x_data": 37.792251,
                        "y_data": 72
                    },
                    {
                        "x_data": 37.781752,
                        "y_data": 73
                    },
                    {
                        "x_data": 37.77865,
                        "y_data": 120
                    },
                    {
                        "x_data": 37.781332,
                        "y_data": 107
                    },
                    {
                        "x_data": 37.80477,
                        "y_data": 62
                    },
                    {
                        "x_data": 37.780526,
                        "y_data": 68
                    },
                    {
                        "x_data": 37.785299,
                        "y_data": 111
                    },
                    {
                        "x_data": 37.78697800000001,
                        "y_data": 62
                    },
                    {
                        "x_data": 37.782259,
                        "y_data": 71
                    },
                    {
                        "x_data": 37.771058,
                        "y_data": 138
                    },
                    {
                        "x_data": 37.774814,
                        "y_data": 70
                    },
                    {
                        "x_data": 37.776619,
                        "y_data": 101
                    },
                    {
                        "x_data": 37.784878000000006,
                        "y_data": 126
                    },
                    {
                        "x_data": 37.7766,
                        "y_data": 77
                    },
                    {
                        "x_data": 37.776617,
                        "y_data": 61
                    },
                    {
                        "x_data": 37.788446,
                        "y_data": 209
                    },
                    {
                        "x_data": 37.781039,
                        "y_data": 106
                    },
                    {
                        "x_data": 37.798522,
                        "y_data": 143
                    },
                    {
                        "x_data": 37.794139,
                        "y_data": 64
                    },
                    {
                        "x_data": 37.7913,
                        "y_data": 87
                    },
                    {
                        "x_data": 37.786305,
                        "y_data": 140
                    },
                    {
                        "x_data": 37.789625,
                        "y_data": 104
                    },
                    {
                        "x_data": 37.352601,
                        "y_data": 409
                    },
                    {
                        "x_data": 37.798541,
                        "y_data": 105
                    },
                    {
                        "x_data": 37.491269,
                        "y_data": 225
                    },
                    {
                        "x_data": 37.342725,
                        "y_data": 269
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "lat"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T2.duration)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Show all artist names and ages in a histogram, could you sort bar from high to low order?",
            "Bar chart x axis name y axis age, and I want to order from high to low by the bars.",
            "A bar chart compares the ages of all artists, and rank in desc by the names.",
            "What are the names and ages of artists? Show the result in a bar graph, and I want to rank names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 45
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 47
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 48
                    },
                    {
                        "x_data": "Mark Brooks",
                        "y_data": 48
                    },
                    {
                        "x_data": "Larry Nelson",
                        "y_data": 50
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 46
                    },
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 57
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "A scatter chart showing the correlation between age and purchase time.",
            "Show me a scatter plot of time of purchase and age for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 18,
                        "y_data": 29
                    },
                    {
                        "x_data": 18,
                        "y_data": 35
                    },
                    {
                        "x_data": 20,
                        "y_data": 34
                    },
                    {
                        "x_data": 24,
                        "y_data": 45
                    },
                    {
                        "x_data": 26,
                        "y_data": 33
                    },
                    {
                        "x_data": 26,
                        "y_data": 42
                    },
                    {
                        "x_data": 27,
                        "y_data": 51
                    },
                    {
                        "x_data": 27,
                        "y_data": 51
                    },
                    {
                        "x_data": 41,
                        "y_data": 67
                    },
                    {
                        "x_data": 44,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Time_of_purchase"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name by a bar chart.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the name , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "how old is the youngest person for each job?, and could you order x-axis from low to high order?",
            "Return a bar chart on how old is the youngest person for each job?, could you rank by the x-axis in asc?",
            "Draw a bar chart for what is minimum age for different job title?, and display job in asc order.",
            "Show minimal age from each job, could you order x-axis from low to high order?",
            "How old is the youngest person for each job Visualize by bar chart, could you list in ascending by the names?",
            "what is minimum age for different job title?, order x-axis in ascending order please.",
            "What is minimum age for different job title, and could you list names from low to high order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "All_documents",
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "How many documents are stored? Bin the store date by weekday in a bar chart.",
            "Return a bar chart showing the number of documents stored in each weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 7
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Stored",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Stored)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_orders"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of orders in each weekday and bin the number of orders by customers in a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Clifford Pagac"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Clifford Pagac"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Clifford Pagac"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Clifford Pagac"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Clifford Pagac"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Clifford Pagac"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Clifford Pagac"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Kitty Padberg III"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "Kitty Padberg III"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Kitty Padberg III"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Kitty Padberg III"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Kitty Padberg III"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Kitty Padberg III"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Kitty Padberg III"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Prof. Alexzander Hamill"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Prof. Alexzander Hamill"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Prof. Alexzander Hamill"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Prof. Alexzander Hamill"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Prof. Alexzander Hamill"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Prof. Alexzander Hamill"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Prof. Alexzander Hamill"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Prof. Reyes Berge II"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Prof. Reyes Berge II"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Prof. Reyes Berge II"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Prof. Reyes Berge II"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Prof. Reyes Berge II"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Prof. Reyes Berge II"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Prof. Reyes Berge II"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "order_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(order_date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "user_profiles",
            "tweets"
        ],
        "db_id": "twitter_1",
        "nl_queries": [
            "Find the name of each user and number of tweets tweeted by each of them Visualize by bar chart, and order Y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Black Widow\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tyler Swift",
                        "y_data": 1
                    },
                    {
                        "x_data": "Celine Dion",
                        "y_data": 2
                    },
                    {
                        "x_data": "Iron Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Please tell the salary of each hire date using a line chart, I want to list x-axis in ascending order.",
            "Line chart, the X is the hire date of employees and the Y-axis is the corresponding salary, and order x axis in asc order please.",
            "Show the trend about salary change over hire date using a line chart, and I want to order x axis in ascending order.",
            "Can you draw the trend of salary over the hire date?, and I want to rank HIRE_DATE from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 4400
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 13000
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "What are card ids, customer ids, card types, and card numbers for each customer card?, and could you show y axis in desc order?",
            "Bar graph to show sum card number from different card type code, could you rank Y from high to low order?",
            "\u5361\u53f7\u6c42\u548c\u65e0\u610f\u4e49, I want to list from high to low by the total number of card number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit",
                        "y_data": 21491532119475148
                    },
                    {
                        "x_data": "Debit",
                        "y_data": 10744938002896200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "card_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(card_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "What are the average prices of wines for different years Show the trend, and list x axis in asc order please.",
            "What is the average prices of wines for each each Visualize by line chart, rank by the X in ascending.",
            "Plot year by mean price as a line chart, and sort x axis from low to high order.",
            "Draw a line chart for what is the average prices of wines for each each?, sort x axis from low to high order.",
            "Display a line chart for what is the average prices of wines for each each?, and display in ascending by the x-axis.",
            "Give me a tendency forwhat are the average prices of wines for different years?, and could you list by the X in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004-01-01",
                        "y_data": 60.714285714285715
                    },
                    {
                        "x_data": "2005-01-01",
                        "y_data": 52.82142857142857
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 52.941176470588225
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 49.41847826086956
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 39.70769230769231
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 30.953846153846154
                    },
                    {
                        "x_data": "2066-01-01",
                        "y_data": 32
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_calendar"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show all calendar dates and bin by year in a line chart, list by the Calendar_Date from low to high.",
            "Plot calendar date by how many calendar date as a line chart, rank X in asc order please.",
            "What are all the calendar dates? Give me a line chart binning calendar dates by year, rank from low to high by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1972~1976",
                        "y_data": 2
                    },
                    {
                        "x_data": "1977~1981",
                        "y_data": 0
                    },
                    {
                        "x_data": "1982~1986",
                        "y_data": 2
                    },
                    {
                        "x_data": "1987~1991",
                        "y_data": 2
                    },
                    {
                        "x_data": "1992~1996",
                        "y_data": 2
                    },
                    {
                        "x_data": "1997~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007~2011",
                        "y_data": 4
                    },
                    {
                        "x_data": "2012~2016",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Calendar_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Calendar_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bar chart x axis first name y axis salary, and rank in desc by the y axis.",
            "Just show employees' salaries by their first name in a bar chart, I want to order by the Y in desc.",
            "You can return a bar chart with employees' first names and their salaries, display by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Steven",
                        "y_data": 24000
                    },
                    {
                        "x_data": "John",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Den",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 4400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop",
            "happy_hour)"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Find the address and staff number of the shops that do not have any happy hour Visualize by bar chart, list in asc by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1100 Main Street",
                        "y_data": 23
                    },
                    {
                        "x_data": "1201 Walnut Street",
                        "y_data": 34
                    },
                    {
                        "x_data": "2345 McGee Street",
                        "y_data": 425
                    },
                    {
                        "x_data": "909 Main Street",
                        "y_data": 28
                    },
                    {
                        "x_data": "909 Walnut Street",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_staff"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show the of customer addresses and group by premises type and address type code in a stacked bar chart The x-axis is premises type, show by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Residence",
                        "y_data": 1,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Office",
                        "y_data": 3,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 4,
                        "classify": "Billing"
                    },
                    {
                        "x_data": "Residence",
                        "y_data": 2,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Office",
                        "y_data": 2,
                        "classify": "Shipping"
                    },
                    {
                        "x_data": "Warehouse",
                        "y_data": 3,
                        "classify": "Shipping"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "premises_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(premises_type)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a line chart that groups by departed date, sort in descending by the x-axis.",
            "List the number of dogs departed in each day with a line chart that groups by departed date, display x axis from high to low order.",
            "Plot date arrived by how many date arrived as a trend line, rank in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-01-17",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-01-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-12-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-07-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-06-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-06-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-05-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-04-20",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-04-15",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show the authors of their total submissions with a bar chart, and display by the x axis in asc.",
            "Create a bar chart showing the number of author across author, could you list in asc by the Author?",
            "Visualize a bar chart for how many authors submit to the workshop, and list bars in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Author)"
                }
            }
        }
    },
    {
        "tables_used": [
            "perpetrator"
        ],
        "db_id": "perpetrator",
        "nl_queries": [
            "Return a bar chart on what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "Visualize a bar chart for what are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.",
            "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there. Plot them as bar chart.",
            "Bar chart x axis country y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "India",
                        "y_data": 1
                    },
                    {
                        "x_data": "Japan",
                        "y_data": 1
                    },
                    {
                        "x_data": "South Korea",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart, and list in descending by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ferndale",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dinas Device",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gelli repair",
                        "y_data": 1
                    },
                    {
                        "x_data": "Best Buy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apple",
                        "y_data": 1
                    },
                    {
                        "x_data": "ATnT",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Shop_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Shop_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many countries does each continent have? Return a bar chart listing the continent name and the number of countries, and could you order from high to low by the X-axis please?",
            "For each continent, list its name, and how many countries it has with a bar chart, and rank by the Continent in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "europe",
                        "y_data": 6
                    },
                    {
                        "x_data": "australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "asia",
                        "y_data": 2
                    },
                    {
                        "x_data": "america",
                        "y_data": 3
                    },
                    {
                        "x_data": "africa",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "architect",
            "bridge"
        ],
        "db_id": "architecture",
        "nl_queries": [
            "What are the ids and names of the architects who built at least 3 bridges , I want to rank in asc by the x-axis.",
            "Draw a bar chart for what are the ids and names of the architects who built at least 3 bridges ?, sort by the names in ascending.",
            "Give me a histogram for what are the ids and names of the architects who built at least 3 bridges ?, sort by the names in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Frank Gehry",
                        "y_data": 2
                    },
                    {
                        "x_data": "Frank Lloyd Wright",
                        "y_data": 1
                    },
                    {
                        "x_data": "Le Corbusier",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "invoices"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "Return a histogram on what are the top 5 countries by number of invoices and how many do they have?",
            "what are the top 5 countries by number of invoices and how many do they have?",
            "What are the top 5 countries by number of invoices and how many do they have. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 91
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 56
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 35
                    },
                    {
                        "x_data": "France",
                        "y_data": 35
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 28
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "billing_country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "For players whose occupation is not \"Researcher\", tell me the distribution of their residences with a bar chart, and could you display by the total number in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winnipeg",
                        "y_data": 9
                    },
                    {
                        "x_data": "Selkirk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oakbank",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brandon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Birtle",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Residence",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Residence)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A line chart shows the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time",
            "Draw a line chart about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "For the average of Employee_ID, Start_from, visualize the trend.",
            "Show me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart.",
            "Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart.",
            "Give me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time.",
            "I want to see trend mean employee id over start from by Is_full_time"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1.5,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 3.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2.5,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and order by the Y in ascending.",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and display by the y axis in asc please.",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and I want to rank y-axis in ascending order.",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart, and order total number in ascending order please.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?, I want to rank y-axis in ascending order.",
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, and I want to sort from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_became_customer",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_became_customer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about ACC_Percent over the Team_Name by a bar chart.",
            "Give me the comparison about ACC_Percent over the Team_Name .",
            "Find Team_Name and ACC_Percent , and visualize them by a bar chart.",
            "A bar chart shows the distribution of Team_Name and ACC_Percent .",
            "Show me about the distribution of Team_Name and ACC_Percent in a bar chart.",
            "Plot acc_percent by grouped by team name as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "order_items"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the product name and total order quantity for each product with a pie chart.",
            "Show the product name and total order quantity for each product. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apple",
                        "y_data": 23
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 21
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 40
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(sum(T2.order_quantity))"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the average of account details for different statement details in a bar chart, and sort bar in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private Project",
                        "y_data": 3555.8333333333335
                    },
                    {
                        "x_data": "Open Project",
                        "y_data": 2257.3333333333335
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Account_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart, and could you rank by the X from low to high?",
            "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and could you display by the date_of_transaction in ascending?",
            "A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and display by the date_of_transaction in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 3
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 2
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 3
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me the minimal weight by sex in a histogram, sort the bars in asc order.",
            "A bar chart showing the minimum weight for each gender, and I want to show y axis in asc order.",
            "What is the minimum weights for people of each sex? Show a bar chart, and I want to show by the Y-axis in ascending please.",
            "Show me minimal weight by sex in a histogram, and display in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 82
                    },
                    {
                        "x_data": "F",
                        "y_data": 90
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, and order Y from low to high order.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, and rank by the Y-axis in asc.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart, and rank by the Y-axis in asc.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, show y-axis in asc order.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and display by the total number in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2822.222222222222
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2933.3333333333335
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3244.4444444444443
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 6000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7350
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7850
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show all origins and the number of flights from each origin by a bar chart.",
            "Show all origins and the number of flights from each origin. Show bar chart.",
            "For each origin, how many flights came from there. Show bar chart.",
            "Bar chart of the total number from each origin"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chicago",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Give me the descriptions of the service types that cost more than 100, and count them by a pie chart",
            "A pie chart for what are the number of the descriptions of the service types with product price above 100?",
            "Give me the number of the descriptions of the service types that cost more than 100.",
            "A pie chart for giveing me the number of the descriptions of the service types that cost more than 100.",
            "What are the number of the descriptions of the service types with product price above 100?",
            "What are the descriptions of the service types with product price above 100, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Service_Type_Description)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "List how many students in each last name who majored in 600 using a bar chart, I want to show from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gompers",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kumar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Leighton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Norris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schultz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schwartz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wilson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the number of names of high school students with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "roller_coaster"
        ],
        "db_id": "roller_coaster",
        "nl_queries": [
            "Show the names of countries and the average speed of roller coasters from each country Plot them as bar chart, and could you show y-axis from high to low order?",
            "Show the names of countries and the average speed of roller coasters from each country with a bar chart, and I want to display by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sweden",
                        "y_data": 67
                    },
                    {
                        "x_data": "Austria",
                        "y_data": 58.66666666666666
                    },
                    {
                        "x_data": "Finland",
                        "y_data": 47.45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T2.Speed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For dates had a minimum dew point smaller than any day in zip code 94107, show the total number of such days for each year using a bar chart, I want to rank Y from high to low order.",
            "Count those days for each year and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, and order in desc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "List the budget of each department in a bar chart, sort by the Y-axis from high to low please.",
            "Give me a bar chart for budget_in_billions of each name, and sort by the Y-axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Health and Human Services",
                        "y_data": 543.2
                    },
                    {
                        "x_data": "Defense",
                        "y_data": 439.3
                    },
                    {
                        "x_data": "Agriculture",
                        "y_data": 77.6
                    },
                    {
                        "x_data": "Veterans Affairs",
                        "y_data": 73.2
                    },
                    {
                        "x_data": "Education",
                        "y_data": 62.8
                    },
                    {
                        "x_data": "Labor",
                        "y_data": 59.7
                    },
                    {
                        "x_data": "Transportation",
                        "y_data": 58
                    },
                    {
                        "x_data": "Housing and Urban Development",
                        "y_data": 46.2
                    },
                    {
                        "x_data": "Homeland Security",
                        "y_data": 44.6
                    },
                    {
                        "x_data": "Justice",
                        "y_data": 23.4
                    },
                    {
                        "x_data": "Energy",
                        "y_data": 21.5
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 11.1
                    },
                    {
                        "x_data": "Interior",
                        "y_data": 10.7
                    },
                    {
                        "x_data": "State",
                        "y_data": 9.96
                    },
                    {
                        "x_data": "Commerce",
                        "y_data": 6.2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Budget_in_Billions"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "How many tourist attractions for each attraction name? Visualize by a bar chart, and sort by the Y in asc.",
            "A bar chart showing the number of tourist attractions for each attraction name, sort Y from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "UK gallery",
                        "y_data": 1
                    },
                    {
                        "x_data": "flying elephant",
                        "y_data": 1
                    },
                    {
                        "x_data": "fun shops",
                        "y_data": 1
                    },
                    {
                        "x_data": "history gallery",
                        "y_data": 1
                    },
                    {
                        "x_data": "presidents hall",
                        "y_data": 1
                    },
                    {
                        "x_data": "fun games",
                        "y_data": 2
                    },
                    {
                        "x_data": "parking",
                        "y_data": 2
                    },
                    {
                        "x_data": "jungle cruise",
                        "y_data": 3
                    },
                    {
                        "x_data": "US museum",
                        "y_data": 4
                    },
                    {
                        "x_data": "exploration trial",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assets"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of assets and group by asset make in a bar chart, and could you display in ascending by the X-axis?",
            "Bar graph to show how many asset make from different asset make, and order by the asset_make in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CN",
                        "y_data": 2
                    },
                    {
                        "x_data": "DE",
                        "y_data": 2
                    },
                    {
                        "x_data": "FR",
                        "y_data": 2
                    },
                    {
                        "x_data": "GB",
                        "y_data": 1
                    },
                    {
                        "x_data": "IE",
                        "y_data": 1
                    },
                    {
                        "x_data": "IN",
                        "y_data": 2
                    },
                    {
                        "x_data": "IT",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 1
                    },
                    {
                        "x_data": "RU",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "asset_make",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(asset_make)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, and rank Y in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday, and could you list in descending by the y-axis please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, and show from high to low by the total number please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, could you display by the Y from high to low please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, and could you list in descending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 110
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 70
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 55
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 40
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Create a bar chart showing total number of stu hrs across dept code, and list by the x axis from low to high.",
            "How many hours do the students spend studying in each department Plot them as bar chart, and list by the x axis from low to high.",
            "Visualize a bar chart for how many hours do the students spend studying in each department?, and could you display by the bar in ascending?",
            "Return a bar chart on how many hours do the students spend studying in each department?, list from low to high by the x axis.",
            "Find the total number of hours have done for all students in each department Visualize by bar chart, and order names in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 165
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 42
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 147
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 120
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 102
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(stu_hrs)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "How many services for each service type description? Use a bar chart to show it, could you order in ascending by the x-axis?",
            "Show the number of services for each service type description with a bar chart, and I want to rank in asc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "For the transaction dates if share count is smaller than 10, bin the dates into the year interval, and count them using a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 1
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of engineers for different other details in a bar chart, and rank y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Skilled",
                        "y_data": 1
                    },
                    {
                        "x_data": "",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Draw a scatter chart about the correlation between student_id and address_id , and group by attribute other_details.",
            "Show me about the correlation between student_id and address_id , and group by attribute other_details in a scatter chart.",
            "What is the relationship between student_id and address_id , and group by attribute other_details?",
            "Return a scatter chart about the correlation between student_id and address_id , and group by attribute other_details.",
            "Visualize a scatter chart about the correlation between student_id and address_id , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 13,
                        "y_data": 16,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 8,
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 5,
                        "y_data": 13,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 12,
                        "y_data": 10,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 15,
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 1,
                        "y_data": 5,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 13,
                        "y_data": 19,
                        "classify": "apartment"
                    },
                    {
                        "x_data": 2,
                        "y_data": 8,
                        "classify": "house"
                    },
                    {
                        "x_data": 4,
                        "y_data": 2,
                        "classify": "house"
                    },
                    {
                        "x_data": 3,
                        "y_data": 18,
                        "classify": "house"
                    },
                    {
                        "x_data": 7,
                        "y_data": 13,
                        "classify": "house"
                    },
                    {
                        "x_data": 7,
                        "y_data": 3,
                        "classify": "house"
                    },
                    {
                        "x_data": 2,
                        "y_data": 8,
                        "classify": "house"
                    },
                    {
                        "x_data": 6,
                        "y_data": 12,
                        "classify": "house"
                    },
                    {
                        "x_data": 2,
                        "y_data": 3,
                        "classify": "house"
                    },
                    {
                        "x_data": 4,
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": 11,
                        "y_data": 12,
                        "classify": "house"
                    },
                    {
                        "x_data": 8,
                        "y_data": 16,
                        "classify": "house"
                    },
                    {
                        "x_data": 9,
                        "y_data": 9,
                        "classify": "house"
                    },
                    {
                        "x_data": 10,
                        "y_data": 18,
                        "classify": "house"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "student_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "address_id",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, find their name and the number of reviews written by them. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Helen",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "On which day has it neither been foggy nor rained in the zip code of 94107, and count them by a bar chart, and I want to order in descending by the Y-axis.",
            "In zip code 94107, on which day neither Fog nor Rain was not observed, and count them by a bar chart, sort in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 90
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 87
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 82
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 82
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 81
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 79
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, display by the how many first name in asc.",
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, and sort y axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and rank in descending by the bar please.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and rank X in desc order.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and could you sort x-axis in descending order please?",
            "For those employees who did not have any job in the past, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, I want to list x-axis from high to low order please.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and rank X in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 28500
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 241900
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professionals",
            "Treatments",
            "Treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show how many professionals in a bar chart grouping by professional's first name, and I want to rank x-axis in desc order.",
            "List the number of professionals in a bar chart that groups by professional's first name, and show from high to low by the x-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vernice",
                        "y_data": 1
                    },
                    {
                        "x_data": "Velva",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sigurd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ruben",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monte",
                        "y_data": 2
                    },
                    {
                        "x_data": "Karley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Domenica",
                        "y_data": 2
                    },
                    {
                        "x_data": "Danny",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses offered by Psychology department in each year with a group line chart grouping by semester.",
            "How many courses are in the Psychology department in each year? Show a group line chart grouping by semester."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 3,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 3,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Spring"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of customer address history for each city in a bar chart, and order Y-axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Lisandroport",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gilbertmouth",
                        "y_data": 3
                    },
                    {
                        "x_data": "Estaland",
                        "y_data": 3
                    },
                    {
                        "x_data": "Gleasonland",
                        "y_data": 2
                    },
                    {
                        "x_data": "Agustinstad",
                        "y_data": 2
                    },
                    {
                        "x_data": "Port Montytown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake Katheryn",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lake Floyd",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hertafurt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gibsonfurt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Edgardoberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "East Rickey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(city)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Student"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "How many students are advised by each rank of faculty? List the rank and the number of students Plot them as bar chart, I want to display from low to high by the Rank please.",
            "Show me a bar chart for how many students are advised by each rank of faculty? List the rank and the number of students, list by the names in asc.",
            "how many students are advised by each rank of faculty? List the rank and the number of students, I want to order in asc by the bar.",
            "Show all the faculty ranks and the number of students advised by each rank Visualize by bar chart, order in asc by the X-axis.",
            "Show all the faculty ranks and the number of students advised by each rank in a bar chart, and I want to order in asc by the bar.",
            "How many students are advised by each rank of faculty? List the rank and the number of students in a bar chart, I want to display from low to high by the Rank please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AssocProf",
                        "y_data": 2
                    },
                    {
                        "x_data": "AsstProf",
                        "y_data": 18
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "what are the main indstries and total market value for each industry?, and order by the x-axis in desc.",
            "Show all main industry and total market value in each industry, order by the x-axis from high to low.",
            "A bar chart about what are the main indstries and total market value for each industry?, and could you rank X-axis from high to low order?",
            "Draw a bar chart of main industry versus total number of market value, order from high to low by the names.",
            "Show all main industry and total market value in each industry by a bar chart, display x-axis from high to low order.",
            "What are the main indstries and total market value for each industry Visualize by bar chart, list in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oil and gas",
                        "y_data": 1257.1
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 415.9
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 580.4000000000002
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(market_value)"
                }
            }
        }
    },
    {
        "tables_used": [
            "workshop"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "A bar chart shows the venue for each workshop.",
            "Return the number of venues of each workshop in a bar chart.",
            "Draw a bar chart that counts the number of venues of each workshop.",
            "Show the number of venue from each venue"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Istanbul Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "London UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Jersey USA",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York USA",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many rooms in each building have a capacity of over 50 Visualize by bar chart, and sort by the total number in asc.",
            "Find the number of rooms with more than 50 capacity for each building Show bar chart, display y axis in asc order.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?, rank from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Garfield",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of start dates of all the apartment bookings made by guests with gender code \"Female\" for each year with a bar chart.",
            "What are the number of start date of the apartment bookings made by female guests (gender code \"Female\") for each year? Draw a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 6
                    },
                    {
                        "x_data": "2017",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "nomination",
            "artwork",
            "festival_detail"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            "Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, and could you list by the total number in asc please?",
            "Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, and show by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Panasonic Awards",
                        "y_data": 1
                    },
                    {
                        "x_data": "Flower Awards",
                        "y_data": 2
                    },
                    {
                        "x_data": "LA Awards",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Festival_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Festival_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?, I want to order from low to high by the x axis.",
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, and show X in asc order.",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, display Trade_Name in ascending order.",
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and show from low to high by the Trade_Name.",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes, rank by the Trade_Name in asc please.",
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, and I want to order from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abilify",
                        "y_data": 2
                    },
                    {
                        "x_data": "Saphris",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Trade_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "Return a bar chart on how many musicals has each nominee been nominated for?, order Y-axis in ascending order.",
            "Give me a histogram for how many musicals has each nominee been nominated for?, show Y in ascending order.",
            "Bar chart x axis nominee y axis the total number, show Y in ascending order.",
            "Show different nominees and the number of musicals they have been nominated Plot them as bar chart, and list Y-axis in ascending order.",
            "How many musicals has each nominee been nominated for Plot them as bar chart, show in asc by the total number.",
            "Show different nominees and the number of musicals they have been nominated in a bar chart, and order by the the total number in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cleavant Derricks",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bob Fosse",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nominee",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "For each director, return the highest rating among all of movies and the value of that rating by a scatter chart. Ignore movies whose director is NULL."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 5
                    },
                    {
                        "x_data": 3,
                        "y_data": 3
                    },
                    {
                        "x_data": 4,
                        "y_data": 4
                    },
                    {
                        "x_data": 4,
                        "y_data": 4
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "stars"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home.",
            "Return a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home.",
            "Visualize a bar chart about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home.",
            "Give me the comparison about the sum of Team_ID over the All_Home , and group by attribute All_Home by a bar chart.",
            "Show me about the distribution of All_Home and the sum of Team_ID , and group by attribute All_Home in a bar chart.",
            "Show sum team id from each all home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 4
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Bar chart x axis name y axis total number of grade, and order from low to high by the total number of grade.",
            "Show the names and the total grades of each high schooler by a bar chart, display y axis in asc order.",
            "What are the names and total grades for each high schooler Plot them as a bar chart, and order by the Y in ascending.",
            "Show me a bar chart for what are the names and their total grades for each high schooler?, could you display in asc by the Y-axis?",
            "Show the names and sum grades of each high schooler Plot them as bar graph, and could you sort Y-axis in ascending order?",
            "What are the names and their total grades for each high schooler? Show me the result using a bar chart, I want to sort by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cassandra",
                        "y_data": 9
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 9
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 10
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 10
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 10
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 11
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 11
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 11
                    },
                    {
                        "x_data": "John",
                        "y_data": 12
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 12
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 12
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 20
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(grade)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and employee_id , and visualize them by a bar chart, order in ascending by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and employee_id , could you show EMPLOYEE_ID in ascending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name , show by the Y-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and employee_id , show in asc by the y-axis please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the last_name by a bar chart, order in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grant",
                        "y_data": 178
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 201
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 202
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 203
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 204
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 205
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Show different types of ships and the number of ships of each type in a bar chart, display y-axis in desc order.",
            "For each type, how many ships are there Plot them as bar chart, list from high to low by the total number please.",
            "Bar chart x axis type y axis the total number, list by the Y in desc please.",
            "Show different types of ships and the number of ships of each type Show bar chart, list by the Y in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    },
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart.",
            "For those employees who did not have any job in the past, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by time.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 1155
                    },
                    {
                        "x_data": "July",
                        "y_data": 3410
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 4314
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 3391
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show average of budget in different year and group by department creation time with a line chart.",
            "Plot the average of budget in billions over creation in a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1849-01-01",
                        "y_data": 10
                    },
                    {
                        "x_data": "1870-01-01",
                        "y_data": 23
                    },
                    {
                        "x_data": "1889-01-01",
                        "y_data": 77
                    },
                    {
                        "x_data": "1903-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "1913-01-01",
                        "y_data": 59
                    },
                    {
                        "x_data": "1947-01-01",
                        "y_data": 439
                    },
                    {
                        "x_data": "1953-01-01",
                        "y_data": 543
                    },
                    {
                        "x_data": "1965-01-01",
                        "y_data": 46
                    },
                    {
                        "x_data": "1966-01-01",
                        "y_data": 58
                    },
                    {
                        "x_data": "1977-01-01",
                        "y_data": 21
                    },
                    {
                        "x_data": "1979-01-01",
                        "y_data": 62
                    },
                    {
                        "x_data": "1989-01-01",
                        "y_data": 73
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 44
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Draw a bar chart of product type code versus minimal product price, display by the total number from low to high please.",
            "What is the lowest price of product, grouped by product type? Show a bar chart, could you rank by the y-axis from low to high please?",
            "Give the minimum product price for each product type in a bar chart, display by the total number from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of customers that use email as the contact channel and group by customer name and bin active date by year in a stacked bar chart, display y axis in ascending order.",
            "How many customers using email as the contact channel? Group by customer name and bin active date by year in a stacked bar chart, display in ascending by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018",
                        "y_data": 1,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 5,
                        "classify": "Devin Mills"
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2,
                        "classify": "Tillman Ernser"
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6,
                        "classify": "Tillman Ernser"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "Find the number of web accelerators used for each Operating system.",
            "Draw a bar chart of operating system versus the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Android, Linux, Mac and Windows devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Any",
                        "y_data": 1
                    },
                    {
                        "x_data": "Any system with Java 1.6 VM available",
                        "y_data": 1
                    },
                    {
                        "x_data": "Appliance (Linux)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Unix (Linux, *BSD, Mac OS X, others)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Unix (Linux, *BSD, Mac OS X, others), Windows",
                        "y_data": 2
                    },
                    {
                        "x_data": "Windows",
                        "y_data": 3
                    },
                    {
                        "x_data": "Windows (2000 onwards)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Linux, Mac OS, Symbian, WindowsMobile",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac",
                        "y_data": 3
                    },
                    {
                        "x_data": "Windows, Mac and Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac, Linux and Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, Mac, Mobile devices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Windows, except NT and 95",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Operating_system",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, visualize the relationship between commission_pct and manager_id .",
            "For all employees who have the letters D or S in their first name, a scatter chart shows the correlation between commission_pct and manager_id .",
            "For all employees who have the letters D or S in their first name, return a scatter chart about the correlation between commission_pct and manager_id .",
            "For all employees who have the letters D or S in their first name, what is the relationship between commission_pct and manager_id ?",
            "For all employees who have the letters D or S in their first name, show me about the correlation between commission_pct and manager_id in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 0
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 148
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 148
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.15,
                        "y_data": 147
                    },
                    {
                        "x_data": 0,
                        "y_data": 102
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 149
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0.2,
                        "y_data": 145
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0.3,
                        "y_data": 146
                    },
                    {
                        "x_data": 0.25,
                        "y_data": 146
                    },
                    {
                        "x_data": 0,
                        "y_data": 108
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0,
                        "y_data": 100
                    },
                    {
                        "x_data": 0,
                        "y_data": 101
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 147
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 149
                    },
                    {
                        "x_data": 0.1,
                        "y_data": 148
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 103
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 114
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 124
                    },
                    {
                        "x_data": 0,
                        "y_data": 121
                    },
                    {
                        "x_data": 0,
                        "y_data": 123
                    },
                    {
                        "x_data": 0,
                        "y_data": 122
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    },
                    {
                        "x_data": 0,
                        "y_data": 120
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Please show me how many employees working on different countries using a bar chart, and display from high to low by the total number.",
            "You can give me a bar chart, that groups and counts the country name, list in descending by the the number of country name.",
            "Bar graph to show how many country name from different country name, and could you order in descending by the y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States of America",
                        "y_data": 68
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 2
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(COUNTRY_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart listing the number of faults for different description of skills required to fix them."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Electrical",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mechanical",
                        "y_data": 5
                    },
                    {
                        "x_data": "TV, Video",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "skill_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(skill_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "A visualization to show the headquarter and revenue of all manufacturers sorted by their revenue in the descending order.",
            "Give me a bar chart with the headquarters and revenues for manufacturers, sorted by revenue descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Beijing",
                        "y_data": 200
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 130
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 120
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 100
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 50
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about meter_100 over the meter_500 , and I want to rank by the X-axis in desc.",
            "Show me about the distribution of meter_500 and meter_100 in a bar chart, and rank x-axis in descending order please.",
            "Find meter_500 and meter_100 , and visualize them by a bar chart, and order in descending by the X-axis.",
            "A bar chart shows the distribution of meter_500 and meter_100 , could you list meter_500 from high to low order?",
            "Give me the comparison about meter_100 over the meter_500 by a bar chart, and display from high to low by the x axis.",
            "Bar chart x axis meter 500 y axis meter_100, order in descending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:57.03",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "4:56.96",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "4:56.15",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "4:55.08",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "4:54.48",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "4:54.21",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "4:54.19",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "4:52.85",
                        "y_data": 55.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_500",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder by a bar chart.",
            "For those records from the products and each product's manufacturer, find founder and the average of manufacturer , and group by attribute founder, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Draw a bar chart for what is the average age for each city and what are those cities?, and display in desc by the x axis.",
            "Bar chart of mean age from each city code, order names in desc order.",
            "What is the average age for each city and what are those cities Show bar chart, and list names in descending order.",
            "A bar chart about what is the average age for each city and what are those cities?, and order from high to low by the x axis.",
            "Find the average age of all students living in the each city Show bar chart, order from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart, sort X in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "l",
                        "y_data": 3
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 3
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Which ministers are not a part of the Progress Party, and count them by a pie chart",
            "Show all ministers who do not belong to Progress Party, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of Time and ID in a bar chart.",
            "Draw a bar chart about the distribution of Time and ID .",
            "Give me the comparison about ID over the Time by a bar chart.",
            "Return a bar chart about the distribution of Time and ID .",
            "Find Time and ID , and visualize them by a bar chart.",
            "Bar chart x axis time y axis id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "7:47.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "7:48.67",
                        "y_data": 4
                    },
                    {
                        "x_data": "7:49.98",
                        "y_data": 5
                    },
                    {
                        "x_data": "7:52.04",
                        "y_data": 8
                    },
                    {
                        "x_data": "7:53.43",
                        "y_data": 1
                    },
                    {
                        "x_data": "7:55.39",
                        "y_data": 2
                    },
                    {
                        "x_data": "7:56.56",
                        "y_data": 6
                    },
                    {
                        "x_data": "7:46.95",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "ROLES",
            "Employees"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "How many employees does each role have? Plot a bar chart listing role id and number of employees."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ED",
                        "y_data": 2
                    },
                    {
                        "x_data": "MG",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR",
                        "y_data": 1
                    },
                    {
                        "x_data": "PT",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, show the price and group them by cinema name in a stacked bar chart, and sort Name in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Bermuda Triangle"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 15,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 9,
                        "classify": "The Case of the Mystery Weekend"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 12,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Piggy Banker"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 12,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case of the Smart Dummy"
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 8,
                        "classify": "The Case: Off the Record"
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 0,
                        "classify": "The Case: Off the Record"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of revenue , and group by attribute founder in a bar chart, and list from low to high by the Founder.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of revenue , and group by attribute founder, show by the names from low to high.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder, and order from low to high by the bars.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder by a bar chart, show by the x-axis in asc.",
            "For those records from the products and each product's manufacturer, find founder and the average of revenue , and group by attribute founder, and visualize them by a bar chart, could you sort x-axis in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the average age for each type of pet. Visualize them as a pie chart.",
            "Give me a pie to show the average of pet age from different pettype."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 3
                    },
                    {
                        "x_data": "dog",
                        "y_data": 1.5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(pet_age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "What are the ids and details for all organizations that have grants of more than 6000 dollars, rank X from low to high order.",
            "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, show bars from low to high order please.",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and I want to display by the X-axis in ascending.",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and order from low to high by the organisation_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 9
                    },
                    {
                        "x_data": "eius",
                        "y_data": 2
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 19
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "quo",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of employee_id bin hire_date by time, sort by the y-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and could you order in asc by the mean employee id please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the average of employee_id bin hire_date by time in a bar chart, and could you order in asc by the mean employee id please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of employee_id bin hire_date by time, and I want to rank in ascending by the y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the average of employee_id bin hire_date by time, and visualize them by a bar chart, I want to rank in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 198.83333333333334
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Just compare the number of journal committees of each editor using a histogram, display by the total number in descending please.",
            "Show the name of each editor and the number of journal committees they are on using a bar chart, and sort the total number in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, and could you show by the name in desc?",
            "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, show by the X-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob",
                        "y_data": 45
                    },
                    {
                        "x_data": "Alice",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "A bar chart shows the distribution of meter_700 and ID .",
            "Return a bar chart about the distribution of meter_700 and ID .",
            "Give me the comparison about ID over the meter_700 .",
            "Give me the comparison about ID over the meter_700 by a bar chart.",
            "Draw a bar chart about the distribution of meter_700 and ID .",
            "Bar chart x axis meter 700 y axis id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:50.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 4
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 5
                    },
                    {
                        "x_data": "6:53.34",
                        "y_data": 8
                    },
                    {
                        "x_data": "6:55.07",
                        "y_data": 1
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 2
                    },
                    {
                        "x_data": "6:57.69",
                        "y_data": 6
                    },
                    {
                        "x_data": "6:50.80",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of department_id , and group by attribute job_id, and visualize them by a bar chart, could you rank in ascending by the names?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and sort by the X-axis from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to show from low to high by the names.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, sort by the X-axis from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, and I want to sort in asc by the JOB_ID."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.33333333333333
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show all destinations and the number of flights to each destination by a bar chart.",
            "Show all destinations and the number of flights to each destination. Plot them as bar chart.",
            "Draw a bar chart for what are the destinations and number of flights to each one?",
            "A bar chart about what are the destinations and number of flights to each one?",
            "What are the destinations and number of flights to each one. Visualize by bar chart.",
            "Draw a bar chart of destination versus the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Boston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dallas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sydney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Washington D.C.",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many injured players not suffering from injury of 'Knee problem' in each match? Show me a bar chart grouping by number of matches."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1",
                        "y_data": 3
                    },
                    {
                        "x_data": "1 (2)",
                        "y_data": 1
                    },
                    {
                        "x_data": "10",
                        "y_data": 1
                    },
                    {
                        "x_data": "12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2",
                        "y_data": 2
                    },
                    {
                        "x_data": "3",
                        "y_data": 2
                    },
                    {
                        "x_data": "4",
                        "y_data": 1
                    },
                    {
                        "x_data": "4 (6)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Number_of_matches",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Number_of_matches)"
                }
            }
        }
    },
    {
        "tables_used": [
            "payment",
            "payment",
            "staff"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a line chart",
            "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?",
            "A line chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?",
            "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2005-05-25",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-05-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-05-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-05-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-06-15",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-06-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-06-17",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-06-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-06-19",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-06-20",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-06-21",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-07-06",
                        "y_data": 5
                    },
                    {
                        "x_data": "2005-07-07",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-07-08",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-07-09",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-07-10",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-07-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-07-26",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-07-27",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-07-28",
                        "y_data": 3
                    },
                    {
                        "x_data": "2005-07-29",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-07-30",
                        "y_data": 7
                    },
                    {
                        "x_data": "2005-07-31",
                        "y_data": 8
                    },
                    {
                        "x_data": "2005-08-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-08-02",
                        "y_data": 8
                    },
                    {
                        "x_data": "2005-08-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005-08-17",
                        "y_data": 2
                    },
                    {
                        "x_data": "2005-08-18",
                        "y_data": 5
                    },
                    {
                        "x_data": "2005-08-19",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-08-20",
                        "y_data": 4
                    },
                    {
                        "x_data": "2005-08-21",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-08-22",
                        "y_data": 6
                    },
                    {
                        "x_data": "2005-08-23",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "riding_club",
        "nl_queries": [
            "Bar chart x axis occupation y axis how many occupation, and rank by the y-axis from low to high.",
            "Visualize a bar chart to show how many players in each occupation, and show from low to high by the y-axis please.",
            "Compare the number of players of different occupations using a bar chart, order in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Design Coordinator",
                        "y_data": 1
                    },
                    {
                        "x_data": "Distribution Centre Associate",
                        "y_data": 1
                    },
                    {
                        "x_data": "Locomotive Engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ministerial Assistant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Product Consultant - MLCC",
                        "y_data": 1
                    },
                    {
                        "x_data": "Researcher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Self Employed / Consultant",
                        "y_data": 1
                    },
                    {
                        "x_data": "Small Businessman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parliamentarian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Retired",
                        "y_data": 2
                    },
                    {
                        "x_data": "Student",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Occupation",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Occupation)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the name , and group by attribute name, and could you display by the y axis in ascending?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of code , and group by attribute name, could you display by the y axis in ascending?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of code , and group by attribute name, and show Y from low to high order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of code , and group by attribute name, I want to show in asc by the total number.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of code , and group by attribute name in a bar chart, and show by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 8.5
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of customers for each gender in a scatter chart",
            "Show the number of customers for each gender. Show scatter chart.",
            "Return a scatter on how many customers are there of each gender?",
            "Display a scatter chart for how many customers are there of each gender?",
            "How many customers are there of each gender. Visualize by scatter chart.",
            "Scatter plot to show gender on x axis and the total number on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 9
                    },
                    {
                        "x_data": 1,
                        "y_data": 6
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "gender"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties, and count them by a pie chart",
            "A pie chart for finding the number of the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?",
            "Find the number of the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?",
            "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alan Hevesi",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carl McCall",
                        "y_data": 3
                    },
                    {
                        "x_data": "John Faso",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Comptroller)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Comptroller"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_orders"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "A pie chart showing the proportion of the number of orders that have the status \"Delivered\" for each customer name.",
            "What is the number of orders that have the status \"Delivered\" for each customer name? Show in pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clifford Pagac",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kitty Padberg III",
                        "y_data": 2
                    },
                    {
                        "x_data": "Prof. Alexzander Hamill",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prof. Reyes Berge II",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "orders"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "What are the dates of the orders made by the customer named \"Jeramie\", and count them by a line chart",
            "A line chart for finding the number of the dates of orders which belong to the customer named \"Jeramie\".",
            "A line chart for what are the number of the dates of the orders made by the customer named \"Jeramie\"?",
            "Find the dates of orders which belong to the customer named \"Jeramie\", and count them by a line chart",
            "Find the number of the dates of orders which belong to the customer named \"Jeramie\".",
            "What are the number of the dates of the orders made by the customer named \"Jeramie\"?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1974~1976",
                        "y_data": 2
                    },
                    {
                        "x_data": "1977~1979",
                        "y_data": 0
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_order_placed",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_order_placed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and code .",
            "For those records from the products and each product's manufacturer, show me about the correlation between code and code in a scatter chart.",
            "For those records from the products and each product's manufacturer, visualize the relationship between code and code .",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and code .",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and code ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 5
                    },
                    {
                        "x_data": 2,
                        "y_data": 6
                    },
                    {
                        "x_data": 3,
                        "y_data": 4
                    },
                    {
                        "x_data": 4,
                        "y_data": 6
                    },
                    {
                        "x_data": 5,
                        "y_data": 1
                    },
                    {
                        "x_data": 6,
                        "y_data": 2
                    },
                    {
                        "x_data": 7,
                        "y_data": 2
                    },
                    {
                        "x_data": 8,
                        "y_data": 3
                    },
                    {
                        "x_data": 9,
                        "y_data": 3
                    },
                    {
                        "x_data": 10,
                        "y_data": 2
                    },
                    {
                        "x_data": 11,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of start dates of all the apartment bookings for each weekday with a bar chart, sort in ascending by the the number of booking start date please.",
            "What is the number of start dates of each apartment booking for each weekday? Return a bar chart, show y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "What are the different ship flags, and how many ships have each Plot them as bar chart, rank Y-axis in descending order.",
            "Return a bar chart on what are the different ship flags, and how many ships have each?, list by the Y-axis in descending.",
            "Show the total number from each flag, display the total number in desc order.",
            "Draw a bar chart for what are the different ship flags, and how many ships have each?, and rank Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Panama",
                        "y_data": 8
                    },
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the relationship between minimum and maximum gpa of all students in each department with a scatter chart.",
            "What is the relationship between lowest and highest student GPA for every department? Give me a scatter chart.",
            "Scatter plot to show max(stu gpa) on x axis and minimal stu gpa on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3.15,
                        "y_data": 2.26
                    },
                    {
                        "x_data": 2.84,
                        "y_data": 2.84
                    },
                    {
                        "x_data": 3.27,
                        "y_data": 3.09
                    },
                    {
                        "x_data": 3.87,
                        "y_data": 3.87
                    },
                    {
                        "x_data": 2.11,
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the relationship between the average and maximum age for each type of pet using a scatter plot.",
            "Please plot a scatter chart to tell me what is the correlation between average and maximum age for each pet type?",
            "Plot a scatter chart, avg(pet age) by maximal pet age."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 3
                    },
                    {
                        "x_data": 1.5,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(pet_age)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(pet_age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200 in a bar chart, rank by the bars in descending please.",
            "Find meter_200 and the average of meter_100 , and group by attribute meter_200, and visualize them by a bar chart, and display in desc by the x-axis.",
            "Plot mean meter 100 by grouped by meter 200 as a bar graph, display in descending by the X-axis please.",
            "Draw a bar chart about the distribution of meter_200 and the average of meter_100 , and group by attribute meter_200, list from high to low by the names please.",
            "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200, and I want to rank from high to low by the X.",
            "Give me the comparison about the average of meter_100 over the meter_200 , and group by attribute meter_200 by a bar chart, and I want to order from high to low by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:57.26",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 57
                    },
                    {
                        "x_data": "1:54.40",
                        "y_data": 55
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(meter_100)"
                }
            }
        }
    },
    {
        "tables_used": [
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A bar chart groups the lot details, and computes the number of each lot details, and list y axis in asc order please.",
            "Return the lot details, group the lot details, and compute the number of each lot details, and show y-axis in ascending order.",
            "Bar chart x axis lot details y axis the number of lot details, rank in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "x",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 2
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "s",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 3
                    },
                    {
                        "x_data": "z",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What is the average age for each dorm and what are the names of each dorm Plot them as bar chart, could you rank by the dorm_name in descending?",
            "Find the average age of students living in each dorm and the name of dorm Plot them as bar chart, could you sort bar from high to low order please?",
            "Visualize a bar chart for what is the average age for each dorm and what are the names of each dorm?, could you sort bar from high to low order please?",
            "what is the average age for each dorm and what are the names of each dorm?, order from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "University Hovels",
                        "y_data": 18
                    },
                    {
                        "x_data": "Smith Hall",
                        "y_data": 20.166666666666668
                    },
                    {
                        "x_data": "Grad Student Asylum",
                        "y_data": 18
                    },
                    {
                        "x_data": "Fawlty Towers",
                        "y_data": 19.777777777777782
                    },
                    {
                        "x_data": "Dorm-plex 2000",
                        "y_data": 19.6
                    },
                    {
                        "x_data": "Bud Jones Hall",
                        "y_data": 20
                    },
                    {
                        "x_data": "Anonymous Donor Hall",
                        "y_data": 19.666666666666668
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dorm_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, and list y axis in asc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart, list y axis in asc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and list Y-axis from low to high order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, and list y axis in asc order please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, list Y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Find the number of members living in each address. Show bar chart.",
            "Bar graph to show the total number from different address"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bridgeport",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheshire",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Waterbury",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1845
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1833
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1827
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2090
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1870
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1818
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1942
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Find the component amounts and names of all furnitures that have more than 10 components, and could you order by the y axis from low to high?",
            "Visualize the name and their component amounts with a bar chart for all furnitures that have more than 10 components, show Y in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dining set",
                        "y_data": 12
                    },
                    {
                        "x_data": "Billiard table",
                        "y_data": 14
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_Component"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "How many courses for each subject? Plot a bar chart, I want to display by the y-axis in descending.",
            "Find the number of courses for each subject in a bar chart, and I want to list in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    },
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts opened in each day Bin the account open day by weekday in a bar chart, and order from low to high by the y-axis.",
            "How many accounts are opened in each day? Bin the account open day by weekday in a bar chart, and sort by the Y-axis in asc.",
            "Show the number of date account opened from each date account opened, and rank by the y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                }
            }
        }
    },
    {
        "tables_used": [
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "A line chart for what are the number of the distinct visit dates?, rank by the X in ascending please.",
            "What are the number of the distinct visit dates?, and could you show Visit_Date from low to high order?",
            "Find all the distinct visit dates, and count them by a line chart, could you order by the X from low to high?",
            "Show me a line chart of how the number of visit date change over the visit date, and order by the X in asc.",
            "What are the distinct visit dates, and count them by a line chart, I want to display X-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1971~1975",
                        "y_data": 2
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 3
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 3
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016~2018",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Visit_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Visit_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "What is the average price of the products for each category, and sort bars in descending order.",
            "Return the average price of products that have each category code, and show X in desc order.",
            "Show me a bar chart for what is the average price of the products for each category?, and I want to order bar from high to low order.",
            "A bar chart about what is the average price of the products for each category?, sort bars in descending order.",
            "Return the average price of products that have each category code in a bar chart, could you rank x axis in desc order?",
            "Bar graph to show the average of product price from different product category code, and show bar in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 66.67
                    },
                    {
                        "x_data": "Food",
                        "y_data": 2.88
                    },
                    {
                        "x_data": "Book",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, order Y from low to high order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of code , and group by attribute headquarter, and rank in ascending by the total number.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the headquarter , and group by attribute headquarter, order in ascending by the y axis.",
            "For those records from the products and each product's manufacturer, find headquarter and the average of code , and group by attribute headquarter, and visualize them by a bar chart, sort from low to high by the Y.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of code , and group by attribute headquarter, display in ascending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Taiwan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9.333333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of the dates of the tests taken with result \"Pass\".",
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\".",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-19",
                        "y_data": 2
                    },
                    {
                        "x_data": "2018-03-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-25",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_test_taken",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_test_taken)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of ACC_Road and School_ID , and group by attribute All_Home in a bar chart, and could you sort bar from low to high order please?",
            "Stack bar chart of school_id vs All_Home based on acc road, and show in asc by the bar.",
            "Draw a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, could you sort bar from low to high order please?",
            "Find ACC_Road and School_ID , and group by attribute All_Home, and visualize them by a bar chart, and sort X in asc order.",
            "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute All_Home, could you sort bar from low to high order please?",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute All_Home, I want to list X-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 5,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "14\u20133"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 0,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "15\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "15\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "body_builder"
        ],
        "db_id": "body_builder",
        "nl_queries": [
            "Show me about the correlation between Clean_Jerk and Total in a scatter chart.",
            "Visualize a scatter chart about the correlation between Clean_Jerk and Total .",
            "What is the relationship between Clean_Jerk and Total ?",
            "Return a scatter chart about the correlation between Clean_Jerk and Total .",
            "A scatter chart shows the correlation between Clean_Jerk and Total .",
            "Plot a scatter chart, clean jerk by total."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 175,
                        "y_data": 317.5
                    },
                    {
                        "x_data": 177.5,
                        "y_data": 315
                    },
                    {
                        "x_data": 175,
                        "y_data": 315
                    },
                    {
                        "x_data": 175,
                        "y_data": 312.5
                    },
                    {
                        "x_data": 162.5,
                        "y_data": 292.5
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Clean_Jerk"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Total"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show all customer ids and the number of accounts for each customer with a scatter chart.",
            "Show all customer ids and the number of accounts for each customer. Show the correlation.",
            "Draw a scatter chart for how many accounts are there for each customer id?",
            "Visualize a scatter chart on how many accounts are there for each customer id?",
            "How many accounts are there for each customer id. Plot them as scatter chart.",
            "Show me a scatter plot of customer id and the total number for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 1
                    },
                    {
                        "x_data": 4,
                        "y_data": 3
                    },
                    {
                        "x_data": 6,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 1
                    },
                    {
                        "x_data": 9,
                        "y_data": 4
                    },
                    {
                        "x_data": 10,
                        "y_data": 1
                    },
                    {
                        "x_data": 12,
                        "y_data": 2
                    },
                    {
                        "x_data": 13,
                        "y_data": 1
                    },
                    {
                        "x_data": 14,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show all origins and the number of flights from each origin with a pie chart.",
            "Show all origins and the number of flights from each origin. Plot them as pie chart.",
            "For each origin, how many flights came from there. Visualize by pie chart.",
            "Give me a pie to show the total number from different origin."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chicago",
                        "y_data": 2
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faults for different fault status of all the faults recoreded in the logs, could you display in ascending by the y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Return",
                        "y_data": 2
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_status",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_status)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a pie chart about the proportion of All_Home and the amount of All_Home.",
            "Give me a pie chart to reflect the proportion of All_Home and the amount of All_Home.",
            "Show me about the proportion of the amount of All_Home and the amount of All_Home in a pie chart.",
            "Draw a pie chart about the proportion of All_Home and the amount of All_Home.",
            "For the attribute All_Home and the amount of All_Home, show their proportion by a pie chart.",
            "Give me a pie to show the number of all home from different all home."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 1
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(All_Home)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Statements"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the sum of account details for different statement details in a bar chart, and order in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private Project",
                        "y_data": 21335
                    },
                    {
                        "x_data": "Open Project",
                        "y_data": 20316
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Statement_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Account_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Return a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute Team_Name.",
            "A scatter chart shows the correlation between Team_ID and ACC_Percent , and group by attribute Team_Name.",
            "What is the relationship between Team_ID and ACC_Percent , and group by attribute Team_Name?",
            "Visualize the relationship between Team_ID and ACC_Percent , and group by attribute Team_Name.",
            "Visualize a scatter chart about the correlation between Team_ID and ACC_Percent , and group by attribute Team_Name.",
            "Draw a scatterplot of team id vs acc_percent where team id is on the x-axis and points are colored by Team_Name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 0.625,
                        "classify": "Clemson"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.813,
                        "classify": "Duke"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.875,
                        "classify": "North Carolina"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.563,
                        "classify": "Virginia Tech"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Team_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each course description? Show me a bar chart, list in asc by the X-axis.",
            "Show the number of courses for each course description in a bar chart, and sort bar from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting I",
                        "y_data": 3
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "How many competitions in each competition type? And split them by country.",
            "Compute the total number in each competition type, and then split by country.",
            "A stacked bar chart about the total number in each competition type, and then split by country.",
            "Stacked bar chart of the number of country for with each Competition_type in each country"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Australia",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 1,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 2,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 0,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 1,
                        "classify": "Friendly"
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 0,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Slovenia",
                        "y_data": 2,
                        "classify": "Tournament"
                    },
                    {
                        "x_data": "Spain",
                        "y_data": 0,
                        "classify": "Tournament"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalog_Structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "What are the name and level of catalog structure with level number between 5 and 1 Show bar chart, and display in ascending by the y-axis.",
            "Visualize a bar chart for what are the name and level of catalog structure with level number between 5 and 10, and I want to list in ascending by the y axis.",
            "Give me a histogram for what are the name and level of catalog structure with level number between 5 and 10, and sort y-axis in asc order.",
            "Find the name and level of catalog structure with level between 5 and 10, and list by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sub-Category",
                        "y_data": 8
                    },
                    {
                        "x_data": "Product",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "catalog_level_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "catalog_level_number"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many countries does each continent have? Return a bar chart listing the continent name and the number of countries, and I want to display the total number from high to low order.",
            "For each continent, list its name, and how many countries it has with a bar chart, and rank from high to low by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "europe",
                        "y_data": 6
                    },
                    {
                        "x_data": "america",
                        "y_data": 3
                    },
                    {
                        "x_data": "australia",
                        "y_data": 2
                    },
                    {
                        "x_data": "asia",
                        "y_data": 2
                    },
                    {
                        "x_data": "africa",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Group and count the move in date in a bar chart, and bin the X-axis into week day interval, order y-axis in desc order.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Day of Week interval, list from high to low by the how many date moved in.",
            "Bar chart x axis date moved in y axis how many date moved in, order from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 9
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "teaches",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many instructors for every course in 2008? Show me a bar chart grouping by course title, could you order from low to high by the X?",
            "List the number of instructors for each course in year 2008 with a bar chart, and I want to rank by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Animal Behavior",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 2
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marine Mammals",
                        "y_data": 1
                    },
                    {
                        "x_data": "Networking",
                        "y_data": 1
                    },
                    {
                        "x_data": "Race Car Driving",
                        "y_data": 1
                    },
                    {
                        "x_data": "Surfing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Transaction Processing",
                        "y_data": 1
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "files",
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "Show the shortest duration and lowest rating of songs grouped by genre using a bar chart, could you rank in asc by the bar please?",
            "Let the shortest duration as bar chart's X-axis and the most poorly rated song for each genre as the Y, show in asc by the min(T1.duration)."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2:56",
                        "y_data": 5
                    },
                    {
                        "x_data": "3:45",
                        "y_data": 8
                    },
                    {
                        "x_data": "4:12",
                        "y_data": 7
                    },
                    {
                        "x_data": "4:30",
                        "y_data": 10
                    },
                    {
                        "x_data": "4:34",
                        "y_data": 8
                    },
                    {
                        "x_data": "5:23",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "min(T1.duration)",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T2.rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college location."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "McGill",
                        "y_data": 3
                    },
                    {
                        "x_data": "Minnesota",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ottawa",
                        "y_data": 2
                    },
                    {
                        "x_data": "St. Francis Xavier",
                        "y_data": 2
                    },
                    {
                        "x_data": "Western Ontario",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "College_Location",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(College_Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return the date of birth for all the guests with gender code \"Male\", and count them by a line chart",
            "Return the number of the date of birth for all the guests with gender code \"Male\".",
            "A line chart for returning the number of the date of birth for all the guests with gender code \"Male\".",
            "What are dates of birth of all the guests whose gender is \"Male\", and count them by a line chart",
            "What are the number of dates of birth of all the guests whose gender is \"Male\"?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1983~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 0
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 0
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 0
                    },
                    {
                        "x_data": "2004~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007~2009",
                        "y_data": 0
                    },
                    {
                        "x_data": "2010~2012",
                        "y_data": 0
                    },
                    {
                        "x_data": "2013~2015",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_birth",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_birth)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, display by the total number in ascending.",
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, and display by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Biology",
                        "y_data": 3
                    },
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "History",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 4
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, what is the relationship between manufacturer and revenue ?",
            "For those records from the products and each product's manufacturer, visualize the relationship between manufacturer and revenue .",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between manufacturer and revenue .",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between manufacturer and revenue .",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between manufacturer and revenue ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 130
                    },
                    {
                        "x_data": 6,
                        "y_data": 30
                    },
                    {
                        "x_data": 4,
                        "y_data": 200
                    },
                    {
                        "x_data": 6,
                        "y_data": 30
                    },
                    {
                        "x_data": 1,
                        "y_data": 120
                    },
                    {
                        "x_data": 2,
                        "y_data": 100
                    },
                    {
                        "x_data": 2,
                        "y_data": 100
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    },
                    {
                        "x_data": 2,
                        "y_data": 100
                    },
                    {
                        "x_data": 3,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Please return me a histogram to show the friends, and ages of all people who are older than the average age of a person?, display by the y-axis from high to low.",
            "Who has friends that are older than the average age? Print their friends and their ages as well using a bar chart, and display by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Zach",
                        "y_data": 45
                    },
                    {
                        "x_data": "Bob",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "friend",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Bin the hire date into the day of week interval, and then calculate the average salary of employees in each day for a bar chart, note that just select those employees without the letter M in their first name, display the average of salary from high to low order.",
            "For those employees whose first name does not contain the letter M, display their average salary by binning the hire date into the day of week interval for visualizing a bar chart, show by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 7746.666666666667
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 6810
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6571.428571428572
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 6558.333333333333
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 6400
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 5830.7692307692305
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 5561.538461538462
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the amount of job_id , and group by attribute job_id, and show X-axis in asc order please.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the amount of job_id , and group by attribute job_id in a bar chart, and show by the x axis in ascending please.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the amount of job_id , and group by attribute job_id, list from low to high by the JOB_ID please.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id, and list from low to high by the JOB_ID please.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of job_id over the job_id , and group by attribute job_id by a bar chart, and order in asc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 1
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 1
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 5
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 1
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 1
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 5
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 29
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 20
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names and their average grades of each high schooler with a bar chart.",
            "Show the names and their average grades of each high schooler.",
            "Display a bar chart for what are the names and the average grades for each high schooler?",
            "Draw a bar chart for what are the names and the average grades for each high schooler?",
            "What are the names and the average grades for each high schooler. Plot them as a bar chart.",
            "Bar graph to show mean grade from different name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 11
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 10
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 11
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 9
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 10
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 10
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 11
                    },
                    {
                        "x_data": "John",
                        "y_data": 12
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 10.5
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 12
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 12
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(grade)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, and rank by the X-axis in descending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter, and rank X-axis from high to low order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute headquarter, show by the X in descending.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, show by the X in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute headquarter in a bar chart, could you show bar from high to low order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Neutral and All_Games_Percent , and visualize them by a bar chart, display by the Y-axis in ascending.",
            "Give me the comparison about All_Games_Percent over the All_Neutral by a bar chart, and rank total number in ascending order.",
            "Give me the comparison about All_Games_Percent over the All_Neutral , could you order by the Y from low to high?",
            "Show me about the distribution of All_Neutral and All_Games_Percent in a bar chart, I want to display by the total number in ascending.",
            "Return a bar chart about the distribution of All_Neutral and All_Games_Percent , and display by the Y-axis in ascending.",
            "Create a bar chart showing all_games_percent across all neutral, I want to display by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.6
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.946
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "A bar chart showing the average price of each cinema, and list by the the average of price in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 9
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 9
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 10.666666666666666
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 12
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday, and order y axis in asc order please.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, and I want to sort sum employee id in asc order.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, and display from low to high by the y axis.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, and I want to display in asc by the y axis.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, rank by the Y from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 2265
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2280
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2310
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2325
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2440
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2456
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, and rank in ascending by the JOB_ID.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, could you display in asc by the x axis?",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, rank by the x axis from low to high.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, sort from low to high by the bars.",
            "For those employees who did not have any job in the past, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart, rank by the bar from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 241900
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 28500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me the minimal weight by sex in a bar, sort the x in asc order.",
            "Show me minimal weight by sex in a histogram, I want to order names in ascending order please.",
            "A bar chart showing the minimum weight for each gender, and I want to list by the bar in ascending.",
            "What is the minimum weights for people of each sex? Show a bar chart, sort from low to high by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 90
                    },
                    {
                        "x_data": "M",
                        "y_data": 82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "matches"
        ],
        "db_id": "wta_1",
        "nl_queries": [
            "Return a histogram on how many matches were played in each year?, order Y in ascending order.",
            "How many matches were played in each year, and sort Y-axis in ascending order.",
            "Bar chart of the total number from each year, and order Y in ascending order.",
            "Find the number of matches happened in each year Plot them as bar chart, I want to list in ascending by the y axis.",
            "Show me a bar chart for how many matches were played in each year?, and I want to sort in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 108
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 158
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Return a bar chart on how many departments are in each school?, I want to show from high to low by the X.",
            "A bar chart about how many departments are in each school?, and I want to order by the x axis from high to low.",
            "Find the number of departments in each school Plot them as bar chart, order in descending by the bars.",
            "How many departments are in each school Show bar chart, and could you list by the x-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BUS",
                        "y_data": 4
                    },
                    {
                        "x_data": "A&SCI",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SCHOOL_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT dept_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer",
            "song"
        ],
        "db_id": "singer",
        "nl_queries": [
            "Compare the number of songs each singer has, and rank from high to low by the x-axis.",
            "Compare the number of songs each singer has using a bar chart, order x-axis from high to low order.",
            "Tell me how many songs each singer has, could you display by the bars from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susanne Klatten",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liliane Bettencourt",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jacqueline Mars",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iris Fontbona",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gina Rinehart",
                        "y_data": 1
                    },
                    {
                        "x_data": "Christy Walton",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, show by the Y-axis in ascending.",
            "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision Plot them as bar chart, could you display Y in asc order?",
            "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges Show bar chart, I want to order Y-axis from low to high order.",
            "A bar chart about what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, and show by the Y-axis in ascending.",
            "Return a bar chart on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision, I want to order Y-axis from low to high order.",
            "A bar chart about how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?, order enr in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a line chart about the change of employee_id over hire_date , I want to display in asc by the HIRE_DATE.",
            "For those employees who did not have any job in the past, show me about the change of employee_id over hire_date in a line chart, and order in asc by the X.",
            "For those employees who did not have any job in the past, give me the trend about employee_id over hire_date , sort x-axis in ascending order.",
            "For those employees who did not have any job in the past, return a line chart about the change of employee_id over hire_date , and sort x-axis in ascending order.",
            "For those employees who did not have any job in the past, for employee_id, hire_date, visualize the trend, and I want to show by the HIRE_DATE from low to high.",
            "For those employees who did not have any job in the past, visualize a line chart about the change of employee_id over hire_date , display from low to high by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 103
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 104
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 105
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 106
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 107
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 108
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 109
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 111
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 112
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 113
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 115
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 116
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 117
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 118
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 119
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 120
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 121
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 123
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 124
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 125
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 126
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 127
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 128
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 129
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 130
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 131
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 132
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 133
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 134
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 135
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 136
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 137
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 138
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 139
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 140
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 141
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 142
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 143
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 144
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 145
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 146
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 147
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 148
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 150
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 151
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 152
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 153
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 154
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 155
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 156
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 157
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 158
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 159
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 160
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 161
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 162
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 163
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 164
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 165
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 166
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 167
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 168
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 169
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 170
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 171
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 172
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 173
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 174
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 175
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 177
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 178
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 179
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 180
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 181
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 182
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 183
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 184
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 185
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 186
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 187
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 188
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 189
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 190
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 191
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 192
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 193
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 194
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 195
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 196
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 197
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 198
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 199
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 202
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 203
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 204
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 206
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the YEAR interval, and sum the share count of each bin. Return the result using a line chart.",
            "Bin all date of transactions into the YEAR interval, and sum the share count of each bin. What is the trend?",
            "Visualize the general trend of sum share count over the date of transaction."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 9510
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 1654765
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 3338
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 8718572
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1522
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 93191
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 638061
                    },
                    {
                        "x_data": "2004",
                        "y_data": 96178
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Show me a pie chart for what are the different ship flags, and how many ships have each?",
            "Draw a pie chart for what are the different ship flags, and how many ships have each?",
            "What are the different ship flags, and how many ships have each. Show a pie chart.",
            "Give me a pie to show the total number from different flag."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Panama",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "railway",
        "nl_queries": [
            "Tell me the distribution of the number of trains at each arrival time with a bar chart, rank bar in ascending order.",
            "Visualize a bar chart, the x-axis is the arrival time, and the y-axis is the total number of trains in each arrival time, and sort x-axis in asc order.",
            "Create a bar chart showing how many arrival across arrival, sort x-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "05:09",
                        "y_data": 1
                    },
                    {
                        "x_data": "08:54",
                        "y_data": 1
                    },
                    {
                        "x_data": "09:08",
                        "y_data": 1
                    },
                    {
                        "x_data": "09:48",
                        "y_data": 1
                    },
                    {
                        "x_data": "13:04",
                        "y_data": 2
                    },
                    {
                        "x_data": "13:28",
                        "y_data": 1
                    },
                    {
                        "x_data": "23:39",
                        "y_data": 1
                    },
                    {
                        "x_data": "23:44",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Arrival",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Arrival)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Show the country names and the corresponding number of players in a pie chart.",
            "Show the country names and the corresponding number of players. Plot them as pie chart.",
            "Display a pie chart for how many players are from each country?",
            "Give the proportion of how many players are from each country?",
            "How many players are from each country. Show a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Indonesia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 4
                    },
                    {
                        "x_data": "Isle of Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "United States",
                        "y_data": 9
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Return a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, could you list by the bars from low to high?",
            "Find meter_200 and the sum of ID , and group by attribute meter_200, and visualize them by a bar chart, and I want to display in ascending by the x axis.",
            "Show total number of id from each meter 200, and list by the x axis in ascending.",
            "Give me the comparison about the sum of ID over the meter_200 , and group by attribute meter_200 by a bar chart, and I want to display in ascending by the x axis.",
            "A bar chart shows the distribution of meter_200 and the sum of ID , and group by attribute meter_200, and list meter_200 in asc order please.",
            "Draw a bar chart about the distribution of meter_200 and the sum of ID , and group by attribute meter_200, list meter_200 in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart, and rank in asc by the y axis please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, and show Y in asc order please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart, rank in asc by the total number.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, and I want to show total number in ascending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute founder by a bar chart, rank in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "CONTINENTS",
            "COUNTRIES"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many countries does each continent have? List the continent id and the number of countries with a scatter chart.",
            "For each continent, give me a scatter chart on its id and how many countries it has."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 3
                    },
                    {
                        "x_data": 2,
                        "y_data": 6
                    },
                    {
                        "x_data": 3,
                        "y_data": 2
                    },
                    {
                        "x_data": 4,
                        "y_data": 2
                    },
                    {
                        "x_data": 5,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ContId"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, sort in descending by the total number.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, and rank how many first name from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of revenue , and group by attribute name, sort by the y axis in desc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of revenue , and group by attribute name, order y axis from high to low order.",
            "For those records from the products and each product's manufacturer, find name and the average of revenue , and group by attribute name, and visualize them by a bar chart, list in descending by the y axis please.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the average of revenue , and group by attribute name in a bar chart, order y axis from high to low order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the average of revenue , and group by attribute name, and I want to display from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 75
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "List the number of items by the details of the organization that owns it using a bar chart, order total number in descending order.",
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, show Y in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 10
                    },
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 3
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph.",
            "For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-12-20",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-12-31",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of last_name and commission_pct , and sort names in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name , list by the X-axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and commission_pct , show x axis in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and commission_pct , and visualize them by a bar chart, and show x axis in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the last_name by a bar chart, and order bars in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mavris",
                        "y_data": 0
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 0
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 0
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 0
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart.",
            "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval.",
            "Can you draw the trend of how many date from over the date from?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 3
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 0
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 1
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Please compare the number of names of parties using a bar chart, show by the y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 1
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's last name, order the number of last name in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Streich",
                        "y_data": 6
                    },
                    {
                        "x_data": "Price",
                        "y_data": 2
                    },
                    {
                        "x_data": "Morar",
                        "y_data": 2
                    },
                    {
                        "x_data": "Simonis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Reinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kunde",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hirthe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type name? Visualize by a ar chart, and could you list in descending by the how many document type name?",
            "Return a bar chart showing the number of documents for each document type name, could you list in descending by the how many document type name?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Book",
                        "y_data": 6
                    },
                    {
                        "x_data": "Paper",
                        "y_data": 5
                    },
                    {
                        "x_data": "CV",
                        "y_data": 3
                    },
                    {
                        "x_data": "Film",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions",
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Display a bar chart for what are the names and ids of the tourist attractions that are visited at most once?, and list by the X in asc.",
            "What are the names and ids of the tourist attractions that are visited at most once Visualize by bar chart, rank by the bar in ascending.",
            "Show the names and ids of tourist attractions that are visited at most once by a bar chart, and I want to show from low to high by the X-axis.",
            "Give me a histogram for what are the names and ids of the tourist attractions that are visited at most once?, and sort Name in asc order.",
            "Show the names and ids of tourist attractions that are visited at most once, rank by the bar in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "UK gallery",
                        "y_data": 2701
                    },
                    {
                        "x_data": "flying elephant",
                        "y_data": 5076
                    },
                    {
                        "x_data": "fun shops",
                        "y_data": 9360
                    },
                    {
                        "x_data": "history gallery",
                        "y_data": 6653
                    },
                    {
                        "x_data": "presidents hall",
                        "y_data": 8429
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Tourist_Attraction_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "How many wines are there for each grape, and show x-axis from high to low order.",
            "A bar chart about how many wines are there for each grape?, rank by the bars from high to low.",
            "what are the numbers of wines for different grapes?, and show x-axis from high to low order.",
            "What are the numbers of wines for different grapes Plot them as bar chart, sort by the bar in desc.",
            "Show me the total number by grape in a histogram, sort by the bar in desc.",
            "Return a bar chart on how many wines are there for each grape?, I want to list in desc by the x axis.",
            "Display a bar chart for what are the numbers of wines for different grapes?, and I want to show from high to low by the Grape."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Zinfandel",
                        "y_data": 78
                    },
                    {
                        "x_data": "Viognier",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tempranillo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Syrah",
                        "y_data": 61
                    },
                    {
                        "x_data": "Sauvignon Blanc",
                        "y_data": 46
                    },
                    {
                        "x_data": "Sangiovese",
                        "y_data": 1
                    },
                    {
                        "x_data": "Roussanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 109
                    },
                    {
                        "x_data": "Petite Sirah",
                        "y_data": 6
                    },
                    {
                        "x_data": "Merlot",
                        "y_data": 10
                    },
                    {
                        "x_data": "Marsanne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Malbec",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grenache",
                        "y_data": 10
                    },
                    {
                        "x_data": "Chardonnay",
                        "y_data": 104
                    },
                    {
                        "x_data": "Cabernet Sauvingnon",
                        "y_data": 68
                    },
                    {
                        "x_data": "Cabernet Franc",
                        "y_data": 1
                    },
                    {
                        "x_data": "Barbera",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Grape",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "how many students are in each department?, show in asc by the y-axis.",
            "How many students are in each department Visualize by bar chart, could you show by the total number in ascending please?",
            "Draw a bar chart of dept code versus the total number, could you list in asc by the Y please?",
            "Find the number of students for each department Plot them as bar chart, and could you show by the total number in ascending please?",
            "Return a histogram on how many students are in each department?, and order by the y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BIOL",
                        "y_data": 1
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 1
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 2
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id by a bar chart, and list X in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of salary over the job_id , and group by attribute job_id, sort by the bar in ascending.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart, list X in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of salary , and group by attribute job_id, and order by the JOB_ID from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id, display X from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 34000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 39600
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 28800
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 13900
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 61000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 250500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 64300
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 55700
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 36400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, compute the total number of states, and sum their vote id with a pie chart.",
            "I want to know the proportion of sum of vote id for each state."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 3
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 5
                    },
                    {
                        "x_data": "NY",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(vote_id)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state"
                }
            }
        }
    },
    {
        "tables_used": [
            "screen_mode",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Claims",
            "Claims"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "A bar chart for returning the number of the claim start date for the claims whose claimed amount is no more than the average, and rank from high to low by the y axis.",
            "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date, and count them by a bar chart, and I want to order Y from high to low order.",
            "Return the number of the claim start date for the claims whose claimed amount is no more than the average, rank from high to low by the y axis.",
            "Return the claim start date for the claims whose claimed amount is no more than the averag, and count them by a bar chart, I want to list Y-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 4
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Show the different countries and the number of members from each with a bar chart, rank by the bar in ascending.",
            "Plot the total number by grouped by country as a bar graph, and could you sort by the Country from low to high please?",
            "Show the different countries and the number of members from each Visualize by bar chart, rank by the bar in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    },
                    {
                        "x_data": "United States",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the booking start dates of the apartments with type code \"Duplex\"? Bin the year into weekday interval with a bar chart, show by the y-axis in descending.",
            "Return the booking start date for the apartments that have type code \"Duplex\" and bin the year into weekday interval with a bar chart, and show by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about the sum of School_ID over the All_Home , and group by attribute All_Home.",
            "Find All_Home and the sum of School_ID , and group by attribute All_Home, and visualize them by a bar chart.",
            "Show me about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home in a bar chart.",
            "Draw a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home.",
            "Return a bar chart about the distribution of All_Home and the sum of School_ID , and group by attribute All_Home.",
            "Give me a bar chart for total number of school id of each all home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 5
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 5
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(School_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "premises"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show how many customer addresses in each address type code with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Billing",
                        "y_data": 8
                    },
                    {
                        "x_data": "Shipping",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "address_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(address_type_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and rank by the Y-axis in ascending please.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time, sort from low to high by the y axis.",
            "For those employees who did not have any job in the past, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart, and show total number from low to high order.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, and rank by the Y-axis in ascending please.",
            "For those employees who did not have any job in the past, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart, and rank by the Y-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    },
                    {
                        "x_data": "June",
                        "y_data": 12
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 27
                    },
                    {
                        "x_data": "July",
                        "y_data": 29
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "product_suppliers",
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the average of price supplied by supplier id 3 for different product type code in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 817
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 803
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, could you order by the x axis in desc please?",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of manufacturer , and group by attribute founder in a bar chart, and sort by the bar from high to low.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of manufacturer , and group by attribute founder, could you list in desc by the Founder please?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of manufacturer , and group by attribute founder, could you rank x axis from high to low order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the founder , and group by attribute founder, rank from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faluts for different fault description recorded in the logs, and could you list names in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "system error",
                        "y_data": 9
                    },
                    {
                        "x_data": "failed parts",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the max gpa of all students in each department with a pie chart.",
            "What is the highest student GPA for every department? Return a pie chart.",
            "Give me a pie to show maximal stu gpa from different dept code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3.15
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.27
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Group and count the move in date in a bar chart, and I want to bin the X into Year interval.",
            "Give me a bar chart that the X-axis is the date_moved_in and the Y-axis is Count them, please bin X-axis into Year interval.",
            "Bar chart x axis date moved in y axis how many date moved in"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015",
                        "y_data": 9
                    },
                    {
                        "x_data": "2016",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Draw a bar chart of product type code versus minimal product price, and rank in desc by the X.",
            "Give the minimum product price for each product type in a bar chart, and I want to sort X-axis in descending order.",
            "What is the lowest price of product, grouped by product type? Show a bar chart, and show by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday, and sort Y from low to high order please.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday, and sort by the y axis from low to high please.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the average of department_id bin hire_date by weekday in a bar chart, sort Y from low to high order please.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart, sort by the y axis from low to high please.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday, display by the the average of department id in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 46
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 58.888888888888886
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 60.90909090909091
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 67.14285714285714
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 67.5
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 72
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 86.66666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of the first name of students who are living in the Smith Hall.",
            "A bar chart for finding the number of the first name of students who are living in the Smith Hall.",
            "Find the first name of students who are living in the Smith Hall, and count them by a bar chart",
            "What are the number of the first names of all students in Smith Hall?",
            "What are the first names of all students in Smith Hall, and count them by a bar chart",
            "A bar chart for what are the number of the first names of all students in Smith Hall?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Return a bar chart on what is the average age for each gender?",
            "Draw a bar chart for what is the average age for each gender?",
            "What is the average age for each gender. Visualize by bar chart.",
            "Give me a histogram for how old is each gender, on average?",
            "Return a histogram on how old is each gender, on average?",
            "How old is each gender, on average. Plot them as bar chart.",
            "Bar graph to show the average of age from different gender"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 25.5
                    },
                    {
                        "x_data": "male",
                        "y_data": 40
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "classroom"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of rooms with more than 50 capacity for each building Show bar chart, and order from high to low by the X-axis.",
            "Display a bar chart for how many rooms in each building have a capacity of over 50?, and I want to show in desc by the x-axis.",
            "How many rooms in each building have a capacity of over 50 Visualize by bar chart, and list in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 2
                    },
                    {
                        "x_data": "Stabler",
                        "y_data": 1
                    },
                    {
                        "x_data": "Saucon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rathbone",
                        "y_data": 1
                    },
                    {
                        "x_data": "Painter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nassa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lambea",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gates",
                        "y_data": 1
                    },
                    {
                        "x_data": "Garfield",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Give me a bar chart for budget_in_billions of each name, and sort by the total number in asc.",
            "List the budget of each department in a bar chart, I want to sort in ascending by the Budget_in_Billions."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commerce",
                        "y_data": 6.2
                    },
                    {
                        "x_data": "State",
                        "y_data": 9.96
                    },
                    {
                        "x_data": "Interior",
                        "y_data": 10.7
                    },
                    {
                        "x_data": "Treasury",
                        "y_data": 11.1
                    },
                    {
                        "x_data": "Energy",
                        "y_data": 21.5
                    },
                    {
                        "x_data": "Justice",
                        "y_data": 23.4
                    },
                    {
                        "x_data": "Homeland Security",
                        "y_data": 44.6
                    },
                    {
                        "x_data": "Housing and Urban Development",
                        "y_data": 46.2
                    },
                    {
                        "x_data": "Transportation",
                        "y_data": 58
                    },
                    {
                        "x_data": "Labor",
                        "y_data": 59.7
                    },
                    {
                        "x_data": "Education",
                        "y_data": 62.8
                    },
                    {
                        "x_data": "Veterans Affairs",
                        "y_data": 73.2
                    },
                    {
                        "x_data": "Agriculture",
                        "y_data": 77.6
                    },
                    {
                        "x_data": "Defense",
                        "y_data": 439.3
                    },
                    {
                        "x_data": "Health and Human Services",
                        "y_data": 543.2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Budget_in_Billions"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Neutral and School_ID in a bar chart, and list in desc by the X.",
            "Create a bar chart showing school_id across all neutral, and rank All_Neutral in descending order.",
            "Draw a bar chart about the distribution of All_Neutral and School_ID , and list from high to low by the X.",
            "Give me the comparison about School_ID over the All_Neutral , and rank All_Neutral in descending order.",
            "A bar chart shows the distribution of All_Neutral and School_ID , and rank by the bars in descending please.",
            "Give me the comparison about School_ID over the All_Neutral by a bar chart, and sort in descending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 1
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me school_id by all road in a histogram, and I want to list from low to high by the x axis.",
            "Draw a bar chart about the distribution of All_Road and School_ID , and list by the X in asc.",
            "Return a bar chart about the distribution of All_Road and School_ID , could you list by the names in asc please?",
            "A bar chart shows the distribution of All_Road and School_ID , rank by the X from low to high.",
            "Find All_Road and School_ID , and visualize them by a bar chart, rank by the X from low to high.",
            "Visualize a bar chart about the distribution of All_Road and School_ID , and could you rank bar in ascending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 5
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 4
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games for each away team in a pie chart.",
            "Create a pie chart showing how many away team across away team."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the sum of employee_id , and group by attribute job_id in a bar chart, sort by the x axis from low to high please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the sum of employee_id , and group by attribute job_id, and visualize them by a bar chart, and order names in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of employee_id , and group by attribute job_id, could you display in ascending by the names?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of employee_id over the job_id , and group by attribute job_id, could you list bar from low to high order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of employee_id , and group by attribute job_id, rank by the x-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 203
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 555
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 525
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 585
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 735
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4935
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3790
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2690
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 610
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time in a bar chart, and I want to list by the the number of is full time in ascending.",
            "Return a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, show from low to high by the total number.",
            "Give me the comparison about the amount of Is_full_time over the Is_full_time , and group by attribute Is_full_time by a bar chart, show from low to high by the total number.",
            "Draw a bar chart about the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and show from low to high by the total number.",
            "Draw a bar chart of is full time versus how many is full time, I want to list by the the number of is full time in ascending.",
            "A bar chart shows the distribution of Is_full_time and the amount of Is_full_time , and group by attribute Is_full_time, and could you display in asc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 2
                    },
                    {
                        "x_data": "T",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Is_full_time)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, show me the proportion of details of the organizations with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "a",
                        "y_data": 1
                    },
                    {
                        "x_data": "eius",
                        "y_data": 1
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 2
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 1
                    },
                    {
                        "x_data": "quo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organisation_details)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return a bar chart about the number bookings for each apartment number, and rank from high to low by the x-axis.",
            "How many bookings for each apartment number? Plot a bar chart, display x-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Suite 749",
                        "y_data": 2
                    },
                    {
                        "x_data": "Suite 693",
                        "y_data": 3
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 1
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apt. 187",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(apt_number)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game",
            "injury_accident"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "How many players are injured in each day? Show a bar chart, and sort in asc by the Date please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "10 July 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "14 March 2010",
                        "y_data": 2
                    },
                    {
                        "x_data": "14 October 2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "16 August 2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "18 May 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "22 September 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "31 October 2008",
                        "y_data": 3
                    },
                    {
                        "x_data": "31 October 2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "7 July 2011",
                        "y_data": 1
                    },
                    {
                        "x_data": "8 August 2009",
                        "y_data": 1
                    },
                    {
                        "x_data": "9 December 2007",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart about the number of end dates for incidents with incident type code \"NOISE\" and bin by month, could you show by the y-axis from high to low please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mar",
                        "y_data": 5
                    },
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_end",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_end)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Give me a bar chart for the total number of each dept name, and sort from low to high by the bar.",
            "Find the total number of students in each department Show bar chart, and I want to show by the X-axis from low to high.",
            "How many students are in each department Plot them as bar chart, and order by the x axis from low to high.",
            "Visualize a bar chart for how many students are in each department?, and sort from low to high by the bar.",
            "how many students are in each department?, order X from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 99
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 106
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 92
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 120
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 108
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 86
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 98
                    },
                    {
                        "x_data": "English",
                        "y_data": 95
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 97
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 92
                    },
                    {
                        "x_data": "History",
                        "y_data": 117
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 119
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 85
                    },
                    {
                        "x_data": "Math",
                        "y_data": 91
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 105
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 96
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 109
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 100
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 85
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artwork"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            "",
            "Show the total number from each type"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Presenter Music/Variety Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Presenter Talent Show",
                        "y_data": 2
                    },
                    {
                        "x_data": "Program Music/Variety Show",
                        "y_data": 3
                    },
                    {
                        "x_data": "Program Talent Show",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" Plot them as bar chart, order total number in asc order.",
            "Show the ids and details of the investors who have at least two transactions with type code \"SALE\" by a bar chart, and could you rank from low to high by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "investor_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "What is the lowest price of product, grouped by product type? Show a bar chart.",
            "Give the minimum product price for each product type in a bar chart.",
            "Draw a bar chart of product type code versus minimal product price"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 408.82
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "Show me total number of vote id by state in a histogram, and rank y axis in ascending order.",
            "List the states of all votes, compute the total number of states, and sum their vote id with a bar chart, and display sum vote id in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 3
                    },
                    {
                        "x_data": "NY",
                        "y_data": 3
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(vote_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather",
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the id and local authority of the station whose maximum precipitation is higher than 50. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chiltern",
                        "y_data": 1
                    },
                    {
                        "x_data": "Watford",
                        "y_data": 2
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 3
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 4
                    },
                    {
                        "x_data": "Three Rivers",
                        "y_data": 10
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "local_authority"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition",
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "how many exhibitions has each artist had?, and rank in descending by the Y.",
            "Show all artist names and the number of exhibitions for each artist in a bar chart, I want to order in descending by the total number.",
            "How many exhibitions has each artist had Plot them as bar chart, and display from high to low by the Y-axis.",
            "Show all artist names and the number of exhibitions for each artist Show bar chart, and display by the Y-axis in descending please.",
            "Return a histogram on how many exhibitions has each artist had?, and rank in descending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vijay Singh",
                        "y_data": 2
                    },
                    {
                        "x_data": "Paul Azinger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nick Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Daly",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jeff Sluman",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Return a histogram on what is the average high temperature for each day of week?, display in asc by the total number.",
            "Draw a bar chart for what is the average high temperature for each day of week?, and sort from low to high by the total number please.",
            "Bar graph to show the average of high temperature from different day of week, and could you show y axis in ascending order?",
            "What is the average high temperature for each day of week Plot them as bar chart, I want to sort in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sunday",
                        "y_data": 54
                    },
                    {
                        "x_data": "Friday",
                        "y_data": 55
                    },
                    {
                        "x_data": "Saturday",
                        "y_data": 55
                    },
                    {
                        "x_data": "Monday",
                        "y_data": 56
                    },
                    {
                        "x_data": "Thursday",
                        "y_data": 57
                    },
                    {
                        "x_data": "Tuesday",
                        "y_data": 58
                    },
                    {
                        "x_data": "Wednesday",
                        "y_data": 58
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "day_of_week",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(high_temperature)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Parts",
            "Part_Faults"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Which parts have more than 2 faults? Show the part name and id in a bar chart, and show x axis in asc order.",
            "which parts have more than 2 faults? Show the part name and id, I want to order by the x axis in ascending.",
            "Which parts have more than 2 faults? Show the part name and id Plot them as bar chart, list in asc by the names.",
            "Give me a histogram for which parts have more than 2 faults? Show the part name and id, and rank X-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "package",
                        "y_data": 3
                    },
                    {
                        "x_data": "top",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "part_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "part_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "climber",
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "Show the number of climbers for each mountain in a pie chart.",
            "What is the number of climbers for each mountain? Show me a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duwoni / Mt Speke (Vittorio Emanuele Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kibo (Uhuru Pk)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mawenzi (Hans Meyer Pk)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mount Kenya (Batian)",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mount Kenya (Lenana)",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the headquarter , and group by attribute headquarter by a bar chart, and could you order x axis in desc order?",
            "For those records from the products and each product's manufacturer, show me about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter in a bar chart, and display Headquarter from high to low order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and display Headquarter from high to low order please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and display Headquarter from high to low order please.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of manufacturer , and group by attribute headquarter, and list by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a bar chart for simply show the department of the employee and the corresponding salary, and display in descending by the DEPARTMENT_NAME please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shipping",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Sales",
                        "y_data": 14000
                    },
                    {
                        "x_data": "Purchasing",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Public Relations",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 13000
                    },
                    {
                        "x_data": "IT",
                        "y_data": 9000
                    },
                    {
                        "x_data": "Human Resources",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Executive",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Administration",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPARTMENT_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, and show from high to low by the total number of employee id.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, list total number of employee id from high to low order.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday, list total number of employee id from high to low order.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, could you order by the y-axis in desc?",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, could you sort total number in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 2326
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2310
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2233
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2149
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2079
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1963
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Find the number of people who is under 40 for each gender.",
            "Draw a bar chart for how many people are under 40 for each gender?",
            "How many people are under 40 for each gender. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "female",
                        "y_data": 2
                    },
                    {
                        "x_data": "male",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather",
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Count those days and in which zip code was the min dew point lower than any day in zip code 94107 using a bar graph, order by the total number from high to low.",
            "For days had a minimum dew point smaller than any day in zip code 94107, show the total number of such days using a bar chart, could you sort by the Y in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013-12-20",
                        "y_data": 2
                    },
                    {
                        "x_data": "2014-12-31",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each office in a bar chart, and could you list by the y axis from low to high?",
            "How many courses for each office? Show me a bar chart, and display y-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BBG 208",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many dorms are there for each gender? Show me a bar chart, and display in descending by the x axis.",
            "Bar chart x axis gender y axis the total number, I want to show by the x axis from high to low please.",
            "Find the number of dorms for each gender in a bar chart, I want to show by the x axis from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "X",
                        "y_data": 5
                    },
                    {
                        "x_data": "M",
                        "y_data": 1
                    },
                    {
                        "x_data": "F",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product type code in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Clothes",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hardware",
                        "y_data": 8
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_type_code)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_type_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Draw a bar chart for what are the average prices of products, grouped by manufacturer name?, and I want to rank x-axis in ascending order.",
            "A bar chart about what are the average prices of products, grouped by manufacturer name?, and show by the bars in asc.",
            "What are the average prices of products, grouped by manufacturer name, and rank bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between price and revenue .",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and revenue .",
            "For those records from the products and each product's manufacturer, visualize the relationship between price and revenue .",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between price and revenue .",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and revenue ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 240,
                        "y_data": 130
                    },
                    {
                        "x_data": 120,
                        "y_data": 30
                    },
                    {
                        "x_data": 150,
                        "y_data": 200
                    },
                    {
                        "x_data": 5,
                        "y_data": 30
                    },
                    {
                        "x_data": 240,
                        "y_data": 120
                    },
                    {
                        "x_data": 180,
                        "y_data": 100
                    },
                    {
                        "x_data": 90,
                        "y_data": 100
                    },
                    {
                        "x_data": 270,
                        "y_data": 50
                    },
                    {
                        "x_data": 66,
                        "y_data": 50
                    },
                    {
                        "x_data": 180,
                        "y_data": 100
                    },
                    {
                        "x_data": 150,
                        "y_data": 50
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each film, return the number of cinemas showing that fim in a bar chart, and I want to order by the the number of title in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Case of the Bermuda Triangle",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Piggy Banker",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Smart Dummy",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case: Off the Record",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Case of the Mystery Weekend",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Use a histogram to show the department's id and corresponding employees' first name, list from high to low by the FIRST_NAME.",
            "Show me department_id by first name in a histogram, order by the bar from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Susan",
                        "y_data": 40
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 90
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 110
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 100
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 20
                    },
                    {
                        "x_data": "John",
                        "y_data": 80
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 10
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 70
                    },
                    {
                        "x_data": "Den",
                        "y_data": 30
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 60
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "gymnast",
            "people"
        ],
        "db_id": "gymnast",
        "nl_queries": [
            "Show me a bar chart for how many gymnasts are from each hometown?, could you sort by the Y-axis from high to low?",
            "How many gymnasts are from each hometown Plot them as bar chart, and I want to rank y-axis in desc order.",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, display in descending by the Y-axis.",
            "Return a bar chart on how many gymnasts are from each hometown?, could you sort by the Y-axis from high to low?",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts, display in descending by the the total number .",
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, and could you sort by the Y-axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Santo Domingo",
                        "y_data": 4
                    },
                    {
                        "x_data": "Santiago de los Caballeros",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Alcarrizos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bonao",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the number of delegates in each committee with a bar chart.",
            "How many delegates in each committee? Return a bar chart.",
            "Show how many committee from each committee"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Appropriations",
                        "y_data": 3
                    },
                    {
                        "x_data": "Economic Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters",
                        "y_data": 1
                    },
                    {
                        "x_data": "Environmental Matters (Vice-Chair)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Health and Government Operations",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ways and Means",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Committee",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Committee)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of code , and group by attribute founder, and could you order by the X-axis in desc?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of code , and group by attribute founder, could you rank from high to low by the Founder?",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder by a bar chart, and show x axis in desc order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of code over the founder , and group by attribute founder, and show Founder in desc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of code , and group by attribute founder in a bar chart, I want to sort by the Founder in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 3
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 7.666666666666667
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 9.333333333333334
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Payments"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all payment methods and number of payments using each payment methods Plot them as bar chart, display by the y axis from low to high please.",
            "List all payment methods and number of payments using each payment methods by a bar chart, rank from low to high by the y axis.",
            "For each payment method, how many payments were made Show bar chart, sort Y in ascending order.",
            "Show the total number from each payment method code, and I want to show y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit Card",
                        "y_data": 5
                    },
                    {
                        "x_data": "Direct Debit",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many engineers does each staff contact? Show a bar chart, and order Y-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christophe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cyrus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oren",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rodger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Berneice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bernice",
                        "y_data": 2
                    },
                    {
                        "x_data": "Edmond",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kadin",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "staff_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(staff_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between price and manufacturer , and group by attribute name.",
            "For those records from the products and each product's manufacturer, show me about the correlation between price and manufacturer , and group by attribute name in a scatter chart.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and manufacturer , and group by attribute name.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between price and manufacturer , and group by attribute name.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and manufacturer , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 90,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": 240,
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": 270,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 66,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 150,
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": 150,
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": 240,
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": 120,
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": 5,
                        "y_data": 6,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "What is the lowest student GPA for every department? Return a bar chart, show in asc by the y axis.",
            "Bar chart x axis dept code y axis minimal stu gpa, I want to rank in ascending by the y axis.",
            "Find the minimum gpa of all students in each department with a bar chart, list by the Y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    },
                    {
                        "x_data": "ACCT",
                        "y_data": 2.26
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.09
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, rank in ascending by the total number please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, order in asc by the y-axis.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, I want to sort Y-axis from low to high order.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday, order in asc by the y-axis.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, rank y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 1963
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2079
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2149
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2233
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2295
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2310
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2326
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about manager_id over hire_date with a line chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of manager_id over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of manager_id over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of manager_id over hire_date",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of manager_id over hire_date .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, for manager_id, hire_date, visualize the trend."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Research_outcomes",
            "Project_outcomes"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "List the number of the description of the outcomes for all projects, and list in desc by the the number of outcome description.",
            "List the description of the outcomes for all projects, and count them by a bar chart, could you list from high to low by the Y-axis?",
            "What are the number of the descriptions of all the project outcomes?, and could you list y-axis in desc order?",
            "A bar chart for what are the number of the descriptions of all the project outcomes?, and show Y-axis from high to low order.",
            "What are the descriptions of all the project outcomes, and count them by a bar chart, and could you list from high to low by the Y-axis?",
            "A bar chart for listing the number of the description of the outcomes for all projects, rank in desc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Published Research Paper",
                        "y_data": 10
                    },
                    {
                        "x_data": "Research Patent",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "outcome_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(outcome_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the number of debates for each person on the affirmative side in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "What are the ids and details of events that have more than one participants, and order by the total number in desc.",
            "A bar chart about what are the ids and details of events that have more than one participants?, and I want to show from high to low by the Y please.",
            "Show me a bar chart for what are the ids and details of events that have more than one participants?, and display from high to low by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Success",
                        "y_data": 83
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 70
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Draw a bar chart about the distribution of password and author_tutor_ATB .",
            "Find password and author_tutor_ATB , and visualize them by a bar chart.",
            "Return a bar chart about the distribution of password and author_tutor_ATB .",
            "Give me the comparison about author_tutor_ATB over the password .",
            "Visualize a bar chart about the distribution of password and author_tutor_ATB ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "e96c0bcbbbb14747747a56ff4c17354f343a5b4f",
                        "y_data": 817
                    },
                    {
                        "x_data": "c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b",
                        "y_data": 331
                    },
                    {
                        "x_data": "4f149f75ecd84afcdf27343509cdd03d81edb119",
                        "y_data": 229
                    },
                    {
                        "x_data": "cdaf6c3483f19e2253659a40a3aab786a3390f78",
                        "y_data": 349
                    },
                    {
                        "x_data": "b517a107b5f08fafe9628e88e7263a6f3a4a55c0",
                        "y_data": 159
                    },
                    {
                        "x_data": "120ac8a5744f5b710ecaebbd8dd1633e3e33886e",
                        "y_data": 833
                    },
                    {
                        "x_data": "4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3",
                        "y_data": 505
                    },
                    {
                        "x_data": "d34378200c9b5f72d3039fa640e7920aaec0fdf2",
                        "y_data": 782
                    },
                    {
                        "x_data": "02d64f11de97436343a0beba41bfcf69af61be1e",
                        "y_data": 557
                    },
                    {
                        "x_data": "3e2f7bf1e6acf0d616a8703ee0050fba13bc007f",
                        "y_data": 869
                    },
                    {
                        "x_data": "6b9979a83b4a9e03ead034c8de47f1b013a3d3af",
                        "y_data": 613
                    },
                    {
                        "x_data": "24b0ee84063c3b017ab1839e01b7280f47f7c7c2",
                        "y_data": 975
                    },
                    {
                        "x_data": "6d587cec8006e3a40565e1dad2c5b5b12b475b8f",
                        "y_data": 974
                    },
                    {
                        "x_data": "a48e25a58b3088e9cfdaca61130555ed2c772452",
                        "y_data": 847
                    },
                    {
                        "x_data": "2c196efe8aee23a1b9a7e752fe63029c5879af6f",
                        "y_data": 388
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "password",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "author_tutor_ATB"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers_cards"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between customer id and card number with a scatter chart.",
            "What is the relationship between customer id and card number? Return a scatter chart.",
            "Plot a scatter chart, customer id by card_number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 14,
                        "y_data": 4560596484842
                    },
                    {
                        "x_data": 9,
                        "y_data": 4859448397570735
                    },
                    {
                        "x_data": 6,
                        "y_data": 348237249146948
                    },
                    {
                        "x_data": 15,
                        "y_data": 4485460762694
                    },
                    {
                        "x_data": 13,
                        "y_data": 5122249720639438
                    },
                    {
                        "x_data": 10,
                        "y_data": 5102229294602335
                    },
                    {
                        "x_data": 9,
                        "y_data": 4716674779726
                    },
                    {
                        "x_data": 12,
                        "y_data": 6011225247353230
                    },
                    {
                        "x_data": 3,
                        "y_data": 4929590358481
                    },
                    {
                        "x_data": 10,
                        "y_data": 4532488235104
                    },
                    {
                        "x_data": 8,
                        "y_data": 4707949584519
                    },
                    {
                        "x_data": 3,
                        "y_data": 4929896676202959
                    },
                    {
                        "x_data": 2,
                        "y_data": 5484846021884483
                    },
                    {
                        "x_data": 5,
                        "y_data": 4929384762825
                    },
                    {
                        "x_data": 2,
                        "y_data": 345475370003028
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "customer_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "card_number"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "A bar chart about what are the nationalities and their average ages of journalists?, and rank X-axis from high to low order please.",
            "Draw a bar chart of nationality versus the average of age, list from high to low by the bars.",
            "What are the nationalities and their average ages of journalists Show me a bar chart, order in descending by the names.",
            "Visualize a bar chart for what are the nationalities and their average ages of journalists?, and I want to show from high to low by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "England",
                        "y_data": 34.22222222222222
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SALES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "For the dates of transactions with amount smaller than 3000, bin the date into year interval, and draw a line chart to show the trend of the number of records in each bin."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 1
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 2
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2002",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "Bar graph to show the number of investor from different investor, rank by the bars from low to high.",
            "Show the number of companies each investor has invested with a bar chart, show by the X from low to high.",
            "How many companies each investor has invested? Show me a bar chart, and show by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor)"
                }
            }
        }
    },
    {
        "tables_used": [
            "camera_lens",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "A bar chart for what are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, list in asc by the x-axis.",
            "What are the number of the names of photos taken with the lens brand 'Sigma' or 'Olympus'?, could you list by the name in ascending?",
            "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus', and count them by a bar chart, sort by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Olympus 15mm f/8.0 Body Cap",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sigma 19mm f2.8 EX DN",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Bar graph to show the number of document type description from different document type description, and I want to list in descending by the x axis.",
            "Show the number of document type for different document type description in a bar chart, and I want to order x axis in desc order.",
            "How many document type for different document type description? Visualize with a bar chart, display Document_Type_Description from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "very good",
                        "y_data": 1
                    },
                    {
                        "x_data": "good",
                        "y_data": 1
                    },
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "excellent",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Which ministers are not a part of the Progress Party, and count them by a bar chart",
            "Show all ministers who do not belong to Progress Party, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dr. Kwame Nkrumah (MP)",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ebenezer Ako-Adjei (MP)",
                        "y_data": 2
                    },
                    {
                        "x_data": "Imoru Egala (MP)",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Minister",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Minister)"
                }
            }
        }
    },
    {
        "tables_used": [
            "screen_mode",
            "phone"
        ],
        "db_id": "phone_1",
        "nl_queries": [
            "Compare the number of chips from different company names for the phone whose screen mode type is \"Graphics\" with a bar chart, list in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Samsung Electronics Co Ltd",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nokia Corporation",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony Mobile Communications",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Company_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "user_profiles",
            "tweets"
        ],
        "db_id": "twitter_1",
        "nl_queries": [
            "Find the name and partition id for users who tweeted less than twice Show bar chart, and could you sort by the total number in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tyler Swift",
                        "y_data": 10
                    },
                    {
                        "x_data": "Black Widow\n",
                        "y_data": 23
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "partitionid"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Does it have something interesting about the employee id and the salary? First show me a scatter chart.",
            "Scatter chart for employee id and their salaries."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 100,
                        "y_data": 24000
                    },
                    {
                        "x_data": 103,
                        "y_data": 9000
                    },
                    {
                        "x_data": 108,
                        "y_data": 12000
                    },
                    {
                        "x_data": 114,
                        "y_data": 11000
                    },
                    {
                        "x_data": 121,
                        "y_data": 8200
                    },
                    {
                        "x_data": 145,
                        "y_data": 14000
                    },
                    {
                        "x_data": 200,
                        "y_data": 4400
                    },
                    {
                        "x_data": 201,
                        "y_data": 13000
                    },
                    {
                        "x_data": 203,
                        "y_data": 6500
                    },
                    {
                        "x_data": 204,
                        "y_data": 10000
                    },
                    {
                        "x_data": 205,
                        "y_data": 12000
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Show different carriers of phones together with the number of phones with each carrier by a pie chart.",
            "Show different carriers of phones together with the number of phones with each carrier.",
            "I want to know the proportion of the total number for each carrier."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 2
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier"
                }
            }
        }
    },
    {
        "tables_used": [
            "payment",
            "payment",
            "staff"
        ],
        "db_id": "sakila_1",
        "nl_queries": [
            "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa, and count them by a bar chart, I want to sort by the y axis in ascending.",
            "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa, and count them by a bar chart, and order by the total number from low to high please.",
            "What are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, and rank by the y-axis in ascending.",
            "A bar chart for what are the number of the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?, I want to sort by the y axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 12
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 15
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 16
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 16
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 19
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, and could you rank x axis in asc order?",
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, rank by the X in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Athletics",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 4
                    },
                    {
                        "x_data": "History",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Return the number of booking start date for the apartments that have type code \"Duplex\" for each year in a bar chart, could you show by the total number from high to low please?",
            "What is the number of booking start dates of the apartments with type code \"Duplex\" in each year? Return a bar chart, list by the how many booking start date in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 6
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Faculty",
            "Student"
        ],
        "db_id": "activity_1",
        "nl_queries": [
            "how many students are advised by each rank of faculty? List the rank and the number of students, order by the the total number from high to low.",
            "Show me a bar chart for how many students are advised by each rank of faculty? List the rank and the number of students, display by the Y in desc.",
            "Show all the faculty ranks and the number of students advised by each rank Visualize by bar chart, and sort in desc by the the total number .",
            "How many students are advised by each rank of faculty? List the rank and the number of students in a bar chart, sort in desc by the the total number .",
            "Show all the faculty ranks and the number of students advised by each rank in a bar chart, rank by the total number from high to low.",
            "How many students are advised by each rank of faculty? List the rank and the number of students Plot them as bar chart, and display by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AsstProf",
                        "y_data": 18
                    },
                    {
                        "x_data": "Professor",
                        "y_data": 14
                    },
                    {
                        "x_data": "AssocProf",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "How many products are there for each manufacturer Visualize by bar chart, list in desc by the X.",
            "Find the number of products for each manufacturer, showing the name of each company Show bar chart, display by the bar in desc.",
            "how many products are there for each manufacturer?, display in desc by the bar.",
            "Display a bar chart for how many products are there for each manufacturer?, I want to rank by the X-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 1
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faults for different fault short name, order by the bar in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MW",
                        "y_data": 5
                    },
                    {
                        "x_data": "PW",
                        "y_data": 7
                    },
                    {
                        "x_data": "TW",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_short_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_short_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, could you display X in descending order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, could you show in desc by the X-axis please?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and list by the x-axis in desc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, show X-axis from high to low order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and rank X-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.5
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 201
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 101.5
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 200
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party_events",
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "Show party names and the number of events for each party in a bar chart.",
            "Show party names and the number of events for each party.",
            "Return a bar chart on how many events are there for each party?",
            "Give me a histogram for how many events are there for each party?",
            "How many events are there for each party."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convention Peoples Party",
                        "y_data": 3
                    },
                    {
                        "x_data": "Progress Party",
                        "y_data": 2
                    },
                    {
                        "x_data": "3",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games for each home team in a bar chart, and could you show X in desc order?",
            "Show me how many home team by home team in a histogram, rank from high to low by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Bar chart of acc_percent from each all neutral, and display by the Y-axis in descending.",
            "Return a bar chart about the distribution of All_Neutral and ACC_Percent , I want to display from high to low by the total number.",
            "Visualize a bar chart about the distribution of All_Neutral and ACC_Percent , and display from high to low by the ACC_Percent.",
            "Show me about the distribution of All_Neutral and ACC_Percent in a bar chart, rank by the total number in desc.",
            "A bar chart shows the distribution of All_Neutral and ACC_Percent , display from high to low by the ACC_Percent.",
            "Give me the comparison about ACC_Percent over the All_Neutral , and rank by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "9\u20131",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "5\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "4\u20133",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "3\u20133",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Neutral",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between price and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, visualize the relationship between price and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between price and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between price and manufacturer , and group by attribute founder.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between price and manufacturer , and group by attribute founder."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 240,
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": 270,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 66,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 150,
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": 240,
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": 150,
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 90,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 180,
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": 120,
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": 5,
                        "y_data": 6,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Price",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "A bar chart about how many different locations does each school have?, and sort from high to low by the Y-axis.",
            "Count different addresses of each school with a bar chart, display in desc by the total number.",
            "Count different addresses of each school Show bar chart, sort from high to low by the Y-axis.",
            "Draw a bar chart for how many different locations does each school have?, and sort from high to low by the Y-axis.",
            "How many different locations does each school have Show bar chart, sort from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A&SCI",
                        "y_data": 7
                    },
                    {
                        "x_data": "BUS",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "SCHOOL_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT dept_address)"
                }
            }
        }
    },
    {
        "tables_used": [
            "exhibition_record",
            "exhibition"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Find dates and attendance for exhibitions that happened in 2004, show me the proportion of attendance by date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "December 2",
                        "y_data": 965
                    },
                    {
                        "x_data": "December 5",
                        "y_data": 1098
                    },
                    {
                        "x_data": "December 7",
                        "y_data": 2983
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Attendance"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Course_Enrolment",
            "Students"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the student ID and personal name of the student with at least two enrollments, and could you display in ascending by the y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Marshall",
                        "y_data": 8
                    },
                    {
                        "x_data": "Alicia",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cary",
                        "y_data": 14
                    },
                    {
                        "x_data": "Eliza",
                        "y_data": 15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "personal_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "student_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a scatter chart about the correlation between salary and department_id .",
            "For those employees who was hired before 2002-06-21, what is the relationship between salary and department_id ?",
            "For those employees who was hired before 2002-06-21, a scatter chart shows the correlation between salary and department_id .",
            "For those employees who was hired before 2002-06-21, show me about the correlation between salary and department_id in a scatter chart.",
            "For those employees who was hired before 2002-06-21, draw a scatter chart about the correlation between salary and department_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 24000,
                        "y_data": 90
                    },
                    {
                        "x_data": 17000,
                        "y_data": 90
                    },
                    {
                        "x_data": 17000,
                        "y_data": 90
                    },
                    {
                        "x_data": 9000,
                        "y_data": 60
                    },
                    {
                        "x_data": 6000,
                        "y_data": 60
                    },
                    {
                        "x_data": 4800,
                        "y_data": 60
                    },
                    {
                        "x_data": 4800,
                        "y_data": 60
                    },
                    {
                        "x_data": 4200,
                        "y_data": 60
                    },
                    {
                        "x_data": 12000,
                        "y_data": 100
                    },
                    {
                        "x_data": 9000,
                        "y_data": 100
                    },
                    {
                        "x_data": 8200,
                        "y_data": 100
                    },
                    {
                        "x_data": 7700,
                        "y_data": 100
                    },
                    {
                        "x_data": 7800,
                        "y_data": 100
                    },
                    {
                        "x_data": 6900,
                        "y_data": 100
                    },
                    {
                        "x_data": 11000,
                        "y_data": 30
                    },
                    {
                        "x_data": 3100,
                        "y_data": 30
                    },
                    {
                        "x_data": 2900,
                        "y_data": 30
                    },
                    {
                        "x_data": 2800,
                        "y_data": 30
                    },
                    {
                        "x_data": 2600,
                        "y_data": 30
                    },
                    {
                        "x_data": 2500,
                        "y_data": 30
                    },
                    {
                        "x_data": 8000,
                        "y_data": 50
                    },
                    {
                        "x_data": 8200,
                        "y_data": 50
                    },
                    {
                        "x_data": 7900,
                        "y_data": 50
                    },
                    {
                        "x_data": 6500,
                        "y_data": 50
                    },
                    {
                        "x_data": 5800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2700,
                        "y_data": 50
                    },
                    {
                        "x_data": 2400,
                        "y_data": 50
                    },
                    {
                        "x_data": 2200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3300,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3300,
                        "y_data": 50
                    },
                    {
                        "x_data": 2900,
                        "y_data": 50
                    },
                    {
                        "x_data": 2400,
                        "y_data": 50
                    },
                    {
                        "x_data": 2200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3600,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2700,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 3500,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 14000,
                        "y_data": 80
                    },
                    {
                        "x_data": 13500,
                        "y_data": 80
                    },
                    {
                        "x_data": 12000,
                        "y_data": 80
                    },
                    {
                        "x_data": 11000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10500,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 7500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8000,
                        "y_data": 80
                    },
                    {
                        "x_data": 7500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 80
                    },
                    {
                        "x_data": 10500,
                        "y_data": 80
                    },
                    {
                        "x_data": 9500,
                        "y_data": 80
                    },
                    {
                        "x_data": 7200,
                        "y_data": 80
                    },
                    {
                        "x_data": 6800,
                        "y_data": 80
                    },
                    {
                        "x_data": 6400,
                        "y_data": 80
                    },
                    {
                        "x_data": 6200,
                        "y_data": 80
                    },
                    {
                        "x_data": 11500,
                        "y_data": 80
                    },
                    {
                        "x_data": 10000,
                        "y_data": 80
                    },
                    {
                        "x_data": 9600,
                        "y_data": 80
                    },
                    {
                        "x_data": 7400,
                        "y_data": 80
                    },
                    {
                        "x_data": 7300,
                        "y_data": 80
                    },
                    {
                        "x_data": 6100,
                        "y_data": 80
                    },
                    {
                        "x_data": 11000,
                        "y_data": 80
                    },
                    {
                        "x_data": 8800,
                        "y_data": 80
                    },
                    {
                        "x_data": 8600,
                        "y_data": 80
                    },
                    {
                        "x_data": 8400,
                        "y_data": 80
                    },
                    {
                        "x_data": 7000,
                        "y_data": 0
                    },
                    {
                        "x_data": 6200,
                        "y_data": 80
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 4200,
                        "y_data": 50
                    },
                    {
                        "x_data": 4100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3400,
                        "y_data": 50
                    },
                    {
                        "x_data": 3000,
                        "y_data": 50
                    },
                    {
                        "x_data": 3800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2900,
                        "y_data": 50
                    },
                    {
                        "x_data": 2500,
                        "y_data": 50
                    },
                    {
                        "x_data": 4000,
                        "y_data": 50
                    },
                    {
                        "x_data": 3900,
                        "y_data": 50
                    },
                    {
                        "x_data": 3200,
                        "y_data": 50
                    },
                    {
                        "x_data": 2800,
                        "y_data": 50
                    },
                    {
                        "x_data": 3100,
                        "y_data": 50
                    },
                    {
                        "x_data": 3000,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 2600,
                        "y_data": 50
                    },
                    {
                        "x_data": 4400,
                        "y_data": 10
                    },
                    {
                        "x_data": 13000,
                        "y_data": 20
                    },
                    {
                        "x_data": 6000,
                        "y_data": 20
                    },
                    {
                        "x_data": 6500,
                        "y_data": 40
                    },
                    {
                        "x_data": 10000,
                        "y_data": 70
                    },
                    {
                        "x_data": 12000,
                        "y_data": 110
                    },
                    {
                        "x_data": 8300,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "SALARY"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "How many flights with price higher than 300 for each destination city? Return a bar chart, I want to show X-axis from high to low order.",
            "A bar chart showing the number of flights with price higher than 300 for each destination city, could you display in descending by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "Show all the actual delivery dates and bin by weekday in a bar chart.",
            "Give me a bar chart for how many actual delivery date of each actual delivery date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Actual_Delivery_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Actual_Delivery_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "has_pet"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "What are the different first names and ages of the students who do have pets Visualize by bar chart, and display Y from high to low order.",
            "Give me a histogram for what are the different first names and ages of the students who do have pets?, could you sort by the Y-axis in desc?",
            "Draw a bar chart for what are the different first names and ages of the students who do have pets?, and order by the Y in desc.",
            "Find the first name and age of students who have a pet, display Age from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tracy",
                        "y_data": 19
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 18
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "mailshot_campaigns"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show all distinct product categories along with the number of mailshots in each category Visualize by bar chart, and could you sort in ascending by the x-axis please?",
            "Show all distinct product categories along with the number of mailshots in each category in a bar chart, I want to sort in asc by the x-axis.",
            "Show me the total number by product category in a histogram, and I want to sort in asc by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "clothes",
                        "y_data": 9
                    },
                    {
                        "x_data": "food",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the maximum weight for each type of pet. List the maximum weight and pet type. Visualize by bar chart.",
            "List the maximum weight and type for each type of pet with a bar chart.",
            "List the maximum weight and type for each type of pet.",
            "Bar graph to show maximal weight from different pettype"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 12
                    },
                    {
                        "x_data": "dog",
                        "y_data": 13.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Bar chart x axis away team y axis the number of away team, sort by the bars in asc.",
            "Show the number of games for each away team in a bar chart, and I want to sort by the X in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the average of revenue , and group by attribute founder in a bar chart, rank by the total number in descending.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of revenue , and group by attribute founder, I want to order the average of revenue in desc order.",
            "For those records from the products and each product's manufacturer, find founder and the average of revenue , and group by attribute founder, and visualize them by a bar chart, show by the y-axis from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder by a bar chart, list y-axis in descending order please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of revenue over the founder , and group by attribute founder, I want to order the average of revenue in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal",
            "journal",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, and list x-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baltimore Ravens",
                        "y_data": 6532
                    },
                    {
                        "x_data": "Cleveland Browns",
                        "y_data": 3798
                    },
                    {
                        "x_data": "Green Bay Packers",
                        "y_data": 2804
                    },
                    {
                        "x_data": "Jacksonville Jaguars",
                        "y_data": 1232
                    },
                    {
                        "x_data": "Miami Dolphins",
                        "y_data": 798
                    },
                    {
                        "x_data": "Tampa Bay Buccaneers",
                        "y_data": 4798
                    },
                    {
                        "x_data": "at Cincinnati Bengals",
                        "y_data": 3421
                    },
                    {
                        "x_data": "at Oakland Raiders",
                        "y_data": 1934
                    },
                    {
                        "x_data": "at Pittsburgh Steelers",
                        "y_data": 1763
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Theme",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Sales"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain",
            "photos"
        ],
        "db_id": "mountain_photos",
        "nl_queries": [
            "Pie. what are the id and name of the mountains that have at least 2 photos?",
            "Draw a pie chart for what are the id and name of the mountains that have at least 2 photos?",
            "What are the id and name of the mountains that have at least 2 photos. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mount Cameroon",
                        "y_data": 12
                    },
                    {
                        "x_data": "Ighil Mgoun",
                        "y_data": 14
                    },
                    {
                        "x_data": "Taska n\u2019Zat",
                        "y_data": 20
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "department)"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "How many departments whose budget is more than the average budget in each building? Show me a bar chart, and order X from low to high order please.",
            "Give the number of departments with greater than average budget in each building with a bar chart, and sort by the bar in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brodhead",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bronfman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Candlestick",
                        "y_data": 2
                    },
                    {
                        "x_data": "Linderman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Palmer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Taylor",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thompson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Whitman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wrigley",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "building",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(building)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the sum of department_id over the job_id , and group by attribute job_id, and could you rank Y-axis from low to high order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and sort total number in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of job_id and the sum of department_id , and group by attribute job_id, and rank y-axis in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, and show Y in asc order.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of job_id and the sum of department_id , and group by attribute job_id, list y axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_ASST",
                        "y_data": 10
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 20
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 30
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 150
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 180
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 250
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 300
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 400
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 500
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 1000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 2320
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "catalogs",
            "catalog_structure"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Find the names and publication dates of all catalogs that have catalog level number greater than 5. Bin publication dates into Year interval, and count catalog and group by catalog name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2011",
                        "y_data": 1,
                        "classify": "Coffee Bean"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "Coffee Bean"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 2,
                        "classify": "Jam"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "Jam"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_publication",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_publication)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the employee's last name and their department's id using a bar chart, sort total number in asc order.",
            "Bar graph to show department_id from different last name, and order in asc by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whalen",
                        "y_data": 10
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 20
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 30
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 40
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 50
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 60
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 70
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 80
                    },
                    {
                        "x_data": "King",
                        "y_data": 90
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 100
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "races"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, display in desc by the X-axis.",
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and order in descending by the X please.",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, I want to order from high to low by the x axis.",
            "What are the number of the names of races held between 2009 and 2011?, and display by the bars in descending.",
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, I want to order from high to low by the x axis.",
            "What are the number of the names of all races held between 2009 and 2011?, and I want to display by the names from high to low please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Turkish Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spanish Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Singapore Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monaco Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Malaysian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Korean Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Japanese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Indian Grand Prix",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hungarian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "German Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "European Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chinese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Canadian Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "British Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brazilian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Belgian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Bahrain Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Australian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Abu Dhabi Grand Prix",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "A line chart for what are the number of the distinct visit dates?",
            "What are the number of the distinct visit dates?",
            "What are the distinct visit dates, and count them by a line chart",
            "Find all the distinct visit dates, and count them by a line chart",
            "Show me a line chart of how the number of visit date change over the visit date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1971~1975",
                        "y_data": 2
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 3
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 3
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 4
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2016~2018",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Visit_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Visit_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member_attendance",
            "member",
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Show the number of the dates of performances with attending members whose roles are \"Violin\", rank Y-axis in descending order.",
            "Show the dates of performances with attending members whose roles are \"Violin\", and count them by a bar chart, and order in desc by the how many date.",
            "A bar chart for showing the number of the dates of performances with attending members whose roles are \"Violin\", show by the total number in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "February 2",
                        "y_data": 2
                    },
                    {
                        "x_data": "February 5",
                        "y_data": 1
                    },
                    {
                        "x_data": "February 11",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, I want to rank All_Home in ascending order.",
            "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and display in asc by the x-axis.",
            "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, and rank x-axis from low to high order.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, and list from low to high by the All_Home please.",
            "Stack bar chart of team_id vs ACC_Home based on all home, and display by the x axis in asc.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, and I want to rank All_Home in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Facilities",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the facility codes of apartments with more than 4 bedrooms, and count them by a bar chart, and I want to list by the bars from low to high.",
            "A bar chart for showing the number of the facility codes of apartments with more than 4 bedrooms, and I want to display in ascending by the facility_code.",
            "A bar chart for what are the number of the facility codes of the apartments with more than four bedrooms?, I want to list by the bars from low to high.",
            "What are the facility codes of the apartments with more than four bedrooms, and count them by a bar chart, and I want to display in ascending by the facility_code.",
            "Show the number of the facility codes of apartments with more than 4 bedrooms, and I want to rank in ascending by the X.",
            "What are the number of the facility codes of the apartments with more than four bedrooms?, could you sort by the bars in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cable TV",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gym",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "facility_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(facility_code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "countrylanguage"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a pie chart",
            "What is the official language spoken in the country whose head of state is Beatrix, and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dutch",
                        "y_data": 3
                    },
                    {
                        "x_data": "Papiamento",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Language)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, order by the lot_details in ascending.",
            "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, display by the X in asc.",
            "Return the number of the lot details of lots that belong to investors with details \"l\"?, and order by the lot_details in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "z",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a line chart about the change of manager_id over hire_date , and show in descending by the X.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, for manager_id, hire_date, visualize the trend, and I want to display by the x axis from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a line chart about the change of manager_id over hire_date , list in desc by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a line chart about the change of manager_id over hire_date , and show X from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me the trend about manager_id over hire_date with a line chart, and show X from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a line chart shows the change of manager_id over hire_date, and could you show in desc by the x axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-10-01",
                        "y_data": 205
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 101
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 201
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 149
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the number of heads of departments born in each state with a bar chart, list by the x axis in desc please.",
            "Show me the number of born state by born state in a histogram, display in desc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Florida",
                        "y_data": 1
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 1
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 2
                    },
                    {
                        "x_data": "California",
                        "y_data": 4
                    },
                    {
                        "x_data": "Alabama",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(born_state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many sections does each course has Visualize by bar chart, and rank y axis in descending order.",
            "how many sections does each course has?, list by the Y in desc.",
            "How many sections does each course have Visualize by bar chart, and list the total number from high to low order please.",
            "Visualize a bar chart for how many sections does each course has?, list by the total number in descending.",
            "Give me a histogram for how many sections does each course have?, list by the total number in descending.",
            "Bar chart x axis crs code y axis the total number, and sort Y-axis from high to low order please.",
            "Draw a bar chart for how many sections does each course have?, display in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    },
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Bar chart of sum age from each nationality, and display by the x axis from high to low.",
            "Show me a bar chart for what are the nationalities and total ages of journalists?, I want to rank by the bar in descending.",
            "Return a histogram on what are the nationalities and the total ages of journalists?, I want to rank by the bar in descending.",
            "What are the nationalities and the taotal ages of journalists Visualize by a bar chart, could you list bars in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "England",
                        "y_data": 308
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "For the days with the 3 largest maximum gust speeds, calculate the average mean humidity of each month (bin date into month level)."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 72
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 0
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 51.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(mean_humidity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "repair_assignment",
            "technician"
        ],
        "db_id": "machine_repair",
        "nl_queries": [
            "Display a bar chart for what are the names of the technicians and how many machines are they assigned to repair?, and display by the the total number in desc.",
            "Show names of technicians and the number of machines they are assigned to repair with a bar chart, and display by the the total number in desc.",
            "Give me a histogram for what are the names of the technicians and how many machines are they assigned to repair?, sort in descending by the y axis.",
            "What are the names of the technicians and how many machines are they assigned to repair, sort in descending by the y axis.",
            "Show names of technicians and the number of machines they are assigned to repair Visualize by bar chart, and I want to display in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Joe Sewell",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tony Sewell",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eddie Collins",
                        "y_data": 1
                    },
                    {
                        "x_data": "Charlie Hollocher",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Give me the comparison about the amount of date_address_from over the date_address_from , and group by attribute other_details and bin date_address_from by weekday.",
            "Find date_address_from and the amount of date_address_from , and group by attribute other_details and bin date_address_from by weekday, and visualize them by a bar chart.",
            "Give me the comparison about the amount of date_address_from over the date_address_from , and group by attribute other_details and bin date_address_from by weekday by a bar chart.",
            "Return a bar chart about the distribution of date_address_from and the amount of date_address_from , and group by attribute other_details and bin date_address_from by weekday.",
            "Visualize a bar chart about the distribution of date_address_from and the amount of date_address_from , and group by attribute other_details and bin date_address_from by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "apartment"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3,
                        "classify": "house"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "house"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "house"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2,
                        "classify": "house"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3,
                        "classify": "house"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_address_from)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Group by services attribute in station table and compute the total number of services with a bar chart.",
            "Give me a bar chart that the x-axis is the services and the Y is the count(services)",
            "Draw a bar chart of services versus the number of services"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 3
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 1
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents for each document type description? Visualize by a bar chart.",
            "Return a bar chart showing the number of documents for each document type description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "excellent",
                        "y_data": 9
                    },
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "good",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, rank in asc by the names please.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road, rank in asc by the names please.",
            "Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, I want to show X from low to high order.",
            "Stacked bar chart of team_id for with each ACC_Road in each all home, I want to sort from low to high by the x-axis.",
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and show by the x-axis in asc.",
            "Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road, and show by the x-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Stacked bar of services and how many services colored by local_authority, and display in ascending by the bar.",
            "Compute the number of local authorities by local authorities and then split by services Show the result with a stacked bar graph, and order by the names from low to high.",
            "Group by the local authorities and count the number of local authorities, and then group by services, display in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 1,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Brentwood"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 2,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Broxbourne"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 2,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Chiltern"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 1,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Three Rivers"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 1,
                        "classify": "Thurrock"
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 0,
                        "classify": "Watford"
                    },
                    {
                        "x_data": "c2c",
                        "y_data": 0,
                        "classify": "Watford"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Just show the id and name of each editor using a bar chart, rank from low to high by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 8
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 3
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 9
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 4
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Editor_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "Compare the number of the names of phones by a bar chart, I want to rank Y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone X",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 1
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Bar chart x axis other account details y axis how many other account details, show bars from high to low order.",
            "Show the number of accounts in a bar chart that groups by other account details, and sort in desc by the x-axis please.",
            "How many accounts for different account details? Draw a bar chart, and display names from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "VIP",
                        "y_data": 7
                    },
                    {
                        "x_data": "Regular",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_account_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_account_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "university"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "What are the total enrollments of universities of each affiliation type Plot them as bar chart, and display in descending by the bar.",
            "Draw a bar chart of affiliation versus sum enrollment, and could you rank by the names from high to low?",
            "Show me a bar chart for what are the total enrollments of universities of each affiliation type?, I want to order by the names in desc.",
            "Visualize a bar chart for what are the total enrollments of universities of each affiliation type?, and could you list bar from high to low order please?",
            "Find the total student enrollment for different affiliation type schools Plot them as bar chart, could you rank by the names from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Public",
                        "y_data": 119027
                    },
                    {
                        "x_data": "Private/Methodist",
                        "y_data": 2100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Affiliation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Display the proportion of the job title for all those jobs in department 80 using a pie chart.",
            "What is the proportion of job titles for employees in department 80? You can give me a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sales Manager",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 29
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(JOB_TITLE)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Visualize a bar chart for what is the average salary for each job title?, and rank in ascending by the Y please.",
            "Display a bar chart for what is the average salary for each job title?, I want to order Y in ascending order please.",
            "What is the average salary for each job title Show bar chart, order from low to high by the Y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Purchasing Clerk",
                        "y_data": 2780
                    },
                    {
                        "x_data": "Stock Clerk",
                        "y_data": 2785
                    },
                    {
                        "x_data": "Shipping Clerk",
                        "y_data": 3215
                    },
                    {
                        "x_data": "Administration Assistant",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Programmer",
                        "y_data": 5760
                    },
                    {
                        "x_data": "Marketing Representative",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Human Resources Representative",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Stock Manager",
                        "y_data": 7280
                    },
                    {
                        "x_data": "Accountant",
                        "y_data": 7920
                    },
                    {
                        "x_data": "Public Accountant",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 8350
                    },
                    {
                        "x_data": "Public Relations Representative",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Purchasing Manager",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Accounting Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Finance Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Sales Manager",
                        "y_data": 12200
                    },
                    {
                        "x_data": "Marketing Manager",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Administration Vice President",
                        "y_data": 17000
                    },
                    {
                        "x_data": "President",
                        "y_data": 24000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "A line chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
            "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.",
            "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a line chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 3
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 2
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 2
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the first name of the employee and list their manager's id in the Y-axis of the bar chart.",
            "You can return a bar chart to show the employees' first name and the corresponding manager's id.",
            "Draw a bar chart of first name versus manager_id"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Steven",
                        "y_data": 0
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 102
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 101
                    },
                    {
                        "x_data": "Den",
                        "y_data": 100
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 100
                    },
                    {
                        "x_data": "John",
                        "y_data": 100
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute headquarter, display by the bars in asc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute headquarter, and list by the X from low to high.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute headquarter, and could you show bar in asc order?",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute headquarter in a bar chart, display by the bars in asc.",
            "For those records from the products and each product's manufacturer, find name and revenue , and group by attribute headquarter, and visualize them by a bar chart, could you show bar in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "VISITS"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Find all the distinct visit dates, and count them by a line chart, I want to order x axis in desc order.",
            "What are the distinct visit dates, and count them by a line chart, and I want to order x axis in desc order.",
            "What are the number of the distinct visit dates?, order by the x axis in descending.",
            "A line chart for what are the number of the distinct visit dates?, show Visit_Date in desc order.",
            "Show me a line chart of how the number of visit date change over the visit date, and show Visit_Date in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016~2018",
                        "y_data": 2
                    },
                    {
                        "x_data": "2011~2015",
                        "y_data": 2
                    },
                    {
                        "x_data": "2006~2010",
                        "y_data": 4
                    },
                    {
                        "x_data": "2001~2005",
                        "y_data": 2
                    },
                    {
                        "x_data": "1996~2000",
                        "y_data": 3
                    },
                    {
                        "x_data": "1991~1995",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1990",
                        "y_data": 3
                    },
                    {
                        "x_data": "1981~1985",
                        "y_data": 0
                    },
                    {
                        "x_data": "1976~1980",
                        "y_data": 1
                    },
                    {
                        "x_data": "1971~1975",
                        "y_data": 2
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Visit_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Visit_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "How many services for each service type description? Use a pie chart to show it.",
            "Show the number of services for each service type description with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, and order by the bar in descending.",
            "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and order by the bars from high to low.",
            "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, I want to rank by the bars in descending.",
            "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and order from high to low by the bars.",
            "Draw a bar chart of meter 200 versus the average of id, and could you order by the bars in desc?",
            "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and could you show in desc by the x-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:57.26",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the number of trains starting from each origin Plot them as bar chart, order bars from high to low order.",
            "Show me the total number by origin in a histogram, and sort by the names from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Trivandrum",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nagercoil",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mumbai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madurai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kanniyakumari",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chennai",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bangalore",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "origin",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airlines"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "Find the number of the country of the airlines whose name starts with 'Orbit', and rank by the bar in asc.",
            "What are the countries of all airlines whose names start with Orbit, and count them by a bar chart, and display X in ascending order.",
            "Find the country of the airlines whose name starts with 'Orbit', and count them by a bar chart, rank by the bar in asc.",
            "What are the number of the countries of all airlines whose names start with Orbit?, could you display in asc by the X?",
            "A bar chart for finding the number of the country of the airlines whose name starts with 'Orbit', display from low to high by the bar.",
            "A bar chart for what are the number of the countries of all airlines whose names start with Orbit?, could you order names from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors for each first name with a bar chart.",
            "How many professors for each first name? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne",
                        "y_data": 1
                    },
                    {
                        "x_data": "Annelise",
                        "y_data": 1
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doreen",
                        "y_data": 1
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1
                    },
                    {
                        "x_data": "Herman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hermine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melanie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Preston",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ralph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ronald",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ross",
                        "y_data": 1
                    },
                    {
                        "x_data": "Van",
                        "y_data": 1
                    },
                    {
                        "x_data": "Willa",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faults for different fault status of all the faults recoreded in the logs, list in desc by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Waiting",
                        "y_data": 3
                    },
                    {
                        "x_data": "Return",
                        "y_data": 2
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fixed",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_status",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_status)"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "physician"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the name of physicians who took some appointment, and count them by a bar chart, sort Y-axis in ascending order.",
            "List the number of the name of physicians who took some appointment, and rank by the the number of name from low to high please.",
            "What are the names of all the physicians who took appointments, and count them by a bar chart, and rank from low to high by the y-axis please.",
            "A bar chart for listing the number of the name of physicians who took some appointment, rank by the the number of name from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Molly Clock",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Dorian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Percival Cox",
                        "y_data": 2
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the total capacity of dorms for each gender with a pie chart.",
            "What is the total capacity of dorms for each gender? Show me a pie chart.",
            "Compute the total sum student capacity across gender as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 128
                    },
                    {
                        "x_data": "M",
                        "y_data": 116
                    },
                    {
                        "x_data": "X",
                        "y_data": 1136
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(student_capacity)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Compare the number of items in the type of each thing using a bar chart, could you sort how many type of thing code in desc order please?",
            "Show the number of type of thing code from each type of thing code, and sort in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 8
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return the room and number of reservations made for each of the rooms to draw a bar chart, I want to sort Y-axis in descending order.",
            "For each room, find its the number of times reservations were made for it Visualize them using a bar chart, display from high to low by the the total number ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CAS",
                        "y_data": 69
                    },
                    {
                        "x_data": "FNA",
                        "y_data": 66
                    },
                    {
                        "x_data": "IBD",
                        "y_data": 63
                    },
                    {
                        "x_data": "RND",
                        "y_data": 62
                    },
                    {
                        "x_data": "HBB",
                        "y_data": 60
                    },
                    {
                        "x_data": "TAA",
                        "y_data": 59
                    },
                    {
                        "x_data": "IBS",
                        "y_data": 59
                    },
                    {
                        "x_data": "MWC",
                        "y_data": 56
                    },
                    {
                        "x_data": "RTE",
                        "y_data": 55
                    },
                    {
                        "x_data": "AOB",
                        "y_data": 51
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Room",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the number of names of high school students with a bar chart, and rank in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Draw a bar chart for what is average age of male for different job title?, and show Y in desc order.",
            "Return a histogram on what is average age of male for different job title?, and sort y axis in descending order.",
            "What is average age of male for different job title Visualize by bar chart, sort by the Y in desc please.",
            "What is the average age for a male in each job Visualize by bar chart, and rank by the y-axis in desc.",
            "Return a bar chart on what is the average age for a male in each job?, rank in descending by the Y.",
            "what is the average age for a male in each job?, and sort y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Staff",
            "Engineer_Visits",
            "Maintenance_Engineers"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "How many staffs have contacted with each engineer? Give me a bar chart grouping by each engineer's first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 1
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 6
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Etha",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 2
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COUNTRIES",
            "CAR_MAKERS"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "Give me a histogram for what are the names and ids of all countries with at least one car maker?, could you list in desc by the bars?",
            "what are the countries having at least one car maker? List name and id, and I want to list in descending by the CountryName.",
            "Visualize a bar chart for what are the countries having at least one car maker? List name and id, sort x-axis in desc order.",
            "What are the countries having at least one car maker? List name and id Visualize by bar chart, sort x-axis in desc order.",
            "Return a bar chart on what are the names and ids of all countries with at least one car maker?, I want to list by the x axis from high to low.",
            "What are the names and ids of all countries with at least one car maker Show bar chart, and could you sort in descending by the bar?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "usa",
                        "y_data": 1
                    },
                    {
                        "x_data": "uk",
                        "y_data": 7
                    },
                    {
                        "x_data": "sweden",
                        "y_data": 6
                    },
                    {
                        "x_data": "korea",
                        "y_data": 8
                    },
                    {
                        "x_data": "japan",
                        "y_data": 4
                    },
                    {
                        "x_data": "italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "germany",
                        "y_data": 2
                    },
                    {
                        "x_data": "france",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CountryName",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "CountryId"
                }
            }
        }
    },
    {
        "tables_used": [
            "Reservations",
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "A bar chart for what are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, rank from low to high by the roomName.",
            "Find the name of rooms booked by some customers whose first name contains ROY, and count them by a bar chart, and sort in ascending by the roomName.",
            "What are the number of the name of rooms booked by customers whose first name has \"ROY\" in part?, and rank x-axis in asc order please.",
            "Find the number of the name of rooms booked by some customers whose first name contains ROY, and sort in ascending by the bar.",
            "What are the name of rooms booked by customers whose first name has \"ROY\" in part, and count them by a bar chart, and rank x-axis in asc order please.",
            "A bar chart for finding the number of the name of rooms booked by some customers whose first name contains ROY, and list by the X-axis in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Convoke and sanguine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frugal not apropos",
                        "y_data": 2
                    },
                    {
                        "x_data": "Harbinger but bequest",
                        "y_data": 3
                    },
                    {
                        "x_data": "Thrift and accolade",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "roomName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(roomName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and price , and group by attribute founder, and visualize them by a bar chart, and rank by the Name in desc.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder, and sort in descending by the X.",
            "For those records from the products and each product's manufacturer, give me the comparison about price over the name , and group by attribute founder by a bar chart, and rank x axis in desc order please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and price , and group by attribute founder, sort x axis in desc order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and price , and group by attribute founder in a bar chart, and could you sort X-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 150,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a stacked bar chart. The x-axis is course description and group by instructor's name.",
            "How many courses for each course description? Show me a stacked bar chart. The x-axis is course description and group by instructor's name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Show me about the distribution of date_address_to and the average of monthly_rental bin date_address_to by weekday in a bar chart.",
            "Visualize a bar chart about the distribution of date_address_to and the average of monthly_rental bin date_address_to by weekday.",
            "Give me the comparison about the average of monthly_rental over the date_address_to bin date_address_to by weekday by a bar chart.",
            "Return a bar chart about the distribution of date_address_to and the average of monthly_rental bin date_address_to by weekday.",
            "A bar chart shows the distribution of date_address_to and the average of monthly_rental bin date_address_to by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1002.6666666666666
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 944.6666666666666
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 969.3333333333334
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 975
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1003.5
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 855.3333333333334
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_to",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(monthly_rental)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain)"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Give me a bar chart showing the total number of ships' classes that do not have a captain, rank bar in desc order.",
            "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, show in desc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KR",
                        "y_data": 3
                    },
                    {
                        "x_data": "GL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a scatter chart about the correlation between code and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize a scatter chart about the correlation between code and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, visualize the relationship between code and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a scatter chart about the correlation between code and revenue , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, a scatter chart shows the correlation between code and revenue , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 2,
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": 4,
                        "y_data": 200,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 3,
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 6,
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": 5,
                        "y_data": 130,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": 1,
                        "y_data": 120,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the week interval and then compute the average amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 177130,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 123255,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 71246,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 38324,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 423154,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 407235,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 241730,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 456098,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 334549.3333333333,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 172309,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 233375,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 155654,
                        "classify": "Visa"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "battle",
            "ship",
            "death"
        ],
        "db_id": "battle_death",
        "nl_queries": [
            "Draw a bar chart for what are the ids and names of the battles that led to more than 10 people killed in total, and could you show by the total number in descending?",
            "What are the ids and names of the battles that led to more than 10 people killed in total, and could you show by the total number in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Siege of Constantinople",
                        "y_data": 8
                    },
                    {
                        "x_data": "Battle of Boruy",
                        "y_data": 6
                    },
                    {
                        "x_data": "Battle of Messinopolis",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart, and rank from high to low by the Y please.",
            "For all employees who have the letters D or S in their first name, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart, and could you show in descending by the how many hire date?",
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart, sort by the y axis from high to low.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and show y axis from high to low order.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, and rank total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 11
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 9
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 8
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 7
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, I want to display by the total number from low to high please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter, sort total number in asc order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, and order in ascending by the Y.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute headquarter, and list in ascending by the Y-axis.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute headquarter in a bar chart, and order in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Show the average price of the rooms in different decor using a bar chart.",
            "What is the average price of the rooms for each different decor? Show me a bar chart!",
            "Please use a bar chart to show the average price of the rooms in a different decor.",
            "Give me a bar chart for the average of baseprice of each decor"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 112.5
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 162.5
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 187.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A pie chart showing the number of debates in each venue for those on the affirmative side."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Show the number of train names in a bar chart, list by the x-axis in desc.",
            "Plot how many name by grouped by name as a bar graph, I want to order by the X in descending please.",
            "Compare all train names' total numbers, show by the x-axis in desc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parasuram Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Time and meter_100 .",
            "Give me the comparison about meter_100 over the Time by a bar chart.",
            "Find Time and meter_100 , and visualize them by a bar chart.",
            "Draw a bar chart about the distribution of Time and meter_100 .",
            "Return a bar chart about the distribution of Time and meter_100 .",
            "Bar chart x axis time y axis meter_100"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "7:47.91",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "7:48.67",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "7:49.98",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "7:52.04",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "7:53.43",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "7:55.39",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "7:56.56",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "7:46.95",
                        "y_data": 57.31
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "List all headquarters and the number of companies in each headquarter with a bar chart.",
            "List all headquarters and the number of companies in each headquarter.",
            "For each headquarter, what are the headquarter and how many companies are centered there. Visualize by bar chart.",
            "Bar chart of the total number from each headquarters"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by time.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 138400
                    },
                    {
                        "x_data": "July",
                        "y_data": 117000
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 281300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 139900
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Show me about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time in a bar chart, show in desc by the total number.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time by a bar chart, I want to show from high to low by the Y-axis.",
            "Return a bar chart about the distribution of Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, and list in descending by the Y-axis.",
            "Plot the average of shop id by grouped by is full time as a bar graph, could you order Y-axis from high to low order?",
            "Find Is_full_time and the average of Shop_ID , and group by attribute Is_full_time, and visualize them by a bar chart, sort Y-axis in desc order please.",
            "Give me the comparison about the average of Shop_ID over the Is_full_time , and group by attribute Is_full_time, could you order Y-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 5
                    },
                    {
                        "x_data": "T",
                        "y_data": 3.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Shop_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "poker_player"
        ],
        "db_id": "poker_player",
        "nl_queries": [
            "List the final tables made and the best finishes of poker players in a scatter chart",
            "List the final tables made and the best finishes of poker players. Show the correlation.",
            "Return a scatter chart on what are the final tables made and best finishes for all poker players?",
            "A scatter chart about what are the final tables made and best finishes for all poker players?",
            "What are the final tables made and best finishes for all poker players. Plot them as scatter chart.",
            "Plot a scatter chart, final table made by best_finish."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 42,
                        "y_data": 1
                    },
                    {
                        "x_data": 10,
                        "y_data": 2
                    },
                    {
                        "x_data": 21,
                        "y_data": 1
                    },
                    {
                        "x_data": 19,
                        "y_data": 2
                    },
                    {
                        "x_data": 26,
                        "y_data": 3
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Final_Table_Made"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Best_Finish"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute headquarter, show by the Y from low to high.",
            "For those records from the products and each product's manufacturer, find name and revenue , and group by attribute headquarter, and visualize them by a bar chart, list by the Y in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute headquarter in a bar chart, list Y from low to high order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and revenue , and group by attribute headquarter, and show by the Y from low to high.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute headquarter, could you list in asc by the y axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "How many apartment bookings in each weekday? Show me a bar chart binning booking end date by weekday, list Y-axis in desc order.",
            "Show the number of apartment bookings in each weekday and bin booking end date by weekday with a bar chart, and sort y axis in descending order.",
            "Bar chart x axis booking end date y axis the number of booking end date, list y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_end_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_end_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_addresses",
            "addresses"
        ],
        "db_id": "customer_deliveries",
        "nl_queries": [
            "List the state names and the number of customers living in each state, and order by the bars from low to high please.",
            "List the state names and the number of customers living in each state with a bar chart, order by the bars from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "California",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colorado",
                        "y_data": 2
                    },
                    {
                        "x_data": "Idaho",
                        "y_data": 1
                    },
                    {
                        "x_data": "Illinois",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Michigan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Nebraska",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tennessee",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wyoming",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state_province_county",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of salary over the job_id , and group by attribute job_id by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7850
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2933.3333333333335
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8100
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3244.4444444444443
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2822.222222222222
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7350
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Show the average price of the rooms in different decor using a pie chart.",
            "What is the proportion of the average base price of the rooms for each different decor? Show me a pie chart!",
            "Please use a pie chart to show the proportion of the average price of the rooms in a different decor.",
            "I want to know the proportion of the average base price for each decor."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "modern",
                        "y_data": 112.5
                    },
                    {
                        "x_data": "rustic",
                        "y_data": 162.5
                    },
                    {
                        "x_data": "traditional",
                        "y_data": 187.5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "decor"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, give me the comparison about the sum of department_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday.",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 930
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 980
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1040
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 930
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 910
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 910
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts",
            "Customers"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the number of accounts for each customer in a bar chart grouping by customer's first name, I want to sort in descending by the bars.",
            "How many accounts for each customer? Show a bar chart that groups by customer's first name, rank by the x-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Vesta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ruby",
                        "y_data": 3
                    },
                    {
                        "x_data": "Meaghan",
                        "y_data": 4
                    },
                    {
                        "x_data": "Kieran",
                        "y_data": 4
                    },
                    {
                        "x_data": "Joesph",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jensen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Abbey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_first_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Return a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Visualize a bar chart about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday.",
            "Show me about the distribution of Start_from and the sum of Employee_ID , and group by attribute Is_full_time and bin start_from by weekday in a bar chart.",
            "Give me the comparison about the sum of Employee_ID over the Start_from , and group by attribute Is_full_time and bin start_from by weekday.",
            "Stack bar chart of sum employee id vs Is_full_time based on start from"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 6,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 12,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 4,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "A bar chart showing the number of publication dates of books, and list from high to low by the Publication_Date.",
            "Bar chart x axis publication date y axis how many publication date, rank in desc by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "October 2005",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "June 2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "August 2008",
                        "y_data": 2
                    },
                    {
                        "x_data": "April 2007",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publication_Date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Publication_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Bar graph to show age from different name, list x axis in asc order.",
            "Show the name and age for all drivers with a bar chart, and sort by the x-axis from low to high.",
            "Give me a bar chart to show the name and age for all drivers, and order bar in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Angel Acre",
                        "y_data": 42
                    },
                    {
                        "x_data": "Brandon McGee",
                        "y_data": 45
                    },
                    {
                        "x_data": "Dan Carter",
                        "y_data": 30
                    },
                    {
                        "x_data": "Douglas McCrory",
                        "y_data": 36
                    },
                    {
                        "x_data": "Edwin Vargas",
                        "y_data": 52
                    },
                    {
                        "x_data": "Geoff Luxenberg",
                        "y_data": 52
                    },
                    {
                        "x_data": "Henry Genga",
                        "y_data": 37
                    },
                    {
                        "x_data": "Jason Rojas",
                        "y_data": 38
                    },
                    {
                        "x_data": "Matthew Ritter",
                        "y_data": 40
                    },
                    {
                        "x_data": "Minnie Gonzalez",
                        "y_data": 46
                    },
                    {
                        "x_data": "Tim Larson",
                        "y_data": 36
                    },
                    {
                        "x_data": "Timothy Ackert",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Show the total number of the first year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, and display in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "First_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(First_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the number of names of high school students with a bar chart, and sort by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jordan",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of price , and group by attribute founder, sort in desc by the Y-axis.",
            "For those records from the products and each product's manufacturer, find founder and the sum of price , and group by attribute founder, and visualize them by a bar chart, and order by the y-axis in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of price , and group by attribute founder in a bar chart, order by the y-axis in descending.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of price , and group by attribute founder, order by the total number of price in desc please.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of price over the founder , and group by attribute founder by a bar chart, show y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James",
                        "y_data": 486
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 450
                    },
                    {
                        "x_data": "John",
                        "y_data": 240
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 240
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 150
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 125
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of department_id , and group by attribute job_id in a bar chart, I want to list from high to low by the y axis.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, order by the Y-axis from high to low.",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the job_id , and group by attribute job_id, I want to list in descending by the Y-axis.",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the job_id , and group by attribute job_id by a bar chart, and I want to display y axis from high to low order please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of department_id , and group by attribute job_id, and I want to list from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 110
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 110
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 100
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 100
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 90
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 80
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 77.24137931034483
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 70
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 60
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 50
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 50
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 40
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 30
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name does not contain the letter M, sum their salary by binning the hire date into the day of week interval for visualizing a bar chart.",
            "Bin the hire date into the day of week interval, and then calculate the total salary of employees in each day for a bar chart, note that just select those employees without the letter M in their first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 75800
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 68100
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 116200
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 70400
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 92000
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 78700
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 72300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, show by the X from low to high.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of code , and group by attribute founder, and could you rank in asc by the x-axis?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, I want to order from low to high by the X-axis.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, and show by the X from low to high.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and order in ascending by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    },
                    {
                        "x_data": "James",
                        "y_data": 28
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 23
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station",
            "route"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Find the number of trains for each station, as well as the station network name Show the result with a bar graph, and order from low to high by the y-axis.",
            "Visualize a bar chart for the number of trains for each station by the station network name, I want to list by the y axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chafford Hundred",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheshunt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brentwood",
                        "y_data": 2
                    },
                    {
                        "x_data": "Broxbourne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bushey",
                        "y_data": 2
                    },
                    {
                        "x_data": "Carpenders Park",
                        "y_data": 2
                    },
                    {
                        "x_data": "Chalfont & Latimer",
                        "y_data": 2
                    },
                    {
                        "x_data": "Amersham",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chesham",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "network_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "What is the id and weight of every pet who is older than 1, and order X in ascending order.",
            "Find the id and weight of all pets whose age is older than 1 Visualize by bar chart, order in ascending by the x-axis.",
            "A bar chart about what is the id and weight of every pet who is older than 1?, show x axis from low to high order.",
            "Visualize a bar chart for what is the id and weight of every pet who is older than 1?, display bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 13.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte)"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart, and order in desc by the names please.",
            "Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart, show in desc by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Four-poster bed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bench",
                        "y_data": 3.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Market_Rate"
                }
            }
        }
    },
    {
        "tables_used": [
            "Likes",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the number of names of high schoolers who have likes with a bar chart.",
            "Give me a bar chart to show the number of names of high schoolers who have likes.",
            "Show me the frequency of names of high schoolers who have likes with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show average of budget in each year and bin creation time by year in a line chart.",
            "I want to see trend of the average of budget in billions by creation"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789~1809",
                        "y_data": 10
                    },
                    {
                        "x_data": "1810~1830",
                        "y_data": 0
                    },
                    {
                        "x_data": "1831~1851",
                        "y_data": 10
                    },
                    {
                        "x_data": "1852~1872",
                        "y_data": 23
                    },
                    {
                        "x_data": "1873~1893",
                        "y_data": 77
                    },
                    {
                        "x_data": "1894~1914",
                        "y_data": 32.5
                    },
                    {
                        "x_data": "1915~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1956",
                        "y_data": 491
                    },
                    {
                        "x_data": "1957~1977",
                        "y_data": 41.666666666666664
                    },
                    {
                        "x_data": "1978~1998",
                        "y_data": 67.5
                    },
                    {
                        "x_data": "1999~2002",
                        "y_data": 44
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "results",
            "races",
            "drivers"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, show in descending by the X-axis.",
            "Show the number of races that had any driver whose forename is Lewis in each year with a line chart, and list from high to low by the year.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, list from high to low by the year.",
            "How many races that had any driver whose forename is Lewis? Show me a line chart, show in descending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 21
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2014-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 19
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 17
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 18
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 17
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Bar chart x axis time y axis meter_100, and show by the y axis from high to low.",
            "Return a bar chart about the distribution of Time and meter_100 , and show meter_100 from high to low order.",
            "Find Time and meter_100 , and visualize them by a bar chart, list in desc by the y axis.",
            "Give me the comparison about meter_100 over the Time by a bar chart, and could you rank from high to low by the total number?",
            "Visualize a bar chart about the distribution of Time and meter_100 , and sort Y-axis from high to low order please.",
            "Draw a bar chart about the distribution of Time and meter_100 , and rank total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "7:56.56",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "7:49.98",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "7:48.67",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "7:55.39",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "7:53.43",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "7:47.91",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "7:46.95",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "7:52.04",
                        "y_data": 55.67
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Compare the frequency of each payment method code using a bar chart, rank by the how many payment method code from high to low.",
            "Plot the number of payment method code by grouped by payment method code as a bar graph, and list by the total number from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MasterCard",
                        "y_data": 7
                    },
                    {
                        "x_data": "Visa",
                        "y_data": 4
                    },
                    {
                        "x_data": "Discover Card",
                        "y_data": 3
                    },
                    {
                        "x_data": "American Express",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Payment_Method_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Payment_Method_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_player",
        "nl_queries": [
            ""
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anglican",
                        "y_data": 3
                    },
                    {
                        "x_data": "Catholic",
                        "y_data": 2
                    },
                    {
                        "x_data": "Uniting Church",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Denomination"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "B.C. School",
                        "y_data": 1
                    },
                    {
                        "x_data": "Calgary School",
                        "y_data": 2
                    },
                    {
                        "x_data": "Edmonton School",
                        "y_data": 3
                    },
                    {
                        "x_data": "Saskatchewan School",
                        "y_data": 2
                    },
                    {
                        "x_data": "Toronto School",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "projects",
            "assignedto"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Give me a histogram for what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, and list by the Name in desc.",
            "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each, list by the x-axis in descending please.",
            "Find the number of scientists involved for the projects that require more than 300 hours Show bar chart, could you show in desc by the x axis?",
            "what are the names of projects that require more than 300 hours, and how many scientists are assigned to each?, list by the Name in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Juicy: Extracting Apple Juice with Pectinase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aerodynamics and Ice Hockey",
                        "y_data": 1
                    },
                    {
                        "x_data": "A Silver-Cleaning Battery",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "How many services for each service type description? Use a bar chart to show it, could you sort in ascending by the Y please?",
            "Show the number of services for each service type description with a bar chart, I want to display by the the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "broadcast"
        ],
        "db_id": "program_share",
        "nl_queries": [
            "Count the number of programs broadcast for each time section of a day in a bar chart, sort Y in descending order.",
            "Count the number of programs broadcast for each time section of a day Show bar chart, could you rank by the the total number in desc?",
            "Plot the total number by grouped by time of day as a bar graph, and list Y in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Night",
                        "y_data": 5
                    },
                    {
                        "x_data": "Morning",
                        "y_data": 4
                    },
                    {
                        "x_data": "Noon",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time_of_day",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "For all organizations that have grants of more than 6000 dollars, compare the number of details of the organizations with a bar chart, and I want to list by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "quo",
                        "y_data": 1
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 1
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 2
                    },
                    {
                        "x_data": "eius",
                        "y_data": 1
                    },
                    {
                        "x_data": "a",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organisation_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each office in a stacked bar chart. The x-axis is office name and group by course description.",
            "How many courses for each office? Show me a stacked bar chart. The x-axis is office name and group by course description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BBG 208",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "CUSTOMER",
            "EMPLOYEE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "Draw a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?",
            "Show me a bar chart for what are the first names and support rep ids for employees serving 10 or more customers?",
            "What are the first names and support rep ids for employees serving 10 or more customers."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Puja",
                        "y_data": 3
                    },
                    {
                        "x_data": "Diego",
                        "y_data": 4
                    },
                    {
                        "x_data": "Luis",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FirstName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SupportRepId"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, and could you list from high to low by the Y-axis?",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of salary over the hire_date bin hire_date by weekday, sort total number of salary in descending order.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, and order in desc by the y-axis please.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday, list total number of salary from high to low order.",
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of salary bin hire_date by weekday, and visualize them by a bar chart, and list total number of salary from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 83500
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 52200
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 44500
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 44400
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 33100
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 23200
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 16400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "customer_contact_channels"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of customers that use email as the contact channel for each weekday Visualize with a bar chart, list in descending by the y axis.",
            "Return a bar chart showing how many customers whose contact channel code is email for each weekday, and could you display by the how many active from date in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "active_from_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(active_from_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find All_Home and Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Road.",
            "Visualize a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road.",
            "Return a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road.",
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Road.",
            "Stacked bar chart of team_id for with each ACC_Road in each all home"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "8\u20130"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of All_Games and School_ID .",
            "Find All_Games and School_ID , and visualize them by a bar chart.",
            "Return a bar chart about the distribution of All_Games and School_ID .",
            "A bar chart shows the distribution of All_Games and School_ID .",
            "Give me the comparison about School_ID over the All_Games by a bar chart.",
            "Bar chart of school_id from each all games"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "35\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 2
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 4
                    },
                    {
                        "x_data": "21\u201314",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show how many delegates in each party with a pie chart.",
            "For each party, use a pie chart to show the number of its delegates."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 4
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm",
            "has_amenity"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of amenities for each of the dorms that can accommodate more than 100 students. Show scatter chart.",
            "For each dorm, how many amenities does it have. Show the correlation."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 104
                    },
                    {
                        "x_data": 8,
                        "y_data": 109
                    },
                    {
                        "x_data": 5,
                        "y_data": 110
                    },
                    {
                        "x_data": 6,
                        "y_data": 140
                    },
                    {
                        "x_data": 12,
                        "y_data": 160
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "dormid"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Please give me a bar chart to show the distribution of results of all music festival, and display by the Y-axis from low to high.",
            "What is the distibution of results for each music festival? Could you show me the result with a bar chart, show by the y axis in ascending please.",
            "Plot the number of result by grouped by result as a bar graph, and show by the y axis in ascending please.",
            "Return the results of all music festivals using a bar chart, I want to sort Y in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Awarded",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nominated",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates that have an average sea level pressure between 303 and 31?, could you sort in desc by the y axis?",
            "What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a bar chart, could you sort in desc by the y axis?",
            "A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, could you sort in desc by the y axis?",
            "What are the dates that have an average sea level pressure between 303 and 31, and count them by a bar chart, show y-axis from high to low order.",
            "A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, and show Y-axis in descending order please.",
            "What are the number of the dates in which the mean sea level pressure was between 303 and 31?, display in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2014",
                        "y_data": 38
                    },
                    {
                        "x_data": "2013",
                        "y_data": 27
                    },
                    {
                        "x_data": "2015",
                        "y_data": 22
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Return the categories of music festivals that have the result \"Awarded\", and count them by a bar chart, and order by the y axis from high to low.",
            "A bar chart for returning the number of the categories of music festivals that have the result \"Awarded\", and I want to rank y-axis in desc order please.",
            "What are the category of music festivals with result \"Awarded\", and count them by a bar chart, and show by the Y-axis from high to low.",
            "Return the number of the categories of music festivals that have the result \"Awarded\", and display Y from high to low order.",
            "What are the number of the category of music festivals with result \"Awarded\"?, I want to rank y-axis in desc order please.",
            "A bar chart for what are the number of the category of music festivals with result \"Awarded\"?, rank by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Best Song",
                        "y_data": 2
                    },
                    {
                        "x_data": "Best Sound Song",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Category)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company",
            "station_company)"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "How many companies without a gas station in each main industry? Draw a bar chart, and display X in asc order.",
            "Show the number of companies without a gas station in each main industry with a bar chart, and order from low to high by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 3
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mountain"
        ],
        "db_id": "climbing",
        "nl_queries": [
            "A pie chart for returning the number of the countries of the mountains that have a height larger than 5000.",
            "A pie chart for what are the number of the countries of mountains with height bigger than 5000?",
            "Return the countries of the mountains that have a height larger than 5000, and count them by a pie chart",
            "What are the countries of mountains with height bigger than 5000, and count them by a pie chart",
            "Return the number of the countries of the mountains that have a height larger than 5000.",
            "What are the number of the countries of mountains with height bigger than 5000?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DR Congo Uganda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kenya",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tanzania",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Return a pie chart about the proportion of Sex and the sum of Weight.",
            "A pie chart shows the proportion of Sex and the sum of Weight.",
            "Visualize a pie chart about the proportion of Sex and the sum of Weight.",
            "Draw a pie chart about the proportion of Sex and the sum of Weight.",
            "For the attribute Sex and the sum of Weight, show their proportion by a pie chart.",
            "Give me a pie to show total number of weight from different sex."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 184
                    },
                    {
                        "x_data": "M",
                        "y_data": 607
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Weight)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses that have two prerequisites for each title in a bar chart.",
            "How many courses have two prerequisites? Show me a bar chart grouping by title."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 1
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 2
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 1
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 1
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 2
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 1
                    },
                    {
                        "x_data": "World History",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(title)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "Give me a bar chart about the number of countries in the artist table, and show by the Y from low to high please.",
            "Compare all countries with a bar chart, and sort how many country in asc order.",
            "Show how many country from each country, could you list by the Y from low to high?",
            "What is the number of countries in the artist table?, I want to rank by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fiji",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 1
                    },
                    {
                        "x_data": "United States",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain)"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Give me a bar chart showing the total number of ships' classes that do not have a captain, show Y in descending order.",
            "For those ships that do not have a captain, tell me the total number of their classes using a pie chart, and rank in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KR",
                        "y_data": 3
                    },
                    {
                        "x_data": "GL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Class)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Show me a pie chart for what are the nationalities and the total ages of journalists?",
            "Visualize a pie chart with what are the nationalities and the total ages of journalists?",
            "What are the nationalities and the total ages of journalists. Return me a pie chart.",
            "Create a pie chart showing total number of age across nationality."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "England",
                        "y_data": 308
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "A bar chart showing the number of members in each country, and rank by the names in desc.",
            "Plot how many country by grouped by country as a bar graph, show X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 6
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name , show Y in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find last_name and manager_id , and visualize them by a bar chart, display MANAGER_ID in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of last_name and manager_id , and display MANAGER_ID in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the last_name by a bar chart, could you show in desc by the Y-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of last_name and manager_id , could you show in desc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gietz",
                        "y_data": 205
                    },
                    {
                        "x_data": "Fay",
                        "y_data": 201
                    },
                    {
                        "x_data": "Grant",
                        "y_data": 149
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 101
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 101
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "broadcast"
        ],
        "db_id": "program_share",
        "nl_queries": [
            "Count the number of programs broadcast for each time section of a day in a bar chart, sort names from low to high order.",
            "Plot the total number by grouped by time of day as a bar graph, rank X-axis in ascending order.",
            "Count the number of programs broadcast for each time section of a day Show bar chart, could you show by the x-axis in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Morning",
                        "y_data": 4
                    },
                    {
                        "x_data": "Night",
                        "y_data": 5
                    },
                    {
                        "x_data": "Noon",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Time_of_day",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show me the frequency of those years (bin year into year interval) that the team Boston Red Stockings won in the postseasons with a bar chart, and rank from low to high by the year.",
            "Show me the frequency of those years (bin year into year interval) that the team Boston Red Stockings won in the postseasons with a bar chart, I want to sort by the x axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903~1913",
                        "y_data": 2
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 3
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 1
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 1
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show id from each meter 400, and list by the X from high to low.",
            "Find meter_400 and ID , and visualize them by a bar chart, and display x axis in desc order please.",
            "Visualize a bar chart about the distribution of meter_400 and ID , display x axis in desc order please.",
            "A bar chart shows the distribution of meter_400 and ID , could you list meter_400 in descending order?",
            "Show me about the distribution of meter_400 and ID in a bar chart, list by the X from high to low.",
            "Give me the comparison about ID over the meter_400 by a bar chart, and list in desc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3:57.12",
                        "y_data": 1
                    },
                    {
                        "x_data": "3:57.00",
                        "y_data": 2
                    },
                    {
                        "x_data": "3:56.34",
                        "y_data": 6
                    },
                    {
                        "x_data": "3:55.72",
                        "y_data": 4
                    },
                    {
                        "x_data": "3:55.49",
                        "y_data": 3
                    },
                    {
                        "x_data": "3:55.37",
                        "y_data": 5
                    },
                    {
                        "x_data": "3:55.36",
                        "y_data": 7
                    },
                    {
                        "x_data": "3:52.93",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_400",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the first name of students who are living in the Smith Hall, and count them by a bar chart, I want to display by the X in descending.",
            "What are the first names of all students in Smith Hall, and count them by a bar chart, order by the X-axis in descending.",
            "Find the number of the first name of students who are living in the Smith Hall, and display by the bars in desc.",
            "A bar chart for what are the number of the first names of all students in Smith Hall?, and could you display by the Fname from high to low?",
            "A bar chart for finding the number of the first name of students who are living in the Smith Hall, and display from high to low by the x axis.",
            "What are the number of the first names of all students in Smith Hall?, I want to order X from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "invoices"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "How many invoices were billed from each state Plot them as bar chart, and rank by the the total number in descending please.",
            "Return a histogram on how many invoices were billed from each state?, and rank by the the total number in descending please.",
            "List the number of invoices from the US, grouped by state Visualize by bar chart, I want to order in descending by the y-axis.",
            "List the number of invoices from the US, grouped by state by a bar chart, rank by the the total number in descending please.",
            "Show me a bar chart for how many invoices were billed from each state?, and show by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 21
                    },
                    {
                        "x_data": "WI",
                        "y_data": 7
                    },
                    {
                        "x_data": "WA",
                        "y_data": 7
                    },
                    {
                        "x_data": "UT",
                        "y_data": 7
                    },
                    {
                        "x_data": "TX",
                        "y_data": 7
                    },
                    {
                        "x_data": "NY",
                        "y_data": 7
                    },
                    {
                        "x_data": "NV",
                        "y_data": 7
                    },
                    {
                        "x_data": "MA",
                        "y_data": 7
                    },
                    {
                        "x_data": "IL",
                        "y_data": 7
                    },
                    {
                        "x_data": "FL",
                        "y_data": 7
                    },
                    {
                        "x_data": "AZ",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "billing_state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "jobs"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Display a bar chart for what is the average salary for each job title?, and rank in descending by the X please.",
            "Visualize a bar chart for what is the average salary for each job title?, and show by the JOB_TITLE from high to low.",
            "What is the average salary for each job title Show bar chart, and order by the JOB_TITLE in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Stock Manager",
                        "y_data": 7280
                    },
                    {
                        "x_data": "Stock Clerk",
                        "y_data": 2785
                    },
                    {
                        "x_data": "Shipping Clerk",
                        "y_data": 3215
                    },
                    {
                        "x_data": "Sales Representative",
                        "y_data": 8350
                    },
                    {
                        "x_data": "Sales Manager",
                        "y_data": 12200
                    },
                    {
                        "x_data": "Purchasing Manager",
                        "y_data": 11000
                    },
                    {
                        "x_data": "Purchasing Clerk",
                        "y_data": 2780
                    },
                    {
                        "x_data": "Public Relations Representative",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Public Accountant",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Programmer",
                        "y_data": 5760
                    },
                    {
                        "x_data": "President",
                        "y_data": 24000
                    },
                    {
                        "x_data": "Marketing Representative",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Marketing Manager",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Human Resources Representative",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Finance Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Administration Vice President",
                        "y_data": 17000
                    },
                    {
                        "x_data": "Administration Assistant",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Accounting Manager",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Accountant",
                        "y_data": 7920
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_TITLE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, show by the bars in descending.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, and I want to order names in descending order.",
            "For those employees who was hired before 2002-06-21, find job_id and the sum of manager_id , and group by attribute job_id, and visualize them by a bar chart, and sort in descending by the bars.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the sum of manager_id , and group by attribute job_id, could you sort X from high to low order please?",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the sum of manager_id , and group by attribute job_id, I want to order names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 2440
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 4410
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 500
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 570
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 514
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 540
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 200
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_400 and meter_100 , and visualize them by a bar chart, and sort from low to high by the X.",
            "Give me the comparison about meter_100 over the meter_400 , could you order in asc by the x axis?",
            "Bar graph to show meter_100 from different meter 400, I want to list X-axis from low to high order.",
            "Return a bar chart about the distribution of meter_400 and meter_100 , and show from low to high by the bar please.",
            "A bar chart shows the distribution of meter_400 and meter_100 , and could you order in asc by the x axis?",
            "Visualize a bar chart about the distribution of meter_400 and meter_100 , I want to show by the bar in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3:52.93",
                        "y_data": 55.67
                    },
                    {
                        "x_data": "3:55.36",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "3:55.37",
                        "y_data": 57.66
                    },
                    {
                        "x_data": "3:55.49",
                        "y_data": 57.31
                    },
                    {
                        "x_data": "3:55.72",
                        "y_data": 57.35
                    },
                    {
                        "x_data": "3:56.34",
                        "y_data": 57.84
                    },
                    {
                        "x_data": "3:57.00",
                        "y_data": 57.34
                    },
                    {
                        "x_data": "3:57.12",
                        "y_data": 57.34
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_400",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "meter_100"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show names of teachers and the number of courses they teach by a pie chart.",
            "Show names of teachers and the number of courses they teach. Show a pie chart.",
            "Draw a pie chart for what are the names of the teachers and how many courses do they teach?",
            "Show me the proportion on what are the names of the teachers and how many courses do they teach?",
            "What are the names of the teachers and how many courses do they teach."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anne Walker",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gustaaf Deloor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kearsley Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lucy Wong",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vicente Carretero",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "SALES",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "For the sale details with amount smaller than 3000, visualize a bar chart that x-axis is the sales details and count them as y, I want to sort by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "s",
                        "y_data": 2
                    },
                    {
                        "x_data": "p",
                        "y_data": 2
                    },
                    {
                        "x_data": "y",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "o",
                        "y_data": 1
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "f",
                        "y_data": 1
                    },
                    {
                        "x_data": "e",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "sales_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(sales_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "BOOKINGS"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "List the order dates of all the bookings, and count them by a bar chart",
            "List the number of the order dates of all the bookings.",
            "What is the order date of each booking, and count them by a bar chart",
            "A bar chart for listing the number of the order dates of all the bookings.",
            "Bar graph to show how many order date from different order date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Order_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Order_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students whose age is younger than the average age and group by students' last name in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andreo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brody",
                        "y_data": 1
                    },
                    {
                        "x_data": "Epp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Goldman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Han",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 2
                    },
                    {
                        "x_data": "Norris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schultz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schwartz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Woods",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show the average salary by each hire date of employees, and please bin the hire date into the day of week interval for showing a bar chart.",
            "Compare the average salary by each hire date (bin it into the day of week interval) of employees using a bar chart.",
            "Plot the average of salary by grouped by hire date as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 13800
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4400
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? List the participant id and the number, and group by participants type with a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 26,
                        "y_data": 2,
                        "classify": "Organizer"
                    },
                    {
                        "x_data": 36,
                        "y_data": 1,
                        "classify": "Organizer"
                    },
                    {
                        "x_data": 86,
                        "y_data": 2,
                        "classify": "Organizer"
                    },
                    {
                        "x_data": 96,
                        "y_data": 1,
                        "classify": "Organizer"
                    },
                    {
                        "x_data": 37,
                        "y_data": 2,
                        "classify": "Participant"
                    },
                    {
                        "x_data": 60,
                        "y_data": 1,
                        "classify": "Participant"
                    },
                    {
                        "x_data": 63,
                        "y_data": 1,
                        "classify": "Participant"
                    },
                    {
                        "x_data": 64,
                        "y_data": 1,
                        "classify": "Participant"
                    },
                    {
                        "x_data": 66,
                        "y_data": 4,
                        "classify": "Participant"
                    },
                    {
                        "x_data": 90,
                        "y_data": 3,
                        "classify": "Participant"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Participant_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses each instructor taught in a stacked bar chart. The x-axis is the instructor's first name and group by course description.",
            "How many courses each teacher taught? Show me a stacked bar chart. The x-axis is the teacher's first name and group by course description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of different nationalities of all ships? Give me a bar graph, and I want to list by the Y from low to high.",
            "Return a bar chart showing the total number of ships' nationalities, display from low to high by the how many nationality.",
            "Show me the comparison of the total number of all ships' nationalities with a bar graph, and display from low to high by the how many nationality.",
            "Bar graph to show how many nationality from different nationality, display from low to high by the how many nationality."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 3
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many students live in each city? Show a bar chart, I want to rank by the bar in ascending.",
            "Create a bar chart showing the total number across city code, and could you show by the bars in asc?",
            "Find the number of students living in each city with a bar chart, I want to show by the city_code in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 4
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 3
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 3
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 4
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 1
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 3
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customer_Payments"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "List all payment methods and number of payments using each payment methods by a bar chart.",
            "List all payment methods and number of payments using each payment methods. Plot them as bar chart.",
            "For each payment method, how many payments were made. Show bar chart.",
            "Show the total number from each payment method code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Credit Card",
                        "y_data": 5
                    },
                    {
                        "x_data": "Direct Debit",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_method_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS",
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "What are the number of the wines that have prices lower than 50 and have appelations in Monterey county?",
            "Give the neames of wines with prices below 50 and with appelations in Monterey county, and count them by a bar chart",
            "A bar chart for what are the number of the wines that have prices lower than 50 and have appelations in Monterey county?",
            "What are the wines that have prices lower than 50 and have appelations in Monterey county, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chardonnay",
                        "y_data": 2
                    },
                    {
                        "x_data": "Garys Vineyard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Kali Hart",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metallico Un-Oaked",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pinot Noir",
                        "y_data": 4
                    },
                    {
                        "x_data": "Rosellas Vineyard",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sarmento Vineyard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sleepy Hollow Vineyard",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Bar chart x axis away team y axis the number of away team, I want to rank by the y-axis from high to low.",
            "Show the number of games for each away team in a bar chart, I want to display by the Y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 10
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 7
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Away_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Away_team)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find Team_Name and ACC_Percent , and visualize them by a bar chart, I want to order by the Y-axis in desc please.",
            "Give me the comparison about ACC_Percent over the Team_Name by a bar chart, could you display by the ACC_Percent in desc?",
            "Show me about the distribution of Team_Name and ACC_Percent in a bar chart, and show by the Y-axis in desc.",
            "Give me the comparison about ACC_Percent over the Team_Name , and rank in descending by the y-axis.",
            "A bar chart shows the distribution of Team_Name and ACC_Percent , and rank in descending by the y-axis.",
            "Plot acc_percent by grouped by team name as a bar graph, and I want to order in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "genres",
            "tracks"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "List the top 5 genres by number of tracks. List genres name and total tracks with a bar chart.",
            "List the top 5 genres by number of tracks. List genres name and total tracks. Plot them as bar chart.",
            "Visualize a bar chart for how many tracks does each genre have and what are the names of the top 5?",
            "Show me a bar chart for how many tracks does each genre have and what are the names of the top 5?",
            "How many tracks does each genre have and what are the names of the top 5. Show bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Rock",
                        "y_data": 1297
                    },
                    {
                        "x_data": "Latin",
                        "y_data": 579
                    },
                    {
                        "x_data": "Metal",
                        "y_data": 374
                    },
                    {
                        "x_data": "Alternative & Punk",
                        "y_data": 332
                    },
                    {
                        "x_data": "Jazz",
                        "y_data": 130
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "Show the number of headquarters from each headquarters, and I want to show y-axis from high to low order please.",
            "What is the number of companies for each headquarter? Visualize by bar chart, sort by the total number in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "USA",
                        "y_data": 8
                    },
                    {
                        "x_data": "China",
                        "y_data": 4
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "Russia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 1
                    },
                    {
                        "x_data": "France",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                }
            }
        }
    },
    {
        "tables_used": [
            "nomination",
            "artwork",
            "festival_detail"
        ],
        "db_id": "entertainment_awards",
        "nl_queries": [
            "Show the ids and names of festivals that have at least two nominations for artworks by a bar chart, rank in desc by the x-axis please.",
            "Show the ids and names of festivals that have at least two nominations for artworks Plot them as bar chart, and order by the bar in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Panasonic Awards",
                        "y_data": 1
                    },
                    {
                        "x_data": "LA Awards",
                        "y_data": 5
                    },
                    {
                        "x_data": "Flower Awards",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Festival_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Festival_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "school_bus",
            "school"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the type of school and the number of buses for each type in a bar chart, display y axis in descending order.",
            "Show the type of school and the number of buses for each type, and I want to list by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Private",
                        "y_data": 3
                    },
                    {
                        "x_data": "Public",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home in a bar chart, and sort by the y-axis in desc.",
            "Visualize a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and list by the the average of team id from high to low.",
            "A bar chart shows the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and order from high to low by the Y please.",
            "Return a bar chart about the distribution of All_Home and the average of Team_ID , and group by attribute All_Home, and sort in desc by the total number.",
            "Find All_Home and the average of Team_ID , and group by attribute All_Home, and visualize them by a bar chart, sort in desc by the total number.",
            "Give me a bar chart for mean team id of each all home, and list by the the average of team id from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20133",
                        "y_data": 4
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Give me a bar chart for the number of area of each area, sort by the Y from high to low.",
            "Return a bar chart for what is the number of areas for all appellations?, and show y axis from high to low order please.",
            "List the number of areas of all appellations in the bar chart, rank by the total number from high to low.",
            "Show me a bar chart about the number of areas for all appellations, sort in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Coast",
                        "y_data": 31
                    },
                    {
                        "x_data": "Central Coast",
                        "y_data": 14
                    },
                    {
                        "x_data": "Sierra Foothills",
                        "y_data": 5
                    },
                    {
                        "x_data": "Santa Cruz Mountains",
                        "y_data": 3
                    },
                    {
                        "x_data": "Central Valley",
                        "y_data": 2
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 1
                    },
                    {
                        "x_data": "California",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Area",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Area)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Sex and the sum of Height , and group by attribute Sex, and sort from low to high by the sum height.",
            "Show me about the distribution of Sex and the sum of Height , and group by attribute Sex in a bar chart, could you display from low to high by the y axis?",
            "Give me the comparison about the sum of Height over the Sex , and group by attribute Sex by a bar chart, rank by the Y in ascending please.",
            "Return a bar chart about the distribution of Sex and the sum of Height , and group by attribute Sex, and could you display from low to high by the y axis?",
            "Bar chart of total number of height from each sex, rank by the y axis in asc.",
            "A bar chart shows the distribution of Sex and the sum of Height , and group by attribute Sex, could you list Y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 395
                    },
                    {
                        "x_data": "M",
                        "y_data": 1366
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Height)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "treatment_types"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the cost of each treatment and the corresponding treatment type description by a bar chart, could you order in ascending by the Y-axis?",
            "List the cost of each treatment and the corresponding treatment type description Show bar chart, and order by the Y from low to high.",
            "Display a bar chart for what are the cost and treatment type description of each treatment?, could you order in ascending by the Y-axis?",
            "Visualize a bar chart for what are the cost and treatment type description of each treatment?, and could you order in asc by the total number?",
            "What are the cost and treatment type description of each treatment Show bar chart, could you order in asc by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Take for a Walk",
                        "y_data": 478.4
                    },
                    {
                        "x_data": "Physical examination",
                        "y_data": 485.8
                    },
                    {
                        "x_data": "Vaccination",
                        "y_data": 508
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "treatment_type_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(cost_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for male and female students with a pie chart.",
            "Show the average age for male and female students. Show the proportion.",
            "Pie. what are the average ages for male and female students?",
            "Pie chart. what are the average ages for male and female students?",
            "What are the average ages for male and female students.",
            "Give me a pie to show the average of age from different sex."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    },
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "For each party, use a bar chart to show the number of its delegates, sort bars in asc order.",
            "Show how many delegates in each party with a bar chart, and show by the Party in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 4
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Party)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart, and display by the X in ascending.",
            "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, show in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Panama",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Flag)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Tell me how many cinemas open for each year in a bar chart, and sort X-axis from high to low order.",
            "Bar chart of how many openning year from each openning year, and could you show in descending by the bars?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2009-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Openning_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "appointment",
            "physician"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "List the name of physicians who took some appointment, and count them by a bar chart",
            "What are the names of all the physicians who took appointments, and count them by a bar chart",
            "List the number of the name of physicians who took some appointment.",
            "A bar chart for listing the number of the name of physicians who took some appointment."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Elliot Reid",
                        "y_data": 3
                    },
                    {
                        "x_data": "John Dorian",
                        "y_data": 2
                    },
                    {
                        "x_data": "Molly Clock",
                        "y_data": 1
                    },
                    {
                        "x_data": "Percival Cox",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home in a bar chart, could you order by the Y in ascending?",
            "Find ACC_Road and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and rank by the Team_ID in ascending please.",
            "A bar chart shows the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, sort y axis from low to high order please.",
            "Give me the comparison about Team_ID over the ACC_Road , and group by attribute ACC_Home, and sort by the Y-axis in ascending.",
            "Stacked bar chart of team_id for with each ACC_Home in each acc road, sort by the Y in asc.",
            "Draw a bar chart about the distribution of ACC_Road and Team_ID , and group by attribute ACC_Home, I want to list in asc by the Team_ID please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 3,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "match_season"
        ],
        "db_id": "match_season",
        "nl_queries": [
            "Visualize a bar chart for how many players are from each country?, could you show by the Country_name from low to high?",
            "Show the country names and the corresponding number of players Show bar chart, and could you sort X-axis from low to high order?",
            "Show the country names and the corresponding number of players in a bar chart, I want to rank by the x axis from low to high.",
            "How many players are from each country Visualize by bar chart, list bar in asc order.",
            "Show me a bar chart for how many players are from each country?, and show x-axis in ascending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Indonesia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 4
                    },
                    {
                        "x_data": "Isle of Man",
                        "y_data": 2
                    },
                    {
                        "x_data": "United States",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Return the number of the lot details of lots that belong to investors with details \"l\"?, and show in desc by the x axis.",
            "A bar chart for returning the number of the lot details of lots that belong to investors with details \"l\"?, could you sort by the x-axis from high to low?",
            "Return the lot details of lots that belong to investors with details \"l\", and count them by a bar chart, and I want to rank by the bar in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "h",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the number of each allergie type in a bar chart.",
            "What is the number of each allergie type? Return a bar chart.",
            "Create a bar chart showing how many allergytype across allergytype"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and list Founder in desc order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of founder and the sum of code , and group by attribute founder, and list by the bar in descending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, and I want to rank in descending by the bar.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, and I want to sort in desc by the bar.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and I want to sort in desc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 23
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 3
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 28
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Create a bar chart showing total number of number of platforms across location, sort by the x-axis in desc.",
            "What is the number of platforms for each location? Show the comparison with a bar chart, rank bars from high to low order.",
            "Give me a bar chart about the number of platforms in different locations, sort by the x-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "London",
                        "y_data": 140
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Number_of_Platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "home_game"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "Show the trend about the average of the average number of attendance at home games change over the years, bin year into year interval, list by the X-axis in asc please.",
            "Show the trend about the average of the average number of attendance at home games change over the years, bin year into year interval, I want to list in asc by the x-axis.",
            "Can you draw the trend of mean avg(attendance) over the year?, display in ascending by the year.",
            "Can you draw the trend of mean avg(attendance) over the year?, and display in ascending by the year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1871~1884",
                        "y_data": 5450.428571428572
                    },
                    {
                        "x_data": "1885~1898",
                        "y_data": 16799.714285714286
                    },
                    {
                        "x_data": "1899~1912",
                        "y_data": 15462.57142857143
                    },
                    {
                        "x_data": "1913~1926",
                        "y_data": 248823.35714285713
                    },
                    {
                        "x_data": "1927~1940",
                        "y_data": 375723.85714285716
                    },
                    {
                        "x_data": "1941~1954",
                        "y_data": 898984.2857142857
                    },
                    {
                        "x_data": "1955~1968",
                        "y_data": 1102628.357142857
                    },
                    {
                        "x_data": "1969~1982",
                        "y_data": 1340008.2142857143
                    },
                    {
                        "x_data": "1983~1996",
                        "y_data": 1981904.7142857143
                    },
                    {
                        "x_data": "1997~2010",
                        "y_data": 2325929.285714286
                    },
                    {
                        "x_data": "2011~2014",
                        "y_data": 2387512.25
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(avg(attendance))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Count job title of all people ordered by their names using a bar chart.",
            "Please give me a bar chart to show the names and job titles of every person ordered alphabetically by name?",
            "Can you compute the number of people with different job titles? Plot them as a bar graph."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 1
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 1
                    },
                    {
                        "x_data": "student",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(job)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of Team_Name and All_Games_Percent .",
            "Return a bar chart about the distribution of Team_Name and All_Games_Percent .",
            "Give me the comparison about All_Games_Percent over the Team_Name .",
            "Find Team_Name and All_Games_Percent , and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of Team_Name and All_Games_Percent .",
            "Give me a bar chart for all_games_percent of each team name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "North Carolina",
                        "y_data": 0.946
                    },
                    {
                        "x_data": "Duke",
                        "y_data": 0.8240000000000001
                    },
                    {
                        "x_data": "Clemson",
                        "y_data": 0.706
                    },
                    {
                        "x_data": "Virginia Tech",
                        "y_data": 0.6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team_Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "professor",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of professors in each office with a bar chart, sort by the total number in asc.",
            "How many professors in each office? Show me a bar chart, I want to display by the y-axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AAK 160",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 194",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 201",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 230",
                        "y_data": 1
                    },
                    {
                        "x_data": "AAK 297",
                        "y_data": 1
                    },
                    {
                        "x_data": "BBG 185",
                        "y_data": 1
                    },
                    {
                        "x_data": "BBG 208",
                        "y_data": 1
                    },
                    {
                        "x_data": "DRE 208",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 126",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 203E",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 211",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 229D",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 244",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 300",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 333",
                        "y_data": 1
                    },
                    {
                        "x_data": "KLR 409B",
                        "y_data": 1
                    },
                    {
                        "x_data": "DRE 102",
                        "y_data": 2
                    },
                    {
                        "x_data": "DRE 156",
                        "y_data": 2
                    },
                    {
                        "x_data": "KLR 284",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PROF_OFFICE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(PROF_OFFICE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "submission"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Create a bar chart showing the number of author across author, and show from high to low by the x axis.",
            "Visualize a bar chart for how many authors submit to the workshop, sort Author in descending order please.",
            "Show the authors of their total submissions with a bar chart, and display x axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Steve Raible",
                        "y_data": 1
                    },
                    {
                        "x_data": "Steve Niehaus",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sherman Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sammy Green",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jeff Lloyd",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Author",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Author)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, find name and the average of price , and group by attribute name, and visualize them by a bar chart, and display by the names from low to high please.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the average of price , and group by attribute name, could you display in asc by the bars?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the average of price , and group by attribute name, and rank Name from low to high order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the average of price , and group by attribute name, and display x-axis from low to high order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the name , and group by attribute name by a bar chart, and sort from low to high by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 150
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 162
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 62.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "Plot the total number by grouped by competition type as a bar graph, and order X in ascending order.",
            "List the types of competition and the number of competitions of each type in a bar chart, sort by the bars in asc please.",
            "Return a histogram on what are the types of competition and number of competitions for that type?, and list by the names from low to high.",
            "What are the types of competition and number of competitions for that type Show bar chart, and display names in ascending order.",
            "List the types of competition and the number of competitions of each type Visualize by bar chart, sort bars in asc order please.",
            "Give me a histogram for what are the types of competition and number of competitions for that type?, order X in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the max gpa of all students in each department with a bar chart.",
            "What is the highest student GPA for every department? Return a bar chart.",
            "Show me maximal stu gpa by dept code in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ACCT",
                        "y_data": 3.15
                    },
                    {
                        "x_data": "BIOL",
                        "y_data": 2.84
                    },
                    {
                        "x_data": "CIS",
                        "y_data": 3.27
                    },
                    {
                        "x_data": "EDU",
                        "y_data": 3.87
                    },
                    {
                        "x_data": "ENGL",
                        "y_data": 2.11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_CODE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(stu_gpa)"
                }
            }
        }
    },
    {
        "tables_used": [
            "ref_product_categories",
            "products"
        ],
        "db_id": "products_gen_characteristics",
        "nl_queries": [
            "What are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, rank y-axis in ascending order.",
            "Find the category descriptions of the products whose descriptions include letter 't', and count them by a bar chart, order from low to high by the total number.",
            "Find the number of the category descriptions of the products whose descriptions include letter 't', and order total number in ascending order.",
            "A bar chart for what are the number of the descriptions of the categories that products with product descriptions that contain the letter t are in?, and rank y-axis in ascending order.",
            "What are the descriptions of the categories that products with product descriptions that contain the letter t are in, and count them by a bar chart, could you list by the y axis in asc?",
            "A bar chart for finding the number of the category descriptions of the products whose descriptions include letter 't', sort in ascending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Spices",
                        "y_data": 1
                    },
                    {
                        "x_data": "Herbs",
                        "y_data": 2
                    },
                    {
                        "x_data": "Seeds",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_category_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Part_Faults",
            "Skills_Required_To_Fix",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A stacked bar chart showing the number of faults for different fault short name and skills required to fix them The x-axis is falut short name and group by skill description, and sort y axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PW",
                        "y_data": 3,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 2,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "PW",
                        "y_data": 2,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "MW",
                        "y_data": 4,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "TW",
                        "y_data": 1,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_short_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_short_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "orchestra"
        ],
        "db_id": "orchestra",
        "nl_queries": [
            "Display a bar chart for how many orchestras does each record company manage?, could you sort by the y-axis in descending please?",
            "Draw a bar chart of record company versus the total number, rank in descending by the the total number .",
            "Visualize a bar chart for how many orchestras does each record company manage?, display by the y-axis from high to low.",
            "How many orchestras does each record company manage Show bar chart, show by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Decca Records",
                        "y_data": 2
                    },
                    {
                        "x_data": "RCA",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips Classics Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Philips",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mercury Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kultur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Koch Records / Naxos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "EMI",
                        "y_data": 1
                    },
                    {
                        "x_data": "Deutsche Grammophon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Delos Records",
                        "y_data": 1
                    },
                    {
                        "x_data": "Columbia Masterworks",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Record_Company",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "A bar chart about the number of end dates for incidents with incident type code \"NOISE\"?, sort by the Y in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-16",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-08",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_end",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_end)"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of companies in each headquarter with a pie chart.",
            "How many companies in each headquarter? Plot a pie chart.",
            "Create a pie chart showing how many headquarters across headquarters."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Brazil",
                        "y_data": 1
                    },
                    {
                        "x_data": "China",
                        "y_data": 2
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 1
                    },
                    {
                        "x_data": "UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "USA",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Headquarters)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarters"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "What are the category of music festivals with result \"Awarded\", and count them by a pie chart",
            "A pie chart for what are the number of the category of music festivals with result \"Awarded\"?",
            "What are the number of the category of music festivals with result \"Awarded\"?",
            "Return the number of the categories of music festivals that have the result \"Awarded\".",
            "A pie chart for returning the number of the categories of music festivals that have the result \"Awarded\".",
            "Return the categories of music festivals that have the result \"Awarded\", and count them by a pie chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Best Song",
                        "y_data": 2
                    },
                    {
                        "x_data": "Best Sound Song",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Category)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Category"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many male students are there in each city? Show a bar chart, and list y axis from high to low order.",
            "Find the number of male students (with sex M) from each city in a bar chart, could you show in desc by the Y-axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "PIT",
                        "y_data": 3
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 3
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 2
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 2
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 1
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 1
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 1
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 1
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "LON",
                        "y_data": 1
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 1
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 1
                    },
                    {
                        "x_data": "DET",
                        "y_data": 1
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 1
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 1
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What are the names and average salaries for departments with average salary higher than 42000 Plot them as bar chart, display y axis in descending order.",
            "Give me a histogram for what are the names and average salaries for departments with average salary higher than 42000?, and could you order by the Y-axis from high to low?",
            "Bar chart of mean salary from each dept name, and could you order by the Y-axis from high to low?",
            "Find the names and average salaries of all departments whose average salary is greater than 42000, sort total number in desc order.",
            "Display a bar chart for what are the names and average salaries for departments with average salary higher than 42000?, and display y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Physics",
                        "y_data": 114576.9
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 105311.38
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 100053.07333333332
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 99382.59
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 98133.47
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 96346.5675
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 84097.4375
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 79813.02
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 79070.08
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 77098.198
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 74162.73999999999
                    },
                    {
                        "x_data": "English",
                        "y_data": 72089.04999999999
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 67795.44166666668
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 61287.25
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 61143.05
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 57421.85666666668
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 48716.5925
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(salary)"
                }
            }
        }
    },
    {
        "tables_used": [
            "train"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Compare all train names' total numbers.",
            "Show the number of train names in a bar chart.",
            "Plot how many name by grouped by name as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ananthapuri Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Guruvayur Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Island Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jayanthi Janatha Express",
                        "y_data": 2
                    },
                    {
                        "x_data": "Madurai Fast Passenger",
                        "y_data": 1
                    },
                    {
                        "x_data": "Parasuram Express",
                        "y_data": 1
                    },
                    {
                        "x_data": "Quilon Fast Passenger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a stacked bar chart The x-axis is course description and group by instructor's name, and sort by the bars in descending.",
            "How many courses for each course description? Show me a stacked bar chart The x-axis is course description and group by instructor's name, and sort names in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "Arnelle"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Carlos"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Gerald"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Ismael"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "Peter"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "CAR_MAKERS",
            "MODEL_LIST"
        ],
        "db_id": "car_1",
        "nl_queries": [
            "How many models does each car maker produce? List id and the number in a scatter chart.",
            "Show the id of each car maker and how many models it produces in a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 2,
                        "y_data": 2
                    },
                    {
                        "x_data": 3,
                        "y_data": 1
                    },
                    {
                        "x_data": 4,
                        "y_data": 5
                    },
                    {
                        "x_data": 5,
                        "y_data": 3
                    },
                    {
                        "x_data": 6,
                        "y_data": 4
                    },
                    {
                        "x_data": 7,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 2
                    },
                    {
                        "x_data": 9,
                        "y_data": 1
                    },
                    {
                        "x_data": 11,
                        "y_data": 1
                    },
                    {
                        "x_data": 12,
                        "y_data": 1
                    },
                    {
                        "x_data": 13,
                        "y_data": 2
                    },
                    {
                        "x_data": 14,
                        "y_data": 1
                    },
                    {
                        "x_data": 15,
                        "y_data": 1
                    },
                    {
                        "x_data": 16,
                        "y_data": 1
                    },
                    {
                        "x_data": 17,
                        "y_data": 1
                    },
                    {
                        "x_data": 18,
                        "y_data": 1
                    },
                    {
                        "x_data": 19,
                        "y_data": 2
                    },
                    {
                        "x_data": 20,
                        "y_data": 1
                    },
                    {
                        "x_data": 21,
                        "y_data": 1
                    },
                    {
                        "x_data": 22,
                        "y_data": 1
                    },
                    {
                        "x_data": 23,
                        "y_data": 1
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Flight"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Show the number of flights in each destination city with a bar chart, order bars in descending order.",
            "Can you give a histogram to compare the number of flights to each destination city?, order bars in descending order.",
            "How many flights in each destination city? Return a bar chart, and order by the destination from high to low please.",
            "Show me how many destination by destination in a histogram, order bars in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Washington D.C.",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sydney",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 1
                    },
                    {
                        "x_data": "Honolul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Dallas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Chicago",
                        "y_data": 1
                    },
                    {
                        "x_data": "Boston",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "destination",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(destination)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of salary bin hire_date by time, and visualize them by a bar chart, and order y-axis in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, order total number in asc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart, could you order y-axis in ascending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, order in ascending by the total number of salary.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, and order total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 54500
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Give me a bar chart to show the number of event details of events that have more than one participant, and show in descending by the x-axis.",
            "For events that have more than one participant, count the event details for a bar chart, and I want to show in desc by the Event_Details please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Success",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Church"
        ],
        "db_id": "wedding",
        "nl_queries": [
            "Give me the trend about the number of church opening in each year, and display X-axis from low to high order.",
            "Show me a line chart of how the number of open date change over the open date, and I want to display by the x-axis from low to high.",
            "A line chart shows how many churches open each year?, I want to sort by the X-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1830",
                        "y_data": 1
                    },
                    {
                        "x_data": "1831",
                        "y_data": 1
                    },
                    {
                        "x_data": "1832",
                        "y_data": 1
                    },
                    {
                        "x_data": "1833",
                        "y_data": 0
                    },
                    {
                        "x_data": "1834",
                        "y_data": 0
                    },
                    {
                        "x_data": "1835",
                        "y_data": 0
                    },
                    {
                        "x_data": "1836",
                        "y_data": 1
                    },
                    {
                        "x_data": "1837",
                        "y_data": 1
                    },
                    {
                        "x_data": "1838",
                        "y_data": 0
                    },
                    {
                        "x_data": "1839",
                        "y_data": 1
                    },
                    {
                        "x_data": "1840",
                        "y_data": 1
                    },
                    {
                        "x_data": "1841",
                        "y_data": 0
                    },
                    {
                        "x_data": "1842",
                        "y_data": 1
                    },
                    {
                        "x_data": "1843",
                        "y_data": 0
                    },
                    {
                        "x_data": "1844",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Open_Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Open_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, and list from high to low by the Y-axis.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the average of manufacturer , and group by attribute founder, I want to order by the total number from high to low.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder, and display by the total number in descending.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of manufacturer over the founder , and group by attribute founder by a bar chart, and list from high to low by the Y-axis.",
            "For those records from the products and each product's manufacturer, find founder and the average of manufacturer , and group by attribute founder, and visualize them by a bar chart, list from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 6
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "James",
                        "y_data": 3
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? Show their total number by each participant type code using a bar chart, and could you display X-axis from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Participant",
                        "y_data": 12
                    },
                    {
                        "x_data": "Organizer",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "device"
        ],
        "db_id": "device",
        "nl_queries": [
            "Bar chart x axis software platform y axis the total number, and sort by the Y-axis from high to low.",
            "What are the different software platforms for devices, and how many devices have each, sort in desc by the total number.",
            "A bar chart about what are the different software platforms for devices, and how many devices have each?, sort by the Y-axis from high to low.",
            "what are the different software platforms for devices, and how many devices have each?, sort by the Y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Android",
                        "y_data": 5
                    },
                    {
                        "x_data": "iOS",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Software_Platform",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, display from low to high by the X-axis.",
            "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, display from low to high by the X-axis.",
            "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and could you rank bar in asc order?",
            "Draw a bar chart of meter 200 versus the average of id, and display bars from low to high order.",
            "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and display from low to high by the X-axis.",
            "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, and rank in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 3.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Subjects"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the number of courses for each subject in a pie chart.",
            "How many courses for each subject? Plot a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arts",
                        "y_data": 4
                    },
                    {
                        "x_data": "Language",
                        "y_data": 5
                    },
                    {
                        "x_data": "Computer Science",
                        "y_data": 6
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "subject_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of dorms for each gender with a pie chart.",
            "How many dorms are there for each gender? Plot apie chart.",
            "I want to know the proportion of the total number for each gender."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 1
                    },
                    {
                        "x_data": "M",
                        "y_data": 1
                    },
                    {
                        "x_data": "X",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What are average ages for students living in each city? Return a bar chart, and sort in asc by the total number.",
            "Bar chart of mean age from each city code, I want to list by the total number in ascending.",
            "Find the average age of students living in each city with a bar chart, and show in asc by the the average of age."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country",
            "countrylanguage"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "What is the official language spoken in the country whose head of state is Beatrix, and count them by a bar chart",
            "What is the official language used in the country the name of whose head of state is Beatrix, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dutch",
                        "y_data": 3
                    },
                    {
                        "x_data": "Papiamento",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Language",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Language)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A bar chart showing the average weight for each gender.",
            "What is the averag weights for people of each sex? Show a bar chart.",
            "Show the average of weight from each sex"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 92
                    },
                    {
                        "x_data": "M",
                        "y_data": 86.7142857142857
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "song"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "What is the average song rating for each language Plot them as bar chart, order by the mean rating in ascending please.",
            "Draw a bar chart for what is the average rating of songs for each language?, and display by the mean rating from low to high.",
            "Show me a bar chart for what is the average rating of songs for each language?, order by the mean rating in ascending please.",
            "Show me mean rating by languages in a histogram, order by the mean rating in ascending please.",
            "What is the average rating of songs for each language Plot them as bar chart, and order in ascending by the Y-axis.",
            "Show me a bar chart for what is the average song rating for each language?, and list from low to high by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "english",
                        "y_data": 7
                    },
                    {
                        "x_data": "bangla",
                        "y_data": 7.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "languages",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(rating)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, list total number in descending order.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home, and list total number in descending order.",
            "Return a bar chart about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home, could you display by the Y-axis in desc?",
            "Show me about the distribution of ACC_Road and School_ID , and group by attribute ACC_Home in a bar chart, and show Y-axis in descending order.",
            "Give me the comparison about School_ID over the ACC_Road , and group by attribute ACC_Home by a bar chart, could you display by the Y-axis in desc?",
            "Stacked bar chart of school_id for with each ACC_Home in each acc road, display in desc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 5,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "3\u20135",
                        "y_data": 4,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 0,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "School_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "student)"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of students whose age is older than the average age for each gender. Visualize by pie chart.",
            "Draw a pie chart for how many students are older than average for each gender?",
            "Return a pie on how many students are older than average for each gender?",
            "How many students are older than average for each gender."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 5
                    },
                    {
                        "x_data": "M",
                        "y_data": 10
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute name, show by the X-axis from high to low.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name, and rank in desc by the bars.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart, and rank in desc by the bars.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name, and display by the X in desc.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart, and rank in desc by the bars."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Likes",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Give me a bar chart to show the number of names of high schoolers who have likes, and could you sort Y from low to high order?",
            "Show me the frequency of names of high schoolers who have likes with a bar chart, and could you show by the total number in asc?",
            "Show the number of names of high schoolers who have likes with a bar chart, and show by the Y-axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "John",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Give me a line chart about the number of competitions held in each year, display X from low to high order.",
            "Give me a line chart about the number of competitions held in each year, could you rank by the X in ascending?",
            "Show how many competitions are held in each year with a line chart, and could you rank by the X in ascending?",
            "Show how many competitions are held in each year with a line chart, and could you order by the x-axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "workshop"
        ],
        "db_id": "workshop_paper",
        "nl_queries": [
            "Show the number of venue from each venue, rank by the X in asc.",
            "Return the number of venues of each workshop in a bar chart, and rank X-axis in ascending order.",
            "A bar chart shows the venue for each workshop, could you sort from low to high by the names?",
            "Draw a bar chart that counts the number of venues of each workshop, and I want to order in ascending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Istanbul Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "London UK",
                        "y_data": 2
                    },
                    {
                        "x_data": "New Jersey USA",
                        "y_data": 1
                    },
                    {
                        "x_data": "New York USA",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student",
            "Has_allergy",
            "Allergy_Type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "List the last name of the students who do not have any food type allergy and count them in a bart chart.",
            "What is the last name of each student who is not allergic to any type of food? Count them with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andreo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brody",
                        "y_data": 1
                    },
                    {
                        "x_data": "Brown",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cheng",
                        "y_data": 1
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Epp",
                        "y_data": 1
                    },
                    {
                        "x_data": "Goldman",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 2
                    },
                    {
                        "x_data": "Prater",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmidt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simms",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thornton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wilson",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name, and I want to rank from low to high by the y axis.",
            "For those records from the products and each product's manufacturer, find name and the sum of code , and group by attribute name, and visualize them by a bar chart, and could you rank by the y axis in asc?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, could you order by the Y in ascending?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, rank by the y axis in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, and could you order by the Y in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 6
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 9
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Show me about the distribution of other_details and the amount of other_details , and group by attribute other_details in a bar chart.",
            "Draw a bar chart about the distribution of other_details and the amount of other_details , and group by attribute other_details.",
            "Return a bar chart about the distribution of other_details and the amount of other_details , and group by attribute other_details.",
            "Give me the comparison about the amount of other_details over the other_details , and group by attribute other_details.",
            "A bar chart shows the distribution of other_details and the amount of other_details , and group by attribute other_details."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "apartment",
                        "y_data": 7
                    },
                    {
                        "x_data": "house",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, and order by the Name in ascending.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, and sort from low to high by the x-axis please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, and sort from low to high by the X-axis.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, and sort X in ascending order.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name, and I want to order Name from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 17
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Compare the total number of different ranks using a bar graph, and sort from low to high by the Y.",
            "Bar graph to show the number of rank from different rank, and list how many rank in asc order please.",
            "Show me a bar chart comparing the total number of captains in each rank, and list how many rank in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Rank)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "For the attribute Is_full_time and the sum of Employee_ID, show their proportion by a pie chart.",
            "Draw a pie chart about the proportion of Is_full_time and the sum of Employee_ID.",
            "Show me about the proportion of the sum of Employee_ID and the sum of Employee_ID in a pie chart.",
            "Return a pie chart about the proportion of Is_full_time and the sum of Employee_ID.",
            "Visualize a pie chart about the proportion of Is_full_time and the sum of Employee_ID.",
            "Create a pie chart showing sum employee id across is full time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 9
                    },
                    {
                        "x_data": "T",
                        "y_data": 19
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time"
                }
            }
        }
    },
    {
        "tables_used": [
            "airports"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "Find the altitude (or elevation) of the airports in the city of New York with a bar chart, and I want to rank in descending by the bar.",
            "What is the altitude (or elevation) of the airports in the city of New York? Show me a bar chart, and I want to rank in descending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "One Police Plaza Heliport",
                        "y_data": 244
                    },
                    {
                        "x_data": "La Guardia Airport",
                        "y_data": 21
                    },
                    {
                        "x_data": "John F Kennedy International Airport",
                        "y_data": 13
                    },
                    {
                        "x_data": "Indianola Municipal Airport",
                        "y_data": 126
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "elevation"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show the capacity for each cinema in a bar chart, list y axis in asc order.",
            "Create a bar chart showing capacity across name, sort Capacity from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Grouse Lodge",
                        "y_data": 203
                    },
                    {
                        "x_data": "Gortahile",
                        "y_data": 208
                    },
                    {
                        "x_data": "Moneypoint",
                        "y_data": 225
                    },
                    {
                        "x_data": "Glenmore",
                        "y_data": 305
                    },
                    {
                        "x_data": "Glenough",
                        "y_data": 325
                    },
                    {
                        "x_data": "Oriel",
                        "y_data": 330
                    },
                    {
                        "x_data": "Dublin Array",
                        "y_data": 364
                    },
                    {
                        "x_data": "Carrowleagh",
                        "y_data": 368
                    },
                    {
                        "x_data": "Mount Callan",
                        "y_data": 908
                    },
                    {
                        "x_data": "Codling",
                        "y_data": 1100
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Capacity"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone_market",
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "For each phone, show its names and total number of stocks."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "IPhone 5s",
                        "y_data": 2914
                    },
                    {
                        "x_data": "IPhone 6s",
                        "y_data": 4324
                    },
                    {
                        "x_data": "IPhone 7",
                        "y_data": 874
                    },
                    {
                        "x_data": "IPhone X",
                        "y_data": 2540
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(T1.Num_of_stock)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "For those wines whose price is bigger than 100, count their total number of each year and sort by year in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2006-01-01",
                        "y_data": 4,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 11,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 2,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 1,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 1,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "2006-01-01",
                        "y_data": 1,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "2007-01-01",
                        "y_data": 1,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "2008-01-01",
                        "y_data": 0,
                        "classify": "Syrah"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of department_id over hire_date , display by the X from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for department_id, hire_date, visualize the trend, I want to sort by the X-axis from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me about the change of department_id over hire_date in a line chart, rank by the HIRE_DATE in asc.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of department_id over hire_date , and display by the X from low to high.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, show me the trend about department_id over hire_date with a line chart, and order by the X-axis in asc please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of department_id over hire_date , order by the HIRE_DATE in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 10
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 20
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 70
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 110
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Does it have something interesting about the manager id and the department id?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0,
                        "y_data": 90
                    },
                    {
                        "x_data": 102,
                        "y_data": 60
                    },
                    {
                        "x_data": 101,
                        "y_data": 100
                    },
                    {
                        "x_data": 100,
                        "y_data": 30
                    },
                    {
                        "x_data": 100,
                        "y_data": 50
                    },
                    {
                        "x_data": 100,
                        "y_data": 80
                    },
                    {
                        "x_data": 101,
                        "y_data": 10
                    },
                    {
                        "x_data": 100,
                        "y_data": 20
                    },
                    {
                        "x_data": 101,
                        "y_data": 40
                    },
                    {
                        "x_data": 101,
                        "y_data": 70
                    },
                    {
                        "x_data": 101,
                        "y_data": 110
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "trained_in",
            "procedures"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart",
            "A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000.",
            "Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart",
            "Find the number of the physicians who are trained in a procedure that costs more than 5000."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    },
                    {
                        "x_data": "John Wen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Todd Quinlan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "editor"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Display a bar chart for the names and the ages of editors.",
            "Visualize a bar chart to show editors' names and their ages.",
            "What are the names and ages of editors? Show me a bar chart.",
            "Compare each editors' ages using a bar chart.",
            "Draw a bar chart of name versus age"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 34
                    },
                    {
                        "x_data": "Anna Powierza",
                        "y_data": 35
                    },
                    {
                        "x_data": "Marek Siudym",
                        "y_data": 21
                    },
                    {
                        "x_data": "Piotr Pr\u0119gowski",
                        "y_data": 43
                    },
                    {
                        "x_data": "Szymon Wydra",
                        "y_data": 20
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 24
                    },
                    {
                        "x_data": "Mariusz Zalejski",
                        "y_data": 25
                    },
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 54
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 38
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Return a bar chart on what are the different ship flags, and how many ships have each?, order from high to low by the X.",
            "Draw a bar chart for what are the different ship flags, and how many ships have each?, rank by the X-axis in desc.",
            "Show the total number from each flag, and order from high to low by the X.",
            "What are the different ship flags, and how many ships have each Plot them as bar chart, and order x-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Panama",
                        "y_data": 8
                    },
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Transcript_Contents",
            "Transcripts"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Bin the transcript date into year interval and count them for a line chart, list from low to high by the X.",
            "I want to visualize the trend about the total appears times of transcript date in the Year interval, sort in ascending by the transcript_date.",
            "I want to visualize the trend about the total appears times of transcript date in the Year interval, list from low to high by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1975~1978",
                        "y_data": 1
                    },
                    {
                        "x_data": "1979~1982",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1986",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987~1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1991~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1998",
                        "y_data": 1
                    },
                    {
                        "x_data": "1999~2002",
                        "y_data": 0
                    },
                    {
                        "x_data": "2003~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "2007~2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2011~2013",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transcript_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(transcript_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Catalogs"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Bar chart x axis date of latest revision y axis the number of date of latest revision, could you rank in desc by the Y-axis?",
            "Find the dates on which more than one revisions were made, and the bin the date of latest revision into weekday interval and count them as a bar chart, and I want to list in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_latest_revision",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_latest_revision)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "What are the names and total grades for each high schooler Plot them as a bar chart, and could you show by the name in asc?",
            "Bar chart x axis name y axis total number of grade, show by the bar in ascending.",
            "Show the names and the total grades of each high schooler by a bar chart, and could you show by the name in asc?",
            "Show me a bar chart for what are the names and their total grades for each high schooler?, and order x-axis in asc order.",
            "Show the names and sum grades of each high schooler Plot them as bar graph, I want to list bar in asc order.",
            "What are the names and their total grades for each high schooler? Show me the result using a bar chart, and order x-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexis",
                        "y_data": 11
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 10
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 11
                    },
                    {
                        "x_data": "Brittany",
                        "y_data": 10
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 9
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 20
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 10
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 11
                    },
                    {
                        "x_data": "John",
                        "y_data": 12
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 21
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 10
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 12
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 12
                    },
                    {
                        "x_data": "Tiffany",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(grade)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Please give me a bar chart to show the average age for each type of pet.",
            "What is the average age for each pet type? Show me a histogram.",
            "Return a bar graph to visualize the average age for each pet type.",
            "Bar chart of the average of pet age from each pettype"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 3
                    },
                    {
                        "x_data": "dog",
                        "y_data": 1.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(pet_age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "shop",
            "happy_hour)"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Find the address and staff number of the shops that do not have any happy hour Visualize by bar chart, I want to display Num_of_staff in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2345 McGee Street",
                        "y_data": 425
                    },
                    {
                        "x_data": "1201 Walnut Street",
                        "y_data": 34
                    },
                    {
                        "x_data": "909 Main Street",
                        "y_data": 28
                    },
                    {
                        "x_data": "909 Walnut Street",
                        "y_data": 27
                    },
                    {
                        "x_data": "1100 Main Street",
                        "y_data": 23
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Num_of_staff"
                }
            }
        }
    },
    {
        "tables_used": [
            "Grants",
            "Organisations"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "What are the ids and details for all organizations that have grants of more than 6000 dollars, and I want to order by the bars in descending.",
            "Find the organisation ids and details of the organisations which are involved i Plot them as bar chart, list bar in desc order.",
            "Display a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, and display in descending by the x-axis.",
            "Draw a bar chart for what are the ids and details for all organizations that have grants of more than 6000 dollars?, could you order by the X from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "quo",
                        "y_data": 14
                    },
                    {
                        "x_data": "officiis",
                        "y_data": 10
                    },
                    {
                        "x_data": "itaque",
                        "y_data": 19
                    },
                    {
                        "x_data": "eius",
                        "y_data": 2
                    },
                    {
                        "x_data": "a",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organisation_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(organisation_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about department_id over the email , could you list Y in descending order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and department_id , display from high to low by the DEPARTMENT_ID.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and department_id in a bar chart, order in desc by the Y.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find email and department_id , and visualize them by a bar chart, I want to list Y-axis from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and department_id , I want to list Y-axis from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "WGIETZ",
                        "y_data": 110
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 110
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 70
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 40
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 20
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 20
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a stacked bar chart The x-axis is the instructor's first name and group by course code, and show by the bars from low to high please.",
            "Show the number of courses each instructor taught in a stacked bar chart The x-axis is the instructor's first name and group by course code, and show by the bars from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Arnelle",
                        "y_data": 2,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "ACCT-211"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "ACCT-212"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 2,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 1,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-220"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "CIS-420"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 2,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-261"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "QM-362"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "QM-362"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "race"
        ],
        "db_id": "race_track",
        "nl_queries": [
            "Give me a bar chart for the total number of each class, display in asc by the Y-axis.",
            "Show the race class and number of races in each class, and could you sort total number in ascending order?",
            "Draw a bar chart for what are the different classes of races, and how many races correspond to each?, and show in asc by the total number.",
            "Visualize a bar chart for what are the different classes of races, and how many races correspond to each?, and could you order in ascending by the Y?",
            "What are the different classes of races, and how many races correspond to each Show bar chart, order from low to high by the total number.",
            "Show the race class and number of races in each class with a bar chart, could you show in ascending by the total number?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GT",
                        "y_data": 2
                    },
                    {
                        "x_data": "DP/GT",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Class",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments",
            "locations",
            "countries"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show me a bar chart for what are all the employee ids and the names of the countries in which they work?, sort by the total number from low to high.",
            "What are all the employee ids and the names of the countries in which they work Visualize by bar chart, and show total number in ascending order.",
            "Give me a histogram for what are all the employee ids and the names of the countries in which they work?, and list total number in asc order.",
            "Find employee with ID and name of the country presently where (s)he is working Visualize by bar chart, could you rank in ascending by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United Kingdom",
                        "y_data": 203
                    },
                    {
                        "x_data": "Germany",
                        "y_data": 204
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 403
                    },
                    {
                        "x_data": "United States of America",
                        "y_data": 9891
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "COUNTRY_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, I want to display from high to low by the y axis.",
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of employee_id bin hire_date by time, and visualize them by a bar chart, and could you order in descending by the Y?",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by time, and list in descending by the y axis.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by time, and rank y axis from high to low order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of employee_id over the hire_date bin hire_date by time, sort from high to low by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 2293
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 2111
                    },
                    {
                        "x_data": "July",
                        "y_data": 1925
                    },
                    {
                        "x_data": "June",
                        "y_data": 860
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "tv_channel"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "What are the pixel aspect ratio and country of origin for all TV channels that do not use English? Show the comparison of the total number of pixel aspect ratio in a bar chart, order names in asc order.",
            "Give me a bar chart showing the comparison of the pixel aspect ratio and the nation of the tv channels that do not use English, could you sort by the X-axis in ascending please?",
            "Find the pixel aspect ratio and the nation of the tv channels that do not use English Show the number of different pixel aspect ratios with a bar chart, I want to show by the Pixel_aspect_ratio_PAR in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "16:9",
                        "y_data": 3
                    },
                    {
                        "x_data": "4:3",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:3 / 16:9",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Pixel_aspect_ratio_PAR",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Pixel_aspect_ratio_PAR)"
                }
            }
        }
    },
    {
        "tables_used": [
            "locations"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Group and count the state province attribute of the location table to visualize a bar chart.",
            "Give me a bar chart to compare the number of state provinces located in different cities.",
            "Create a bar chart showing the number of state province across state province"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bavaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "California",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oxford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Texas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Washington",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STATE_PROVINCE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STATE_PROVINCE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "constructors",
            "constructorstandings"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "Find the number of the names of Japanese constructors that have once earned more than 5 points?, and rank in desc by the Y-axis.",
            "A bar chart for finding the number of the names of Japanese constructors that have once earned more than 5 points?, sort total number in descending order please.",
            "Find the names of Japanese constructors that have once earned more than 5 points, and count them by a bar chart, could you order total number from high to low order please?",
            "A bar chart for what are the number of the names of all the Japanese constructors that have earned more than 5 points?, rank in desc by the Y-axis.",
            "What are the number of the names of all the Japanese constructors that have earned more than 5 points?, and could you show how many name in desc order please?",
            "What are the names of all the Japanese constructors that have earned more than 5 points, and count them by a bar chart, and could you show how many name in desc order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Toyota",
                        "y_data": 95
                    },
                    {
                        "x_data": "Honda",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate_people",
            "debate",
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show the number of debates for each person on the affirmative side in a bar chart, I want to list y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "James Humphrey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Luther C. Carter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thomas J. Barr",
                        "y_data": 1
                    },
                    {
                        "x_data": "William B. Maclay",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's last name.",
            "How many dogs each owner has? Return a bar chart that groups by owner's last name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DuBuque",
                        "y_data": 1
                    },
                    {
                        "x_data": "Feil",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fisher",
                        "y_data": 1
                    },
                    {
                        "x_data": "Funk",
                        "y_data": 3
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mertz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nicolas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "Prohaska",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rippin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schmitt",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stoltenberg",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "last_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(last_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "A pie chart for what are the number of the descriptions for the aircrafts?",
            "What are the number of the descriptions for the aircrafts?",
            "What are the descriptions for the aircrafts, and count them by a pie chart",
            "A pie chart for listing the number of the description of all aircrafts.",
            "List the number of the description of all aircrafts.",
            "List the description of all aircrafts, and count them by a pie chart",
            "Create a pie chart showing how many description across description."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Heavy-lift helicopter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Light utility helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tandem rotor helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turboshaft utility helicopter",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Description)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Description"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart, show by the x-axis in ascending.",
            "For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart, could you list in ascending by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903~1913",
                        "y_data": 10
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 15
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 5
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 5
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 40
                    },
                    {
                        "x_data": "2013",
                        "y_data": 15
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "Office_locations",
            "buildings",
            "Companies"
        ],
        "db_id": "company_office",
        "nl_queries": [
            "Return a bar chart showing the number of each company whose office is located in the building, and sort total number from high to low order.",
            "List the number of each company whose office is in the building in a bar chart, and sort by the how many name in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Petrobras",
                        "y_data": 3
                    },
                    {
                        "x_data": "HSBC",
                        "y_data": 2
                    },
                    {
                        "x_data": "General Electric",
                        "y_data": 2
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 2
                    },
                    {
                        "x_data": "BNP Paribas",
                        "y_data": 2
                    },
                    {
                        "x_data": "Total",
                        "y_data": 1
                    },
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 1
                    },
                    {
                        "x_data": "JPMorgan Chase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Industrial and Commercial Bank of China",
                        "y_data": 1
                    },
                    {
                        "x_data": "Citigroup",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "shop_membership",
        "nl_queries": [
            "Count the hometown by hometown, I want to sort by the X-axis in asc.",
            "Count the hometown by hometown using a bar chart, and show by the bars in ascending.",
            "Bar chart of the number of hometown from each hometown, could you display X-axis from low to high order?",
            "Show the hometown of all members, I want to sort by the X-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Collierville, Tennessee",
                        "y_data": 1
                    },
                    {
                        "x_data": "Columbia, South Carolina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fort Campbell, Kentucky",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hiram, Georgia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jacksonville, Florida",
                        "y_data": 1
                    },
                    {
                        "x_data": "LaGrange, Georgia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Louisville, Kentucky",
                        "y_data": 2
                    },
                    {
                        "x_data": "Red Jacket, West Virginia",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simpsonville, South Carolina",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Hometown)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "Bar graph to show the number of investor from different investor, and display Y-axis in descending order please.",
            "How many companies each investor has invested? Show me a bar chart, and display Y-axis in descending order please.",
            "Show the number of companies each investor has invested with a bar chart, rank y axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor)"
                }
            }
        }
    },
    {
        "tables_used": [
            "LOTS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bar chart x axis lot details y axis the number of lot details, could you show x-axis in descending order?",
            "A bar chart groups the lot details, and computes the number of each lot details, could you rank bar from high to low order?",
            "Return the lot details, group the lot details, and compute the number of each lot details, and could you show x-axis in descending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "z",
                        "y_data": 3
                    },
                    {
                        "x_data": "x",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 2
                    },
                    {
                        "x_data": "r",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "m",
                        "y_data": 2
                    },
                    {
                        "x_data": "h",
                        "y_data": 2
                    },
                    {
                        "x_data": "d",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "lot_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(lot_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, display in ascending by the x-axis.",
            "For those employees who was hired before 2002-06-21, find job_id and the average of salary , and group by attribute job_id, and visualize them by a bar chart, I want to list in ascending by the X-axis.",
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, I want to display X-axis from low to high order.",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of salary , and group by attribute job_id in a bar chart, and rank by the X-axis in ascending.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of job_id and the average of salary , and group by attribute job_id, order by the x axis in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 4400
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 17000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 7920
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 5760
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 2780
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 12200
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 8350
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 3215
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 2785
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 7280
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "A bar chart for finding the number of the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?",
            "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2, and count them by a bar chart",
            "Find the number of the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?",
            "Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alan Hevesi",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carl McCall",
                        "y_data": 3
                    },
                    {
                        "x_data": "John Faso",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Comptroller",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Comptroller)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name does not containing the letter M, display their average salary by binning the hire date into Month interval for visualizing a bar chart.",
            "Bin the hire date into Month interval, and then compute the average salary of employees in each month for a bar chart, note that just select those employees without the letter M in their first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 10241.666666666666
                    },
                    {
                        "x_data": "July",
                        "y_data": 3429.1666666666665
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 9303.57142857143
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 4491.666666666667
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and could you list by the x-axis from high to low?",
            "A bar chart shows the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, list by the bars in desc.",
            "Draw a bar chart of is full time versus sum employee id, and display bars in desc order please.",
            "Find Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and visualize them by a bar chart, rank in descending by the bars.",
            "Draw a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, could you list by the x-axis from high to low?",
            "Return a bar chart about the distribution of Is_full_time and the sum of Employee_ID , and group by attribute Is_full_time, and show by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "T",
                        "y_data": 19
                    },
                    {
                        "x_data": "F",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Is_full_time",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Employee_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Things",
            "Organizations"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "List the number of items by the details of the organization that owns it using a bar chart, and could you order X-axis in descending order?",
            "Just give me a histogram that X is the details of the organization and the Y-axis is the number of things they own, show by the x-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robel-Schulist Group",
                        "y_data": 3
                    },
                    {
                        "x_data": "Reinger, Hudson and Nolan Group",
                        "y_data": 2
                    },
                    {
                        "x_data": "Denesik and Sons Party",
                        "y_data": 10
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "organization_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(organization_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, show y-axis from high to low order.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time, I want to display y-axis from high to low order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart, and display by the y axis in descending.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart, display by the y-axis in descending.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time, and display by the y axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "July",
                        "y_data": 15
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 13
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 12
                    },
                    {
                        "x_data": "June",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "city",
            "farm_competition"
        ],
        "db_id": "farm",
        "nl_queries": [
            "Use a group line chart to show how many competitions are held in each year, group by official name and bin by year."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "Aroostook"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 1,
                        "classify": "Drummond"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 1,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Grand Falls/Grand-Sault"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 1,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Perth-Andover"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "Plaster Rock"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2,
                        "classify": "Plaster Rock"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Project_Staff"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "Can you draw the trend of how many date from over the date from?, and display in ascending by the X.",
            "Give me the trend about the date_from attributes of all researchers, and bin the date into Year interval, order from low to high by the date_from please.",
            "When do all the researcher role staff start to work? Bin the time into YEAR interval and count them with a line chart, and order from low to high by the date_from please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1970~1973",
                        "y_data": 3
                    },
                    {
                        "x_data": "1974~1977",
                        "y_data": 0
                    },
                    {
                        "x_data": "1978~1981",
                        "y_data": 1
                    },
                    {
                        "x_data": "1982~1985",
                        "y_data": 1
                    },
                    {
                        "x_data": "1986~1989",
                        "y_data": 1
                    },
                    {
                        "x_data": "1990~1993",
                        "y_data": 1
                    },
                    {
                        "x_data": "1994~1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1998~2001",
                        "y_data": 1
                    },
                    {
                        "x_data": "2002~2005",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Who has friends that are older than the average age? Print their name and their ages as well using a bar chart, and I want to rank in descending by the y axis.",
            "Give a me a bar graph to show the friends's name, and ages of all people who are older than the average age of a person, and order by the y-axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob",
                        "y_data": 45
                    },
                    {
                        "x_data": "Alice",
                        "y_data": 35
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Bar chart x axis log entry description y axis the number of log entry description, and I want to order y-axis in ascending order.",
            "Draw a bar chart for what is the number of entry descriptions of each problem?, and list total number in ascending order.",
            "What is the number of entry descriptions of each problem?, and sort from low to high by the how many log entry description.",
            "List all the log entry descriptions and count them using a bar chart, order by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "b",
                        "y_data": 1
                    },
                    {
                        "x_data": "d",
                        "y_data": 1
                    },
                    {
                        "x_data": "h",
                        "y_data": 1
                    },
                    {
                        "x_data": "j",
                        "y_data": 1
                    },
                    {
                        "x_data": "p",
                        "y_data": 1
                    },
                    {
                        "x_data": "q",
                        "y_data": 1
                    },
                    {
                        "x_data": "s",
                        "y_data": 1
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "v",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 1
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "a",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(log_entry_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Find the correlation between average age and experience working length of journalists working on different role type with a scatter plot.",
            "Please return a scatter chart with two attributes: the average age and experience working length of journalists working on different role type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 43,
                        "y_data": 16.5
                    },
                    {
                        "x_data": 35.5,
                        "y_data": 14
                    },
                    {
                        "x_data": 30.33333333333333,
                        "y_data": 4.666666666666667
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "avg(t1.age)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(Years_working)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Bar graph to show the number of document type description from different document type description, and show in ascending by the x-axis.",
            "How many document type for different document type description? Visualize with a bar chart, sort in asc by the x-axis.",
            "Show the number of document type for different document type description in a bar chart, and show in ascending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "excellent",
                        "y_data": 2
                    },
                    {
                        "x_data": "fun",
                        "y_data": 1
                    },
                    {
                        "x_data": "good",
                        "y_data": 1
                    },
                    {
                        "x_data": "very good",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Type_Description",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Type_Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose first name is ending with the letter m, visualize a bar chart to show each employee's salary by the last name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fripp",
                        "y_data": 8200
                    },
                    {
                        "x_data": "Kaufling",
                        "y_data": 7900
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 7400
                    },
                    {
                        "x_data": "Gietz",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the weekday interval, and compute the average of the share count for each bin Return the result using a bar chart, and show by the Y in descending.",
            "Bar chart x axis date of transaction y axis mean share count, and show by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3119057.6666666665
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 554575.3333333334
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 32176.333333333332
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 24427.25
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each county along with the corresponding number of delegates from that county with a bar chart, and sort by the names in ascending.",
            "Show the name of each county along with the corresponding number of delegates from that county Plot them as bar chart, and I want to rank in asc by the bar please.",
            "For each county, find the name of the county and the number of delegates from that county Show bar chart, and order from low to high by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Draw a bar chart for what are the ids and details of events that have more than one participants?, and show in asc by the Y.",
            "What are the ids and details of events that have more than one participants Visualize by bar chart, and I want to show in ascending by the Y.",
            "Return a bar chart on what are the ids and details of events that have more than one participants?, and show in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 23.333333333333332
                    },
                    {
                        "x_data": "Success",
                        "y_data": 41.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show me the average of capacity by openning year in a histogram, and I want to rank bar from low to high order.",
            "A bar chart showing the average of capacity of cinemas open for each year, sort in asc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009-01-01",
                        "y_data": 305
                    },
                    {
                        "x_data": "2010-01-01",
                        "y_data": 544.3333333333334
                    },
                    {
                        "x_data": "2011-01-01",
                        "y_data": 445.3333333333333
                    },
                    {
                        "x_data": "2012-01-01",
                        "y_data": 368
                    },
                    {
                        "x_data": "2013-01-01",
                        "y_data": 330
                    },
                    {
                        "x_data": "2015-01-01",
                        "y_data": 364
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, find their name and the number of reviews written by them Show bar chart, order y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Helen",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Select the name of each manufacturer along with the price of its most expensive product using a bar chart, order y axis from low to high order please.",
            "For each manufacturer's name, what are the prices of their most expensive product?, and show from low to high by the y-axis.",
            "Compare the prices of each manufacturer's most expensive product with a bar chart, and could you display by the Y in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 120
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 180
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 270
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Bar chart x axis date departed y axis the number of date departed, and list by the Y from high to low.",
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by day interval, and display Y in descending order.",
            "List the number of dogs departed in each day with a bar chart that bins departed date by day interval, display in descending by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "25th",
                        "y_data": 12
                    },
                    {
                        "x_data": "24th",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the transaction types and the total amount of transactions with a bar chart.",
            "Show the transaction types and the total amount of transactions.",
            "Visualize a bar chart for what are total transaction amounts for each transaction type?",
            "what are total transaction amounts for each transaction type?",
            "What are total transaction amounts for each transaction type.",
            "Show sum transaction amount from each transaction type"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Payment",
                        "y_data": 8743.15
                    },
                    {
                        "x_data": "Refund",
                        "y_data": 11192.69
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(transaction_amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, draw a scatter chart about the correlation between code and manufacturer , and group by attribute name.",
            "For those products with a price between 60 and 120, show me about the correlation between code and manufacturer , and group by attribute name in a scatter chart.",
            "For those products with a price between 60 and 120, visualize the relationship between code and manufacturer , and group by attribute name.",
            "For those products with a price between 60 and 120, return a scatter chart about the correlation between code and manufacturer , and group by attribute name.",
            "For those products with a price between 60 and 120, a scatter chart shows the correlation between code and manufacturer , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 7,
                        "y_data": 2,
                        "classify": "CD drive"
                    },
                    {
                        "x_data": 2,
                        "y_data": 6,
                        "classify": "Memory"
                    },
                    {
                        "x_data": 9,
                        "y_data": 3,
                        "classify": "Toner cartridge"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "Code",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Calculate the average amount for all the payments processed with Visa of each day of week using a bar chart, rank y-axis in descending order.",
            "For those payments processed with Visa, bin the payment day into the Day of Week interval and compute the average amount payment as the Y-axis, rank y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 233375
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 172309
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 155654
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Amount_Payment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a line chart",
            "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?",
            "A line chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 3
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 2
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 2
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 1
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 1
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 3
                    },
                    {
                        "x_data": "2004",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mailshot_campaigns"
        ],
        "db_id": "customers_campaigns_ecommerce",
        "nl_queries": [
            "Show all distinct product categories along with the number of mailshots in each category Visualize by bar chart, rank x-axis from high to low order please.",
            "Show me the total number by product category in a histogram, rank x-axis from high to low order please.",
            "Show all distinct product categories along with the number of mailshots in each category in a bar chart, list in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "food",
                        "y_data": 11
                    },
                    {
                        "x_data": "clothes",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_category",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course_arrange",
            "course",
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "Show the number of teachers of each course with a pie chart.",
            "A pie chart showing the number of teachers of each course."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bible",
                        "y_data": 1
                    },
                    {
                        "x_data": "History",
                        "y_data": 1
                    },
                    {
                        "x_data": "Math",
                        "y_data": 2
                    },
                    {
                        "x_data": "Music",
                        "y_data": 1
                    },
                    {
                        "x_data": "Science",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Course)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Course"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "Stacked bar chart of how many nationality for with each Type in each nationality, and show by the names in ascending.",
            "Show me a stacked bar graph, the x-axis is the nationality of ship, and the y-axis is their total number of different nationality and split by ship type, sort x-axis in ascending order.",
            "A stacked bar chart shows the total number of ships with different nationalities and split by ship type, order by the Nationality from low to high.",
            "What is the total number of ships with different nationalities and ship types?, I want to order x-axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United Kingdom",
                        "y_data": 2,
                        "classify": "Battle ship"
                    },
                    {
                        "x_data": "United States",
                        "y_data": 1,
                        "classify": "Battle ship"
                    },
                    {
                        "x_data": "United Kingdom",
                        "y_data": 3,
                        "classify": "Cargo ship"
                    },
                    {
                        "x_data": "United States",
                        "y_data": 2,
                        "classify": "Cargo ship"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Nationality)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "payments"
        ],
        "db_id": "products_for_hire",
        "nl_queries": [
            "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "payment_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(payment_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "company_1",
        "nl_queries": [
            "Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart, I want to rank by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 4
                    },
                    {
                        "x_data": "F",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, show me about the distribution of founder and the sum of code , and group by attribute founder in a bar chart, and I want to rank in asc by the bar.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder by a bar chart, could you show in ascending by the X?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of founder and the sum of code , and group by attribute founder, could you order Founder from low to high order?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the founder , and group by attribute founder, and rank by the bar in asc please.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of founder and the sum of code , and group by attribute founder, and order bar in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Andy",
                        "y_data": 1
                    },
                    {
                        "x_data": "James",
                        "y_data": 9
                    },
                    {
                        "x_data": "John",
                        "y_data": 5
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 4
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 6
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a bar chart about the distribution of ACC_Regular_Season and Team_ID .",
            "Give me the comparison about Team_ID over the ACC_Regular_Season by a bar chart.",
            "Give me the comparison about Team_ID over the ACC_Regular_Season .",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and Team_ID .",
            "A bar chart shows the distribution of ACC_Regular_Season and Team_ID .",
            "Show me team_id by acc regular season in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "14\u20132",
                        "y_data": 1
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 2
                    },
                    {
                        "x_data": "10\u20136",
                        "y_data": 3
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "How many accounts are opened in each day? Bin the account open day by weekday and group by other account details in a stacked bar chart, and rank by the y axis in ascending.",
            "Stacked bar chart of the number of date account opened for with each other_account_details in each date account opened, and display by the the number of date account opened from low to high please.",
            "Show the number of accounts opened in each day Bin the account open day by weekday and group by other account details in a stacked bar chart, and order in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 2,
                        "classify": "Regular"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "VIP"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3,
                        "classify": "VIP"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_account_opened",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_account_opened)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Accounts"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the relationship between account name and account id in a scatter chart.",
            "What is the relationship between account name and account id? Show me a scatter chart.",
            "Plot a scatter chart, account id by account_name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 338
                    },
                    {
                        "x_data": 2,
                        "y_data": 562
                    },
                    {
                        "x_data": 3,
                        "y_data": 162
                    },
                    {
                        "x_data": 4,
                        "y_data": 38
                    },
                    {
                        "x_data": 5,
                        "y_data": 858
                    },
                    {
                        "x_data": 6,
                        "y_data": 262
                    },
                    {
                        "x_data": 7,
                        "y_data": 621
                    },
                    {
                        "x_data": 8,
                        "y_data": 381
                    },
                    {
                        "x_data": 9,
                        "y_data": 546
                    },
                    {
                        "x_data": 10,
                        "y_data": 767
                    },
                    {
                        "x_data": 11,
                        "y_data": 22
                    },
                    {
                        "x_data": 12,
                        "y_data": 866
                    },
                    {
                        "x_data": 13,
                        "y_data": 234
                    },
                    {
                        "x_data": 14,
                        "y_data": 557
                    },
                    {
                        "x_data": 15,
                        "y_data": 725
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "account_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "account_name"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the YEAR interval, and sum the share count of each bin What is the trend?, and list in asc by the x axis please.",
            "Visualize the general trend of sum share count over the date of transaction, list x-axis in ascending order.",
            "Bin all date of transactions into the YEAR interval, and sum the share count of each bin Return the result using a line chart, sort by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1977~1979",
                        "y_data": 9510
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 1654765
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 3338
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 8718572
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1522
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 93191
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 638061
                    },
                    {
                        "x_data": "2004",
                        "y_data": 96178
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Attribute_Definitions",
            "Catalog_Contents_Additional_Attributes"
        ],
        "db_id": "product_catalog",
        "nl_queries": [
            "Which attribute definitions have attribute value 0? Give me the number of attributes in each attribute name, and show total number from low to high order.",
            "Compute how many attributes in each name of the attribute definitions with attribute value 0 Show the result with a bar chart, show y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Yellow",
                        "y_data": 2
                    },
                    {
                        "x_data": "Black",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sweet",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "attribute_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(attribute_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "mission"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of each fate? Give me the result in a bar graph, display x-axis in descending order.",
            "Compare the total number of each fate with a bar chart, show from high to low by the x axis.",
            "Show the number of fate from each fate, I want to show by the x-axis in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Retired 1939",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned) 1931",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lost (burned and sunk) 1933",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decommissioned 1960",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decommissioned 1959",
                        "y_data": 1
                    },
                    {
                        "x_data": "Decommissioned 1950",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fate",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fate)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total credits of courses provided by different department. Plot them as bar chart.",
            "Show me a bar chart for how many total credits are offered by each department?",
            "Draw a bar chart for how many total credits are offered by each department?",
            "How many total credits are offered by each department. Show bar chart.",
            "Bar chart of total number of credits from each dept name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting",
                        "y_data": 40
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 37
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 30
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 23
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 34
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 37
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 67
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 28
                    },
                    {
                        "x_data": "English",
                        "y_data": 28
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 49
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 33
                    },
                    {
                        "x_data": "History",
                        "y_data": 29
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 37
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 20
                    },
                    {
                        "x_data": "Math",
                        "y_data": 34
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 40
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 38
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 23
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 44
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 21
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Tourist_Attractions"
        ],
        "db_id": "cre_Theme_park",
        "nl_queries": [
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way in a pie chart.",
            "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way. Show the proportion.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods by a pie chart.",
            "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods. Show a pie chart.",
            "Compute the total the total number across how to get there as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "bus",
                        "y_data": 6
                    },
                    {
                        "x_data": "shuttle",
                        "y_data": 4
                    },
                    {
                        "x_data": "walk",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "How_to_Get_There"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about ID over the meter_500 , rank by the ID in asc.",
            "A bar chart shows the distribution of meter_500 and ID , and I want to rank y axis from low to high order.",
            "Show me about the distribution of meter_500 and ID in a bar chart, rank Y in ascending order.",
            "Draw a bar chart about the distribution of meter_500 and ID , rank by the ID in asc.",
            "Show id from each meter 500, order total number in ascending order.",
            "Return a bar chart about the distribution of meter_500 and ID , rank by the ID in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "4:57.03",
                        "y_data": 1
                    },
                    {
                        "x_data": "4:56.96",
                        "y_data": 2
                    },
                    {
                        "x_data": "4:54.19",
                        "y_data": 3
                    },
                    {
                        "x_data": "4:55.08",
                        "y_data": 4
                    },
                    {
                        "x_data": "4:54.48",
                        "y_data": 5
                    },
                    {
                        "x_data": "4:56.15",
                        "y_data": 6
                    },
                    {
                        "x_data": "4:54.21",
                        "y_data": 7
                    },
                    {
                        "x_data": "4:52.85",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_500",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the job_id , sort from high to low by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and manager_id , and could you display by the bars in descending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and manager_id in a bar chart, could you order in desc by the bars please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and manager_id , and sort from high to low by the bars.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of job_id and manager_id , list in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 149
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the average of department_id bin hire_date by weekday.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the average of department_id over the hire_date bin hire_date by weekday by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 40
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 70
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 110
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 55
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the phone_number by a bar chart, and sort by the X-axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and employee_id , and visualize them by a bar chart, sort by the X from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and employee_id in a bar chart, I want to show names in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and employee_id , and list X in desc order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and employee_id , show X-axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "603.123.6666",
                        "y_data": 202
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 204
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 206
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 205
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 203
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 201
                    },
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 178
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "Show the average age of singers for each country with a bar chart, and I want to show in descending by the X please.",
            "Show the average of age from each country, and rank by the x-axis in descending.",
            "What is the average age of singers for each country? Visualize with a bar chart, order from high to low by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 32
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 52
                    },
                    {
                        "x_data": "France",
                        "y_data": 34.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "gymnast",
            "people"
        ],
        "db_id": "gymnast",
        "nl_queries": [
            "Return a bar chart on how many gymnasts are from each hometown?, sort in ascending by the Hometown.",
            "How many gymnasts are from each hometown Plot them as bar chart, and show Hometown from low to high order.",
            "Display a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, show Hometown from low to high order.",
            "Show me a bar chart for how many gymnasts are from each hometown?, and display X in asc order.",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts, rank bars in ascending order.",
            "Draw a bar chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?, could you show in asc by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bonao",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Alcarrizos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santiago de los Caballeros",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santo Domingo",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Show score of the movie with the lowest rating among all movies directed with a scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 4,
                        "y_data": 4
                    },
                    {
                        "x_data": 3,
                        "y_data": 3
                    },
                    {
                        "x_data": 2,
                        "y_data": 2
                    },
                    {
                        "x_data": 2,
                        "y_data": 2
                    },
                    {
                        "x_data": 2,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "stars"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "What is the name of the school that has the smallest enrollment in each state?, could you rank in desc by the Y-axis?",
            "Return a bar graph for the name of the school that has the smallest enrollment in each state, and I want to rank by the Y-axis in desc.",
            "Compare the smallest enrollment of schools in each state using a bar chart, order by the Y-axis in descending please.",
            "Bar graph to show minimal enr from different cname, order by the Y-axis in descending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "OU",
                        "y_data": 22000
                    },
                    {
                        "x_data": "FSU",
                        "y_data": 19000
                    },
                    {
                        "x_data": "LSU",
                        "y_data": 18000
                    },
                    {
                        "x_data": "ASU",
                        "y_data": 12000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "cName",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(enr)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "For those payments processed with Visa, show me the number of payments of each day of the week using a bar chart.",
            "For those payments processed with Visa, bin the payment day into the Day of week interval and count them for a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Payment_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "bank",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Find the total amount of loans offered by each bank branch. Show the proportion.",
            "Pie. what are the names of the different bank branches, and what are their total loan amounts?",
            "Display a pie chart for what are the names of the different bank branches, and what are their total loan amounts?",
            "What are the names of the different bank branches, and what are their total loan amounts."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "broadway",
                        "y_data": 5000
                    },
                    {
                        "x_data": "downtown",
                        "y_data": 3000
                    },
                    {
                        "x_data": "morningside",
                        "y_data": 2050
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(amount)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bname"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "A bar chart shows the distribution of All_Games and ACC_Percent , could you display by the x-axis in asc?",
            "Return a bar chart about the distribution of All_Games and ACC_Percent , display from low to high by the X-axis.",
            "Bar chart x axis all games y axis acc_percent, and could you display by the x-axis in asc?",
            "Visualize a bar chart about the distribution of All_Games and ACC_Percent , I want to display by the X-axis in ascending.",
            "Find All_Games and ACC_Percent , and visualize them by a bar chart, and order x axis from low to high order.",
            "Show me about the distribution of All_Games and ACC_Percent in a bar chart, and could you display by the x-axis in asc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "21\u201314",
                        "y_data": 0.563
                    },
                    {
                        "x_data": "24\u201310",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "28\u20136",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "35\u20132",
                        "y_data": 0.875
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Games",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, group states and count them in a bar chart, order by the total number in asc.",
            "Bar chart of the number of state from each state, and could you sort in ascending by the y axis please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CA",
                        "y_data": 1
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 1
                    },
                    {
                        "x_data": "NY",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses each teacher taught? Show me a bar chart grouping by course code, and list bar in descending order.",
            "Show the number of courses each instructor taught with a bar chart grouping by course code, could you display by the bars from high to low please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "QM-362",
                        "y_data": 2
                    },
                    {
                        "x_data": "QM-261",
                        "y_data": 2
                    },
                    {
                        "x_data": "CIS-420",
                        "y_data": 1
                    },
                    {
                        "x_data": "CIS-220",
                        "y_data": 3
                    },
                    {
                        "x_data": "ACCT-212",
                        "y_data": 2
                    },
                    {
                        "x_data": "ACCT-211",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_CODE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_CODE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Settlements"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Bin the claim date into the Day of Week interval and count them for visualizing a bar chart, display by the y axis in ascending.",
            "Create a bar chart showing the number of date claim made across date claim made, could you list y-axis from low to high order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Claim_Made",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_Claim_Made)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those products with a price between 60 and 120, draw a pie chart about the proportion of name and price.",
            "For those products with a price between 60 and 120, return a pie chart about the proportion of name and price.",
            "For those products with a price between 60 and 120, visualize a pie chart about the proportion of name and price.",
            "For those products with a price between 60 and 120, give me a pie chart to reflect the proportion of name and price.",
            "For those products with a price between 60 and 120, show me about the proportion of price and price in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Select the name of each manufacturer along with the price of its most expensive product using a bar chart.",
            "For each manufacturer's name, what are the prices of their most expensive product?",
            "Compare the prices of each manufacturer's most expensive product with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 180
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 270
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 150
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 240
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 120
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What are the names and the accumulated prices of all products in the store Plot them as a bar chart, I want to show by the x-axis in ascending please.",
            "Give me a histogram for what are the names and total prices of all products in the store?, could you order in ascending by the x axis?",
            "Give me a bar chart for sum price of each name, and could you order in ascending by the x axis?",
            "Visualize a bar chart for what are the names and the total prices of all products in the store?, and sort bar from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday by a bar chart, I want to sort by the Y-axis in asc.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, and I want to sort by the Y-axis in asc.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of manager_id over the hire_date bin hire_date by weekday, and order from low to high by the y-axis.",
            "For all employees who have the letters D or S in their first name, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, order from low to high by the y-axis.",
            "For all employees who have the letters D or S in their first name, a bar chart shows the distribution of hire_date and the sum of manager_id bin hire_date by weekday, display by the y axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 399
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 596
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 606
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 886
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1000
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1144
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1162
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "students",
            "student_course_registrations",
            "courses"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "how many registed students do each course have? List course name and the number of their registered students?, and I want to show from low to high by the y-axis.",
            "Give me a histogram for how many registed students do each course have? List course name and the number of their registered students?, I want to show from low to high by the y-axis.",
            "For each course id, how many students are registered and what are the course names, and could you order the total number from low to high order?",
            "How many registed students do each course have? List course name and the number of their registered students, and I want to show from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "data structure",
                        "y_data": 1
                    },
                    {
                        "x_data": "English",
                        "y_data": 2
                    },
                    {
                        "x_data": "French",
                        "y_data": 2
                    },
                    {
                        "x_data": "statistics",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "locations"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Create a bar chart showing the number of state province across state province, and rank by the y-axis from high to low.",
            "Give me a bar chart to compare the number of state provinces located in different cities, list y-axis in desc order.",
            "Group and count the state province attribute of the location table to visualize a bar chart, and show in descending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Washington",
                        "y_data": 21
                    },
                    {
                        "x_data": "Texas",
                        "y_data": 1
                    },
                    {
                        "x_data": "Oxford",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ontario",
                        "y_data": 1
                    },
                    {
                        "x_data": "California",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bavaria",
                        "y_data": 1
                    },
                    {
                        "x_data": "",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "STATE_PROVINCE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(STATE_PROVINCE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who get more salary than the employee whose id is 163, show the frequency of their last name.",
            "Provide the frequency of the last names of employees earning more than the employee with id 163 using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Bloom",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cambrault",
                        "y_data": 1
                    },
                    {
                        "x_data": "De Haan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Errazuriz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fox",
                        "y_data": 1
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 1
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 1
                    },
                    {
                        "x_data": "King",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kochhar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ozer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Partners",
                        "y_data": 1
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 1
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tucker",
                        "y_data": 1
                    },
                    {
                        "x_data": "Vishney",
                        "y_data": 1
                    },
                    {
                        "x_data": "Zlotkey",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LAST_NAME)"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "Compare the total number of different ranks using a bar graph, could you order X in desc order?",
            "Show me a bar chart comparing the total number of captains in each rank, sort by the Rank in descending please.",
            "Bar graph to show the number of rank from different rank, and display by the Rank in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Rank)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A bar chart about the number of faluts for different fault description recorded in the logs."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "failed parts",
                        "y_data": 6
                    },
                    {
                        "x_data": "system error",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Tell me the average of capacity of cinemas open for each year in a line chart, sort in asc by the Openning_year.",
            "Can you draw the trend of the average of capacity over the openning year?, display X from low to high order.",
            "Tell me the average of capacity of cinemas open for each year in a line chart, rank Openning_year from low to high order.",
            "Can you draw the trend of the average of capacity over the openning year?, and show by the X in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2009",
                        "y_data": 305
                    },
                    {
                        "x_data": "2010",
                        "y_data": 544.3333333333334
                    },
                    {
                        "x_data": "2011",
                        "y_data": 445.3333333333333
                    },
                    {
                        "x_data": "2012",
                        "y_data": 368
                    },
                    {
                        "x_data": "2013",
                        "y_data": 330
                    },
                    {
                        "x_data": "2014",
                        "y_data": 0
                    },
                    {
                        "x_data": "2015",
                        "y_data": 364
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Openning_year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs departed in each day? Visualize with a bar chart that bins departed date by day interval.",
            "List the number of dogs departed in each day with a bar chart that bins departed date by day interval.",
            "Bar chart x axis date departed y axis the number of date departed"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "24th",
                        "y_data": 3
                    },
                    {
                        "x_data": "25th",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_departed",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_departed)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "coffee_shop",
        "nl_queries": [
            "Bar graph to show the total number from different address, show in desc by the Y-axis please.",
            "Find the number of members living in each address Show bar chart, and rank by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Waterbury",
                        "y_data": 4
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cheshire",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bridgeport",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Address",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by weekday and group by document name with a stacked bar chart, could you show from high to low by the Y?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Chapter on private files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Katheryn statement"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Review on Canadian files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Review on USA files"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Winona Book"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Winona Book"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employee"
        ],
        "db_id": "company_1",
        "nl_queries": [
            "Find the number of employees of each gender whose salary is lower than 50000 Visualize by bar chart, could you rank in descending by the Sex?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 4
                    },
                    {
                        "x_data": "F",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "What are the last year of the parties whose theme is \"Spring\" or \"Teqnology\"? Bin the last year into weekday interval and count them, display total number in ascending order.",
            "Show the total number of the last year of parties with the theme \"Spring\" or \"Teqnology\" with a bar chart, bin the last year into weekday interval, and count the first year, and order by the Y in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Last_year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Last_year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "department_store",
        "nl_queries": [
            "Show the relationship between minimum product price and maximum product price in a scatter chart.",
            "Scatter plot to show max(product price) on x axis and minimal product price on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 939.57,
                        "y_data": 408.82
                    },
                    {
                        "x_data": 971.44,
                        "y_data": 612.46
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "max(product_price)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(product_price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Date_of_Birth and Height , and list from high to low by the Date_of_Birth please.",
            "Bar chart x axis date of birth y axis height, sort by the x-axis from high to low.",
            "Show me about the distribution of Date_of_Birth and Height in a bar chart, show X in descending order.",
            "A bar chart shows the distribution of Date_of_Birth and Height , show X in descending order.",
            "Draw a bar chart about the distribution of Date_of_Birth and Height , and I want to display by the bar in descending.",
            "Return a bar chart about the distribution of Date_of_Birth and Height , display in desc by the names please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "28.09.1981",
                        "y_data": 196
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 194
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 193
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 197
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 195
                    },
                    {
                        "x_data": "06.10.1976",
                        "y_data": 188
                    },
                    {
                        "x_data": "05.05.1972",
                        "y_data": 202
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 200
                    },
                    {
                        "x_data": "01.09.1977",
                        "y_data": 196
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "phone"
        ],
        "db_id": "phone_market",
        "nl_queries": [
            "What are the memories and carriers of phones, order by the x-axis from low to high.",
            "A bar chart about what are the memories and carriers of phones?, and order by the x-axis from low to high.",
            "Plot total number of memory in g by grouped by carrier as a bar graph, and list Carrier in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sprint",
                        "y_data": 160
                    },
                    {
                        "x_data": "TMobile",
                        "y_data": 208
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Carrier",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Memory_in_G)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Courses",
            "Student_Course_Enrolment"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart for finding the number of the the date of enrollment of the \"Spanish\" course.",
            "Find the number of the the date of enrollment of the \"Spanish\" course.",
            "What is the date of enrollment of the course named \"Spanish\", and count them by a bar chart",
            "Find the the date of enrollment of the \"Spanish\" course, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_enrolment",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_enrolment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Show the different countries and the number of members from each Visualize by bar chart, and could you list x axis in descending order?",
            "Plot the total number by grouped by country as a bar graph, and could you rank by the x-axis in desc?",
            "Show the different countries and the number of members from each with a bar chart, and could you sort by the Country in descending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 6
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Owners",
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of dogs each owner has in a bar chart that groups by owner's first name, I want to list by the first_name in asc.",
            "How many dogs each owner has? Return a bar chart that groups by owner's first name, I want to list by the first_name in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cindy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Emelie",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gay",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jaclyn",
                        "y_data": 2
                    },
                    {
                        "x_data": "Johann",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kade",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lorenz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Melisa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nora",
                        "y_data": 1
                    },
                    {
                        "x_data": "Orlando",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachelle",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rolando",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Find ACC_Regular_Season and ACC_Percent , and visualize them by a bar chart, display from low to high by the X-axis.",
            "Bar chart x axis acc regular season y axis acc_percent, I want to rank X-axis from low to high order.",
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season by a bar chart, I want to rank X-axis from low to high order.",
            "Visualize a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , I want to sort by the names from low to high.",
            "Return a bar chart about the distribution of ACC_Regular_Season and ACC_Percent , order in asc by the ACC_Regular_Season.",
            "Give me the comparison about ACC_Percent over the ACC_Regular_Season , and rank in asc by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "10\u20136",
                        "y_data": 0.625
                    },
                    {
                        "x_data": "13\u20133",
                        "y_data": 0.813
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 0.875
                    },
                    {
                        "x_data": "9\u20137",
                        "y_data": 0.563
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Regular_Season",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ACC_Percent"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the sum of credit value of courses with more than one prerequisite for each title? Return a bar chart, rank in asc by the x-axis.",
            "Find the sum of credits of courses that have more than one prerequisite for each title with a bar chart, and sort names in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 3
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 3
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 8
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 3
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 4
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 3
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 7
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 3
                    },
                    {
                        "x_data": "World History",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents"
        ],
        "db_id": "cre_Doc_Control_Systems",
        "nl_queries": [
            "List the number of documents for each receipt date and bin by year with a line chart.",
            "I want to see trend of how many receipt date by receipt date"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1973~1977",
                        "y_data": 3
                    },
                    {
                        "x_data": "1978~1982",
                        "y_data": 1
                    },
                    {
                        "x_data": "1983~1987",
                        "y_data": 3
                    },
                    {
                        "x_data": "1988~1992",
                        "y_data": 0
                    },
                    {
                        "x_data": "1993~1997",
                        "y_data": 2
                    },
                    {
                        "x_data": "1998~2002",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003~2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "2008~2012",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013~2017",
                        "y_data": 3
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "receipt_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(receipt_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "Show the number of dogs that received a treatment arrived in each day in a bar chart that bins arrived date by weekday, rank in ascending by the total number please.",
            "How many dogs who have gone through a treatment arrived in each day? Return a bar chart that bins arrived date by weekday, and rank how many date arrived in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many treatments in each month? Return a bar chart, and sort how many date of treatment in desc order please.",
            "List the number of treatments in each month with a bar chart, I want to sort in descending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mar",
                        "y_data": 13
                    },
                    {
                        "x_data": "Feb",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Return a bar chart about the number of counties for all appellations?, and could you display in ascending by the Y?",
            "What is the number of counties for all appellations?, and order Y-axis in ascending order.",
            "List the number of counties of all appellations in a bar chart, show by the y-axis from low to high.",
            "Plot the number of county by grouped by county as a bar graph, and order Y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Contra Costa",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 3
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 3
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 4
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 5
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 8
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 11
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents_with_expenses"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show budget type codes and the number of documents in each budget type by a pie chart.",
            "Show budget type codes and the number of documents in each budget type. Show the proportion.",
            "Display a pie chart for what are the different budget type codes, and how many documents are there for each?",
            "Give the proportion of what are the different budget type codes, and how many documents are there for each?",
            "What are the different budget type codes, and how many documents are there for each. Show a pie chart.",
            "Compute the total the total number across budget type code as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "GV",
                        "y_data": 6
                    },
                    {
                        "x_data": "ORG",
                        "y_data": 2
                    },
                    {
                        "x_data": "SF",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Budget_Type_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Group by all acc road, show me the school id and All_Games_Percent in a scatter plot.",
            "Give me a scatter chart that groups acc road, the x-axis is school id and the y-axis is all games percent.",
            "Show the relation between school id and all_games_percent for each ACC_Road using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 5,
                        "y_data": 0.6,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 4,
                        "y_data": 0.706,
                        "classify": "3\u20135"
                    },
                    {
                        "x_data": 2,
                        "y_data": 0.8240000000000001,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": 1,
                        "y_data": 0.946,
                        "classify": "8\u20130"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "School_ID",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "has_pet"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the first name and age of students who have a pet.",
            "Draw a bar chart for what are the different first names and ages of the students who do have pets?",
            "Give me a histogram for what are the different first names and ages of the students who do have pets?",
            "What are the different first names and ages of the students who do have pets. Visualize by bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Linda",
                        "y_data": 18
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "Give me a bar chart to show the number of event details of events that have more than one participant, and list from high to low by the total number.",
            "For events that have more than one participant, count the event details for a bar chart, sort by the y axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fail",
                        "y_data": 3
                    },
                    {
                        "x_data": "Success",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Event_Details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and display in asc by the Headquarter.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of code , and group by attribute headquarter, and display names in ascending order please.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and show by the x-axis in asc.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, could you display by the Headquarter from low to high?",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, show x axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "SECTION"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the number of courses provided in each year with a group line chart that groups by semester.",
            "How many courses are provided in each year? Visualize with a group line chart grouping by semester.",
            "I want to see trend sum count(*) over year by semester"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001",
                        "y_data": 2,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 9,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 3,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 4,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 8,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 1,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 7,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 5,
                        "classify": "Fall"
                    },
                    {
                        "x_data": "2001",
                        "y_data": 3,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2002",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 4,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 5,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 9,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 2,
                        "classify": "Spring"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "Spring"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Visualize a bar chart for what are the names and the total prices of all products in the store?, order y-axis in desc order.",
            "Give me a histogram for what are the names and total prices of all products in the store?, and sort in descending by the total number.",
            "What are the names and the accumulated prices of all products in the store Plot them as a bar chart, show by the total number from high to low please.",
            "Give me a bar chart for sum price of each name, and order y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DVD drive",
                        "y_data": 330
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 150
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 120
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 90
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 66
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Visualize a bar chart about the distribution of Date_of_Birth and Height .",
            "Show me about the distribution of Date_of_Birth and Height in a bar chart.",
            "Draw a bar chart about the distribution of Date_of_Birth and Height .",
            "Return a bar chart about the distribution of Date_of_Birth and Height .",
            "A bar chart shows the distribution of Date_of_Birth and Height .",
            "Bar chart x axis date of birth y axis height"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "06.10.1976",
                        "y_data": 188
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 197
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 200
                    },
                    {
                        "x_data": "05.05.1972",
                        "y_data": 202
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 195
                    },
                    {
                        "x_data": "01.09.1977",
                        "y_data": 196
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 193
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 194
                    },
                    {
                        "x_data": "28.09.1981",
                        "y_data": 196
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Height"
                }
            }
        }
    },
    {
        "tables_used": [
            "EVENTS",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "What are the ids and details of events that have more than one participants Visualize by bar chart, and I want to show by the y-axis from high to low.",
            "Return a bar chart on what are the ids and details of events that have more than one participants?, could you display by the Y-axis from high to low?",
            "Draw a bar chart for what are the ids and details of events that have more than one participants?, and list Y-axis in desc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Success",
                        "y_data": 41.5
                    },
                    {
                        "x_data": "Fail",
                        "y_data": 23.333333333333332
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Event_Details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Event_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, and show Y in descending order please.",
            "Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, rank by the total number in desc.",
            "Stacked bar chart of the number of start from for with each Is_full_time in each start from, and list from high to low by the y-axis.",
            "Find Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, and visualize them by a bar chart, and could you rank from high to low by the Y?",
            "Draw a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, and could you rank from high to low by the Y?",
            "Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and show by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers",
            "Customer_Events"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Please use a bar chart to compare the number of customers of each customer's move-in date, note that you should bin move-in date into Day Of Week interval, and display y axis from low to high order.",
            "What is the proportion of each customer's move in date? You can show me a bar chart that bins move in date into Weekday interval, order y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 9
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_moved_in",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_moved_in)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Compare the frequency of each type of bed by a bar chart, and display by the y-axis from low to high.",
            "Bar chart, X is bed type and the Y-axis is their appearance frequency, and could you sort by the Y in asc please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Queen",
                        "y_data": 1
                    },
                    {
                        "x_data": "King",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(bedType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Friend",
            "Highschooler"
        ],
        "db_id": "network_1",
        "nl_queries": [
            "Show the names of high school students and their corresponding number of friends with a bar chart, I want to order by the x axis in desc.",
            "A bar chart about what are the names of the high schoolers and how many friends does each have?, rank in desc by the X.",
            "Draw a bar chart for what are the names of the high schoolers and how many friends does each have?, and could you rank by the x-axis in desc?",
            "What are the names of the high schoolers and how many friends does each have Visualize by bar chart, rank in desc by the X.",
            "Show the names of high school students and their corresponding number of friends, and could you rank by the x-axis in desc?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tiffany",
                        "y_data": 1
                    },
                    {
                        "x_data": "Logan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kyle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kris",
                        "y_data": 2
                    },
                    {
                        "x_data": "Jordan",
                        "y_data": 3
                    },
                    {
                        "x_data": "Jessica",
                        "y_data": 1
                    },
                    {
                        "x_data": "Haley",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gabriel",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cassandra",
                        "y_data": 1
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 1
                    },
                    {
                        "x_data": "Andrew",
                        "y_data": 3
                    },
                    {
                        "x_data": "Alexis",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Show the total salary by each hire date of employees, and please bin the hire date into the Month interval for showing a bar chart, sort Y from low to high order.",
            "Show sum salary from each hire date, could you show by the Y in asc please?",
            "Compare the total salary by each hire date (bin it into month interval) of employees using a bar chart, and show in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aug",
                        "y_data": 14000
                    },
                    {
                        "x_data": "July",
                        "y_data": 19200
                    },
                    {
                        "x_data": "June",
                        "y_data": 45000
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 45900
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "elimination"
        ],
        "db_id": "wrestler",
        "nl_queries": [
            "Show different teams in eliminations and the number of eliminations from each team by a pie chart.",
            "Show different teams in eliminations and the number of eliminations from each team, and show me the proportion.",
            "Show me the proportion on how many eliminations did each team have?",
            "Pie chart about how many eliminations did each team have?",
            "How many eliminations did each team have. Plot them as pie chart.",
            "I want to know the proportion for each team.",
            "A pie chart about the proportion of the total number for each team."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Team Batista",
                        "y_data": 4
                    },
                    {
                        "x_data": "Team Orton",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Team"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Create a bar chart showing maximal revenue across name, and rank in asc by the X.",
            "Please tell the names and revenues of the companies with the highest revenues in each headquarter city, display Name in asc order please.",
            "Give me a bar chart to show the names and revenue of the company that earns the highest revenue in each headquarter city, could you display from low to high by the X please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Creative Labs",
                        "y_data": 100
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 130
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 50
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 200
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 120
                    },
                    {
                        "x_data": "Winchester",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "school"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "Show sum enrollment from each county, sort from high to low by the y axis.",
            "Compare the total enrollment in each county with a bar chart, show y axis in descending order.",
            "Please give me a bar chart for the total enrollment in each county, and order by the sum enrollment in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "50 Marshall",
                        "y_data": 1098
                    },
                    {
                        "x_data": "71 St. Joseph",
                        "y_data": 984
                    },
                    {
                        "x_data": "46 LaPorte 71 St. Joseph",
                        "y_data": 852
                    },
                    {
                        "x_data": "75 Starke",
                        "y_data": 620
                    },
                    {
                        "x_data": "20 Elkhart",
                        "y_data": 601
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Can you draw a bar chart to show the number of items in each customer details category?, and list total number in desc order.",
            "Bar graph to show the number of customer details from different customer details, and list Y from high to low order.",
            "Please compare the frequency of the customer details using a bar chart, and sort in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sabryna Moore PhD",
                        "y_data": 4
                    },
                    {
                        "x_data": "Oma Smith",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mackenzie Hettinger V",
                        "y_data": 2
                    },
                    {
                        "x_data": "Vincenza Price",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tyrique Durgan II",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mr. Raul Prosacco",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monty Sauer III",
                        "y_data": 1
                    },
                    {
                        "x_data": "Esteban Senger",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "COURSE"
        ],
        "db_id": "college_3",
        "nl_queries": [
            "Draw a scatter chart about the correlation between CID and Instructor .",
            "Return a scatter chart about the correlation between CID and Instructor .",
            "Visualize the relationship between CID and Instructor .",
            "A scatter chart shows the correlation between CID and Instructor .",
            "What is the relationship between CID and Instructor ?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 600.1030000000001,
                        "y_data": 4230
                    },
                    {
                        "x_data": 600.303,
                        "y_data": 9826
                    },
                    {
                        "x_data": 600.601,
                        "y_data": 6191
                    },
                    {
                        "x_data": 50.802,
                        "y_data": 9011
                    },
                    {
                        "x_data": 550.79,
                        "y_data": 2881
                    },
                    {
                        "x_data": 600.101,
                        "y_data": 6112
                    },
                    {
                        "x_data": 600.107,
                        "y_data": 1193
                    },
                    {
                        "x_data": 600.109,
                        "y_data": 4230
                    },
                    {
                        "x_data": 600.113,
                        "y_data": 6112
                    },
                    {
                        "x_data": 600.121,
                        "y_data": 6112
                    },
                    {
                        "x_data": 600.211,
                        "y_data": 6112
                    },
                    {
                        "x_data": 600.227,
                        "y_data": 1121
                    },
                    {
                        "x_data": 600.232,
                        "y_data": 9826
                    },
                    {
                        "x_data": 600.271,
                        "y_data": 9172
                    },
                    {
                        "x_data": 600.315,
                        "y_data": 2192
                    },
                    {
                        "x_data": 600.3330000000001,
                        "y_data": 1148
                    },
                    {
                        "x_data": 600.337,
                        "y_data": 8918
                    },
                    {
                        "x_data": 600.363,
                        "y_data": 7712
                    },
                    {
                        "x_data": 600.415,
                        "y_data": 2192
                    },
                    {
                        "x_data": 600.433,
                        "y_data": 1148
                    },
                    {
                        "x_data": 600.437,
                        "y_data": 8918
                    },
                    {
                        "x_data": 600.445,
                        "y_data": 7723
                    },
                    {
                        "x_data": 600.461,
                        "y_data": 8114
                    },
                    {
                        "x_data": 600.4630000000001,
                        "y_data": 7712
                    },
                    {
                        "x_data": 600.465,
                        "y_data": 7792
                    },
                    {
                        "x_data": 600.509,
                        "y_data": 1121
                    },
                    {
                        "x_data": 600.6569999999999,
                        "y_data": 8423
                    },
                    {
                        "x_data": 600.7869999999999,
                        "y_data": 1121
                    },
                    {
                        "x_data": 500.20300000000003,
                        "y_data": 9823
                    },
                    {
                        "x_data": 500.204,
                        "y_data": 9823
                    },
                    {
                        "x_data": 500.205,
                        "y_data": 8791
                    },
                    {
                        "x_data": 500.20599999999996,
                        "y_data": 8791
                    },
                    {
                        "x_data": 550.62,
                        "y_data": 2738
                    },
                    {
                        "x_data": 550.626,
                        "y_data": 8102
                    },
                    {
                        "x_data": 550.631,
                        "y_data": 6182
                    },
                    {
                        "x_data": 550.661,
                        "y_data": 9823
                    },
                    {
                        "x_data": 550.6709999999999,
                        "y_data": 8772
                    },
                    {
                        "x_data": 550.681,
                        "y_data": 6541
                    },
                    {
                        "x_data": 550.721,
                        "y_data": 8122
                    },
                    {
                        "x_data": 550.75,
                        "y_data": 9922
                    },
                    {
                        "x_data": 520.137,
                        "y_data": 8723
                    },
                    {
                        "x_data": 520.219,
                        "y_data": 9210
                    },
                    {
                        "x_data": 520.325,
                        "y_data": 6191
                    },
                    {
                        "x_data": 520.345,
                        "y_data": 1823
                    },
                    {
                        "x_data": 520.349,
                        "y_data": 9824
                    },
                    {
                        "x_data": 520.3530000000001,
                        "y_data": 6925
                    },
                    {
                        "x_data": 520.401,
                        "y_data": 6191
                    },
                    {
                        "x_data": 520.41,
                        "y_data": 6191
                    },
                    {
                        "x_data": 520.419,
                        "y_data": 2119
                    },
                    {
                        "x_data": 520.4209999999999,
                        "y_data": 7231
                    },
                    {
                        "x_data": 520.432,
                        "y_data": 9514
                    },
                    {
                        "x_data": 520.475,
                        "y_data": 6330
                    },
                    {
                        "x_data": 520.49,
                        "y_data": 8722
                    },
                    {
                        "x_data": 520.605,
                        "y_data": 9379
                    },
                    {
                        "x_data": 520.609,
                        "y_data": 7134
                    },
                    {
                        "x_data": 520.651,
                        "y_data": 9514
                    },
                    {
                        "x_data": 50.102,
                        "y_data": 4432
                    },
                    {
                        "x_data": 50.108999999999995,
                        "y_data": 6910
                    },
                    {
                        "x_data": 50.325,
                        "y_data": 4432
                    },
                    {
                        "x_data": 50.37,
                        "y_data": 6910
                    },
                    {
                        "x_data": 50.381,
                        "y_data": 8989
                    },
                    {
                        "x_data": 50.427,
                        "y_data": 4432
                    },
                    {
                        "x_data": 50.67,
                        "y_data": 4432
                    },
                    {
                        "x_data": 50.821000000000005,
                        "y_data": 5718
                    },
                    {
                        "x_data": 550.111,
                        "y_data": 2311
                    },
                    {
                        "x_data": 550.1709999999999,
                        "y_data": 8772
                    },
                    {
                        "x_data": 550.2909999999999,
                        "y_data": 6541
                    },
                    {
                        "x_data": 550.31,
                        "y_data": 8102
                    },
                    {
                        "x_data": 550.361,
                        "y_data": 2881
                    },
                    {
                        "x_data": 550.413,
                        "y_data": 1177
                    },
                    {
                        "x_data": 550.42,
                        "y_data": 2738
                    },
                    {
                        "x_data": 550.471,
                        "y_data": 8772
                    },
                    {
                        "x_data": 520.2130000000001,
                        "y_data": 9210
                    },
                    {
                        "x_data": 520.435,
                        "y_data": 8118
                    },
                    {
                        "x_data": 520.6030000000001,
                        "y_data": 9210
                    },
                    {
                        "x_data": 50.203,
                        "y_data": 9011
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "CID"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Instructor"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Find the number of rooms for each bed type. Show the proportion.",
            "Visualize a pie chart with what are the number of rooms for each bed type?",
            "Return a pie chart on what are the number of rooms for each bed type?",
            "What are the number of rooms for each bed type. Show a pie chart.",
            "Give me a pie to show the total number from different bedtype."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 2
                    },
                    {
                        "x_data": "King",
                        "y_data": 4
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal_committee",
            "editor",
            "journal"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Show the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "A bar chart for showing the number of the names of editors that are on the committee of journals with sales bigger than 3000.",
            "Show the names of editors that are on the committee of journals with sales bigger than 3000, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gra\u017cyna Wolszczak",
                        "y_data": 2
                    },
                    {
                        "x_data": "Kamila Porczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Maria G\u00f3ralczyk",
                        "y_data": 1
                    },
                    {
                        "x_data": "W\u0142adys\u0142aw Grzywna",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Bin all date of transactions into the YEAR interval, and give the average of the share count for each bin What is the trend?, sort x-axis in desc order.",
            "Plot date of transaction by mean share count as a trend line, and I want to show from high to low by the x-axis.",
            "Bin all date of transactions into the YEAR interval, and calculate the average the share count for each bin Visualize the result using a trend line, show by the X-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2004",
                        "y_data": 96178
                    },
                    {
                        "x_data": "2001~2003",
                        "y_data": 212687
                    },
                    {
                        "x_data": "1998~2000",
                        "y_data": 674529892
                    },
                    {
                        "x_data": "1995~1997",
                        "y_data": 93191
                    },
                    {
                        "x_data": "1992~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1989~1991",
                        "y_data": 1522
                    },
                    {
                        "x_data": "1986~1988",
                        "y_data": 8718572
                    },
                    {
                        "x_data": "1983~1985",
                        "y_data": 1669
                    },
                    {
                        "x_data": "1980~1982",
                        "y_data": 827382.5
                    },
                    {
                        "x_data": "1977~1979",
                        "y_data": 3170
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(share_count)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me about the distribution of Sex and the sum of Weight , and group by attribute Sex in a bar chart, rank total number of weight in desc order.",
            "Find Sex and the sum of Weight , and group by attribute Sex, and visualize them by a bar chart, sort by the Y in descending.",
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex by a bar chart, and show from high to low by the y axis please.",
            "Give me a bar chart for sum weight of each sex, and rank total number of weight in desc order.",
            "A bar chart shows the distribution of Sex and the sum of Weight , and group by attribute Sex, and order Y-axis from high to low order.",
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex, and sort by the Y in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "M",
                        "y_data": 607
                    },
                    {
                        "x_data": "F",
                        "y_data": 184
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart, and show by the total number in asc please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, could you show total number from low to high order?",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart, rank by the y axis in ascending please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by weekday, rank by the y axis in ascending please.",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday, could you order in asc by the Y-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 14
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 15
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 15
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 15
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 16
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 16
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "county_public_safety"
        ],
        "db_id": "county_public_safety",
        "nl_queries": [
            "Display a bar chart for how many counties correspond to each police force?",
            "Return a bar chart on how many counties correspond to each police force?",
            "How many counties correspond to each police force.",
            "Create a bar chart showing the total number across police force"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abbotsford Police Department",
                        "y_data": 1
                    },
                    {
                        "x_data": "Central Saanich Police",
                        "y_data": 1
                    },
                    {
                        "x_data": "RCMP",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Police_force",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just list the first name of the employee and show the location id of the corresponding department using a bar chart, show bars from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adam",
                        "y_data": 1500
                    },
                    {
                        "x_data": "Alexander",
                        "y_data": 1400
                    },
                    {
                        "x_data": "Den",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 2700
                    },
                    {
                        "x_data": "Jennifer",
                        "y_data": 1700
                    },
                    {
                        "x_data": "John",
                        "y_data": 2500
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1800
                    },
                    {
                        "x_data": "Nancy",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1700
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 2400
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "LOCATION_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Projects",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Return the ids and details corresponding to projects for which there are more than two documents Show bar chart, and sort x-axis from low to high order.",
            "Show me a bar chart for what is the project id and detail for the project with at least two documents?, sort in ascending by the X-axis.",
            "Return the ids and details corresponding to projects for which there are more than two documents in a bar chart, and I want to show by the Project_Details in asc.",
            "What is the project id and detail for the project with at least two documents Plot them as bar chart, and sort in ascending by the X-axis.",
            "A bar chart about what is the project id and detail for the project with at least two documents?, and list in ascending by the X-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Graph Database project",
                        "y_data": 105
                    },
                    {
                        "x_data": "Human Resource project",
                        "y_data": 134
                    },
                    {
                        "x_data": "Internet of Things project",
                        "y_data": 35
                    },
                    {
                        "x_data": "Society Research project",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Project_Details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Project_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of products with price higher than 1000 or lower than 500 for each product name in a bar chart, order x axis from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Apple",
                        "y_data": 5
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 3
                    },
                    {
                        "x_data": "gucci",
                        "y_data": 2
                    },
                    {
                        "x_data": "jcrew",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(product_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "entrepreneur"
        ],
        "db_id": "entrepreneur",
        "nl_queries": [
            "how many entrepreneurs correspond to each investor?, and sort Y in asc order.",
            "How many entrepreneurs correspond to each investor, could you display Y in asc order?",
            "Display a bar chart for what are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?, and I want to display in asc by the y axis.",
            "Draw a bar chart of investor versus the total number, show total number in ascending order please.",
            "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor, and could you display Y in asc order?",
            "Return a histogram on how many entrepreneurs correspond to each investor?, and I want to sort from low to high by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Doug Richard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Peter Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Rachel Elnaugh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Simon Woodroffe",
                        "y_data": 1
                    },
                    {
                        "x_data": "Duncan Bannatyne",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show me the number of born state by born state in a histogram, rank in desc by the y axis.",
            "Show the number of heads of departments born in each state with a bar chart, and order in desc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "California",
                        "y_data": 4
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 2
                    },
                    {
                        "x_data": "Alabama",
                        "y_data": 2
                    },
                    {
                        "x_data": "Florida",
                        "y_data": 1
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(born_state)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "department"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Find the number of students in each department that has the top 3 highest number of students. Show the department address and number of students with a pie chart.",
            "Which departments have the top 3 highest number of students? Show the department address and number of students with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "KLR 211, Box 52",
                        "y_data": 3
                    },
                    {
                        "x_data": "KLR 333, Box 56",
                        "y_data": 2
                    },
                    {
                        "x_data": "AAK 230, Box 415",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "DEPT_ADDRESS"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Show the average age for male and female students with a bar chart, and list by the bars from low to high.",
            "Show the average age for male and female students Visualize by bar chart, rank X-axis in ascending order.",
            "Visualize a bar chart for what are the average ages for male and female students?, display x axis in asc order please.",
            "What are the average ages for male and female students Plot them as bar chart, and list by the bars from low to high.",
            "Show me mean age by sex in a histogram, display x axis in asc order please.",
            "A bar chart about what are the average ages for male and female students?, list by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 19.7
                    },
                    {
                        "x_data": "M",
                        "y_data": 19.5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "Just show the employee's last name and their manager's id using a bar chart, I want to rank by the x axis in descending.",
            "Show me manager_id by last name in a histogram, show LAST_NAME in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Whalen",
                        "y_data": 101
                    },
                    {
                        "x_data": "Russell",
                        "y_data": 100
                    },
                    {
                        "x_data": "Raphaely",
                        "y_data": 100
                    },
                    {
                        "x_data": "Mavris",
                        "y_data": 101
                    },
                    {
                        "x_data": "King",
                        "y_data": 0
                    },
                    {
                        "x_data": "Hunold",
                        "y_data": 102
                    },
                    {
                        "x_data": "Higgins",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hartstein",
                        "y_data": 100
                    },
                    {
                        "x_data": "Greenberg",
                        "y_data": 101
                    },
                    {
                        "x_data": "Fripp",
                        "y_data": 100
                    },
                    {
                        "x_data": "Baer",
                        "y_data": 101
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LAST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_card_transactions",
        "nl_queries": [
            "Show the account id and the number of transactions for each accoun in a scatter chart",
            "Show the account id and the number of transactions for each accoun. Show scatter chart.",
            "Scatter chart. what are the different account ids that have made financial transactions, as well as how many transactions correspond to each?",
            "Visualize a scatter chart on what are the different account ids that have made financial transactions, as well as how many transactions correspond to each?",
            "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each. Show the correlation.",
            "Show me a scatter plot of account id and the total number for ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 1,
                        "y_data": 1
                    },
                    {
                        "x_data": 3,
                        "y_data": 1
                    },
                    {
                        "x_data": 4,
                        "y_data": 1
                    },
                    {
                        "x_data": 5,
                        "y_data": 1
                    },
                    {
                        "x_data": 6,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 1
                    },
                    {
                        "x_data": 9,
                        "y_data": 1
                    },
                    {
                        "x_data": 10,
                        "y_data": 2
                    },
                    {
                        "x_data": 11,
                        "y_data": 1
                    },
                    {
                        "x_data": 12,
                        "y_data": 1
                    },
                    {
                        "x_data": 13,
                        "y_data": 1
                    },
                    {
                        "x_data": 14,
                        "y_data": 1
                    },
                    {
                        "x_data": 15,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "account_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, find job_id and the average of employee_id , and group by attribute job_id, and visualize them by a bar chart, rank in asc by the y-axis please.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and rank in asc by the y-axis.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and order Y from low to high order.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, I want to order in asc by the y-axis.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and list y axis in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111.25
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 114
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 116
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 135.44444444444446
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 148
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.76923076923077
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.55555555555554
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "List the name and the number of stations for all the cities that have at least 15 stations with a pie chart.",
            "List the name and the number of stations for all the cities that have at least 15 stations. Visualize by pie chart.",
            "Visualize a pie chart with what is the name of every city that has at least 15 stations and how many stations does it have?",
            "Give the proportion of what is the name of every city that has at least 15 stations and how many stations does it have?",
            "What is the name of every city that has at least 15 stations and how many stations does it have. Show the proportion.",
            "Compute the total the total number across city as a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "San Francisco",
                        "y_data": 35
                    },
                    {
                        "x_data": "San Jose",
                        "y_data": 16
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city"
                }
            }
        }
    },
    {
        "tables_used": [
            "singer_in_concert",
            "singer"
        ],
        "db_id": "concert_singer",
        "nl_queries": [
            "What are the names of the singers and number of concerts for each person Show bar chart, I want to show by the Y in desc.",
            "A bar chart about what are the names of the singers and number of concerts for each person?, list in desc by the Y.",
            "List singer names and number of concerts for each singer with a bar chart, and could you display total number in descending order?",
            "Give me a histogram for what are the names of the singers and number of concerts for each person?, and could you show total number in desc order?",
            "List singer names and number of concerts for each singer, and could you show total number in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Justin Brown",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tribal King",
                        "y_data": 2
                    },
                    {
                        "x_data": "Timbaland",
                        "y_data": 2
                    },
                    {
                        "x_data": "John Nizinik",
                        "y_data": 2
                    },
                    {
                        "x_data": "Rose White",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each course description? Show me a bar chart, and rank by the y axis in asc.",
            "Show the number of courses for each course description in a bar chart, show in asc by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 3
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "train_station",
        "nl_queries": [
            "Give me a bar chart about the number of platforms in different locations, show total number in asc order.",
            "Create a bar chart showing total number of number of platforms across location, and show total number in asc order.",
            "What is the number of platforms for each location? Show the comparison with a bar chart, I want to order by the Y in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Birmingham",
                        "y_data": 13
                    },
                    {
                        "x_data": "Glasgow",
                        "y_data": 17
                    },
                    {
                        "x_data": "London",
                        "y_data": 140
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Number_of_Platforms)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "complaints"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "List the name of all products along with the number of complaints that they have received with a bar chart, show by the Y-axis in asc.",
            "What are all the different product names, and how many complains has each received Show bar chart, I want to display in ascending by the Y.",
            "List the name of all products along with the number of complaints that they have received, sort by the the total number from low to high please.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, sort by the the total number from low to high please.",
            "what are all the different product names, and how many complains has each received?, rank in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Keyboard",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mouse",
                        "y_data": 1
                    },
                    {
                        "x_data": "The Great Gatsby",
                        "y_data": 4
                    },
                    {
                        "x_data": "Chocolate",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "airlines"
        ],
        "db_id": "flight_4",
        "nl_queries": [
            "A bar chart for finding the number of the country of the airlines whose name starts with 'Orbit', and sort country in desc order.",
            "A bar chart for what are the number of the countries of all airlines whose names start with Orbit?, sort from high to low by the names.",
            "What are the number of the countries of all airlines whose names start with Orbit?, and I want to sort in descending by the bars.",
            "What are the countries of all airlines whose names start with Orbit, and count them by a bar chart, sort bars in desc order.",
            "Find the country of the airlines whose name starts with 'Orbit', and count them by a bar chart, could you rank by the x axis from high to low?",
            "Find the number of the country of the airlines whose name starts with 'Orbit', and sort from high to low by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "United States",
                        "y_data": 4
                    },
                    {
                        "x_data": "Turkey",
                        "y_data": 1
                    },
                    {
                        "x_data": "Azerbaijan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "country",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(country)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department",
            "student",
            "instructor"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "Find the total number of instructors for each department with a bar chart, and could you sort by the y axis in desc?",
            "How many instructors are in each department? Show me a bar chart, and show by the y axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Statistics",
                        "y_data": 6
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 5
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 4
                    },
                    {
                        "x_data": "English",
                        "y_data": 4
                    },
                    {
                        "x_data": "Elec. Eng.",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Accounting",
                        "y_data": 4
                    },
                    {
                        "x_data": "Pol. Sci.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Languages",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Physics",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 2
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 2
                    },
                    {
                        "x_data": "Geology",
                        "y_data": 1
                    },
                    {
                        "x_data": "Finance",
                        "y_data": 1
                    },
                    {
                        "x_data": "Astronomy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(DISTINCT T3.id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "institution"
        ],
        "db_id": "protein_institute",
        "nl_queries": [
            "Show the relationship between the number of institutions and total enrollment for each type with a scatter plot.",
            "Give me a scatter to show the correlations between the number of institutions and total enrollment for each type.",
            "Show count(*) vs sum enrollment as scatter plot use a different color for each Type"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 7,
                        "y_data": 7868,
                        "classify": "Private"
                    },
                    {
                        "x_data": 3,
                        "y_data": 5267,
                        "classify": "Public"
                    },
                    {
                        "x_data": 1,
                        "y_data": 1000,
                        "classify": "Tribal"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(enrollment)",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Research_outcomes",
            "Project_outcomes"
        ],
        "db_id": "tracking_grants_for_research",
        "nl_queries": [
            "What are the descriptions of all the project outcomes, and count them by a pie chart",
            "List the description of the outcomes for all projects, and count them by a pie chart",
            "A pie chart for what are the number of the descriptions of all the project outcomes?",
            "What are the number of the descriptions of all the project outcomes?",
            "A pie chart for listing the number of the description of the outcomes for all projects.",
            "List the number of the description of the outcomes for all projects."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Published Research Paper",
                        "y_data": 10
                    },
                    {
                        "x_data": "Research Patent",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(outcome_description)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "outcome_description"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and commission_pct , and order by the X-axis in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and commission_pct in a bar chart, I want to show in descending by the x axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of job_id and commission_pct , and I want to display in descending by the names.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and commission_pct , and visualize them by a bar chart, I want to list from high to low by the names.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about commission_pct over the job_id , show by the bar in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "SA_REP",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 0
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 0
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show sum of price for each day in a bar chart, and I want to order from low to high by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "11 July",
                        "y_data": 9
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 15
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 12
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 9
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 8
                    },
                    {
                        "x_data": "21 May",
                        "y_data": 24
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person",
            "PersonFriend",
            "person)"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Who has friends that are older than the average age? Print their friends and their ages as well using a pie chart.",
            "Whare the friends, and ages of all people who are older than the average age of a person? Visualize the result by a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bob",
                        "y_data": 35
                    },
                    {
                        "x_data": "Zach",
                        "y_data": 45
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "friend"
                }
            }
        }
    },
    {
        "tables_used": [
            "Timed_Status_of_Things",
            "Things"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Give me a bar chart to show the proportion of each type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21', could you list by the X from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commen",
                        "y_data": 4
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Furniture",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type_of_Thing_Code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type_of_Thing_Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "debate"
        ],
        "db_id": "debate",
        "nl_queries": [
            "A bar chart showing how many debates are held for each venue, and I want to show y-axis in asc order.",
            "Bar chart x axis venue y axis how many venue, display y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Abu Dhabi , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Doha , Qatar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dubai , UAE",
                        "y_data": 1
                    },
                    {
                        "x_data": "Manama , Bahrain",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Venue",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Venue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex by a bar chart.",
            "Give me the comparison about the sum of Weight over the Sex , and group by attribute Sex.",
            "Find Sex and the sum of Weight , and group by attribute Sex, and visualize them by a bar chart.",
            "A bar chart shows the distribution of Sex and the sum of Weight , and group by attribute Sex.",
            "Show me about the distribution of Sex and the sum of Weight , and group by attribute Sex in a bar chart.",
            "Give me a bar chart for sum weight of each sex"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 184
                    },
                    {
                        "x_data": "M",
                        "y_data": 607
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "aircraft"
        ],
        "db_id": "aircraft",
        "nl_queries": [
            "A bar chart for listing the number of the description of all aircrafts.",
            "What are the number of the descriptions for the aircrafts?",
            "A bar chart for what are the number of the descriptions for the aircrafts?",
            "List the description of all aircrafts, and count them by a bar chart",
            "List the number of the description of all aircrafts.",
            "What are the descriptions for the aircrafts, and count them by a bar chart",
            "Draw a bar chart of description versus the number of description"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Heavy-lift helicopter",
                        "y_data": 2
                    },
                    {
                        "x_data": "Light utility helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tandem rotor helicopter",
                        "y_data": 1
                    },
                    {
                        "x_data": "Turboshaft utility helicopter",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Description",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Description)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Documents",
            "projects"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "Show the number of documents in each day for all documents on project with details 'Graph Database project' and bin document date by weekday with a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Return a pie chart showing how many members have visited for each college location."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "McGill",
                        "y_data": 3
                    },
                    {
                        "x_data": "Minnesota",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ottawa",
                        "y_data": 2
                    },
                    {
                        "x_data": "St. Francis Xavier",
                        "y_data": 2
                    },
                    {
                        "x_data": "Western Ontario",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(College_Location)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "College_Location"
                }
            }
        }
    },
    {
        "tables_used": [
            "music_festival"
        ],
        "db_id": "music_4",
        "nl_queries": [
            "Return the results of all music festivals using a bar chart, and I want to rank x-axis from low to high order.",
            "Plot the number of result by grouped by result as a bar graph, could you order bar from low to high order please?",
            "What is the distibution of results for each music festival? Could you show me the result with a bar chart, and order by the X in ascending please.",
            "Please give me a bar chart to show the distribution of results of all music festival, and show by the x axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Awarded",
                        "y_data": 3
                    },
                    {
                        "x_data": "Nominated",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Result",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Result)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "Show the number of courses for each course description in a stacked bar chart. The x-axis is course description and group by office name.",
            "How many courses for each course description? Show me a stacked bar chart. The x-axis is course description and group by office name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Accounting I",
                        "y_data": 1,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "BBG 208"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 1,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 2,
                        "classify": "KLR 203E"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 1,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 2,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 211"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 2,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 229D"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 2,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 244"
                    },
                    {
                        "x_data": "Accounting I",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Accounting II",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Database Design and Implementation",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Microcomputing",
                        "y_data": 2,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Intro. to Statistics",
                        "y_data": 0,
                        "classify": "KLR 300"
                    },
                    {
                        "x_data": "Statistical Applications",
                        "y_data": 0,
                        "classify": "KLR 300"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "CRS_DESCRIPTION",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(CRS_DESCRIPTION)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs",
            "Treatments"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date, and list date_arrived from high to low order.",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, and list X in descending order.",
            "Show the number of dogs that received a treatment arrived in each day in a line chart that groups by arrived date, and list date_arrived from high to low order.",
            "How many dogs who have gone through a treatment arrived in each day? Return a line chart that groups by arrived date, list by the date_arrived in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-01-02",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-12-29",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-12-22",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-08",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-06-18",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-05-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-04-20",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_arrived",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_arrived)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Residents"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Bar chart x axis other details y axis resident_id, sort by the bars from low to high please.",
            "Just list the resident id and details in a bar chart, and could you sort in ascending by the bar please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Anderson Batz",
                        "y_data": 6
                    },
                    {
                        "x_data": "Cassie Johnson",
                        "y_data": 90
                    },
                    {
                        "x_data": "Elroy Schuster",
                        "y_data": 43
                    },
                    {
                        "x_data": "Jacques Glover II",
                        "y_data": 88
                    },
                    {
                        "x_data": "Jess Wyman",
                        "y_data": 23
                    },
                    {
                        "x_data": "Loy Walter",
                        "y_data": 83
                    },
                    {
                        "x_data": "Miss Alanis Lockman",
                        "y_data": 28
                    },
                    {
                        "x_data": "Mrs. Raphaelle Fisher",
                        "y_data": 87
                    },
                    {
                        "x_data": "Prof. Nasir Hoppe",
                        "y_data": 45
                    },
                    {
                        "x_data": "Terrill Bernhard",
                        "y_data": 67
                    },
                    {
                        "x_data": "Tiffany Jaskolski",
                        "y_data": 47
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "resident_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries, and show y-axis in asc order.",
            "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries, and display by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bucella",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Syrah"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "What are the nationalities and their average ages of journalists Show me a bar chart, and order by the Y from low to high please.",
            "Visualize a bar chart for what are the nationalities and their average ages of journalists?, show in asc by the total number please.",
            "A bar chart about what are the nationalities and their average ages of journalists?, could you list from low to high by the total number?",
            "Draw a bar chart of nationality versus the average of age, and list in asc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wales",
                        "y_data": 27
                    },
                    {
                        "x_data": "Northern Ireland",
                        "y_data": 29
                    },
                    {
                        "x_data": "England",
                        "y_data": 34.22222222222222
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "For all artist names who are not from the United States, show the total number of each year with a bar chart, I want to display Y-axis from low to high order please.",
            "For all artist names who are not from the United States, show the total number of each year, show in asc by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1995",
                        "y_data": 0
                    },
                    {
                        "x_data": "1996",
                        "y_data": 0
                    },
                    {
                        "x_data": "1997",
                        "y_data": 0
                    },
                    {
                        "x_data": "1994",
                        "y_data": 1
                    },
                    {
                        "x_data": "1998",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year_Join",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year_Join)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and commission_pct in a bar chart, and I want to display by the Y-axis in ascending.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and commission_pct , I want to show total number in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and commission_pct , display by the y axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and commission_pct , and visualize them by a bar chart, order by the total number from low to high.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and commission_pct , and list by the Y in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hermann",
                        "y_data": 0
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 0
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 0
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 0
                    },
                    {
                        "x_data": "William",
                        "y_data": 0
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 0.15
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Ignore movies whose director is NULL. For each director, what are the titles and the highest rating among all of their movies they reviewed? Draw the result by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Avatar",
                        "y_data": 5
                    },
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 3
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(T1.stars)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the location codes and the number of documents in each location with a pie chart.",
            "Show the location codes and the number of documents in each location. Show a pie chart.",
            "Show me the proportion on what is the code of each location and the number of documents in that location?",
            "Pie. what is the code of each location and the number of documents in that location?",
            "What is the code of each location and the number of documents in that location. Visualize by pie chart.",
            "Give me a pie to show the total number from different location code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "b",
                        "y_data": 3
                    },
                    {
                        "x_data": "c",
                        "y_data": 2
                    },
                    {
                        "x_data": "e",
                        "y_data": 4
                    },
                    {
                        "x_data": "n",
                        "y_data": 1
                    },
                    {
                        "x_data": "x",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Show me about the distribution of All_Home and Team_ID , and group by attribute ACC_Home in a bar chart, display in desc by the names.",
            "Stack bar chart of team_id vs ACC_Home based on all home, could you order by the X-axis in desc?",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home, and sort in desc by the X-axis please.",
            "Give me the comparison about Team_ID over the All_Home , and group by attribute ACC_Home by a bar chart, and order bars in desc order.",
            "Find All_Home and Team_ID , and group by attribute ACC_Home, and visualize them by a bar chart, and list in desc by the bars.",
            "Draw a bar chart about the distribution of All_Home and Team_ID , and group by attribute ACC_Home, and display in descending by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "15\u20131",
                        "y_data": 0,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 4,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 1,
                        "classify": "6\u20132"
                    },
                    {
                        "x_data": "15\u20131",
                        "y_data": 2,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20133",
                        "y_data": 0,
                        "classify": "7\u20131"
                    },
                    {
                        "x_data": "14\u20132",
                        "y_data": 3,
                        "classify": "7\u20131"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Home",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, for department_id, hire_date, visualize the trend.",
            "For all employees who have the letters D or S in their first name, show me about the change of department_id over hire_date in a line chart.",
            "For all employees who have the letters D or S in their first name, give me the trend about department_id over hire_date .",
            "For all employees who have the letters D or S in their first name, return a line chart about the change of department_id over hire_date .",
            "For all employees who have the letters D or S in their first name, a line chart shows the trend of department_id over hire_date .",
            "For all employees who have the letters D or S in their first name, visualize a line chart about the change of department_id over hire_date ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 90
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 110
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 100
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-28",
                        "y_data": 40
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 80
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 60
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 30
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 50
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 50
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Behavior_Incident"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "What is the number of start dates for incidents with incident type code \"NOISE\"? Bin by year and return a bar chart, and I want to order in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 4
                    },
                    {
                        "x_data": "2018",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_incident_start",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_incident_start)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "Please give me a bar chart that bins the installation date of stations into Year interval as the X-axis, and count for showing how many stations are installed each year, list y axis in descending order.",
            "Bar graph to show how many installation date from different installation date, display the number of installation date from high to low order please.",
            "Bin the installation date into Year interval, and then you can draw a bar chart to tell me how many stations each year, and could you sort y-axis in descending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 9796
                    },
                    {
                        "x_data": "2014",
                        "y_data": 163
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "installation_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(installation_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "INVESTORS",
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show details of all investors if they make any transaction with share count greater than 100, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "d",
                        "y_data": 2
                    },
                    {
                        "x_data": "k",
                        "y_data": 2
                    },
                    {
                        "x_data": "l",
                        "y_data": 3
                    },
                    {
                        "x_data": "t",
                        "y_data": 1
                    },
                    {
                        "x_data": "w",
                        "y_data": 3
                    },
                    {
                        "x_data": "z",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Investor_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Investor_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the id and weight of all pets whose age is older than 1. Visualize by bar chart.",
            "A bar chart about what is the id and weight of every pet who is older than 1?",
            "Visualize a bar chart for what is the id and weight of every pet who is older than 1?",
            "What is the id and weight of every pet who is older than 1."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2001-01-01",
                        "y_data": 12
                    },
                    {
                        "x_data": "2002-01-01",
                        "y_data": 13.4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart, show in asc by the total number.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, and I want to order Y in ascending order.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of manufacturer , and group by attribute name in a bar chart, order by the y-axis from low to high.",
            "For those records from the products and each product's manufacturer, find name and the sum of manufacturer , and group by attribute name, and visualize them by a bar chart, show in ascending by the sum manufacturer.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name, show in ascending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Show different parties of people along with the number of people in each party Plot them as bar chart, and show by the the total number in desc.",
            "Show different parties of people along with the number of people in each party with a bar chart, order total number in descending order.",
            "Bar graph to show the total number from different party, and rank Y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Anti-Lecompton Democrat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Independent Democrat",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of job_id and salary , list by the y-axis from high to low.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about salary over the job_id , and could you sort from high to low by the y-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of job_id and salary in a bar chart, could you sort from high to low by the y-axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of job_id and salary , order y-axis from high to low order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find job_id and salary , and visualize them by a bar chart, and order y-axis from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "MK_MAN",
                        "y_data": 13000
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 10000
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 8300
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 7000
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 6000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show me a bar chart for what are the apartment number and the room count of each apartment?, and could you show y axis from high to low order please?",
            "Return the apartment number and the number of rooms for each apartment, list in descending by the y-axis.",
            "Return a bar chart on what are the apartment number and the room count of each apartment?, and rank by the Y-axis from high to low.",
            "Return the apartment number and the number of rooms for each apartment by a bar chart, and show by the y-axis from high to low.",
            "What are the apartment number and the room count of each apartment Visualize by bar chart, show by the y-axis from high to low.",
            "Give me a bar chart for room_count of each apt number, and order in descending by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Suite 693",
                        "y_data": 9
                    },
                    {
                        "x_data": "Suite 307",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 411",
                        "y_data": 9
                    },
                    {
                        "x_data": "Apt. 187",
                        "y_data": 9
                    },
                    {
                        "x_data": "Suite 749",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 634",
                        "y_data": 8
                    },
                    {
                        "x_data": "Apt. 940",
                        "y_data": 8
                    },
                    {
                        "x_data": "Apt. 837",
                        "y_data": 8
                    },
                    {
                        "x_data": "Suite 645",
                        "y_data": 7
                    },
                    {
                        "x_data": "Apt. 908",
                        "y_data": 7
                    },
                    {
                        "x_data": "Suite 088",
                        "y_data": 6
                    },
                    {
                        "x_data": "Apt. 859",
                        "y_data": 6
                    },
                    {
                        "x_data": "Apt. 585",
                        "y_data": 5
                    },
                    {
                        "x_data": "Apt. 794",
                        "y_data": 3
                    },
                    {
                        "x_data": "Apt. 477",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "apt_number",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "room_count"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "A bar chart showing the average weight for each gender, and display x-axis in ascending order.",
            "Show the average of weight from each sex, and I want to list by the X in asc.",
            "What is the averag weights for people of each sex? Show a bar chart, I want to sort by the X from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 92
                    },
                    {
                        "x_data": "M",
                        "y_data": 86.7142857142857
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Sex",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(weight)"
                }
            }
        }
    },
    {
        "tables_used": [
            "furniture",
            "furniture_manufacte)"
        ],
        "db_id": "manufacturer",
        "nl_queries": [
            "Visualize names and market shares of furnitures which no any company is producing in our records by a bar chart, show in ascending by the bars.",
            "Please give me a bar chart to show the market share of different furniture name, which no any company is producing in our records by a pie chart, list in ascending by the bar."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bench",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Four-poster bed",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Market_Rate"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "What are the ids and trade names of the medicine that can interact with at least 3 enzymes, and I want to list in descending by the y axis.",
            "Show me a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, sort y-axis in desc order.",
            "what is the id and trade name of the medicines can interact with at least 3 enzymes?, I want to list in descending by the y axis.",
            "Show me a bar chart for what is the id and trade name of the medicines can interact with at least 3 enzymes?, and show total number from high to low order.",
            "What is the id and trade name of the medicines can interact with at least 3 enzymes, and could you show in desc by the total number?",
            "Visualize a bar chart for what are the ids and trade names of the medicine that can interact with at least 3 enzymes?, and show total number from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Saphris",
                        "y_data": 3
                    },
                    {
                        "x_data": "Abilify",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Trade_Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?, list the number of date became customer in descending order.",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart, and could you rank by the the number of date became customer in desc please?",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart, I want to show by the y axis in descending.",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20, and I want to show by the y axis in descending.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?, and order by the the number of date became customer in descending please.",
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20, list the number of date became customer in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_became_customer",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_became_customer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Fault_Log",
            "Fault_Log_Parts"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "A pie chart showing the number of faults for different fault status of all the faults recoreded in the logs."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fixed",
                        "y_data": 5
                    },
                    {
                        "x_data": "Reported",
                        "y_data": 5
                    },
                    {
                        "x_data": "Return",
                        "y_data": 2
                    },
                    {
                        "x_data": "Waiting",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(fault_status)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "fault_status"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_Service_Types",
            "Services"
        ],
        "db_id": "cre_Drama_Workshop_Groups",
        "nl_queries": [
            "How many services for each service type description? Use a bar chart to show it, show x axis in descending order please.",
            "Show the number of services for each service type description with a bar chart, order in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "provide photo service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide filming service",
                        "y_data": 3
                    },
                    {
                        "x_data": "provide dinning service",
                        "y_data": 5
                    },
                    {
                        "x_data": "provide adv promoting service",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Service_Type_Description",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of first_name and commission_pct , and rank FIRST_NAME from low to high order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find first_name and commission_pct , and visualize them by a bar chart, and rank bar in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and commission_pct in a bar chart, order by the FIRST_NAME in asc please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and commission_pct , and order by the FIRST_NAME in asc please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and commission_pct , and I want to display bar from low to high order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hermann",
                        "y_data": 0
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 0.15
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 0
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 0
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 0
                    },
                    {
                        "x_data": "William",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COMMISSION_PCT"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "Create a bar chart showing sum population across continent, could you display y-axis from high to low order?",
            "For each continent where the average life expectancy is shorter than 72, show their total population with a bar chart, list sum population in descending order please.",
            "What is the total population corresponding to continents that have an average life expectancy of less than 72? Visualize them in a bar chart, list by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Asia",
                        "y_data": 3705025700
                    },
                    {
                        "x_data": "Africa",
                        "y_data": 784475000
                    },
                    {
                        "x_data": "South America",
                        "y_data": 345780000
                    },
                    {
                        "x_data": "Oceania",
                        "y_data": 30401150
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Population)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of department_id over the hire_date bin hire_date by time by a bar chart.",
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 670
                    },
                    {
                        "x_data": "July",
                        "y_data": 670
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 1040
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 680
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about the average of ID over the Nationality , and group by attribute Nationality by a bar chart, and list from low to high by the Y.",
            "Show the average of id from each nationality, I want to display in ascending by the Y.",
            "A bar chart shows the distribution of Nationality and the average of ID , and group by attribute Nationality, and rank from low to high by the mean id.",
            "Return a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, rank from low to high by the mean id.",
            "Draw a bar chart about the distribution of Nationality and the average of ID , and group by attribute Nationality, and could you display in ascending by the Y please?",
            "Find Nationality and the average of ID , and group by attribute Nationality, and visualize them by a bar chart, and I want to display in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Ukraine",
                        "y_data": 1
                    },
                    {
                        "x_data": "Australia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tunisia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italy",
                        "y_data": 5
                    },
                    {
                        "x_data": "Canada",
                        "y_data": 6
                    },
                    {
                        "x_data": "Poland",
                        "y_data": 7
                    },
                    {
                        "x_data": "France",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Nationality",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "Show the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, could you display by the how many date of transaction in ascending?",
            "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and count them by a bar chart, and could you show y-axis in asc order?",
            "A bar chart for showing the number of the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000, and sort in asc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Bar graph to show the number of directed by from different directed by, show Directed_by in asc order.",
            "Give me a bar chart showing the number of films for each director, and display bar in asc order.",
            "What is the number of films of each director? Return a bar chart, order in ascending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bill Schreiner",
                        "y_data": 4
                    },
                    {
                        "x_data": "Jesus Salvador Trevi\u00f1o",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Directed_by",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Directed_by)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "has_amenity",
            "dorm_amenity"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Show the number of students who are living in a dorm with a TV Lounge and group by first name in a bar chart.",
            "How many students are living in a dorm with a TV Lounge? Show a bar chart grouping by first name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 2
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinesh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "List the number of enginners in a stacked bar chart The x-axis is first name and group by skill description, could you rank Y-axis in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 2,
                        "classify": "Electrical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 0,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 1,
                        "classify": "Mechanical"
                    },
                    {
                        "x_data": "Alexys",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Clemens",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Cullen",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Lorine",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Samanta",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Brian",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Josie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Manley",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Weston",
                        "y_data": 0,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Archibald",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Courtney",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Nellie",
                        "y_data": 1,
                        "classify": "TV, Video"
                    },
                    {
                        "x_data": "Naomi",
                        "y_data": 0,
                        "classify": "TV, Video"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "first_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(first_name)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Find all the ids and dates of the logs for the problem whose id is 10 Plot them as bar chart, I want to sort bars in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1997-08-31",
                        "y_data": 12
                    },
                    {
                        "x_data": "2009-04-10",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "log_entry_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "problem_log_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Maintenance_Engineers",
            "Engineer_Skills",
            "Skills"
        ],
        "db_id": "assets_maintenance",
        "nl_queries": [
            "Show the number of engineers for different other details in a bar chart, and order from high to low by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Skilled",
                        "y_data": 1
                    },
                    {
                        "x_data": "",
                        "y_data": 19
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(other_details)"
                }
            }
        }
    },
    {
        "tables_used": [
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Show each location and the number of cinemas there Show bar chart, rank by the bars in descending.",
            "Show each location and the number of cinemas there by a bar chart, and sort bars in desc order.",
            "Create a bar chart showing the total number across location, order in descending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "County Wicklow",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Tipperary",
                        "y_data": 2
                    },
                    {
                        "x_data": "County Louth",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Laois",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Dublin",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Cork",
                        "y_data": 1
                    },
                    {
                        "x_data": "County Clare",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the number of dorms for each gender in a bar chart.",
            "How many dorms are there for each gender? Show me a bar chart.",
            "Bar chart x axis gender y axis the total number"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 1
                    },
                    {
                        "x_data": "M",
                        "y_data": 1
                    },
                    {
                        "x_data": "X",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and manager_id , I want to rank in asc by the y-axis.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the first_name , and could you sort Y in asc order?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and manager_id , and display in asc by the Y-axis please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and manager_id in a bar chart, and I want to sort from low to high by the y-axis please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and manager_id , I want to rank in asc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "Kimberely",
                        "y_data": 149
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 201
                    },
                    {
                        "x_data": "William",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers",
            "orders"
        ],
        "db_id": "tracking_orders",
        "nl_queries": [
            "Find the status of orders which belong to the customer named \"Jeramie\", group by order status, and count them. Show the result with a pie chart.",
            "Find the status of orders which belong to the customer named \"Jeramie\", group by order status, and show the proportion of order status with a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "On Road",
                        "y_data": 1
                    },
                    {
                        "x_data": "Packing",
                        "y_data": 2
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(order_status)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "order_status"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of manager_id bin hire_date by time in a bar chart, display y axis in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, could you rank by the total number of manager id from high to low?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, could you order y-axis in desc order please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of manager_id over the hire_date bin hire_date by time by a bar chart, and order by the y axis in desc please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by time, I want to list by the total number in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 753
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EMPLOYEE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "A bar chart for listing the number of the phone numbers of all employees.",
            "What are the number of the phone numbers for each employee?",
            "A bar chart for what are the number of the phone numbers for each employee?",
            "List the number of the phone numbers of all employees.",
            "What are the phone numbers for each employee, and count them by a bar chart",
            "List the phone numbers of all employees, and count them by a bar chart",
            "Plot the number of phone by grouped by phone as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "+1 (403) 246-9887",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 262-3443",
                        "y_data": 2
                    },
                    {
                        "x_data": "+1 (403) 263-4423",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 456-9986",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 467-3351",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (780) 428-9482",
                        "y_data": 1
                    },
                    {
                        "x_data": "1 (780) 836-9987",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Phone",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Phone)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Bar chart, X is bed type and the Y-axis is their appearance frequency, show by the names in ascending.",
            "Compare the frequency of each type of bed by a bar chart, list in ascending by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "King",
                        "y_data": 3
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(bedType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "head"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show the average age of heads of departments born in each state with a bar chart, and could you display y-axis in descending order?",
            "Show me mean age by born state in a histogram, show Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Alabama",
                        "y_data": 68
                    },
                    {
                        "x_data": "California",
                        "y_data": 61.25
                    },
                    {
                        "x_data": "Connecticut",
                        "y_data": 55
                    },
                    {
                        "x_data": "Delaware",
                        "y_data": 53
                    },
                    {
                        "x_data": "Florida",
                        "y_data": 50
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "born_state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "A bar chart for what are the number of the names of all products?",
            "Select the names of all the products in the store, and count them by a bar chart",
            "What are the number of the names of all products?",
            "What are the names of all products, and count them by a bar chart",
            "Bar chart x axis name y axis the number of name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 1
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 1
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 1
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 1
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of first_name and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about manager_id over the first_name .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of first_name and manager_id .",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of first_name and manager_id in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of first_name and manager_id ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kimberely",
                        "y_data": 149
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 100
                    },
                    {
                        "x_data": "Pat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 101
                    },
                    {
                        "x_data": "Hermann",
                        "y_data": 101
                    },
                    {
                        "x_data": "Shelley",
                        "y_data": 101
                    },
                    {
                        "x_data": "William",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "MANAGER_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "physician",
            "trained_in",
            "procedures"
        ],
        "db_id": "hospital_1",
        "nl_queries": [
            "Which physicians are trained in procedures that are more expensive than 5000, and count them by a bar chart, and display by the total number in descending.",
            "A bar chart for finding the number of the physicians who are trained in a procedure that costs more than 5000, and order in descending by the y-axis.",
            "Find the physicians who are trained in a procedure that costs more than 5000, and count them by a bar chart, and sort total number in desc order.",
            "Find the number of the physicians who are trained in a procedure that costs more than 5000, order by the Y from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John Wen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Todd Quinlan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Christopher Turk",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "Show the name of each party and the corresponding number of delegates from that party by a pie chart.",
            "Show the name of each party and the corresponding number of delegates from that party. Plot them as pie chart.",
            "For each party, return the name of the party and the number of delegates from that party."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Democratic",
                        "y_data": 4
                    },
                    {
                        "x_data": "Independence",
                        "y_data": 1
                    },
                    {
                        "x_data": "Liberal",
                        "y_data": 2
                    },
                    {
                        "x_data": "Working Families",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(COUNT(*))"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "company_employee",
        "nl_queries": [
            "A pie chart showing the number of companies for each industry.",
            "Give me a pie to show how many industry from different industry."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Automotive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Banking",
                        "y_data": 7
                    },
                    {
                        "x_data": "Conglomerate",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 8
                    },
                    {
                        "x_data": "Retailing",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Industry)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Industry"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of code , and group by attribute name, and display by the y axis in asc.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of code , and group by attribute name, and display by the y axis in asc.",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and the sum of code , and group by attribute name, and could you list Y in ascending order please?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of code , and group by attribute name, could you show by the Y-axis from low to high?",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and the sum of code , and group by attribute name in a bar chart, sort by the sum code in asc please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hard drive",
                        "y_data": 1
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 7
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 17
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Customers"
        ],
        "db_id": "driving_school",
        "nl_queries": [
            "Bar chart x axis customer status code y axis the total number, and sort from low to high by the names.",
            "List all customer status codes and the number of customers having each status code, order by the bar from low to high.",
            "For each customer status code, how many customers are classified that way Visualize by bar chart, and display in ascending by the bar.",
            "List all customer status codes and the number of customers having each status code in a bar chart, sort from low to high by the X please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bad Customer",
                        "y_data": 9
                    },
                    {
                        "x_data": "Good Customer",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_status_code",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Aircraft"
        ],
        "db_id": "flight_1",
        "nl_queries": [
            "Return a histogram on what are the names and distances for all airplanes?, display in descending by the total number.",
            "Return a bar chart on what are the names and distances for all airplanes?, and list by the Y in desc.",
            "Show name and distance for all aircrafts by a bar chart, and display by the total number in desc please.",
            "Show name and distance for all aircrafts Visualize by bar chart, could you rank from high to low by the y-axis?",
            "What are the names and distances for all airplanes Visualize by bar chart, could you rank from high to low by the y-axis?",
            "Show me distance by name in a histogram, list by the Y in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Boeing 747-400",
                        "y_data": 8430
                    },
                    {
                        "x_data": "Airbus A340-300",
                        "y_data": 7120
                    },
                    {
                        "x_data": "Lockheed L1011",
                        "y_data": 6900
                    },
                    {
                        "x_data": "Boeing 767-400ER",
                        "y_data": 6475
                    },
                    {
                        "x_data": "Boeing 777-300",
                        "y_data": 6441
                    },
                    {
                        "x_data": "Tupolev 154",
                        "y_data": 4103
                    },
                    {
                        "x_data": "Boeing 757-300",
                        "y_data": 4010
                    },
                    {
                        "x_data": "Boeing 737-800",
                        "y_data": 3383
                    },
                    {
                        "x_data": "Airbus A320",
                        "y_data": 2605
                    },
                    {
                        "x_data": "SAAB 340",
                        "y_data": 2128
                    },
                    {
                        "x_data": "Airbus A319",
                        "y_data": 1805
                    },
                    {
                        "x_data": "Embraer ERJ-145",
                        "y_data": 1530
                    },
                    {
                        "x_data": "Boeing 727",
                        "y_data": 1504
                    },
                    {
                        "x_data": "British Aerospace Jetstream 41",
                        "y_data": 1502
                    },
                    {
                        "x_data": "Piper Archer III",
                        "y_data": 520
                    },
                    {
                        "x_data": "Schwitzer 2-33",
                        "y_data": 30
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "distance"
                }
            }
        }
    },
    {
        "tables_used": [
            "votes"
        ],
        "db_id": "voter_1",
        "nl_queries": [
            "List the states of all votes, compute the total number of states, and compute the average of their vote id with a bar chart, list in ascending by the mean vote id please.",
            "Bar chart x axis state y axis the average of vote id, and order by the mean vote id in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "NY",
                        "y_data": 1.5
                    },
                    {
                        "x_data": "CA",
                        "y_data": 3
                    },
                    {
                        "x_data": "NJ\n",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(vote_id)"
                }
            }
        }
    },
    {
        "tables_used": [
            "useracct",
            "review"
        ],
        "db_id": "epinions_1",
        "nl_queries": [
            "For each user, find their name and the number of reviews written by them Show bar chart, and I want to list by the names from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Helen",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "member_attendance",
            "member",
            "performance"
        ],
        "db_id": "performance_attendance",
        "nl_queries": [
            "Show the names of members and the location of the performances they attended. Compute the total number of each location using a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Madison Square Garden",
                        "y_data": 1
                    },
                    {
                        "x_data": "Scotiabank Place",
                        "y_data": 1
                    },
                    {
                        "x_data": "TD Garden",
                        "y_data": 3
                    },
                    {
                        "x_data": "Verizon Center",
                        "y_data": 3
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location"
                }
            }
        }
    },
    {
        "tables_used": [
            "users"
        ],
        "db_id": "document_management",
        "nl_queries": [
            "Find the number of users in each role. Visualize by pie chart.",
            "Visualize a pie chart with what are the different role codes for users, and how many users have each?",
            "Pie. what are the different role codes for users, and how many users have each?",
            "What are the different role codes for users, and how many users have each.",
            "I want to know the proportion of the total number for each role code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "DBA",
                        "y_data": 8
                    },
                    {
                        "x_data": "PROJ-MGR",
                        "y_data": 7
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "role_code"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Tests_Taken"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "Find the dates of the tests taken with result \"Pass\", and count them by a bar chart, and rank names in descending order.",
            "A bar chart for finding the number of the dates of the tests taken with result \"Pass\", show X-axis in desc order.",
            "Find the number of the dates of the tests taken with result \"Pass\", and I want to list by the bars from high to low.",
            "Which tests have \"Pass\" results? Return the dates when the tests were taken, and count them by a bar chart, rank by the X in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2018-03-25",
                        "y_data": 3
                    },
                    {
                        "x_data": "2018-03-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-23",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-19",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_test_taken",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_test_taken)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customers"
        ],
        "db_id": "customers_and_addresses",
        "nl_queries": [
            "Find the number of the \"date became customers\" of the customers whose ID is between 10 and 20.",
            "What are the number of the dates when customers with ids between 10 and 20 became customers?",
            "A bar chart for what are the number of the dates when customers with ids between 10 and 20 became customers?",
            "What are the dates when customers with ids between 10 and 20 became customers, and count them by a bar chart",
            "Find the \"date became customers\" of the customers whose ID is between 10 and 20, and count them by a bar chart",
            "A bar chart for finding the number of the \"date became customers\" of the customers whose ID is between 10 and 20."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Feb",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mar",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_became_customer",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_became_customer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute name, and visualize them by a bar chart.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute name.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute name by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute name."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "races"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "What are the names of races held between 2009 and 2011, and count them by a bar chart, show from high to low by the Y.",
            "A bar chart for what are the number of the names of all races held between 2009 and 2011?, and I want to rank by the Y in desc.",
            "What are the number of the names of races held between 2009 and 2011?, and could you display by the Y from high to low?",
            "What are the names of all races held between 2009 and 2011, and count them by a bar chart, and could you list in descending by the Y-axis?",
            "A bar chart for what are the number of the names of races held between 2009 and 2011?, show from high to low by the Y.",
            "What are the number of the names of all races held between 2009 and 2011?, display by the y-axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Turkish Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Spanish Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Singapore Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monaco Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Malaysian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Japanese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Italian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hungarian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "German Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "European Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Chinese Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "British Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Brazilian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Belgian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Australian Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Abu Dhabi Grand Prix",
                        "y_data": 3
                    },
                    {
                        "x_data": "Korean Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Canadian Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Bahrain Grand Prix",
                        "y_data": 2
                    },
                    {
                        "x_data": "Indian Grand Prix",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "architect",
            "bridge"
        ],
        "db_id": "architecture",
        "nl_queries": [
            "Give me a histogram for what are the ids and names of the architects who built at least 3 bridges ?, and list by the names in desc.",
            "Draw a bar chart for what are the ids and names of the architects who built at least 3 bridges ?, rank in desc by the x-axis.",
            "What are the ids and names of the architects who built at least 3 bridges , list by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Le Corbusier",
                        "y_data": 5
                    },
                    {
                        "x_data": "Frank Lloyd Wright",
                        "y_data": 1
                    },
                    {
                        "x_data": "Frank Gehry",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "A bar chart showing the number of first name for all female students. Their sex is F.",
            "A bar chart about the number of first name for all female students whose sex is F."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sarah",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shiela",
                        "y_data": 1
                    },
                    {
                        "x_data": "Stacy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tracy",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "staff",
            "problem_log"
        ],
        "db_id": "tracking_software_problems",
        "nl_queries": [
            "Show the correlation between the problem id and log id which are assigned to the staff named Rylan Homenick with a scatter chart.",
            "List the problem id and log id which are assigned to the staff named Rylan Homenick. Plot them as scatter chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 11,
                        "y_data": 1
                    },
                    {
                        "x_data": 8,
                        "y_data": 2
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "problem_id"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "problem_log_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship"
        ],
        "db_id": "ship_mission",
        "nl_queries": [
            "What is the total number of each ship type? Give me a bar chart.",
            "Show me the comparison of the total number of every ship type with a bar graph.",
            "Return a bar chart showing the total number of each ship type.",
            "Show me how many type by type in a histogram"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Battle ship",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cargo ship",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Type",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Type)"
                }
            }
        }
    },
    {
        "tables_used": [
            "dorm"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "What is the total capacity of dorms for each gender? Give me a bar chart, and could you list by the x-axis from low to high?",
            "Create a bar chart showing sum student capacity across gender, and order by the bar in asc please.",
            "Find total capacity of dorms for each gender in a bar chart, and could you list by the x-axis from low to high?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "F",
                        "y_data": 128
                    },
                    {
                        "x_data": "M",
                        "y_data": 116
                    },
                    {
                        "x_data": "X",
                        "y_data": 1136
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "gender",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(student_capacity)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Ref_document_types",
            "Documents"
        ],
        "db_id": "cre_Docs_and_Epenses",
        "nl_queries": [
            "How many documents are created in each day? Bin the document date by weekday and group by document type with a stacked bar chart, and rank by the Y-axis from low to high.",
            "Show the number of documents created in each day and bin document date by weekday and group by document type with a stacked bar chart, and sort by the the number of document date from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Book"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2,
                        "classify": "Book"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Book"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "CV"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "CV"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2,
                        "classify": "CV"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Film"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Film"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2,
                        "classify": "Paper"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "Paper"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Document_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Document_Date)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates that have an average sea level pressure between 303 and 31?, list X-axis in desc order.",
            "A line chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, and rank in desc by the x axis.",
            "What are the dates that have an average sea level pressure between 303 and 31, and count them by a line chart, order in desc by the date.",
            "What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a line chart, and list X-axis in desc order.",
            "A line chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and list by the X-axis in descending.",
            "What are the number of the dates in which the mean sea level pressure was between 303 and 31?, and could you order by the x axis from high to low?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2015-04-14",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-03-05",
                        "y_data": 1
                    },
                    {
                        "x_data": "2015-02-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-01-23",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-01-05",
                        "y_data": 5
                    },
                    {
                        "x_data": "2015-01-04",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-12-28",
                        "y_data": 3
                    },
                    {
                        "x_data": "2014-12-27",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-12-21",
                        "y_data": 1
                    },
                    {
                        "x_data": "2014-11-25",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-11-24",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-11-23",
                        "y_data": 4
                    },
                    {
                        "x_data": "2014-01-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-01-13",
                        "y_data": 5
                    },
                    {
                        "x_data": "2014-01-12",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-24",
                        "y_data": 1
                    },
                    {
                        "x_data": "2013-12-23",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-15",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-14",
                        "y_data": 5
                    },
                    {
                        "x_data": "2013-12-13",
                        "y_data": 2
                    },
                    {
                        "x_data": "2013-12-10",
                        "y_data": 4
                    },
                    {
                        "x_data": "2013-12-09",
                        "y_data": 5
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Dogs"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the dog name and weight of the dogs who have been abandoned in a pie chart.",
            "What is the weight of each dog that was abandoned? Show in a pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Kacey",
                        "y_data": 6
                    },
                    {
                        "x_data": "Lyric",
                        "y_data": 4
                    },
                    {
                        "x_data": "Evangeline",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "age"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student"
        ],
        "db_id": "restaurant_1",
        "nl_queries": [
            "List how many students in each last name who majored in 600 using a bar chart, and sort by the bars from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Adams",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apap",
                        "y_data": 1
                    },
                    {
                        "x_data": "Davis",
                        "y_data": 1
                    },
                    {
                        "x_data": "Gompers",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jones",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kim",
                        "y_data": 1
                    },
                    {
                        "x_data": "Kumar",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lee",
                        "y_data": 2
                    },
                    {
                        "x_data": "Leighton",
                        "y_data": 1
                    },
                    {
                        "x_data": "Nelson",
                        "y_data": 1
                    },
                    {
                        "x_data": "Norris",
                        "y_data": 1
                    },
                    {
                        "x_data": "Pang",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schultz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Schwartz",
                        "y_data": 1
                    },
                    {
                        "x_data": "Smith",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tai",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wilson",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "LName",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(LName)"
                }
            }
        }
    },
    {
        "tables_used": [
            "EMPLOYEE"
        ],
        "db_id": "chinook_1",
        "nl_queries": [
            "List the number of the phone numbers of all employees, and sort in descending by the names.",
            "List the phone numbers of all employees, and count them by a bar chart, and rank X-axis in desc order please.",
            "A bar chart for what are the number of the phone numbers for each employee?, and could you show in descending by the Phone please?",
            "Plot the number of phone by grouped by phone as a bar graph, could you list bar in descending order?",
            "What are the number of the phone numbers for each employee?, display in descending by the bars.",
            "A bar chart for listing the number of the phone numbers of all employees, sort names from high to low order.",
            "What are the phone numbers for each employee, and count them by a bar chart, and sort in descending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1 (780) 836-9987",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (780) 428-9482",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 467-3351",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 456-9986",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 263-4423",
                        "y_data": 1
                    },
                    {
                        "x_data": "+1 (403) 262-3443",
                        "y_data": 2
                    },
                    {
                        "x_data": "+1 (403) 246-9887",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Phone",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Phone)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart, and display from high to low by the Y-axis.",
            "Show me a bar chart about the number of races held in each year after 2014, could you list total number in descending order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    },
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weather"
        ],
        "db_id": "bike_1",
        "nl_queries": [
            "What are the number of the dates in which the mean sea level pressure was between 303 and 31?, and could you rank in desc by the y-axis?",
            "What are the dates that have an average sea level pressure between 303 and 31, and count them by a bar chart, sort the number of date in descending order.",
            "A bar chart for what are the number of the dates that have an average sea level pressure between 303 and 31?, and rank in descending by the y axis please.",
            "A bar chart for what are the number of the dates in which the mean sea level pressure was between 303 and 31?, show y axis in descending order please.",
            "What are the dates in which the mean sea level pressure was between 303 and 31, and count them by a bar chart, and order y axis in descending order please.",
            "What are the number of the dates that have an average sea level pressure between 303 and 31?, and sort the number of date in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 25
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 23
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 21
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 10
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 7
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Give me the comparison about ID over the meter_700 , and order by the bar from low to high.",
            "Draw a bar chart about the distribution of meter_700 and ID , and order in asc by the names.",
            "A bar chart shows the distribution of meter_700 and ID , I want to sort in ascending by the bar.",
            "Give me the comparison about ID over the meter_700 by a bar chart, and could you display in asc by the X?",
            "Bar chart x axis meter 700 y axis id, could you show in ascending by the meter_700?",
            "Return a bar chart about the distribution of meter_700 and ID , could you show in ascending by the meter_700?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:50.80",
                        "y_data": 3
                    },
                    {
                        "x_data": "6:50.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 5
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 4
                    },
                    {
                        "x_data": "6:53.34",
                        "y_data": 8
                    },
                    {
                        "x_data": "6:55.07",
                        "y_data": 1
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 2
                    },
                    {
                        "x_data": "6:57.69",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "student"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "Find the average age of students living in each city with a bar chart, and show x axis from high to low order please.",
            "What are average ages for students living in each city? Return a bar chart, could you sort names in desc order?",
            "Bar chart of mean age from each city code, could you display bars from high to low order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "YYZ",
                        "y_data": 22.5
                    },
                    {
                        "x_data": "WAS",
                        "y_data": 21.66666666666667
                    },
                    {
                        "x_data": "SFO",
                        "y_data": 21
                    },
                    {
                        "x_data": "ROC",
                        "y_data": 20
                    },
                    {
                        "x_data": "PIT",
                        "y_data": 19
                    },
                    {
                        "x_data": "PHL",
                        "y_data": 19.666666666666668
                    },
                    {
                        "x_data": "PEK",
                        "y_data": 17
                    },
                    {
                        "x_data": "NYC",
                        "y_data": 20.33333333333333
                    },
                    {
                        "x_data": "NAR",
                        "y_data": 18
                    },
                    {
                        "x_data": "LOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "LON",
                        "y_data": 27
                    },
                    {
                        "x_data": "HOU",
                        "y_data": 17
                    },
                    {
                        "x_data": "HKG",
                        "y_data": 18
                    },
                    {
                        "x_data": "DET",
                        "y_data": 17
                    },
                    {
                        "x_data": "DAL",
                        "y_data": 18
                    },
                    {
                        "x_data": "CHI",
                        "y_data": 20
                    },
                    {
                        "x_data": "BOS",
                        "y_data": 18
                    },
                    {
                        "x_data": "BAL",
                        "y_data": 18.5
                    },
                    {
                        "x_data": "ATL",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "city_code",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "weekly_weather"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "What is the average high temperature for each day of week Plot them as bar chart, rank Y-axis in desc order.",
            "Draw a bar chart for what is the average high temperature for each day of week?, and display in descending by the Y.",
            "Bar graph to show the average of high temperature from different day of week, and rank Y-axis in desc order.",
            "Return a histogram on what is the average high temperature for each day of week?, and show in desc by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Wednesday",
                        "y_data": 58
                    },
                    {
                        "x_data": "Tuesday",
                        "y_data": 58
                    },
                    {
                        "x_data": "Thursday",
                        "y_data": 57
                    },
                    {
                        "x_data": "Monday",
                        "y_data": 56
                    },
                    {
                        "x_data": "Saturday",
                        "y_data": 55
                    },
                    {
                        "x_data": "Friday",
                        "y_data": 55
                    },
                    {
                        "x_data": "Sunday",
                        "y_data": 54
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "day_of_week",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(high_temperature)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Show the number of games in each season and group by away team in a group line chart The x-axis is season, and list Season in descending order.",
            "I want to see trend the number of season over season by Away_team, and list Season in descending order.",
            "I want to see trend the number of season over season by Away_team, order in descending by the X.",
            "Show the number of games in each season and group by away team in a group line chart The x-axis is season, could you display in desc by the X-axis?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2013",
                        "y_data": 5,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 12,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 5,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 5,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 8,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 6,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 6,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 15,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 9,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 8,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 7,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 15,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 6,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 9,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 9,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 9,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Season",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Season)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type",
            "Has_allergy",
            "Student"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "What is the number of each allergie the girl named Lisa has? Plot them as bar chart, rank X in descending order.",
            "What is the number of each allergie that the student with first name Lisa has? Draw a bar chart, and rank X in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tree Pollen",
                        "y_data": 1
                    },
                    {
                        "x_data": "Shellfish",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ragweed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Milk",
                        "y_data": 1
                    },
                    {
                        "x_data": "Grass Pollen",
                        "y_data": 2
                    },
                    {
                        "x_data": "Eggs",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dog",
                        "y_data": 1
                    },
                    {
                        "x_data": "Cat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anchovies",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Allergy",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Allergy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "student",
            "lives_in",
            "has_amenity",
            "dorm_amenity"
        ],
        "db_id": "dorm_1",
        "nl_queries": [
            "How many students are living in a dorm with a TV Lounge? Show a bar chart grouping by first name, and could you display by the x-axis in ascending?",
            "Show the number of students who are living in a dorm with a TV Lounge and group by first name in a bar chart, display from low to high by the bar please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bruce",
                        "y_data": 1
                    },
                    {
                        "x_data": "David",
                        "y_data": 2
                    },
                    {
                        "x_data": "Derek",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinesh",
                        "y_data": 1
                    },
                    {
                        "x_data": "Eric",
                        "y_data": 3
                    },
                    {
                        "x_data": "George",
                        "y_data": 1
                    },
                    {
                        "x_data": "Ian",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jandy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Linda",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lisa",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mark",
                        "y_data": 2
                    },
                    {
                        "x_data": "Michael",
                        "y_data": 1
                    },
                    {
                        "x_data": "Paul",
                        "y_data": 2
                    },
                    {
                        "x_data": "Steven",
                        "y_data": 1
                    },
                    {
                        "x_data": "Susan",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Fname",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Fname)"
                }
            }
        }
    },
    {
        "tables_used": [
            "courses"
        ],
        "db_id": "student_assessment",
        "nl_queries": [
            "For all course_name from courses table, group by the course name and count them with a bar chart.",
            "Bar chart of the number of course name from each course name"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "English",
                        "y_data": 2
                    },
                    {
                        "x_data": "French",
                        "y_data": 2
                    },
                    {
                        "x_data": "data structure",
                        "y_data": 1
                    },
                    {
                        "x_data": "statistics",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "course_name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(course_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journal",
            "journal",
            "journal_committee"
        ],
        "db_id": "journal_committee",
        "nl_queries": [
            "Give me a bar chart to show the theme and their sales of the journal which did not have any of the listed editors serving on the committee, and sort in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Baltimore Ravens",
                        "y_data": 6532
                    },
                    {
                        "x_data": "Tampa Bay Buccaneers",
                        "y_data": 4798
                    },
                    {
                        "x_data": "Cleveland Browns",
                        "y_data": 3798
                    },
                    {
                        "x_data": "at Cincinnati Bengals",
                        "y_data": 3421
                    },
                    {
                        "x_data": "Green Bay Packers",
                        "y_data": 2804
                    },
                    {
                        "x_data": "at Oakland Raiders",
                        "y_data": 1934
                    },
                    {
                        "x_data": "at Pittsburgh Steelers",
                        "y_data": 1763
                    },
                    {
                        "x_data": "Jacksonville Jaguars",
                        "y_data": 1232
                    },
                    {
                        "x_data": "Miami Dolphins",
                        "y_data": 798
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Theme",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Sales"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me about the distribution of Date_of_Birth and Weight in a bar chart, and could you rank by the y axis from low to high?",
            "Give me the comparison about Weight over the Date_of_Birth , and could you sort by the Weight in ascending?",
            "A bar chart shows the distribution of Date_of_Birth and Weight , show Weight from low to high order.",
            "Give me the comparison about Weight over the Date_of_Birth by a bar chart, I want to rank in asc by the y axis please.",
            "Show weight from each date of birth, and I want to rank in asc by the y axis please.",
            "Visualize a bar chart about the distribution of Date_of_Birth and Weight , and I want to list y axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "28.09.1981",
                        "y_data": 82
                    },
                    {
                        "x_data": "06.10.1976",
                        "y_data": 83
                    },
                    {
                        "x_data": "10.11.1972",
                        "y_data": 85
                    },
                    {
                        "x_data": "01.09.1977",
                        "y_data": 88
                    },
                    {
                        "x_data": "22.04.1977",
                        "y_data": 88
                    },
                    {
                        "x_data": "20.08.1970",
                        "y_data": 89
                    },
                    {
                        "x_data": "10.03.1976",
                        "y_data": 90
                    },
                    {
                        "x_data": "05.05.1972",
                        "y_data": 92
                    },
                    {
                        "x_data": "03.02.1976",
                        "y_data": 94
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_of_Birth",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "member"
        ],
        "db_id": "decoration_competition",
        "nl_queries": [
            "Return a bar chart showing how many members have visited for each college, could you display y axis in desc order please?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Edmonton School",
                        "y_data": 3
                    },
                    {
                        "x_data": "Toronto School",
                        "y_data": 2
                    },
                    {
                        "x_data": "Saskatchewan School",
                        "y_data": 2
                    },
                    {
                        "x_data": "Calgary School",
                        "y_data": 2
                    },
                    {
                        "x_data": "B.C. School",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "stock",
            "device",
            "shop"
        ],
        "db_id": "device",
        "nl_queries": [
            "Show how many carrriers for each shops in a bar chart, and list by the X-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ATnT",
                        "y_data": 1
                    },
                    {
                        "x_data": "Apple",
                        "y_data": 1
                    },
                    {
                        "x_data": "Best Buy",
                        "y_data": 1
                    },
                    {
                        "x_data": "Dinas Device",
                        "y_data": 2
                    },
                    {
                        "x_data": "Ferndale",
                        "y_data": 2
                    },
                    {
                        "x_data": "Gelli repair",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Shop_Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Shop_Name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "artist"
        ],
        "db_id": "theme_gallery",
        "nl_queries": [
            "What are the average ages of artists by countries? Visualize the result with a histogram, display in ascending by the X-axis.",
            "Compare the average of artists' age by country in a bar graph, and could you show Country from low to high order?",
            "Show the average of artists' age by country, and I want to order by the X-axis in asc.",
            "Bar chart x axis country y axis the average of age, and I want to order by the Country in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fiji",
                        "y_data": 45
                    },
                    {
                        "x_data": "United States",
                        "y_data": 49.6
                    },
                    {
                        "x_data": "Zimbabwe",
                        "y_data": 48
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Country",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "solvency_ii",
        "nl_queries": [
            "Show different type codes of products and the number of products with each type code with a pie chart.",
            "Show different type codes of products and the number of products with each type code.",
            "Create a pie chart showing the total number across product type code."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Books",
                        "y_data": 4
                    },
                    {
                        "x_data": "Clothes",
                        "y_data": 2
                    },
                    {
                        "x_data": "Electronics",
                        "y_data": 4
                    },
                    {
                        "x_data": "Food",
                        "y_data": 5
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Product_Type_Code"
                }
            }
        }
    },
    {
        "tables_used": [
            "movie"
        ],
        "db_id": "culture_company",
        "nl_queries": [
            "Show the number of movies for each year in a bar chart and ordered by budget.",
            "What is the number of movies for each year, ordered by budget in millions? Visualize in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1999-01-01",
                        "y_data": 3
                    },
                    {
                        "x_data": "2000-01-01",
                        "y_data": 6
                    },
                    {
                        "x_data": "2001-01-01",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Year",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "files"
        ],
        "db_id": "music_1",
        "nl_queries": [
            "For each file format, return the number of artists who released songs in that format Show bar chart, and order bar from high to low order.",
            "A bar chart about how many songs were released for each format?, and could you rank by the x axis from high to low?",
            "Bar graph to show the total number from different formats, and I want to rank by the x axis in desc.",
            "how many songs were released for each format?, show from high to low by the x axis.",
            "How many songs were released for each format Show bar chart, I want to sort by the bar in descending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "mp4",
                        "y_data": 4
                    },
                    {
                        "x_data": "mp3",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "formats",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_people",
        "nl_queries": [
            "How many parties of the time they took office, binning the took office into Year interval, and then split by the minister's name.",
            "Stack bar chart of how many took office vs Minister based on took office"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 1,
                        "classify": "Dr. Kwame Nkrumah (MP)"
                    },
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 1,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Ebenezer Ako-Adjei (MP)"
                    },
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 1,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Imoru Egala (MP)"
                    },
                    {
                        "x_data": "1957",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1958",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1959",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1960",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    },
                    {
                        "x_data": "1961",
                        "y_data": 2,
                        "classify": "Kojo Botsio (MP)"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Took_office",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Took_office)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Transcript_Contents",
            "Transcripts"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "I want to visualize the trend about the total appears times of transcript date in the Year interval, and I want to rank X in desc order please.",
            "Bin the transcript date into year interval and count them for a line chart, order in descending by the x axis.",
            "Bin the transcript date into year interval and count them for a line chart, and I want to show by the x-axis in desc.",
            "I want to visualize the trend about the total appears times of transcript date in the Year interval, and rank from high to low by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2011~2013",
                        "y_data": 1
                    },
                    {
                        "x_data": "2007~2010",
                        "y_data": 1
                    },
                    {
                        "x_data": "2003~2006",
                        "y_data": 0
                    },
                    {
                        "x_data": "1999~2002",
                        "y_data": 0
                    },
                    {
                        "x_data": "1995~1998",
                        "y_data": 1
                    },
                    {
                        "x_data": "1991~1994",
                        "y_data": 0
                    },
                    {
                        "x_data": "1987~1990",
                        "y_data": 0
                    },
                    {
                        "x_data": "1983~1986",
                        "y_data": 0
                    },
                    {
                        "x_data": "1979~1982",
                        "y_data": 0
                    },
                    {
                        "x_data": "1975~1978",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transcript_date",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(transcript_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "web_client_accelerator",
            "accelerator_compatible_browser"
        ],
        "db_id": "browser_web",
        "nl_queries": [
            "Display a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, display from low to high by the x-axis please.",
            "What are the ids and names of the web accelerators that are compatible with two or more browsers Visualize by bar chart, could you rank bars in ascending order please?",
            "Visualize a bar chart for what are the ids and names of the web accelerators that are compatible with two or more browsers?, and rank in ascending by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CACHEbox",
                        "y_data": 1
                    },
                    {
                        "x_data": "CProxy",
                        "y_data": 2
                    },
                    {
                        "x_data": "Fasterfox",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the number of counties of all appellations in a bar chart, and display in desc by the X-axis.",
            "Plot the number of county by grouped by county as a bar graph, display in descending by the x axis.",
            "What is the number of counties for all appellations?, and I want to order bars from high to low order please.",
            "Return a bar chart about the number of counties for all appellations?, I want to order bars from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 11
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 5
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 4
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 11
                    },
                    {
                        "x_data": "N/A",
                        "y_data": 8
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 3
                    },
                    {
                        "x_data": "Contra Costa",
                        "y_data": 1
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 3
                    },
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Person"
        ],
        "db_id": "network_2",
        "nl_queries": [
            "Display a pie chart for what is minimum age for different job title?",
            "Return a pie on what is minimum age for different job title?",
            "What is minimum age for different job title. Show a pie chart.",
            "Return a pie chart on how old is the youngest person for each job?",
            "Pie chart. how old is the youngest person for each job?",
            "How old is the youngest person for each job. Show the proportion.",
            "Create a pie chart showing minimal age across job."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "doctor",
                        "y_data": 45
                    },
                    {
                        "x_data": "engineer",
                        "y_data": 35
                    },
                    {
                        "x_data": "student",
                        "y_data": 25
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "min(age)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "job"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about employee_id over the email , and I want to order X-axis in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of email and employee_id in a bar chart, and order X in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of email and employee_id , could you show from high to low by the x axis?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of email and employee_id , could you rank X in descending order please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of email and employee_id , and I want to sort in desc by the X."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "WGIETZ",
                        "y_data": 206
                    },
                    {
                        "x_data": "SMAVRIS",
                        "y_data": 203
                    },
                    {
                        "x_data": "SHIGGINS",
                        "y_data": 205
                    },
                    {
                        "x_data": "PFAY",
                        "y_data": 202
                    },
                    {
                        "x_data": "MHARTSTE",
                        "y_data": 201
                    },
                    {
                        "x_data": "KGRANT",
                        "y_data": 178
                    },
                    {
                        "x_data": "HBAER",
                        "y_data": 204
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMAIL",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "EMPLOYEE_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "APPELLATIONS",
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "Find the country of all appellations who have at most three wines, and visualize them in a bar chart, and show from high to low by the Y-axis.",
            "What are the countries for applications with at most 3 wines? Return the result in a bar chart, could you display in desc by the Y?",
            "Give me a bar chart for those countries of all appellations who have at most three wines, order y axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "N/A",
                        "y_data": 7
                    },
                    {
                        "x_data": "Napa",
                        "y_data": 6
                    },
                    {
                        "x_data": "Sonoma",
                        "y_data": 3
                    },
                    {
                        "x_data": "San Luis Obispo",
                        "y_data": 3
                    },
                    {
                        "x_data": "Monterey",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mendocino",
                        "y_data": 2
                    },
                    {
                        "x_data": "Lake",
                        "y_data": 2
                    },
                    {
                        "x_data": "Amador",
                        "y_data": 2
                    },
                    {
                        "x_data": "Yolo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Solano",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santa Barbara",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Joaquin",
                        "y_data": 1
                    },
                    {
                        "x_data": "San Benito",
                        "y_data": 1
                    },
                    {
                        "x_data": "Calaveras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Alameda",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(County)"
                }
            }
        }
    },
    {
        "tables_used": [
            "list"
        ],
        "db_id": "student_1",
        "nl_queries": [
            "Find the number of students in one classroom. Plot them as scatter chart.",
            "Scatter. how many students does one classroom have?",
            "Return a scatter on how many students does one classroom have?",
            "How many students does one classroom have. Show the correlation.",
            "Plot a scatter chart, count(*) by classroom."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 3,
                        "y_data": 101
                    },
                    {
                        "x_data": 7,
                        "y_data": 102
                    },
                    {
                        "x_data": 5,
                        "y_data": 103
                    },
                    {
                        "x_data": 4,
                        "y_data": 104
                    },
                    {
                        "x_data": 5,
                        "y_data": 105
                    },
                    {
                        "x_data": 7,
                        "y_data": 106
                    },
                    {
                        "x_data": 6,
                        "y_data": 107
                    },
                    {
                        "x_data": 2,
                        "y_data": 108
                    },
                    {
                        "x_data": 8,
                        "y_data": 109
                    },
                    {
                        "x_data": 6,
                        "y_data": 110
                    },
                    {
                        "x_data": 4,
                        "y_data": 111
                    },
                    {
                        "x_data": 3,
                        "y_data": 112
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "count(*)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Classroom"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of job_id and the average of manager_id , and group by attribute job_id, and rank by the Y-axis from low to high.",
            "For those employees who was hired before 2002-06-21, a bar chart shows the distribution of job_id and the average of manager_id , and group by attribute job_id, could you show from low to high by the Y-axis?",
            "For those employees who was hired before 2002-06-21, show me about the distribution of job_id and the average of manager_id , and group by attribute job_id in a bar chart, and show by the total number in ascending.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id by a bar chart, rank from low to high by the the average of manager id.",
            "For those employees who was hired before 2002-06-21, give me the comparison about the average of manager_id over the job_id , and group by attribute job_id, and rank by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AD_PRES",
                        "y_data": 0
                    },
                    {
                        "x_data": "AD_VP",
                        "y_data": 100
                    },
                    {
                        "x_data": "MK_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "AD_ASST",
                        "y_data": 101
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 101
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 101
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 102.8
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 108
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 114
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 122
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 147
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 201
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 205
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Show me about the distribution of meter_600 and ID in a bar chart, and order by the ID from high to low.",
            "Find meter_600 and ID , and visualize them by a bar chart, show by the Y from high to low.",
            "Visualize a bar chart about the distribution of meter_600 and ID , order total number from high to low order.",
            "A bar chart shows the distribution of meter_600 and ID , show by the Y from high to low.",
            "Return a bar chart about the distribution of meter_600 and ID , and rank in descending by the y axis please.",
            "Bar chart x axis meter 600 y axis id, order by the ID from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "5:53.03",
                        "y_data": 8
                    },
                    {
                        "x_data": "5:52.59",
                        "y_data": 7
                    },
                    {
                        "x_data": "5:56.99",
                        "y_data": 6
                    },
                    {
                        "x_data": "5:53.53",
                        "y_data": 5
                    },
                    {
                        "x_data": "5:54.45",
                        "y_data": 4
                    },
                    {
                        "x_data": "5:52.92",
                        "y_data": 3
                    },
                    {
                        "x_data": "5:57.10",
                        "y_data": 2
                    },
                    {
                        "x_data": "5:56.31",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_600",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "hall_of_fame"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "count yearid for visualizing a line chart.",
            "I want to see trend of the number of yearid by yearid"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1936~1943",
                        "y_data": 5
                    },
                    {
                        "x_data": "1944~1951",
                        "y_data": 8
                    },
                    {
                        "x_data": "1952~1959",
                        "y_data": 8
                    },
                    {
                        "x_data": "1960~1967",
                        "y_data": 8
                    },
                    {
                        "x_data": "1968~1975",
                        "y_data": 8
                    },
                    {
                        "x_data": "1976~1983",
                        "y_data": 8
                    },
                    {
                        "x_data": "1984~1991",
                        "y_data": 8
                    },
                    {
                        "x_data": "1992~1999",
                        "y_data": 8
                    },
                    {
                        "x_data": "2000~2007",
                        "y_data": 8
                    },
                    {
                        "x_data": "2008~2015",
                        "y_data": 8
                    },
                    {
                        "x_data": "2016",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "yearid",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(yearid)"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each title? Return a bar chart, show x axis in ascending order.",
            "Find the average of credits of courses that have more than one prerequisite for each title with a bar chart, and show x axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aquatic Chemistry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cat Herding",
                        "y_data": 3
                    },
                    {
                        "x_data": "Differential Geometry",
                        "y_data": 3
                    },
                    {
                        "x_data": "Elastic Structures",
                        "y_data": 3
                    },
                    {
                        "x_data": "Electron Microscopy",
                        "y_data": 3
                    },
                    {
                        "x_data": "Embedded Systems",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fiction Writing",
                        "y_data": 3
                    },
                    {
                        "x_data": "Game Programming",
                        "y_data": 4
                    },
                    {
                        "x_data": "Graph Theory",
                        "y_data": 3
                    },
                    {
                        "x_data": "Groups and Rings",
                        "y_data": 4
                    },
                    {
                        "x_data": "Immunology",
                        "y_data": 3
                    },
                    {
                        "x_data": "International Practicum",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Operating Systems",
                        "y_data": 3
                    },
                    {
                        "x_data": "Ponzi Schemes",
                        "y_data": 3
                    },
                    {
                        "x_data": "Rock and Roll",
                        "y_data": 3
                    },
                    {
                        "x_data": "World History",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, draw a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the amount of hire_date over the hire_date bin hire_date by weekday by a bar chart.",
            "For all employees who have the letters D or S in their first name, find hire_date and the amount of hire_date bin hire_date by weekday, and visualize them by a bar chart.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by weekday.",
            "For all employees who have the letters D or S in their first name, show me about the distribution of hire_date and the amount of hire_date bin hire_date by weekday in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 5
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 11
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 5
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 7
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 9
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "What is the total revenue of companies started by founder Plot them as bar chart, and could you order by the Y in asc?",
            "Draw a bar chart of founder versus sum revenue, sort from low to high by the Y.",
            "Display a bar chart for what is the total revenue of companies started by founder?, and could you list in asc by the total number of revenue?",
            "Find the total revenue of companies of each founder Visualize by bar chart, list total number in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 30
                    },
                    {
                        "x_data": "James",
                        "y_data": 50
                    },
                    {
                        "x_data": "Owen",
                        "y_data": 100
                    },
                    {
                        "x_data": "Andy",
                        "y_data": 120
                    },
                    {
                        "x_data": "John",
                        "y_data": 130
                    },
                    {
                        "x_data": "Mary",
                        "y_data": 200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Founder",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(revenue)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Course_Authors_and_Tutors"
        ],
        "db_id": "e_learning",
        "nl_queries": [
            "A bar chart shows the distribution of password and gender_mf .",
            "Find password and gender_mf , and visualize them by a bar chart.",
            "Give me the comparison about gender_mf over the password by a bar chart.",
            "Draw a bar chart about the distribution of password and gender_mf .",
            "Return a bar chart about the distribution of password and gender_mf ."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "e96c0bcbbbb14747747a56ff4c17354f343a5b4f",
                        "y_data": 1
                    },
                    {
                        "x_data": "c40fa148bdd0d2d45cd6e9ec1e685750fe07f81b",
                        "y_data": 0
                    },
                    {
                        "x_data": "4f149f75ecd84afcdf27343509cdd03d81edb119",
                        "y_data": 0
                    },
                    {
                        "x_data": "cdaf6c3483f19e2253659a40a3aab786a3390f78",
                        "y_data": 0
                    },
                    {
                        "x_data": "b517a107b5f08fafe9628e88e7263a6f3a4a55c0",
                        "y_data": 1
                    },
                    {
                        "x_data": "120ac8a5744f5b710ecaebbd8dd1633e3e33886e",
                        "y_data": 1
                    },
                    {
                        "x_data": "4d8e909ae9b8888c93a2c5f1eccbd0c4ac6a01c3",
                        "y_data": 0
                    },
                    {
                        "x_data": "d34378200c9b5f72d3039fa640e7920aaec0fdf2",
                        "y_data": 1
                    },
                    {
                        "x_data": "02d64f11de97436343a0beba41bfcf69af61be1e",
                        "y_data": 0
                    },
                    {
                        "x_data": "3e2f7bf1e6acf0d616a8703ee0050fba13bc007f",
                        "y_data": 1
                    },
                    {
                        "x_data": "6b9979a83b4a9e03ead034c8de47f1b013a3d3af",
                        "y_data": 1
                    },
                    {
                        "x_data": "24b0ee84063c3b017ab1839e01b7280f47f7c7c2",
                        "y_data": 0
                    },
                    {
                        "x_data": "6d587cec8006e3a40565e1dad2c5b5b12b475b8f",
                        "y_data": 0
                    },
                    {
                        "x_data": "a48e25a58b3088e9cfdaca61130555ed2c772452",
                        "y_data": 1
                    },
                    {
                        "x_data": "2c196efe8aee23a1b9a7e752fe63029c5879af6f",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "password",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "gender_mf"
                }
            }
        }
    },
    {
        "tables_used": [
            "WINE"
        ],
        "db_id": "wine_1",
        "nl_queries": [
            "List the grape and winery of the wines whose price is bigger than 100, visualize them with a stacked bar chart, the x-axis is winery and group the grape, and y-axis is the number of wineries.",
            "List the grape and winery of the wines whose price is bigger than 100, the x-axis is winery and group the grape, and y-axis is the number of wineries."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bucella",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 2,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 3,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 1,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 0,
                        "classify": "Cabernet Sauvingnon"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Grenache"
                    },
                    {
                        "x_data": "Bucella",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Carter",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Casa Piena",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Caymus",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chappellet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Chimeney Rock",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Darioush",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "David Arthur",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Dos Lagos",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Hourglass",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Janzen",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Lewis",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Morlet",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Paul Hobbs",
                        "y_data": 0,
                        "classify": "Syrah"
                    },
                    {
                        "x_data": "Sine Qua Non",
                        "y_data": 2,
                        "classify": "Syrah"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Winery",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Winery)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "station"
        ],
        "db_id": "station_weather",
        "nl_queries": [
            "Give me a bar chart for the number of services of each services, and could you display x-axis in desc order?",
            "Count the number of services by services, could you sort X-axis from high to low order?",
            "Compare the number of services by services with a bar graph, and could you display x-axis in desc order?",
            "A bar graph listing the services and how many services provided by all stations, list in desc by the x axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "c2c",
                        "y_data": 1
                    },
                    {
                        "x_data": "Metropolitan line and Chiltern Railways",
                        "y_data": 3
                    },
                    {
                        "x_data": "Metropolitan line",
                        "y_data": 2
                    },
                    {
                        "x_data": "London Overground and London Midland",
                        "y_data": 1
                    },
                    {
                        "x_data": "London Overground",
                        "y_data": 1
                    },
                    {
                        "x_data": "Greater Anglia",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "services",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(services)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of employee_id bin hire_date by weekday, sort by the total number in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of employee_id bin hire_date by weekday in a bar chart, and sort by the total number in desc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of employee_id bin hire_date by weekday, list y axis in desc order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the sum of employee_id over the hire_date bin hire_date by weekday by a bar chart, could you show by the y-axis in descending?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of employee_id bin hire_date by weekday, and visualize them by a bar chart, rank in descending by the y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Thur",
                        "y_data": 384
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 205
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 204
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 203
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 202
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 201
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "CLASS",
            "employee",
            "course",
            "professor"
        ],
        "db_id": "college_1",
        "nl_queries": [
            "How many courses for each teacher? Show me a stacked bar chart The x-axis is teacher's first name and group by course description, and could you show by the Y-axis in ascending?",
            "Show the number of courses for each instructor in a stacked bar chart The x-axis is instructor's first name and group by course description, and I want to sort in ascending by the total number."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Robert",
                        "y_data": 1,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting I"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 0,
                        "classify": "Accounting II"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Database Design and Implementation"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 2,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 1,
                        "classify": "Intro. to Microcomputing"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Intro. to Statistics"
                    },
                    {
                        "x_data": "Robert",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Arnelle",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Carlos",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Ismael",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Gerald",
                        "y_data": 0,
                        "classify": "Statistical Applications"
                    },
                    {
                        "x_data": "Peter",
                        "y_data": 2,
                        "classify": "Statistical Applications"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "EMP_FNAME",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(EMP_FNAME)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "when is the hire date for those employees whose first name does not containing the letter M, and count them by a bar chart",
            "On what dates were employees without the letter M in their first names hired, and count them by a bar chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 13
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 15
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 11
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 14
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 12
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 13
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "game"
        ],
        "db_id": "game_injury",
        "nl_queries": [
            "Stack bar chart of how many home team vs Away_team based on home team, and list by the Y in descending.",
            "List the number of games for each home team and group by away team in a stacked bar chart The x-axis is home team, and list how many home team in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 7,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Bunyodkor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 0,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 9,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 1,
                        "classify": "Pakhtakor"
                    },
                    {
                        "x_data": "Pakhtakor",
                        "y_data": 3,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Bunyodkor",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    },
                    {
                        "x_data": "Quruvchi",
                        "y_data": 0,
                        "classify": "Quruvchi"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_team",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_team)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "Student_Addresses"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Find date_address_from and the amount of date_address_from bin date_address_from by time, and visualize them by a bar chart.",
            "Visualize a bar chart about the distribution of date_address_from and the amount of date_address_from bin date_address_from by time.",
            "Give me the comparison about the amount of date_address_from over the date_address_from bin date_address_from by time by a bar chart.",
            "Show me about the distribution of date_address_from and the amount of date_address_from bin date_address_from by time in a bar chart.",
            "Return a bar chart about the distribution of date_address_from and the amount of date_address_from bin date_address_from by time."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017",
                        "y_data": 14
                    },
                    {
                        "x_data": "2018",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_address_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_address_from)"
                }
            }
        }
    },
    {
        "tables_used": [
            "department"
        ],
        "db_id": "department_management",
        "nl_queries": [
            "Show me a line chart of how sum budget in billions change over the creation, could you show from low to high by the x-axis?",
            "Show sum of budget in each year and bin creation time by year in a line chart, could you show from low to high by the x-axis?",
            "Show me a line chart of how sum budget in billions change over the creation, I want to rank X-axis in asc order please.",
            "Show sum of budget in each year and bin creation time by year in a line chart, and could you rank from low to high by the X?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1789~1809",
                        "y_data": 20
                    },
                    {
                        "x_data": "1810~1830",
                        "y_data": 0
                    },
                    {
                        "x_data": "1831~1851",
                        "y_data": 10
                    },
                    {
                        "x_data": "1852~1872",
                        "y_data": 23
                    },
                    {
                        "x_data": "1873~1893",
                        "y_data": 77
                    },
                    {
                        "x_data": "1894~1914",
                        "y_data": 65
                    },
                    {
                        "x_data": "1915~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1956",
                        "y_data": 982
                    },
                    {
                        "x_data": "1957~1977",
                        "y_data": 125
                    },
                    {
                        "x_data": "1978~1998",
                        "y_data": 135
                    },
                    {
                        "x_data": "1999~2002",
                        "y_data": 44
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Creation",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Budget_in_Billions)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the amount of hire_date bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the amount of hire_date bin hire_date by time.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the amount of hire_date bin hire_date by time, and visualize them by a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the amount of hire_date bin hire_date by time in a bar chart.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, give me the comparison about the amount of hire_date over the hire_date bin hire_date by time by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 6
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(HIRE_DATE)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TRANSACTIONS"
        ],
        "db_id": "tracking_share_transactions",
        "nl_queries": [
            "What are the dates of transactions with at least 100 share count or amount bigger than 100, and count them by a bar chart, and order in desc by the the number of date of transaction.",
            "A bar chart for what are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and sort by the Y from high to low.",
            "What are the number of the dates of transactions with at least 100 share count or amount bigger than 100?, and show total number in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 4
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 3
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 3
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_transaction",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_transaction)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who was hired before 2002-06-21, return a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, order from low to high by the total number.",
            "For those employees who was hired before 2002-06-21, visualize a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, could you sort in asc by the total number?",
            "For those employees who was hired before 2002-06-21, show me about the distribution of hire_date and the sum of manager_id bin hire_date by weekday in a bar chart, and sort y axis in ascending order.",
            "For those employees who was hired before 2002-06-21, draw a bar chart about the distribution of hire_date and the sum of manager_id bin hire_date by weekday, could you sort in asc by the total number?",
            "For those employees who was hired before 2002-06-21, find hire_date and the sum of manager_id bin hire_date by weekday, and visualize them by a bar chart, and I want to order in asc by the total number of manager id please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sat",
                        "y_data": 1818
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1827
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1833
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1845
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1870
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1942
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 2090
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(MANAGER_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "customer_address_history",
            "customers",
            "addresses"
        ],
        "db_id": "customers_and_products_contacts",
        "nl_queries": [
            "Show the number of addrens history for each customer in a bar chart, and display y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Madaline",
                        "y_data": 4
                    },
                    {
                        "x_data": "Melissa",
                        "y_data": 3
                    },
                    {
                        "x_data": "Cecelia",
                        "y_data": 3
                    },
                    {
                        "x_data": "Sterling",
                        "y_data": 2
                    },
                    {
                        "x_data": "Shany",
                        "y_data": 2
                    },
                    {
                        "x_data": "Cheyenne",
                        "y_data": 2
                    },
                    {
                        "x_data": "Buford",
                        "y_data": 2
                    },
                    {
                        "x_data": "Orion",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lela",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "customer_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(customer_name)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, and rank the average of department id in desc order please.",
            "For those employees who did not have any job in the past, give me the comparison about the average of department_id over the hire_date bin hire_date by time, and list y-axis in descending order please.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, list y-axis in descending order please.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the average of department_id bin hire_date by time, display by the Y from high to low.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the average of department_id bin hire_date by time in a bar chart, and display in descending by the the average of department id."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    },
                    {
                        "x_data": "June",
                        "y_data": 82.5
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 80
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 51.851851851851855
                    },
                    {
                        "x_data": "July",
                        "y_data": 46.55172413793103
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "election",
            "party"
        ],
        "db_id": "election",
        "nl_queries": [
            "A bar chart for finding the number of the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties?, sort names in desc order.",
            "Find the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties, and count them by a bar chart, and order names in desc order.",
            "Find the number of the parties associated with the delegates from district 1 or 2 Who served as comptrollers of the parties?, rank X from high to low order.",
            "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2, and count them by a bar chart, and could you list X-axis in desc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "John Faso",
                        "y_data": 1
                    },
                    {
                        "x_data": "Carl McCall",
                        "y_data": 3
                    },
                    {
                        "x_data": "Alan Hevesi",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Comptroller",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Comptroller)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, could you show from low to high by the Y please?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of salary bin hire_date by weekday, could you rank from low to high by the total number?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, and order from low to high by the total number.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of salary bin hire_date by weekday in a bar chart, and display Y-axis in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by weekday, and list by the Y-axis from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 6000
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 6500
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 10000
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 12000
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 13000
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 15300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "device"
        ],
        "db_id": "device",
        "nl_queries": [
            "what are the different software platforms for devices, and how many devices have each?, order in ascending by the the total number please.",
            "A bar chart about what are the different software platforms for devices, and how many devices have each?, and rank by the the total number from low to high.",
            "Bar chart x axis software platform y axis the total number, could you list total number in ascending order?",
            "What are the different software platforms for devices, and how many devices have each, could you rank the total number in asc order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "iOS",
                        "y_data": 1
                    },
                    {
                        "x_data": "Android",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Software_Platform",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about revenue over the name , and group by attribute name, and could you rank from high to low by the bars please?",
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and revenue , and group by attribute name, and I want to sort by the Name in desc.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and revenue , and group by attribute name in a bar chart, display in descending by the bars.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and revenue , and group by attribute name, could you show from high to low by the X?",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and revenue , and group by attribute name, and display x axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 100,
                        "classify": "Creative Labs"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 130,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Fujits"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 50,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Hewlett-Packard"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 200,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Iomega"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 120,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Sony"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 30,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 30,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Winchester"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Winchester"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Revenue"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "course",
            "prereq"
        ],
        "db_id": "college_2",
        "nl_queries": [
            "What is the average of credit value of courses with more than one prerequisite for each department? Return a bar chart, and order y axis from high to low order.",
            "Find the average of credits of courses that have more than one prerequisite for each department with a bar chart, and sort in desc by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Finance",
                        "y_data": 4
                    },
                    {
                        "x_data": "Comp. Sci.",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cybernetics",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Civil Eng.",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Athletics",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "Statistics",
                        "y_data": 3
                    },
                    {
                        "x_data": "Psychology",
                        "y_data": 3
                    },
                    {
                        "x_data": "Mech. Eng.",
                        "y_data": 3
                    },
                    {
                        "x_data": "Marketing",
                        "y_data": 3
                    },
                    {
                        "x_data": "History",
                        "y_data": 3
                    },
                    {
                        "x_data": "English",
                        "y_data": 3
                    },
                    {
                        "x_data": "Biology",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "dept_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(credits)"
                }
            }
        }
    },
    {
        "tables_used": [
            "film"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "Bar graph to show the number of directed by from different directed by, show Y from high to low order.",
            "What is the number of films of each director? Return a bar chart, and list y axis from high to low order.",
            "Give me a bar chart showing the number of films for each director, and I want to list total number from high to low order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bill Schreiner",
                        "y_data": 4
                    },
                    {
                        "x_data": "Jesus Salvador Trevi\u00f1o",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Directed_by",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Directed_by)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of start date of each apartment booking for each weekday? Return a bar chart, show y axis in ascending order please.",
            "Show the number of start dates of all the apartment bookings for each weekday with a bar chart, I want to rank from low to high by the y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of phone_number and department_id , and could you list from low to high by the bars?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of phone_number and department_id in a bar chart, and could you list from low to high by the bars?",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find phone_number and department_id , and visualize them by a bar chart, rank by the bars from low to high please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of phone_number and department_id , rank by the x axis in asc.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of phone_number and department_id , list by the names in ascending please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "011.44.1644.429263",
                        "y_data": 0
                    },
                    {
                        "x_data": "515.123.5555",
                        "y_data": 20
                    },
                    {
                        "x_data": "515.123.7777",
                        "y_data": 40
                    },
                    {
                        "x_data": "515.123.8080",
                        "y_data": 110
                    },
                    {
                        "x_data": "515.123.8181",
                        "y_data": 110
                    },
                    {
                        "x_data": "515.123.8888",
                        "y_data": 70
                    },
                    {
                        "x_data": "603.123.6666",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PHONE_NUMBER",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "DEPARTMENT_ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "publication"
        ],
        "db_id": "book_2",
        "nl_queries": [
            "A bar chart showing the number of publication dates of books, and sort by the Y-axis in asc please.",
            "Bar chart x axis publication date y axis how many publication date, and show y-axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "April 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "June 2006",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2007",
                        "y_data": 1
                    },
                    {
                        "x_data": "March 2008",
                        "y_data": 1
                    },
                    {
                        "x_data": "October 2005",
                        "y_data": 1
                    },
                    {
                        "x_data": "August 2008",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Publication_Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Publication_Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For employees with first names that end with the letter m, give me a bar chart to show their total salary, and sort in desc by the X.",
            "For those employees whose first name is ending with the letter m, sum their salary for visualizing a bar chart, and I want to display in descending by the bars please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "William",
                        "y_data": 15700
                    },
                    {
                        "x_data": "Payam",
                        "y_data": 7900
                    },
                    {
                        "x_data": "Adam",
                        "y_data": 8200
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "FIRST_NAME",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Draw a pie chart about the proportion of All_Road and Team_ID.",
            "For the attribute All_Road and Team_ID, show their proportion by a pie chart.",
            "Show me about the proportion of Team_ID and Team_ID in a pie chart.",
            "A pie chart shows the proportion of All_Road and Team_ID.",
            "Visualize a pie chart about the proportion of All_Road and Team_ID.",
            "Give me a pie to show team_id from different all road."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "13\u20130",
                        "y_data": 1
                    },
                    {
                        "x_data": "8\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "6\u20135",
                        "y_data": 3
                    },
                    {
                        "x_data": "4\u20138",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Team_ID"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "All_Road"
                }
            }
        }
    },
    {
        "tables_used": [
            "Document_locations"
        ],
        "db_id": "cre_Doc_Tracking_DB",
        "nl_queries": [
            "Show the number of documents in different ending date. Bin ending date by weekday and group by location code with a stacked bar chart.",
            "Stacked bar of date in locaton to and the number of date in locaton to colored by Location_Code"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "b"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "b"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "c"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "c"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "e"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "e"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 1,
                        "classify": "n"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "n"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 4,
                        "classify": "x"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 1,
                        "classify": "x"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "x"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "x"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_in_Locaton_To",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date_in_Locaton_To)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "candidate_poll",
        "nl_queries": [
            "Show me about the distribution of Name and Weight in a bar chart, and I want to sort in descending by the Y.",
            "A bar chart shows the distribution of Name and Weight , and list by the Y-axis in descending.",
            "Return a bar chart about the distribution of Name and Weight , list total number in descending order please.",
            "Show weight from each name, and list by the y-axis in descending.",
            "Visualize a bar chart about the distribution of Name and Weight , and I want to sort in descending by the Y.",
            "Draw a bar chart about the distribution of Name and Weight , and display y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "St\u00e9phane Antiga",
                        "y_data": 94
                    },
                    {
                        "x_data": "Laurent Capet",
                        "y_data": 92
                    },
                    {
                        "x_data": "Frantz Granvorka",
                        "y_data": 90
                    },
                    {
                        "x_data": "Lo\u00efc De Kergret",
                        "y_data": 89
                    },
                    {
                        "x_data": "Vincent Montm\u00e9at",
                        "y_data": 88
                    },
                    {
                        "x_data": "Philippe Bar\u00e7a-Cysique",
                        "y_data": 88
                    },
                    {
                        "x_data": "Dominique Daquin",
                        "y_data": 85
                    },
                    {
                        "x_data": "Hubert Henno",
                        "y_data": 83
                    },
                    {
                        "x_data": "Guillaume Samica",
                        "y_data": 82
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Weight"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For all employees who have the letters D or S in their first name, show me about the distribution of job_id and the sum of salary , and group by attribute job_id in a bar chart.",
            "For all employees who have the letters D or S in their first name, visualize a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, return a bar chart about the distribution of job_id and the sum of salary , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, give me the comparison about the sum of salary over the job_id , and group by attribute job_id.",
            "For all employees who have the letters D or S in their first name, find job_id and the sum of salary , and group by attribute job_id, and visualize them by a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AC_MGR",
                        "y_data": 12000
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 24000
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 31400
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 6500
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 18000
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 8800
                    },
                    {
                        "x_data": "PU_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 11000
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 105300
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 29200
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 25400
                    },
                    {
                        "x_data": "ST_MAN",
                        "y_data": 14700
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Transcript_Contents",
            "Transcripts"
        ],
        "db_id": "student_transcripts_tracking",
        "nl_queries": [
            "Bin the transcript date into a day of the week interval and count them for a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 1
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transcript_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(transcript_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "complaints"
        ],
        "db_id": "customer_complaints",
        "nl_queries": [
            "What are all the different product names, and how many complains has each received Show bar chart, and rank Y-axis in descending order.",
            "List the name of all products along with the number of complaints that they have received, order in desc by the y-axis.",
            "what are all the different product names, and how many complains has each received?, and order from high to low by the Y please.",
            "Draw a bar chart for what are all the different product names, and how many complains has each received?, show from high to low by the Y-axis.",
            "List the name of all products along with the number of complaints that they have received with a bar chart, and show from high to low by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chocolate",
                        "y_data": 6
                    },
                    {
                        "x_data": "The Great Gatsby",
                        "y_data": 4
                    },
                    {
                        "x_data": "Mouse",
                        "y_data": 1
                    },
                    {
                        "x_data": "Keyboard",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "product_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Residents"
        ],
        "db_id": "local_govt_and_lot",
        "nl_queries": [
            "Bar chart x axis other details y axis resident_id, display y-axis in descending order.",
            "Just list the resident id and details in a bar chart, I want to show from high to low by the resident_id please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Cassie Johnson",
                        "y_data": 90
                    },
                    {
                        "x_data": "Jacques Glover II",
                        "y_data": 88
                    },
                    {
                        "x_data": "Mrs. Raphaelle Fisher",
                        "y_data": 87
                    },
                    {
                        "x_data": "Loy Walter",
                        "y_data": 83
                    },
                    {
                        "x_data": "Terrill Bernhard",
                        "y_data": 67
                    },
                    {
                        "x_data": "Tiffany Jaskolski",
                        "y_data": 47
                    },
                    {
                        "x_data": "Prof. Nasir Hoppe",
                        "y_data": 45
                    },
                    {
                        "x_data": "Elroy Schuster",
                        "y_data": 43
                    },
                    {
                        "x_data": "Miss Alanis Lockman",
                        "y_data": 28
                    },
                    {
                        "x_data": "Jess Wyman",
                        "y_data": 23
                    },
                    {
                        "x_data": "Anderson Batz",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "other_details",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "resident_id"
                }
            }
        }
    },
    {
        "tables_used": [
            "medicine",
            "medicine_enzyme_interaction"
        ],
        "db_id": "medicine_enzyme_interaction",
        "nl_queries": [
            "Pie chart. what are the ids and names of the medicine that can interact with two or more enzymes?",
            "Show me a pie chart for what are the ids and names of the medicine that can interact with two or more enzymes?",
            "What are the ids and names of the medicine that can interact with two or more enzymes."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Aripiprazole",
                        "y_data": 2
                    },
                    {
                        "x_data": "Asenapine",
                        "y_data": 3
                    },
                    {
                        "x_data": "Iloperidone",
                        "y_data": 8
                    },
                    {
                        "x_data": "Ziprasidone",
                        "y_data": 20
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name"
                }
            }
        }
    },
    {
        "tables_used": [
            "operate_company",
            "flight"
        ],
        "db_id": "flight_company",
        "nl_queries": [
            "Return a histogram on what are the ids and names of the companies that operated more than one flight?",
            "What are the ids and names of the companies that operated more than one flight."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Dragonair",
                        "y_data": 4
                    },
                    {
                        "x_data": "Cathay Pacific Cargo",
                        "y_data": 5
                    },
                    {
                        "x_data": "Vogue Laundry Service Limited",
                        "y_data": 11
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "id"
                }
            }
        }
    },
    {
        "tables_used": [
            "college",
            "tryout"
        ],
        "db_id": "soccer_2",
        "nl_queries": [
            "Return a pie on what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.",
            "what is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.",
            "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision. Show a pie chart.",
            "Show me a pie chart for how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?",
            "Return a pie chart on how many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?",
            "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges. Plot them as pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "AZ",
                        "y_data": 12000
                    },
                    {
                        "x_data": "FL",
                        "y_data": 19000
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "enr"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "state"
                }
            }
        }
    },
    {
        "tables_used": [
            "Assessment_Notes",
            "Students"
        ],
        "db_id": "behavior_monitoring",
        "nl_queries": [
            "Find the dates of assessment notes for students with first name \"Fanny\", and count them by a bar chart, and I want to display by the y axis from low to high.",
            "A bar chart for finding the number of the dates of assessment notes for students with first name \"Fanny\", and show from low to high by the total number.",
            "Find the number of the dates of assessment notes for students with first name \"Fanny\", I want to list by the how many date of notes in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1973",
                        "y_data": 0
                    },
                    {
                        "x_data": "1972",
                        "y_data": 1
                    },
                    {
                        "x_data": "1974",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_notes",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_notes)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Visualize the relationship between ACC_Percent and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "A scatter chart shows the correlation between ACC_Percent and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Visualize a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Draw a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Return a scatter chart about the correlation between ACC_Percent and All_Games_Percent , and group by attribute ACC_Regular_Season.",
            "Show the relation between acc percent and all_games_percent for each ACC_Regular_Season using a scatter chart"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 0.625,
                        "y_data": 0.706,
                        "classify": "10\u20136"
                    },
                    {
                        "x_data": 0.813,
                        "y_data": 0.8240000000000001,
                        "classify": "13\u20133"
                    },
                    {
                        "x_data": 0.875,
                        "y_data": 0.946,
                        "classify": "14\u20132"
                    },
                    {
                        "x_data": 0.563,
                        "y_data": 0.6,
                        "classify": "9\u20137"
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "ACC_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "All_Games_Percent",
                    "scale": {
                        "zero": "false"
                    }
                },
                "color": {
                    "field": "classify",
                    "type": "nominal"
                },
                "shape": {
                    "field": "classify",
                    "type": "nominal"
                }
            }
        }
    },
    {
        "tables_used": [
            "Participants",
            "Participants_in_Events"
        ],
        "db_id": "local_govt_in_alabama",
        "nl_queries": [
            "How many events have each participants attended? Show their total number by each participant type code using a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Organizer",
                        "y_data": 6
                    },
                    {
                        "x_data": "Participant",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Participant_Type_Code",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "district"
        ],
        "db_id": "store_product",
        "nl_queries": [
            "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents? Show a bar graph, display in descending by the y axis.",
            "Return a bar chart on what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, show by the y-axis in descending.",
            "Find the name and population of districts with population between 200000 and 200000 Show a bar chart, show by the y-axis in descending.",
            "Visualize a bar chart for what are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?, and I want to sort Y-axis in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Gujranwala District",
                        "y_data": 1526168
                    },
                    {
                        "x_data": "Bahawalpur District",
                        "y_data": 530438
                    },
                    {
                        "x_data": "Dera Ghazi Khan District",
                        "y_data": 464742
                    },
                    {
                        "x_data": "Jhang District",
                        "y_data": 365198
                    },
                    {
                        "x_data": "Gujrat District",
                        "y_data": 328512
                    },
                    {
                        "x_data": "Kasur District",
                        "y_data": 314617
                    },
                    {
                        "x_data": "Chiniot District",
                        "y_data": 219254
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "District_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "City_Population"
                }
            }
        }
    },
    {
        "tables_used": [
            "county",
            "election"
        ],
        "db_id": "election",
        "nl_queries": [
            "For each county, find the name of the county and the number of delegates from that county Show bar chart, and could you order in desc by the x axis?",
            "Show the name of each county along with the corresponding number of delegates from that county with a bar chart, sort x axis in desc order.",
            "Show the name of each county along with the corresponding number of delegates from that county Plot them as bar chart, display bar from high to low order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mansfield",
                        "y_data": 1
                    },
                    {
                        "x_data": "Howard",
                        "y_data": 3
                    },
                    {
                        "x_data": "Colony",
                        "y_data": 2
                    },
                    {
                        "x_data": "Baltimore County",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "County_name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Show the proportion of the home city of all drivers with a pie chart.",
            "Please give me a pie chart to show the proportion of the home city of all drivers",
            "Give me a pie to show how many home city from different home city."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bethel",
                        "y_data": 1
                    },
                    {
                        "x_data": "Coventry",
                        "y_data": 1
                    },
                    {
                        "x_data": "East Hartford",
                        "y_data": 3
                    },
                    {
                        "x_data": "Hartford",
                        "y_data": 6
                    },
                    {
                        "x_data": "Manchester",
                        "y_data": 1
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Home_city)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Home_city"
                }
            }
        }
    },
    {
        "tables_used": [
            "ship",
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "What is the total number of flags of ships that do not have a captain with the rank of Midshipman? Show the result using a bar chart, rank y-axis in asc order.",
            "Show me the total number of the flag of ships that are not steered by any captain with Midshipman rank using a bar graph, and I want to rank total number in asc order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Malta",
                        "y_data": 1
                    },
                    {
                        "x_data": "Panama",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Flag",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Flag)"
                }
            }
        }
    },
    {
        "tables_used": [
            "competition"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "List the types of competition and the number of competitions of each type in a bar chart.",
            "List the types of competition and the number of competitions of each type. Visualize by bar chart.",
            "Give me a histogram for what are the types of competition and number of competitions for that type?",
            "Return a histogram on what are the types of competition and number of competitions for that type?",
            "What are the types of competition and number of competitions for that type. Show bar chart.",
            "Plot the total number by grouped by competition type as a bar graph"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Friendly",
                        "y_data": 8
                    },
                    {
                        "x_data": "Tournament",
                        "y_data": 3
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Competition_type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and code , and group by attribute founder, and show from high to low by the Name.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute founder in a bar chart, rank by the bar in descending.",
            "For those records from the products and each product's manufacturer, give me the comparison about code over the name , and group by attribute founder by a bar chart, and rank by the bar in descending.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute founder, show from high to low by the Name.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute founder, and visualize them by a bar chart, and display by the x axis in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 1,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Andy"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 3,
                        "classify": "James"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "James"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 5,
                        "classify": "John"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "John"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 4,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Mary"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 2,
                        "classify": "Owen"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 6,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Robert"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Robert"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, visualize a line chart about the change of salary over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, draw a line chart about the change of salary over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, return a line chart about the change of salary over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, give me the trend about salary over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, a line chart shows the trend of salary over hire_date .",
            "For those employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40, for salary, hire_date, visualize the trend."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1987-06-17",
                        "y_data": 24000
                    },
                    {
                        "x_data": "1987-06-18",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-19",
                        "y_data": 17000
                    },
                    {
                        "x_data": "1987-06-20",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-21",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-06-22",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-23",
                        "y_data": 4800
                    },
                    {
                        "x_data": "1987-06-24",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-06-25",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-06-26",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-06-27",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-06-28",
                        "y_data": 7700
                    },
                    {
                        "x_data": "1987-06-29",
                        "y_data": 7800
                    },
                    {
                        "x_data": "1987-06-30",
                        "y_data": 6900
                    },
                    {
                        "x_data": "1987-07-01",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-07-02",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-03",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-04",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-05",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-06",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-07",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-07-08",
                        "y_data": 8200
                    },
                    {
                        "x_data": "1987-07-09",
                        "y_data": 7900
                    },
                    {
                        "x_data": "1987-07-10",
                        "y_data": 6500
                    },
                    {
                        "x_data": "1987-07-11",
                        "y_data": 5800
                    },
                    {
                        "x_data": "1987-07-12",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-13",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-14",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-15",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-16",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-17",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-07-18",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-19",
                        "y_data": 2100
                    },
                    {
                        "x_data": "1987-07-20",
                        "y_data": 3300
                    },
                    {
                        "x_data": "1987-07-21",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-07-22",
                        "y_data": 2400
                    },
                    {
                        "x_data": "1987-07-23",
                        "y_data": 2200
                    },
                    {
                        "x_data": "1987-07-24",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-07-25",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-07-26",
                        "y_data": 2700
                    },
                    {
                        "x_data": "1987-07-27",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-07-28",
                        "y_data": 3500
                    },
                    {
                        "x_data": "1987-07-29",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-07-30",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-07-31",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-08-01",
                        "y_data": 14000
                    },
                    {
                        "x_data": "1987-08-02",
                        "y_data": 13500
                    },
                    {
                        "x_data": "1987-08-03",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-08-04",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-05",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-06",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-07",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-08",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-09",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-10",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-11",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-12",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-13",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-14",
                        "y_data": 9000
                    },
                    {
                        "x_data": "1987-08-15",
                        "y_data": 8000
                    },
                    {
                        "x_data": "1987-08-16",
                        "y_data": 7500
                    },
                    {
                        "x_data": "1987-08-17",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-08-18",
                        "y_data": 10500
                    },
                    {
                        "x_data": "1987-08-19",
                        "y_data": 9500
                    },
                    {
                        "x_data": "1987-08-20",
                        "y_data": 7200
                    },
                    {
                        "x_data": "1987-08-21",
                        "y_data": 6800
                    },
                    {
                        "x_data": "1987-08-22",
                        "y_data": 6400
                    },
                    {
                        "x_data": "1987-08-23",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-08-24",
                        "y_data": 11500
                    },
                    {
                        "x_data": "1987-08-25",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-08-26",
                        "y_data": 9600
                    },
                    {
                        "x_data": "1987-08-27",
                        "y_data": 7400
                    },
                    {
                        "x_data": "1987-08-28",
                        "y_data": 7300
                    },
                    {
                        "x_data": "1987-08-29",
                        "y_data": 6100
                    },
                    {
                        "x_data": "1987-08-30",
                        "y_data": 11000
                    },
                    {
                        "x_data": "1987-08-31",
                        "y_data": 8800
                    },
                    {
                        "x_data": "1987-09-01",
                        "y_data": 8600
                    },
                    {
                        "x_data": "1987-09-02",
                        "y_data": 8400
                    },
                    {
                        "x_data": "1987-09-03",
                        "y_data": 7000
                    },
                    {
                        "x_data": "1987-09-04",
                        "y_data": 6200
                    },
                    {
                        "x_data": "1987-09-05",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-06",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-07",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-08",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-09",
                        "y_data": 4200
                    },
                    {
                        "x_data": "1987-09-10",
                        "y_data": 4100
                    },
                    {
                        "x_data": "1987-09-11",
                        "y_data": 3400
                    },
                    {
                        "x_data": "1987-09-12",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-13",
                        "y_data": 3800
                    },
                    {
                        "x_data": "1987-09-14",
                        "y_data": 3600
                    },
                    {
                        "x_data": "1987-09-15",
                        "y_data": 2900
                    },
                    {
                        "x_data": "1987-09-16",
                        "y_data": 2500
                    },
                    {
                        "x_data": "1987-09-17",
                        "y_data": 4000
                    },
                    {
                        "x_data": "1987-09-18",
                        "y_data": 3900
                    },
                    {
                        "x_data": "1987-09-19",
                        "y_data": 3200
                    },
                    {
                        "x_data": "1987-09-20",
                        "y_data": 2800
                    },
                    {
                        "x_data": "1987-09-21",
                        "y_data": 3100
                    },
                    {
                        "x_data": "1987-09-22",
                        "y_data": 3000
                    },
                    {
                        "x_data": "1987-09-23",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-24",
                        "y_data": 2600
                    },
                    {
                        "x_data": "1987-09-25",
                        "y_data": 4400
                    },
                    {
                        "x_data": "1987-09-26",
                        "y_data": 13000
                    },
                    {
                        "x_data": "1987-09-27",
                        "y_data": 6000
                    },
                    {
                        "x_data": "1987-09-29",
                        "y_data": 10000
                    },
                    {
                        "x_data": "1987-09-30",
                        "y_data": 12000
                    },
                    {
                        "x_data": "1987-10-01",
                        "y_data": 8300
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SALARY"
                }
            }
        }
    },
    {
        "tables_used": [
            "Financial_transactions"
        ],
        "db_id": "customers_and_invoices",
        "nl_queries": [
            "Show the transaction types and the total amount of transactions with a pie chart.",
            "Show the transaction types and the total amount of transactions.",
            "Give the proportion of what are total transaction amounts for each transaction type?",
            "what are total transaction amounts for each transaction type?",
            "What are total transaction amounts for each transaction type. Show a pie chart.",
            "Create a pie chart showing total number of transaction amount across transaction type."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Payment",
                        "y_data": 8743.15
                    },
                    {
                        "x_data": "Refund",
                        "y_data": 11192.69
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(transaction_amount)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "transaction_type"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the hire_date bin hire_date by time.",
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "June",
                        "y_data": 104400
                    },
                    {
                        "x_data": "July",
                        "y_data": 98100
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 281300
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 120400
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "player"
        ],
        "db_id": "sports_competition",
        "nl_queries": [
            "What is the number of players who have points less than 30 for each position Plot them as bar chart, and list by the names in desc.",
            "what is the number of players who have points less than 30 for each position?, and rank by the X in desc.",
            "Give me a histogram for what is the number of players who have points less than 30 for each position?, and I want to sort bars in descending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Second Row",
                        "y_data": 3
                    },
                    {
                        "x_data": "Prop",
                        "y_data": 3
                    },
                    {
                        "x_data": "Loose Forward",
                        "y_data": 1
                    },
                    {
                        "x_data": "Left Wing",
                        "y_data": 1
                    },
                    {
                        "x_data": "Full Back",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Position",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, show y axis from high to low order please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by time, and rank Y in descending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of department_id bin hire_date by time in a bar chart, and order Y in desc order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of department_id bin hire_date by time, and visualize them by a bar chart, and display by the Y-axis in desc please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, visualize a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by time, and rank from high to low by the y-axis please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sept",
                        "y_data": 260
                    },
                    {
                        "x_data": "Oct",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "endowment"
        ],
        "db_id": "school_finance",
        "nl_queries": [
            "List each donator name and the amount of endowment in descending order of the amount of endowment by a bar chart.",
            "List each donator name and the amount of endowment in descending order of the amount of endowment. Plot them as bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "San Jos\u00e9 de Ocoa",
                        "y_data": 9.83
                    },
                    {
                        "x_data": "Valverde",
                        "y_data": 9.73
                    },
                    {
                        "x_data": "Distrito Nacional",
                        "y_data": 9.55
                    },
                    {
                        "x_data": "Monte Plata",
                        "y_data": 9.51
                    },
                    {
                        "x_data": "San Crist\u00f3bal",
                        "y_data": 9.05
                    },
                    {
                        "x_data": "Santo Domingo Este",
                        "y_data": 8.99
                    },
                    {
                        "x_data": "Santiago",
                        "y_data": 8.85
                    },
                    {
                        "x_data": "La Vega",
                        "y_data": 8.82
                    },
                    {
                        "x_data": "Duarte",
                        "y_data": 8.53
                    },
                    {
                        "x_data": "Com. Dom. En Estados Unidos",
                        "y_data": 8.43
                    },
                    {
                        "x_data": "Peravia",
                        "y_data": 8.33
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "donator_name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "postseason",
            "team"
        ],
        "db_id": "baseball_1",
        "nl_queries": [
            "For each year, bin the year into day of the week interval, and return the total number of times the team Boston Red Stockings won in the postseasons using a line chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1903~1913",
                        "y_data": 10
                    },
                    {
                        "x_data": "1914~1924",
                        "y_data": 15
                    },
                    {
                        "x_data": "1925~1935",
                        "y_data": 0
                    },
                    {
                        "x_data": "1936~1946",
                        "y_data": 0
                    },
                    {
                        "x_data": "1947~1957",
                        "y_data": 0
                    },
                    {
                        "x_data": "1958~1968",
                        "y_data": 0
                    },
                    {
                        "x_data": "1969~1979",
                        "y_data": 5
                    },
                    {
                        "x_data": "1980~1990",
                        "y_data": 5
                    },
                    {
                        "x_data": "1991~2001",
                        "y_data": 5
                    },
                    {
                        "x_data": "2002~2012",
                        "y_data": 40
                    },
                    {
                        "x_data": "2013",
                        "y_data": 15
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(count(*))"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, visualize a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, sort total number in ascending order.",
            "For those employees who did not have any job in the past, give me the comparison about the sum of salary over the hire_date bin hire_date by time, and could you rank by the y-axis in asc?",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, order from low to high by the Y.",
            "For those employees who did not have any job in the past, show me about the distribution of hire_date and the sum of salary bin hire_date by time in a bar chart, and order from low to high by the Y.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of hire_date and the sum of salary bin hire_date by time, could you order by the sum salary in ascending?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Oct",
                        "y_data": 8300
                    },
                    {
                        "x_data": "July",
                        "y_data": 98100
                    },
                    {
                        "x_data": "June",
                        "y_data": 104400
                    },
                    {
                        "x_data": "Sept",
                        "y_data": 120400
                    },
                    {
                        "x_data": "Aug",
                        "y_data": 281300
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(SALARY)"
                }
            }
        }
    },
    {
        "tables_used": [
            "projects",
            "assignedto"
        ],
        "db_id": "scientist_1",
        "nl_queries": [
            "Find the number of scientists involved for each project name, I want to sort the total number in descending order.",
            "What are the naems of all the projects, and how many scientists were assigned to each of them, rank in descending by the Y.",
            "Visualize a bar chart for what are the naems of all the projects, and how many scientists were assigned to each of them?, and I want to rank y axis in desc order.",
            "Give me a histogram for what are the naems of all the projects, and how many scientists were assigned to each of them?, and show y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Build Your Own Telescope",
                        "y_data": 3
                    },
                    {
                        "x_data": "Aerodynamics and Gas Mileage",
                        "y_data": 2
                    },
                    {
                        "x_data": "A Silver-Cleaning Battery",
                        "y_data": 2
                    },
                    {
                        "x_data": "Winds: Studying Bernoullis Principle",
                        "y_data": 1
                    },
                    {
                        "x_data": "Juicy: Extracting Apple Juice with Pectinase",
                        "y_data": 1
                    },
                    {
                        "x_data": "Aerodynamics and Ice Hockey",
                        "y_data": 1
                    },
                    {
                        "x_data": "A Puzzling Parallax",
                        "y_data": 1
                    },
                    {
                        "x_data": "A Matter of Time",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Payments"
        ],
        "db_id": "insurance_policies",
        "nl_queries": [
            "Give me a bar chart that bins the payment date into the day of the day of the week interval and then compute the total amount of each payment categorized by the payment method code, and then sort the bars in ascending order of date."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 177130,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "American Express"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 123255,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 71246,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 38324,
                        "classify": "Discover Card"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 423154,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 407235,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 241730,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 456098,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1003648,
                        "classify": "MasterCard"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 172309,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 466750,
                        "classify": "Visa"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 155654,
                        "classify": "Visa"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date_Payment_Made",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Amount_Payment)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "A line chart shows the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and could you rank by the X from low to high?",
            "I want to see trend mean employee id over start from by Is_full_time, I want to show by the x-axis in asc please.",
            "Give me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and show by the Start_from in asc.",
            "Draw a line chart about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time, and show by the Start_from in asc.",
            "Show me about the change of the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time in a line chart, and display in ascending by the X.",
            "Show me the trend about the average of Employee_ID over Start_from , and group by attribute Is_full_time and bin start_from by time with a line chart, and sort by the x axis in asc.",
            "For the average of Employee_ID, Start_from, visualize the trend, rank by the Start_from from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2003",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 3,
                        "classify": "F"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 1.5,
                        "classify": "F"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "2003",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "2004",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2005",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2006",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2007",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2008",
                        "y_data": 3.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2009",
                        "y_data": 0.5,
                        "classify": "T"
                    },
                    {
                        "x_data": "2010",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2011",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "2012",
                        "y_data": 2,
                        "classify": "T"
                    },
                    {
                        "x_data": "2013",
                        "y_data": 2.5,
                        "classify": "T"
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Employee_ID)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, show in descending by the Y-axis.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of name and the sum of manufacturer , and group by attribute name, display in desc by the y-axis.",
            "For those records from the products and each product's manufacturer, find name and the sum of manufacturer , and group by attribute name, and visualize them by a bar chart, sort y-axis from high to low order.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and the sum of manufacturer , and group by attribute name, and could you show total number in descending order please?",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of manufacturer over the name , and group by attribute name by a bar chart, show in descending by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Winchester",
                        "y_data": 12
                    },
                    {
                        "x_data": "Hewlett-Packard",
                        "y_data": 9
                    },
                    {
                        "x_data": "Creative Labs",
                        "y_data": 6
                    },
                    {
                        "x_data": "Fujits",
                        "y_data": 5
                    },
                    {
                        "x_data": "Iomega",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sony",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Manufacturer)"
                }
            }
        }
    },
    {
        "tables_used": [
            "schedule",
            "film",
            "cinema"
        ],
        "db_id": "cinema",
        "nl_queries": [
            "For each record in schedule, show the number of films for each day in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "11 July",
                        "y_data": 1
                    },
                    {
                        "x_data": "19 May",
                        "y_data": 1
                    },
                    {
                        "x_data": "2 Aug",
                        "y_data": 1
                    },
                    {
                        "x_data": "20 May",
                        "y_data": 1
                    },
                    {
                        "x_data": "21 Jun",
                        "y_data": 1
                    },
                    {
                        "x_data": "21 May",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "basketball_match"
        ],
        "db_id": "university_basketball",
        "nl_queries": [
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road, and order names in asc order.",
            "Show me about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road in a bar chart, list X-axis in asc order.",
            "Draw a bar chart about the distribution of ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and order in asc by the X-axis.",
            "Give me a bar chart for the average of team id of each acc road, and sort in ascending by the x-axis.",
            "Find ACC_Road and the average of Team_ID , and group by attribute ACC_Road, and visualize them by a bar chart, and list X-axis in asc order.",
            "Give me the comparison about the average of Team_ID over the ACC_Road , and group by attribute ACC_Road by a bar chart, and sort by the x-axis from low to high please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "3\u20135",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "6\u20132",
                        "y_data": 2
                    },
                    {
                        "x_data": "8\u20130",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "ACC_Road",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Team_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Scatter. what are the average prices of products, grouped by manufacturer code?",
            "Visualize a scatter chart on what are the average prices of products, grouped by manufacturer code?",
            "What are the average prices of products, grouped by manufacturer code. Visualize by scatter chart.",
            "Scatter plot to show avg(price) on x axis and manufacturer on y axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": 240,
                        "y_data": 1
                    },
                    {
                        "x_data": 150,
                        "y_data": 2
                    },
                    {
                        "x_data": 162,
                        "y_data": 3
                    },
                    {
                        "x_data": 150,
                        "y_data": 4
                    },
                    {
                        "x_data": 240,
                        "y_data": 5
                    },
                    {
                        "x_data": 62.5,
                        "y_data": 6
                    }
                ]
            },
            "mark": "point",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Manufacturer"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking end dates of the apartments with type code \"Duplex\" in each year? Return a bar chart, and could you order y axis from high to low order?",
            "Return the number of booking end dates for the apartments that have type code \"Duplex\" for each year in a bar chart, and sort in descending by the the number of booking start date please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 6
                    },
                    {
                        "x_data": "2017",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each year and bin booking start date by year interval in a bar chart, and I want to order in desc by the Y-axis.",
            "How many apartment bookings for each year? Draw a bar chart binning booking start date by year interval, I want to order in desc by the Y-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016",
                        "y_data": 9
                    },
                    {
                        "x_data": "2017",
                        "y_data": 6
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of name and code , and group by attribute headquarter, I want to show by the X-axis in asc.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of name and code , and group by attribute headquarter, and could you rank names in ascending order?",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of name and code , and group by attribute headquarter, I want to rank in asc by the X-axis.",
            "For those records from the products and each product's manufacturer, show me about the distribution of name and code , and group by attribute headquarter in a bar chart, and sort by the Name in asc.",
            "For those records from the products and each product's manufacturer, find name and code , and group by attribute headquarter, and visualize them by a bar chart, could you rank names in ascending order?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "CD drive",
                        "y_data": 7,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 10,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 6,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Austin"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 3,
                        "classify": "Beijing"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 11,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 8,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 9,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Los Angeles"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 4,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 2,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Paris"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 1,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Taiwan"
                    },
                    {
                        "x_data": "CD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Floppy disk",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Memory",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 5,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Printer",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "Toner cartridge",
                        "y_data": 0,
                        "classify": "Tokyo"
                    },
                    {
                        "x_data": "ZIP drive",
                        "y_data": 0,
                        "classify": "Tokyo"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Code"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel",
            "cartoon"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and list in descending by the y-axis.",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and display total number in desc order.",
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and list in desc by the total number.",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, rank how many package option in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sky Famiglia",
                        "y_data": 8
                    },
                    {
                        "x_data": "no ( FTV )",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sky Famiglia + Sky HD",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Package_Option",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Package_Option)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, visualize a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and list y axis in ascending order.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, list by the sum code in ascending.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the sum of code , and group by attribute headquarter, sort total number in ascending order.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the sum of code , and group by attribute headquarter, and sort total number in ascending order.",
            "For those records from the products and each product's manufacturer, give me the comparison about the sum of code over the headquarter , and group by attribute headquarter, and sort total number in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Tokyo",
                        "y_data": 1
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 4
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 5
                    },
                    {
                        "x_data": "Austin",
                        "y_data": 6
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 9
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 12
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(Code)"
                }
            }
        }
    },
    {
        "tables_used": [
            "party"
        ],
        "db_id": "party_host",
        "nl_queries": [
            "Give me a bar chart, that group by location and count them, and sort by the the number of location from low to high please.",
            "Create a bar chart showing how many location across location, and display by the total number from low to high."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Hemkade 48 Zaandam, Heineken Music Hall Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "RAI Amsterdam",
                        "y_data": 1
                    },
                    {
                        "x_data": "Heineken Music Hall Amsterdam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Hemkade 48 Zaandam",
                        "y_data": 2
                    },
                    {
                        "x_data": "Various locations",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Location",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Location)"
                }
            }
        }
    },
    {
        "tables_used": [
            "country"
        ],
        "db_id": "world_1",
        "nl_queries": [
            "For each continent where the average life expectancy is shorter than 72, draw a bar chart to show their average life expectancy, and display by the Continent from high to low.",
            "Draw a bar chart of continent versus mean lifeexpectancy, and rank in descending by the x-axis.",
            "Return a bar chart showing average life expectancy of each continent where the average life expectancy is shorter than 72, and display in descending by the X-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "South America",
                        "y_data": 70.94615384615386
                    },
                    {
                        "x_data": "Oceania",
                        "y_data": 69.715
                    },
                    {
                        "x_data": "Asia",
                        "y_data": 67.44117647058825
                    },
                    {
                        "x_data": "Africa",
                        "y_data": 52.57192982456139
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Continent",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(LifeExpectancy)"
                }
            }
        }
    },
    {
        "tables_used": [
            "hiring"
        ],
        "db_id": "employee_hire_evaluation",
        "nl_queries": [
            "Draw a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, rank total number in asc order.",
            "Return a bar chart about the distribution of Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, I want to order total number in asc order please.",
            "Find Start_from and the amount of Start_from , and group by attribute Is_full_time and bin start_from by weekday, and visualize them by a bar chart, I want to show by the y axis in asc please.",
            "Stacked bar chart of the number of start from for with each Is_full_time in each start from, order total number in asc order.",
            "Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday by a bar chart, and show in asc by the Y.",
            "Give me the comparison about the amount of Start_from over the Start_from , and group by attribute Is_full_time and bin start_from by weekday, rank by the Y-axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "F"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 0,
                        "classify": "F"
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 0,
                        "classify": "T"
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1,
                        "classify": "T"
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2,
                        "classify": "T"
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Start_from",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Start_from)"
                },
                "color": {
                    "field": "classify"
                }
            }
        }
    },
    {
        "tables_used": [
            "captain"
        ],
        "db_id": "ship_1",
        "nl_queries": [
            "A bar chart about how many captains are in each rank?",
            "How many captains are in each rank.",
            "Count the number of captains that have each rank by a bar chart.",
            "Count the number of captains that have each rank. Visualize by bar chart.",
            "Show the total number from each rank"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Commander, junior captain",
                        "y_data": 1
                    },
                    {
                        "x_data": "Lieutenant",
                        "y_data": 2
                    },
                    {
                        "x_data": "Midshipman",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Rank",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_series"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "List top 3 highest Rating TV series. List the TV series's Episode and Rating with a pie chart.",
            "List top 3 highest Rating TV series. List the TV series's Episode and Rating. Show a pie chart.",
            "Show me the proportion on what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "what are 3 most highly rated episodes in the TV series table and what were those ratings?",
            "What are 3 most highly rated episodes in the TV series table and what were those ratings. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "A Love of a Lifetime",
                        "y_data": 5.8
                    },
                    {
                        "x_data": "Friendly Skies",
                        "y_data": 5.3
                    },
                    {
                        "x_data": "Game Three",
                        "y_data": 4.4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Rating"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Episode"
                }
            }
        }
    },
    {
        "tables_used": [
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "Show the number of companies whose headquarters are not from USA fpr each main industry in a bar chart.",
            "How many companies that are not headquartered in the United States for each main industry? Show me a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Banking",
                        "y_data": 2
                    },
                    {
                        "x_data": "Oil and gas",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Main_Industry",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Main_Industry)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Allergy_type"
        ],
        "db_id": "allergy_1",
        "nl_queries": [
            "Create a bar chart showing how many allergytype across allergytype, and show Y from low to high order.",
            "Show the number of each allergie type in a bar chart, sort in asc by the total number.",
            "What is the number of each allergie type? Return a bar chart, I want to sort in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "environmental",
                        "y_data": 3
                    },
                    {
                        "x_data": "animal",
                        "y_data": 4
                    },
                    {
                        "x_data": "food",
                        "y_data": 7
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "AllergyType",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(AllergyType)"
                }
            }
        }
    },
    {
        "tables_used": [
            "TV_Channel",
            "cartoon"
        ],
        "db_id": "tvshow",
        "nl_queries": [
            "A bar chart for what are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and order from low to high by the Y please.",
            "find the package option of the tv channel that do not have any cartoon directed by Ben Jones, and count them by a bar chart, and rank by the total number in ascending.",
            "What are the number of the package options of all tv channels that are not playing any cartoons directed by Ben Jones?, and rank in ascending by the total number please.",
            "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones, and count them by a bar chart, and rank by the total number in ascending."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Sky Famiglia + Sky HD",
                        "y_data": 1
                    },
                    {
                        "x_data": "no ( FTV )",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sky Famiglia",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Package_Option",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(Package_Option)"
                }
            }
        }
    },
    {
        "tables_used": [
            "journalist",
            "news_report"
        ],
        "db_id": "news_report",
        "nl_queries": [
            "Find the average age of journalists working on different role type, show the result with a bar chart, sort y axis in ascending order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Screening",
                        "y_data": 30.33333333333333
                    },
                    {
                        "x_data": "Music",
                        "y_data": 35.5
                    },
                    {
                        "x_data": "Host",
                        "y_data": 43
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Work_Type",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(t1.age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rating",
            "Movie"
        ],
        "db_id": "movie_1",
        "nl_queries": [
            "Ignore movies whose director is NULL For each director, what are the titles and ratings for all the movies they reviewed? Show the result by a bar chart, show X in descending order please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "The Sound of Music",
                        "y_data": 3
                    },
                    {
                        "x_data": "Raiders of the Lost Ark",
                        "y_data": 4
                    },
                    {
                        "x_data": "Gone with the Wind",
                        "y_data": 4
                    },
                    {
                        "x_data": "Avatar",
                        "y_data": 5
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "title",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "stars"
                }
            }
        }
    },
    {
        "tables_used": [
            "invoices"
        ],
        "db_id": "store_1",
        "nl_queries": [
            "Show me a bar chart for what are the names of the countries and average invoice size of the top countries by size?",
            "What are the names of the countries and average invoice size of the top countries by size."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Chile",
                        "y_data": 6.659999999999998
                    },
                    {
                        "x_data": "Hungary",
                        "y_data": 6.517142857142857
                    },
                    {
                        "x_data": "Ireland",
                        "y_data": 6.517142857142857
                    },
                    {
                        "x_data": "Czech Republic",
                        "y_data": 6.445714285714287
                    },
                    {
                        "x_data": "Austria",
                        "y_data": 6.088571428571428
                    },
                    {
                        "x_data": "Finland",
                        "y_data": 5.945714285714287
                    },
                    {
                        "x_data": "Netherlands",
                        "y_data": 5.802857142857143
                    },
                    {
                        "x_data": "India",
                        "y_data": 5.789230769230769
                    },
                    {
                        "x_data": "USA",
                        "y_data": 5.747912087912091
                    },
                    {
                        "x_data": "Norway",
                        "y_data": 5.659999999999998
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "billing_country",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(total)"
                }
            }
        }
    },
    {
        "tables_used": [
            "actor",
            "musical"
        ],
        "db_id": "musical",
        "nl_queries": [
            "how many actors have appeared in each musical?, order x-axis in ascending order please.",
            "Show names of musicals and the number of actors who have appeared in the musicals in a bar chart, and order in asc by the names.",
            "How many actors have appeared in each musical Plot them as bar chart, and order x axis in asc order please.",
            "Return a histogram on how many actors have appeared in each musical?, and show x axis in asc order.",
            "Show names of musicals and the number of actors who have appeared in the musicals Show bar chart, and rank in asc by the names."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Les Mis\u00e9rables",
                        "y_data": 2
                    },
                    {
                        "x_data": "The Book of Mormon",
                        "y_data": 4
                    },
                    {
                        "x_data": "The Phantom of the Opera",
                        "y_data": 2
                    },
                    {
                        "x_data": "West Side Story",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "races",
            "results"
        ],
        "db_id": "formula_1",
        "nl_queries": [
            "How many races are held in each year after 2014? Show me a bar chart.",
            "Show me a bar chart about the number of races held in each year after 2014."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2016-01-01",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-01-01",
                        "y_data": 20
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "year",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(year)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Visualize a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and rank by the Y in desc.",
            "Draw a bar chart of meter 200 versus the average of id, show from high to low by the Y.",
            "Find meter_200 and the average of ID , and group by attribute meter_200, and visualize them by a bar chart, list by the y-axis in desc.",
            "Return a bar chart about the distribution of meter_200 and the average of ID , and group by attribute meter_200, and I want to order y-axis in desc order.",
            "A bar chart shows the distribution of meter_200 and the average of ID , and group by attribute meter_200, and list Y in desc order.",
            "Show me about the distribution of meter_200 and the average of ID , and group by attribute meter_200 in a bar chart, and I want to order y-axis in desc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "1:54.40",
                        "y_data": 8
                    },
                    {
                        "x_data": "1:57.10",
                        "y_data": 7
                    },
                    {
                        "x_data": "1:56.77",
                        "y_data": 5
                    },
                    {
                        "x_data": "1:56.34",
                        "y_data": 4
                    },
                    {
                        "x_data": "1:57.26",
                        "y_data": 3.5
                    },
                    {
                        "x_data": "1:56.44",
                        "y_data": 3
                    },
                    {
                        "x_data": "1:57.21",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_200",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "descending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "departments"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who do not work in departments with managers that have ids between 100 and 200, show me about the distribution of hire_date and the sum of department_id bin hire_date by weekday in a bar chart, I want to rank from low to high by the Y please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, a bar chart shows the distribution of hire_date and the sum of department_id bin hire_date by weekday, and show y axis in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, draw a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, I want to rank from low to high by the Y please.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, find hire_date and the sum of department_id bin hire_date by weekday, and visualize them by a bar chart, and show y axis in ascending order.",
            "For those employees who do not work in departments with managers that have ids between 100 and 200, return a bar chart about the distribution of hire_date and the sum of department_id bin hire_date by weekday, order from low to high by the Y please."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Fri",
                        "y_data": 0
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 20
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 20
                    },
                    {
                        "x_data": "Mon",
                        "y_data": 40
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 70
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 110
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 110
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "HIRE_DATE",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "SUM(DEPARTMENT_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "gymnast",
            "people"
        ],
        "db_id": "gymnast",
        "nl_queries": [
            "Visualize a pie chart with what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "Show me a pie chart for what are the hometowns of gymnasts and the corresponding number of gymnasts?",
            "What are the hometowns of gymnasts and the corresponding number of gymnasts. Show a pie chart.",
            "Display a pie chart for how many gymnasts are from each hometown?",
            "Visualize a pie chart with how many gymnasts are from each hometown?",
            "How many gymnasts are from each hometown. Show the proportion."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Bonao",
                        "y_data": 1
                    },
                    {
                        "x_data": "Los Alcarrizos",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santiago de los Caballeros",
                        "y_data": 1
                    },
                    {
                        "x_data": "Santo Domingo",
                        "y_data": 4
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown"
                }
            }
        }
    },
    {
        "tables_used": [
            "products",
            "Manufacturers"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter by a bar chart.",
            "For those records from the products and each product's manufacturer, return a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, give me the comparison about the average of price over the headquarter , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, draw a bar chart about the distribution of headquarter and the average of price , and group by attribute headquarter.",
            "For those records from the products and each product's manufacturer, a bar chart shows the distribution of headquarter and the average of price , and group by attribute headquarter."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Austin",
                        "y_data": 150
                    },
                    {
                        "x_data": "Beijing",
                        "y_data": 150
                    },
                    {
                        "x_data": "Los Angeles",
                        "y_data": 162
                    },
                    {
                        "x_data": "Paris",
                        "y_data": 62.5
                    },
                    {
                        "x_data": "Taiwan",
                        "y_data": 240
                    },
                    {
                        "x_data": "Tokyo",
                        "y_data": 240
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Headquarter",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(Price)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Apartments"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "What is the number of booking start dates of the apartments with more than 2 bedrooms for each weekday? Draw a bar chart.",
            "Find the number of booking start date for the apartments that have more than two bedrooms for each weekday in a bar chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings in each day and group by booking end date with a line chart, and I want to sort by the x axis in asc.",
            "How many apartment bookings in each day? Show me a line chart grouping by booking end date, and I want to sort by the x axis in asc.",
            "Show me a line chart of how how many booking end date change over the booking end date, I want to sort by the x axis in asc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "2017-09-28",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-09-30",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-03",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-10-07",
                        "y_data": 2
                    },
                    {
                        "x_data": "2017-10-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-12",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-13",
                        "y_data": 1
                    },
                    {
                        "x_data": "2017-11-29",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-06",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-19",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-02-25",
                        "y_data": 1
                    },
                    {
                        "x_data": "2018-03-20",
                        "y_data": 1
                    }
                ]
            },
            "mark": {
                "type": "line",
                "interpolate": "monotone"
            },
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_end_date",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_end_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "driver"
        ],
        "db_id": "school_bus",
        "nl_queries": [
            "Bar graph to show age from different name, display by the x-axis from high to low please.",
            "Show the name and age for all drivers with a bar chart, I want to show from high to low by the X-axis.",
            "Give me a bar chart to show the name and age for all drivers, sort by the names in desc."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Timothy Ackert",
                        "y_data": 35
                    },
                    {
                        "x_data": "Tim Larson",
                        "y_data": 36
                    },
                    {
                        "x_data": "Minnie Gonzalez",
                        "y_data": 46
                    },
                    {
                        "x_data": "Matthew Ritter",
                        "y_data": 40
                    },
                    {
                        "x_data": "Jason Rojas",
                        "y_data": 38
                    },
                    {
                        "x_data": "Henry Genga",
                        "y_data": 37
                    },
                    {
                        "x_data": "Geoff Luxenberg",
                        "y_data": 52
                    },
                    {
                        "x_data": "Edwin Vargas",
                        "y_data": 52
                    },
                    {
                        "x_data": "Douglas McCrory",
                        "y_data": 36
                    },
                    {
                        "x_data": "Dan Carter",
                        "y_data": 30
                    },
                    {
                        "x_data": "Brandon McGee",
                        "y_data": 45
                    },
                    {
                        "x_data": "Angel Acre",
                        "y_data": 42
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "teacher"
        ],
        "db_id": "course_teach",
        "nl_queries": [
            "What are the age and hometown of teachers Visualize by bar chart, and I want to show Y from low to high order please.",
            "Visualize a bar chart for what is the age and hometown of every teacher?, and I want to display by the y axis in ascending.",
            "Display a bar chart for what are the age and hometown of teachers?, show from low to high by the Y.",
            "A bar chart about what is the age and hometown of every teacher?, and I want to list in asc by the Age.",
            "Create a bar chart showing age across hometown, show from low to high by the Y.",
            "What is the age and hometown of every teacher Visualize by bar chart, and rank Age in ascending order.",
            "Return a histogram on what are the age and hometown of teachers?, and could you list in asc by the Age?"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Farnworth Municipal Borough",
                        "y_data": 26
                    },
                    {
                        "x_data": "Bolton County Borough",
                        "y_data": 29
                    },
                    {
                        "x_data": "Blackrod Urban District",
                        "y_data": 32
                    },
                    {
                        "x_data": "Horwich Urban District",
                        "y_data": 33
                    },
                    {
                        "x_data": "Turton Urban District",
                        "y_data": 39
                    },
                    {
                        "x_data": "Little Lever Urban District",
                        "y_data": 41
                    },
                    {
                        "x_data": "Kearsley Urban District",
                        "y_data": 45
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Hometown",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Age"
                }
            }
        }
    },
    {
        "tables_used": [
            "employees",
            "job_history)"
        ],
        "db_id": "hr_1",
        "nl_queries": [
            "For those employees who did not have any job in the past, a bar chart shows the distribution of job_id and the average of employee_id , and group by attribute job_id, and display in desc by the bar please.",
            "For those employees who did not have any job in the past, return a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, I want to display x axis in descending order.",
            "For those employees who did not have any job in the past, show me about the distribution of job_id and the average of employee_id , and group by attribute job_id in a bar chart, and list by the X in descending.",
            "For those employees who did not have any job in the past, draw a bar chart about the distribution of job_id and the average of employee_id , and group by attribute job_id, and display by the bars in desc.",
            "For those employees who did not have any job in the past, give me the comparison about the average of employee_id over the job_id , and group by attribute job_id by a bar chart, and display in descending by the x-axis."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "ST_MAN",
                        "y_data": 122
                    },
                    {
                        "x_data": "ST_CLERK",
                        "y_data": 134.5
                    },
                    {
                        "x_data": "SH_CLERK",
                        "y_data": 189.5
                    },
                    {
                        "x_data": "SA_REP",
                        "y_data": 164.10344827586206
                    },
                    {
                        "x_data": "SA_MAN",
                        "y_data": 147
                    },
                    {
                        "x_data": "PU_CLERK",
                        "y_data": 117
                    },
                    {
                        "x_data": "PR_REP",
                        "y_data": 204
                    },
                    {
                        "x_data": "MK_REP",
                        "y_data": 202
                    },
                    {
                        "x_data": "IT_PROG",
                        "y_data": 105
                    },
                    {
                        "x_data": "HR_REP",
                        "y_data": 203
                    },
                    {
                        "x_data": "FI_MGR",
                        "y_data": 108
                    },
                    {
                        "x_data": "FI_ACCOUNT",
                        "y_data": 111
                    },
                    {
                        "x_data": "AD_PRES",
                        "y_data": 100
                    },
                    {
                        "x_data": "AC_MGR",
                        "y_data": 205
                    },
                    {
                        "x_data": "AC_ACCOUNT",
                        "y_data": 206
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "JOB_ID",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "AVG(EMPLOYEE_ID)"
                }
            }
        }
    },
    {
        "tables_used": [
            "station_company",
            "company"
        ],
        "db_id": "gas_company",
        "nl_queries": [
            "For each company id, what are the companies and how many gas stations does each one operate Plot them as bar chart, and display Company in asc order.",
            "Show the company name with the number of gas station by a bar chart, display Company in asc order.",
            "Show the company name with the number of gas station Show bar chart, and display Company in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "BP",
                        "y_data": 1
                    },
                    {
                        "x_data": "ExxonMobil",
                        "y_data": 2
                    },
                    {
                        "x_data": "PetroChina",
                        "y_data": 1
                    },
                    {
                        "x_data": "Petrobras",
                        "y_data": 1
                    },
                    {
                        "x_data": "Royal Dutch Shell",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Company",
                    "sort": "ascending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "count(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "bank",
            "loan"
        ],
        "db_id": "loan_1",
        "nl_queries": [
            "Find the total amount of loans offered by each bank branch, and sort in desc by the bar.",
            "Return a bar chart on what are the names of the different bank branches, and what are their total loan amounts?, show by the x axis from high to low.",
            "What are the names of the different bank branches, and what are their total loan amounts Show bar chart, show by the x axis from high to low."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "morningside",
                        "y_data": 2050
                    },
                    {
                        "x_data": "downtown",
                        "y_data": 3000
                    },
                    {
                        "x_data": "broadway",
                        "y_data": 5000
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bname",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(amount)"
                }
            }
        }
    },
    {
        "tables_used": [
            "products"
        ],
        "db_id": "manufactory_1",
        "nl_queries": [
            "Display a pie chart for what are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?",
            "Draw a pie chart for what are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?",
            "What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending. Visualize by pie chart."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Printer",
                        "y_data": 270
                    },
                    {
                        "x_data": "Hard drive",
                        "y_data": 240
                    },
                    {
                        "x_data": "Monitor",
                        "y_data": 240
                    },
                    {
                        "x_data": "DVD burner",
                        "y_data": 180
                    },
                    {
                        "x_data": "DVD drive",
                        "y_data": 180
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "Price"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Name"
                }
            }
        }
    },
    {
        "tables_used": [
            "Treatments",
            "Professionals"
        ],
        "db_id": "dog_kennels",
        "nl_queries": [
            "List the number of treatments in each day with a bar chart that bins date of treatment by weekday.",
            "How many treatments in each day? Return a bar chart that bins date of treatment by weekday."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 2
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 1
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 2
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 4
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "date_of_treatment",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(date_of_treatment)"
                }
            }
        }
    },
    {
        "tables_used": [
            "pets"
        ],
        "db_id": "pets_1",
        "nl_queries": [
            "Find the maximum age for each type of pet. Return the result with a bar chart.",
            "What is the maximum age for each pet type? Please show me a bar chart.",
            "Bar graph, the X-axis is the pet types and the Y-axis is their max pet age.",
            "Show maximal pet age from each pettype"
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "cat",
                        "y_data": 3
                    },
                    {
                        "x_data": "dog",
                        "y_data": 2
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "PetType",
                    "sort": "descending"
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "max(pet_age)"
                }
            }
        }
    },
    {
        "tables_used": [
            "people"
        ],
        "db_id": "debate",
        "nl_queries": [
            "Bar graph to show the total number from different party, could you list from low to high by the total number please?",
            "Show different parties of people along with the number of people in each party with a bar chart, and could you display by the y-axis in ascending?",
            "Show different parties of people along with the number of people in each party Plot them as bar chart, rank y-axis from low to high order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Independent Democrat",
                        "y_data": 1
                    },
                    {
                        "x_data": "Anti-Lecompton Democrat",
                        "y_data": 2
                    },
                    {
                        "x_data": "Democratic",
                        "y_data": 3
                    },
                    {
                        "x_data": "Republican",
                        "y_data": 4
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Party",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(*)"
                }
            }
        }
    },
    {
        "tables_used": [
            "Apartment_Bookings",
            "Guests"
        ],
        "db_id": "apartment_rentals",
        "nl_queries": [
            "Show the number of apartment bookings for each weekday and bin booking start date by weekday interval in a bar chart.",
            "How many apartment bookings for each weekday? Draw a bar chart binning booking start date by weekday interval."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Mon",
                        "y_data": 4
                    },
                    {
                        "x_data": "Tue",
                        "y_data": 2
                    },
                    {
                        "x_data": "Wed",
                        "y_data": 1
                    },
                    {
                        "x_data": "Thur",
                        "y_data": 1
                    },
                    {
                        "x_data": "Fri",
                        "y_data": 2
                    },
                    {
                        "x_data": "Sat",
                        "y_data": 4
                    },
                    {
                        "x_data": "Sun",
                        "y_data": 1
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "booking_start_date",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "COUNT(booking_start_date)"
                }
            }
        }
    },
    {
        "tables_used": [
            "channel"
        ],
        "db_id": "program_share",
        "nl_queries": [
            "Find the total rating ratio for each channel owner Visualize by bar chart, display Y-axis from low to high order please.",
            "What is the total rating of channel for each channel owner Plot them as bar chart, and sort Y-axis in asc order.",
            "Show me a bar chart for what is the total rating of channel for each channel owner?, and show in ascending by the total number.",
            "A bar chart about what is the total rating of channel for each channel owner?, display in ascending by the y axis.",
            "Draw a bar chart of owner versus total number of rating in percent, and sort Y-axis in asc order."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Shandong Television",
                        "y_data": 0.19
                    },
                    {
                        "x_data": "Anhui Television",
                        "y_data": 0.2
                    },
                    {
                        "x_data": "HBS",
                        "y_data": 0.53
                    },
                    {
                        "x_data": "CCTV",
                        "y_data": 2.43
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "Owner",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "sum(Rating_in_percent)"
                }
            }
        }
    },
    {
        "tables_used": [
            "swimmer"
        ],
        "db_id": "swimming",
        "nl_queries": [
            "Bar chart x axis meter 700 y axis id, and display by the y axis in ascending please.",
            "A bar chart shows the distribution of meter_700 and ID , I want to rank in ascending by the Y.",
            "Give me the comparison about ID over the meter_700 by a bar chart, order in ascending by the Y.",
            "Give me the comparison about ID over the meter_700 , I want to show by the Y-axis from low to high.",
            "Draw a bar chart about the distribution of meter_700 and ID , and I want to sort by the Y from low to high.",
            "Return a bar chart about the distribution of meter_700 and ID , order in ascending by the Y."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "6:55.07",
                        "y_data": 1
                    },
                    {
                        "x_data": "6:57.44",
                        "y_data": 2
                    },
                    {
                        "x_data": "6:50.80",
                        "y_data": 3
                    },
                    {
                        "x_data": "6:52.69",
                        "y_data": 4
                    },
                    {
                        "x_data": "6:52.58",
                        "y_data": 5
                    },
                    {
                        "x_data": "6:57.69",
                        "y_data": 6
                    },
                    {
                        "x_data": "6:50.91",
                        "y_data": 7
                    },
                    {
                        "x_data": "6:53.34",
                        "y_data": 8
                    }
                ]
            },
            "mark": "bar",
            "encoding": {
                "x": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "meter_700",
                    "sort": {
                        "op": "sum",
                        "field": "y_data",
                        "order": "ascending"
                    }
                },
                "y": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "ID"
                }
            }
        }
    },
    {
        "tables_used": [
            "Rooms"
        ],
        "db_id": "inn_1",
        "nl_queries": [
            "Return a pie on what is the average base price of different bed type? List bed type and average base price.",
            "Return a pie chart on what is the average base price of different bed type? List bed type and average base price.",
            "What is the average base price of different bed type? List bed type and average base price. Visualize by pie chart.",
            "For each bed type, find the average base price of different bed type. Plot them as pie chart.",
            "For each bed type, find the average room price. Show the proportion.",
            "Return a pie on what is the average base price of rooms, for each bed type?",
            "Return a pie chart on what is the average base price of rooms, for each bed type?",
            "What is the average base price of rooms, for each bed type. Show a pie chart.",
            "Create a pie chart showing mean baseprice across bedtype."
        ],
        "vega_spec": {
            "data": {
                "values": [
                    {
                        "x_data": "Double",
                        "y_data": 100
                    },
                    {
                        "x_data": "King",
                        "y_data": 181.25
                    },
                    {
                        "x_data": "Queen",
                        "y_data": 150
                    }
                ]
            },
            "mark": "arc",
            "encoding": {
                "theta": {
                    "field": "y_data",
                    "type": "quantitative",
                    "title": "avg(basePrice)"
                },
                "color": {
                    "field": "x_data",
                    "type": "nominal",
                    "title": "bedType"
                }
            }
        }
    }
]